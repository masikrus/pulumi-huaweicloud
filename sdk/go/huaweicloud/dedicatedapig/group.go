// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dedicatedapig

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an APIG (API) group resource within HuaweiCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/DedicatedApig"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/DedicatedApig"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			groupName := cfg.RequireObject("groupName")
//			description := cfg.RequireObject("description")
//			environmentId := cfg.RequireObject("environmentId")
//			_, err := DedicatedApig.NewGroup(ctx, "test", &DedicatedApig.GroupArgs{
//				InstanceId:  pulumi.Any(instanceId),
//				Description: pulumi.Any(description),
//				Environments: dedicatedapig.GroupEnvironmentArray{
//					&dedicatedapig.GroupEnvironmentArgs{
//						Variables: dedicatedapig.GroupEnvironmentVariableArray{
//							&dedicatedapig.GroupEnvironmentVariableArgs{
//								Name:  pulumi.String("TERRAFORM"),
//								Value: pulumi.String("/stage/terraform"),
//							},
//						},
//						EnvironmentId: pulumi.Any(environmentId),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// API groups can be imported using their `id` and the ID of the related dedicated instance, separated by a slash, e.g.
//
// ```sh
//
//	$ pulumi import huaweicloud:DedicatedApig/group:Group test <instance_id>/<id>
//
// ```
type Group struct {
	pulumi.CustomResourceState

	// The creation time of the group, in RFC3339 format.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Specifies the group description.\
	// The description contain a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	// Chinese characters must be in **UTF-8** or **Unicode** format.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies whether to use the debugging domain name to access the APIs
	// within the group. The default value is `false`.
	DomainAccessEnabled pulumi.BoolOutput `pulumi:"domainAccessEnabled"`
	// Specifies an array of one or more environments of the associated group.\
	// The object structure is documented below.
	Environments GroupEnvironmentArrayOutput `pulumi:"environments"`
	// Specifies whether to delete all sub-resources (for API) when deleting this group.\
	// Defaults to **false**.
	ForceDestroy pulumi.BoolOutput `pulumi:"forceDestroy"`
	// Specifies the ID of the dedicated instance to which the group belongs.\
	// Changing this will create a new resource.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Specifies the variable name.\
	// The valid length is limited from `3` to `32` characters.
	// Only letters, digits, hyphens (-), and underscores (_) are allowed, and must start with a letter.
	// In the definition of an API, `name` (case-sensitive) indicates a variable, such as #Name#.
	// It is replaced by the actual value when the API is published in an environment.
	// The variable names are not allowed to be repeated for an API group.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the region where the APIG (API) group is located.\
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// The registration time.
	RegistrationTime pulumi.StringOutput `pulumi:"registrationTime"`
	// The latest update time of the group.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// The latest update time of the group, in RFC3339 format.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// The associated domain information of the group.\
	// The urlDomains structure is documented below.
	UrlDomains GroupUrlDomainArrayOutput `pulumi:"urlDomains"`
}

// NewGroup registers a new resource with the given unique name, arguments, and options.
func NewGroup(ctx *pulumi.Context,
	name string, args *GroupArgs, opts ...pulumi.ResourceOption) (*Group, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Group
	err := ctx.RegisterResource("huaweicloud:DedicatedApig/group:Group", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGroup gets an existing Group resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GroupState, opts ...pulumi.ResourceOption) (*Group, error) {
	var resource Group
	err := ctx.ReadResource("huaweicloud:DedicatedApig/group:Group", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Group resources.
type groupState struct {
	// The creation time of the group, in RFC3339 format.
	CreatedAt *string `pulumi:"createdAt"`
	// Specifies the group description.\
	// The description contain a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	// Chinese characters must be in **UTF-8** or **Unicode** format.
	Description *string `pulumi:"description"`
	// Specifies whether to use the debugging domain name to access the APIs
	// within the group. The default value is `false`.
	DomainAccessEnabled *bool `pulumi:"domainAccessEnabled"`
	// Specifies an array of one or more environments of the associated group.\
	// The object structure is documented below.
	Environments []GroupEnvironment `pulumi:"environments"`
	// Specifies whether to delete all sub-resources (for API) when deleting this group.\
	// Defaults to **false**.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// Specifies the ID of the dedicated instance to which the group belongs.\
	// Changing this will create a new resource.
	InstanceId *string `pulumi:"instanceId"`
	// Specifies the variable name.\
	// The valid length is limited from `3` to `32` characters.
	// Only letters, digits, hyphens (-), and underscores (_) are allowed, and must start with a letter.
	// In the definition of an API, `name` (case-sensitive) indicates a variable, such as #Name#.
	// It is replaced by the actual value when the API is published in an environment.
	// The variable names are not allowed to be repeated for an API group.
	Name *string `pulumi:"name"`
	// Specifies the region where the APIG (API) group is located.\
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region *string `pulumi:"region"`
	// The registration time.
	RegistrationTime *string `pulumi:"registrationTime"`
	// The latest update time of the group.
	UpdateTime *string `pulumi:"updateTime"`
	// The latest update time of the group, in RFC3339 format.
	UpdatedAt *string `pulumi:"updatedAt"`
	// The associated domain information of the group.\
	// The urlDomains structure is documented below.
	UrlDomains []GroupUrlDomain `pulumi:"urlDomains"`
}

type GroupState struct {
	// The creation time of the group, in RFC3339 format.
	CreatedAt pulumi.StringPtrInput
	// Specifies the group description.\
	// The description contain a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	// Chinese characters must be in **UTF-8** or **Unicode** format.
	Description pulumi.StringPtrInput
	// Specifies whether to use the debugging domain name to access the APIs
	// within the group. The default value is `false`.
	DomainAccessEnabled pulumi.BoolPtrInput
	// Specifies an array of one or more environments of the associated group.\
	// The object structure is documented below.
	Environments GroupEnvironmentArrayInput
	// Specifies whether to delete all sub-resources (for API) when deleting this group.\
	// Defaults to **false**.
	ForceDestroy pulumi.BoolPtrInput
	// Specifies the ID of the dedicated instance to which the group belongs.\
	// Changing this will create a new resource.
	InstanceId pulumi.StringPtrInput
	// Specifies the variable name.\
	// The valid length is limited from `3` to `32` characters.
	// Only letters, digits, hyphens (-), and underscores (_) are allowed, and must start with a letter.
	// In the definition of an API, `name` (case-sensitive) indicates a variable, such as #Name#.
	// It is replaced by the actual value when the API is published in an environment.
	// The variable names are not allowed to be repeated for an API group.
	Name pulumi.StringPtrInput
	// Specifies the region where the APIG (API) group is located.\
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region pulumi.StringPtrInput
	// The registration time.
	RegistrationTime pulumi.StringPtrInput
	// The latest update time of the group.
	UpdateTime pulumi.StringPtrInput
	// The latest update time of the group, in RFC3339 format.
	UpdatedAt pulumi.StringPtrInput
	// The associated domain information of the group.\
	// The urlDomains structure is documented below.
	UrlDomains GroupUrlDomainArrayInput
}

func (GroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*groupState)(nil)).Elem()
}

type groupArgs struct {
	// Specifies the group description.\
	// The description contain a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	// Chinese characters must be in **UTF-8** or **Unicode** format.
	Description *string `pulumi:"description"`
	// Specifies whether to use the debugging domain name to access the APIs
	// within the group. The default value is `false`.
	DomainAccessEnabled *bool `pulumi:"domainAccessEnabled"`
	// Specifies an array of one or more environments of the associated group.\
	// The object structure is documented below.
	Environments []GroupEnvironment `pulumi:"environments"`
	// Specifies whether to delete all sub-resources (for API) when deleting this group.\
	// Defaults to **false**.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// Specifies the ID of the dedicated instance to which the group belongs.\
	// Changing this will create a new resource.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the variable name.\
	// The valid length is limited from `3` to `32` characters.
	// Only letters, digits, hyphens (-), and underscores (_) are allowed, and must start with a letter.
	// In the definition of an API, `name` (case-sensitive) indicates a variable, such as #Name#.
	// It is replaced by the actual value when the API is published in an environment.
	// The variable names are not allowed to be repeated for an API group.
	Name *string `pulumi:"name"`
	// Specifies the region where the APIG (API) group is located.\
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region *string `pulumi:"region"`
	// The associated domain information of the group.\
	// The urlDomains structure is documented below.
	UrlDomains []GroupUrlDomain `pulumi:"urlDomains"`
}

// The set of arguments for constructing a Group resource.
type GroupArgs struct {
	// Specifies the group description.\
	// The description contain a maximum of 255 characters and the angle brackets (< and >) are not allowed.
	// Chinese characters must be in **UTF-8** or **Unicode** format.
	Description pulumi.StringPtrInput
	// Specifies whether to use the debugging domain name to access the APIs
	// within the group. The default value is `false`.
	DomainAccessEnabled pulumi.BoolPtrInput
	// Specifies an array of one or more environments of the associated group.\
	// The object structure is documented below.
	Environments GroupEnvironmentArrayInput
	// Specifies whether to delete all sub-resources (for API) when deleting this group.\
	// Defaults to **false**.
	ForceDestroy pulumi.BoolPtrInput
	// Specifies the ID of the dedicated instance to which the group belongs.\
	// Changing this will create a new resource.
	InstanceId pulumi.StringInput
	// Specifies the variable name.\
	// The valid length is limited from `3` to `32` characters.
	// Only letters, digits, hyphens (-), and underscores (_) are allowed, and must start with a letter.
	// In the definition of an API, `name` (case-sensitive) indicates a variable, such as #Name#.
	// It is replaced by the actual value when the API is published in an environment.
	// The variable names are not allowed to be repeated for an API group.
	Name pulumi.StringPtrInput
	// Specifies the region where the APIG (API) group is located.\
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region pulumi.StringPtrInput
	// The associated domain information of the group.\
	// The urlDomains structure is documented below.
	UrlDomains GroupUrlDomainArrayInput
}

func (GroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*groupArgs)(nil)).Elem()
}

type GroupInput interface {
	pulumi.Input

	ToGroupOutput() GroupOutput
	ToGroupOutputWithContext(ctx context.Context) GroupOutput
}

func (*Group) ElementType() reflect.Type {
	return reflect.TypeOf((**Group)(nil)).Elem()
}

func (i *Group) ToGroupOutput() GroupOutput {
	return i.ToGroupOutputWithContext(context.Background())
}

func (i *Group) ToGroupOutputWithContext(ctx context.Context) GroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupOutput)
}

// GroupArrayInput is an input type that accepts GroupArray and GroupArrayOutput values.
// You can construct a concrete instance of `GroupArrayInput` via:
//
//	GroupArray{ GroupArgs{...} }
type GroupArrayInput interface {
	pulumi.Input

	ToGroupArrayOutput() GroupArrayOutput
	ToGroupArrayOutputWithContext(context.Context) GroupArrayOutput
}

type GroupArray []GroupInput

func (GroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Group)(nil)).Elem()
}

func (i GroupArray) ToGroupArrayOutput() GroupArrayOutput {
	return i.ToGroupArrayOutputWithContext(context.Background())
}

func (i GroupArray) ToGroupArrayOutputWithContext(ctx context.Context) GroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupArrayOutput)
}

// GroupMapInput is an input type that accepts GroupMap and GroupMapOutput values.
// You can construct a concrete instance of `GroupMapInput` via:
//
//	GroupMap{ "key": GroupArgs{...} }
type GroupMapInput interface {
	pulumi.Input

	ToGroupMapOutput() GroupMapOutput
	ToGroupMapOutputWithContext(context.Context) GroupMapOutput
}

type GroupMap map[string]GroupInput

func (GroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Group)(nil)).Elem()
}

func (i GroupMap) ToGroupMapOutput() GroupMapOutput {
	return i.ToGroupMapOutputWithContext(context.Background())
}

func (i GroupMap) ToGroupMapOutputWithContext(ctx context.Context) GroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMapOutput)
}

type GroupOutput struct{ *pulumi.OutputState }

func (GroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Group)(nil)).Elem()
}

func (o GroupOutput) ToGroupOutput() GroupOutput {
	return o
}

func (o GroupOutput) ToGroupOutputWithContext(ctx context.Context) GroupOutput {
	return o
}

// The creation time of the group, in RFC3339 format.
func (o GroupOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Specifies the group description.\
// The description contain a maximum of 255 characters and the angle brackets (< and >) are not allowed.
// Chinese characters must be in **UTF-8** or **Unicode** format.
func (o GroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether to use the debugging domain name to access the APIs
// within the group. The default value is `false`.
func (o GroupOutput) DomainAccessEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Group) pulumi.BoolOutput { return v.DomainAccessEnabled }).(pulumi.BoolOutput)
}

// Specifies an array of one or more environments of the associated group.\
// The object structure is documented below.
func (o GroupOutput) Environments() GroupEnvironmentArrayOutput {
	return o.ApplyT(func(v *Group) GroupEnvironmentArrayOutput { return v.Environments }).(GroupEnvironmentArrayOutput)
}

// Specifies whether to delete all sub-resources (for API) when deleting this group.\
// Defaults to **false**.
func (o GroupOutput) ForceDestroy() pulumi.BoolOutput {
	return o.ApplyT(func(v *Group) pulumi.BoolOutput { return v.ForceDestroy }).(pulumi.BoolOutput)
}

// Specifies the ID of the dedicated instance to which the group belongs.\
// Changing this will create a new resource.
func (o GroupOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Specifies the variable name.\
// The valid length is limited from `3` to `32` characters.
// Only letters, digits, hyphens (-), and underscores (_) are allowed, and must start with a letter.
// In the definition of an API, `name` (case-sensitive) indicates a variable, such as #Name#.
// It is replaced by the actual value when the API is published in an environment.
// The variable names are not allowed to be repeated for an API group.
func (o GroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the region where the APIG (API) group is located.\
// If omitted, the provider-level region will be used. Changing this will create a new resource.
func (o GroupOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The registration time.
func (o GroupOutput) RegistrationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.RegistrationTime }).(pulumi.StringOutput)
}

// The latest update time of the group.
func (o GroupOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// The latest update time of the group, in RFC3339 format.
func (o GroupOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The associated domain information of the group.\
// The urlDomains structure is documented below.
func (o GroupOutput) UrlDomains() GroupUrlDomainArrayOutput {
	return o.ApplyT(func(v *Group) GroupUrlDomainArrayOutput { return v.UrlDomains }).(GroupUrlDomainArrayOutput)
}

type GroupArrayOutput struct{ *pulumi.OutputState }

func (GroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Group)(nil)).Elem()
}

func (o GroupArrayOutput) ToGroupArrayOutput() GroupArrayOutput {
	return o
}

func (o GroupArrayOutput) ToGroupArrayOutputWithContext(ctx context.Context) GroupArrayOutput {
	return o
}

func (o GroupArrayOutput) Index(i pulumi.IntInput) GroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Group {
		return vs[0].([]*Group)[vs[1].(int)]
	}).(GroupOutput)
}

type GroupMapOutput struct{ *pulumi.OutputState }

func (GroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Group)(nil)).Elem()
}

func (o GroupMapOutput) ToGroupMapOutput() GroupMapOutput {
	return o
}

func (o GroupMapOutput) ToGroupMapOutputWithContext(ctx context.Context) GroupMapOutput {
	return o
}

func (o GroupMapOutput) MapIndex(k pulumi.StringInput) GroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Group {
		return vs[0].(map[string]*Group)[vs[1].(string)]
	}).(GroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GroupInput)(nil)).Elem(), &Group{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupArrayInput)(nil)).Elem(), GroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMapInput)(nil)).Elem(), GroupMap{})
	pulumi.RegisterOutputType(GroupOutput{})
	pulumi.RegisterOutputType(GroupArrayOutput{})
	pulumi.RegisterOutputType(GroupMapOutput{})
}
