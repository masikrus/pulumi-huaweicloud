// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ims

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an IMS ISO image resource created from external image file in the OBS bucket within HuaweiCloud.
//
// ## Example Usage
// ### Creating an IMS ISO image from an external image file in the OBS bucket
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Ims"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := cfg.RequireObject("name")
//			imageUrl := cfg.RequireObject("imageUrl")
//			minDisk := cfg.RequireObject("minDisk")
//			osVersion := cfg.RequireObject("osVersion")
//			_, err := Ims.NewObsIsoImage(ctx, "test", &Ims.ObsIsoImageArgs{
//				ImageUrl:  pulumi.Any(imageUrl),
//				MinDisk:   pulumi.Any(minDisk),
//				OsVersion: pulumi.Any(osVersion),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The IMS OBS ISO image resource can be imported using the `id`, e.g. bash
//
// ```sh
//
//	$ pulumi import huaweicloud:Ims/obsIsoImage:ObsIsoImage test <id>
//
// ```
//
//	Note that the imported state may not be identical to your resource definition, due to some attributes missing from the API response, security or some other reason. The missing attributes include`is_config`. It is generally recommended running `terraform plan` after importing the resource. You can then decide if changes should be applied to the resource, or the resource definition should be updated to align with the image. Also, you can ignore changes as below. resource "huaweicloud_ims_obs_iso_image" "test" {
//
//	...
//
//	lifecycle {
//
//	ignore_changes = [
//
//	is_config,
//
//	]
//
//	} }
type ObsIsoImage struct {
	pulumi.CustomResourceState

	// The time when the image status changes to active, in RFC3339 format.
	ActiveAt pulumi.StringOutput `pulumi:"activeAt"`
	// Specifies the schema type of the image. The value can be **x86** or
	// **arm**. Defaults to **x86**. Changing this parameter will create a new resource.
	Architecture pulumi.StringOutput `pulumi:"architecture"`
	// Specifies the custom key for creating encrypted image.
	// Changing this parameter will create a new resource.
	CmkId pulumi.StringOutput `pulumi:"cmkId"`
	// The creation time of the image, in RFC3339 format.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The image source. The format is **file,image_url**.
	DataOrigin pulumi.StringOutput `pulumi:"dataOrigin"`
	// Specifies the description of the image.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The image format. The valid value is **iso**.
	DiskFormat pulumi.StringOutput `pulumi:"diskFormat"`
	// Specifies the enterprise project ID to which the IMS image belongs.
	// For enterprise users, if omitted, default enterprise project will be used.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// The size of the image file, in bytes unit.
	ImageSize pulumi.StringOutput `pulumi:"imageSize"`
	// Specifies the URL of the external image file in the OBS bucket, the format
	// is **OBS bucket name:image file name**. The storage category for OBS bucket and image file must be OBS standard
	// storage, and the image file must be ISO format. Changing this parameter will create a new resource.
	ImageUrl pulumi.StringOutput `pulumi:"imageUrl"`
	// Specifies whether to automatically configure. The value can be **true** or
	// **false**. Defaults to **false**. Changing this parameter will create a new resource.
	// About the content of automatic backend configuration, please refer to
	// [API docs](https://support.huaweicloud.com/intl/en-us/ims_faq/ims_faq_0020.html).
	IsConfig pulumi.BoolPtrOutput `pulumi:"isConfig"`
	// Specifies the maximum memory of the image, in MB unit.
	MaxRam pulumi.IntOutput `pulumi:"maxRam"`
	// Specifies the minimum size of the system disk, in GB unit.
	// Changing this parameter will create a new resource.
	// + When the operating system is Linux, the value ranges from `10` to `1,024`.
	// + When the operating system is Windows, the value ranges from `20` to `1,024`.
	MinDisk pulumi.IntOutput `pulumi:"minDisk"`
	// Specifies the minimum memory of the image, in MB unit.
	MinRam pulumi.IntOutput `pulumi:"minRam"`
	// Specifies the name of the image.
	// The valid length is limited from `1` to `128` characters.
	// The first and last letters of the name cannot be spaces.
	// The name can contain uppercase letters, lowercase letters, numbers, spaces, chinese, and special characters (-._).
	Name pulumi.StringOutput `pulumi:"name"`
	// The operating system type of the image. The value can be **Windows** or **Linux**.
	OsType pulumi.StringOutput `pulumi:"osType"`
	// Specifies the operating system version of the image.
	// Changing this parameter will create a new resource.
	// For its values, see [API docs](https://support.huaweicloud.com/intl/en-us/api-ims/ims_03_0910.html).
	OsVersion pulumi.StringOutput `pulumi:"osVersion"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// The status of the image. The value can be **active**, **queued**, **saving**, **deleted**, or **killed*,
	// only image with a status of **active** can be used.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the key/value pairs to associate with the image.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The last update time of the image, in RFC3339 format.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// Whether the image is visible to other tenants.
	Visibility pulumi.StringOutput `pulumi:"visibility"`
}

// NewObsIsoImage registers a new resource with the given unique name, arguments, and options.
func NewObsIsoImage(ctx *pulumi.Context,
	name string, args *ObsIsoImageArgs, opts ...pulumi.ResourceOption) (*ObsIsoImage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ImageUrl == nil {
		return nil, errors.New("invalid value for required argument 'ImageUrl'")
	}
	if args.MinDisk == nil {
		return nil, errors.New("invalid value for required argument 'MinDisk'")
	}
	if args.OsVersion == nil {
		return nil, errors.New("invalid value for required argument 'OsVersion'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ObsIsoImage
	err := ctx.RegisterResource("huaweicloud:Ims/obsIsoImage:ObsIsoImage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObsIsoImage gets an existing ObsIsoImage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObsIsoImage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObsIsoImageState, opts ...pulumi.ResourceOption) (*ObsIsoImage, error) {
	var resource ObsIsoImage
	err := ctx.ReadResource("huaweicloud:Ims/obsIsoImage:ObsIsoImage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObsIsoImage resources.
type obsIsoImageState struct {
	// The time when the image status changes to active, in RFC3339 format.
	ActiveAt *string `pulumi:"activeAt"`
	// Specifies the schema type of the image. The value can be **x86** or
	// **arm**. Defaults to **x86**. Changing this parameter will create a new resource.
	Architecture *string `pulumi:"architecture"`
	// Specifies the custom key for creating encrypted image.
	// Changing this parameter will create a new resource.
	CmkId *string `pulumi:"cmkId"`
	// The creation time of the image, in RFC3339 format.
	CreatedAt *string `pulumi:"createdAt"`
	// The image source. The format is **file,image_url**.
	DataOrigin *string `pulumi:"dataOrigin"`
	// Specifies the description of the image.
	Description *string `pulumi:"description"`
	// The image format. The valid value is **iso**.
	DiskFormat *string `pulumi:"diskFormat"`
	// Specifies the enterprise project ID to which the IMS image belongs.
	// For enterprise users, if omitted, default enterprise project will be used.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The size of the image file, in bytes unit.
	ImageSize *string `pulumi:"imageSize"`
	// Specifies the URL of the external image file in the OBS bucket, the format
	// is **OBS bucket name:image file name**. The storage category for OBS bucket and image file must be OBS standard
	// storage, and the image file must be ISO format. Changing this parameter will create a new resource.
	ImageUrl *string `pulumi:"imageUrl"`
	// Specifies whether to automatically configure. The value can be **true** or
	// **false**. Defaults to **false**. Changing this parameter will create a new resource.
	// About the content of automatic backend configuration, please refer to
	// [API docs](https://support.huaweicloud.com/intl/en-us/ims_faq/ims_faq_0020.html).
	IsConfig *bool `pulumi:"isConfig"`
	// Specifies the maximum memory of the image, in MB unit.
	MaxRam *int `pulumi:"maxRam"`
	// Specifies the minimum size of the system disk, in GB unit.
	// Changing this parameter will create a new resource.
	// + When the operating system is Linux, the value ranges from `10` to `1,024`.
	// + When the operating system is Windows, the value ranges from `20` to `1,024`.
	MinDisk *int `pulumi:"minDisk"`
	// Specifies the minimum memory of the image, in MB unit.
	MinRam *int `pulumi:"minRam"`
	// Specifies the name of the image.
	// The valid length is limited from `1` to `128` characters.
	// The first and last letters of the name cannot be spaces.
	// The name can contain uppercase letters, lowercase letters, numbers, spaces, chinese, and special characters (-._).
	Name *string `pulumi:"name"`
	// The operating system type of the image. The value can be **Windows** or **Linux**.
	OsType *string `pulumi:"osType"`
	// Specifies the operating system version of the image.
	// Changing this parameter will create a new resource.
	// For its values, see [API docs](https://support.huaweicloud.com/intl/en-us/api-ims/ims_03_0910.html).
	OsVersion *string `pulumi:"osVersion"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// The status of the image. The value can be **active**, **queued**, **saving**, **deleted**, or **killed*,
	// only image with a status of **active** can be used.
	Status *string `pulumi:"status"`
	// Specifies the key/value pairs to associate with the image.
	Tags map[string]string `pulumi:"tags"`
	// The last update time of the image, in RFC3339 format.
	UpdatedAt *string `pulumi:"updatedAt"`
	// Whether the image is visible to other tenants.
	Visibility *string `pulumi:"visibility"`
}

type ObsIsoImageState struct {
	// The time when the image status changes to active, in RFC3339 format.
	ActiveAt pulumi.StringPtrInput
	// Specifies the schema type of the image. The value can be **x86** or
	// **arm**. Defaults to **x86**. Changing this parameter will create a new resource.
	Architecture pulumi.StringPtrInput
	// Specifies the custom key for creating encrypted image.
	// Changing this parameter will create a new resource.
	CmkId pulumi.StringPtrInput
	// The creation time of the image, in RFC3339 format.
	CreatedAt pulumi.StringPtrInput
	// The image source. The format is **file,image_url**.
	DataOrigin pulumi.StringPtrInput
	// Specifies the description of the image.
	Description pulumi.StringPtrInput
	// The image format. The valid value is **iso**.
	DiskFormat pulumi.StringPtrInput
	// Specifies the enterprise project ID to which the IMS image belongs.
	// For enterprise users, if omitted, default enterprise project will be used.
	EnterpriseProjectId pulumi.StringPtrInput
	// The size of the image file, in bytes unit.
	ImageSize pulumi.StringPtrInput
	// Specifies the URL of the external image file in the OBS bucket, the format
	// is **OBS bucket name:image file name**. The storage category for OBS bucket and image file must be OBS standard
	// storage, and the image file must be ISO format. Changing this parameter will create a new resource.
	ImageUrl pulumi.StringPtrInput
	// Specifies whether to automatically configure. The value can be **true** or
	// **false**. Defaults to **false**. Changing this parameter will create a new resource.
	// About the content of automatic backend configuration, please refer to
	// [API docs](https://support.huaweicloud.com/intl/en-us/ims_faq/ims_faq_0020.html).
	IsConfig pulumi.BoolPtrInput
	// Specifies the maximum memory of the image, in MB unit.
	MaxRam pulumi.IntPtrInput
	// Specifies the minimum size of the system disk, in GB unit.
	// Changing this parameter will create a new resource.
	// + When the operating system is Linux, the value ranges from `10` to `1,024`.
	// + When the operating system is Windows, the value ranges from `20` to `1,024`.
	MinDisk pulumi.IntPtrInput
	// Specifies the minimum memory of the image, in MB unit.
	MinRam pulumi.IntPtrInput
	// Specifies the name of the image.
	// The valid length is limited from `1` to `128` characters.
	// The first and last letters of the name cannot be spaces.
	// The name can contain uppercase letters, lowercase letters, numbers, spaces, chinese, and special characters (-._).
	Name pulumi.StringPtrInput
	// The operating system type of the image. The value can be **Windows** or **Linux**.
	OsType pulumi.StringPtrInput
	// Specifies the operating system version of the image.
	// Changing this parameter will create a new resource.
	// For its values, see [API docs](https://support.huaweicloud.com/intl/en-us/api-ims/ims_03_0910.html).
	OsVersion pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// The status of the image. The value can be **active**, **queued**, **saving**, **deleted**, or **killed*,
	// only image with a status of **active** can be used.
	Status pulumi.StringPtrInput
	// Specifies the key/value pairs to associate with the image.
	Tags pulumi.StringMapInput
	// The last update time of the image, in RFC3339 format.
	UpdatedAt pulumi.StringPtrInput
	// Whether the image is visible to other tenants.
	Visibility pulumi.StringPtrInput
}

func (ObsIsoImageState) ElementType() reflect.Type {
	return reflect.TypeOf((*obsIsoImageState)(nil)).Elem()
}

type obsIsoImageArgs struct {
	// Specifies the schema type of the image. The value can be **x86** or
	// **arm**. Defaults to **x86**. Changing this parameter will create a new resource.
	Architecture *string `pulumi:"architecture"`
	// Specifies the custom key for creating encrypted image.
	// Changing this parameter will create a new resource.
	CmkId *string `pulumi:"cmkId"`
	// Specifies the description of the image.
	Description *string `pulumi:"description"`
	// Specifies the enterprise project ID to which the IMS image belongs.
	// For enterprise users, if omitted, default enterprise project will be used.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the URL of the external image file in the OBS bucket, the format
	// is **OBS bucket name:image file name**. The storage category for OBS bucket and image file must be OBS standard
	// storage, and the image file must be ISO format. Changing this parameter will create a new resource.
	ImageUrl string `pulumi:"imageUrl"`
	// Specifies whether to automatically configure. The value can be **true** or
	// **false**. Defaults to **false**. Changing this parameter will create a new resource.
	// About the content of automatic backend configuration, please refer to
	// [API docs](https://support.huaweicloud.com/intl/en-us/ims_faq/ims_faq_0020.html).
	IsConfig *bool `pulumi:"isConfig"`
	// Specifies the maximum memory of the image, in MB unit.
	MaxRam *int `pulumi:"maxRam"`
	// Specifies the minimum size of the system disk, in GB unit.
	// Changing this parameter will create a new resource.
	// + When the operating system is Linux, the value ranges from `10` to `1,024`.
	// + When the operating system is Windows, the value ranges from `20` to `1,024`.
	MinDisk int `pulumi:"minDisk"`
	// Specifies the minimum memory of the image, in MB unit.
	MinRam *int `pulumi:"minRam"`
	// Specifies the name of the image.
	// The valid length is limited from `1` to `128` characters.
	// The first and last letters of the name cannot be spaces.
	// The name can contain uppercase letters, lowercase letters, numbers, spaces, chinese, and special characters (-._).
	Name *string `pulumi:"name"`
	// Specifies the operating system version of the image.
	// Changing this parameter will create a new resource.
	// For its values, see [API docs](https://support.huaweicloud.com/intl/en-us/api-ims/ims_03_0910.html).
	OsVersion string `pulumi:"osVersion"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// Specifies the key/value pairs to associate with the image.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ObsIsoImage resource.
type ObsIsoImageArgs struct {
	// Specifies the schema type of the image. The value can be **x86** or
	// **arm**. Defaults to **x86**. Changing this parameter will create a new resource.
	Architecture pulumi.StringPtrInput
	// Specifies the custom key for creating encrypted image.
	// Changing this parameter will create a new resource.
	CmkId pulumi.StringPtrInput
	// Specifies the description of the image.
	Description pulumi.StringPtrInput
	// Specifies the enterprise project ID to which the IMS image belongs.
	// For enterprise users, if omitted, default enterprise project will be used.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the URL of the external image file in the OBS bucket, the format
	// is **OBS bucket name:image file name**. The storage category for OBS bucket and image file must be OBS standard
	// storage, and the image file must be ISO format. Changing this parameter will create a new resource.
	ImageUrl pulumi.StringInput
	// Specifies whether to automatically configure. The value can be **true** or
	// **false**. Defaults to **false**. Changing this parameter will create a new resource.
	// About the content of automatic backend configuration, please refer to
	// [API docs](https://support.huaweicloud.com/intl/en-us/ims_faq/ims_faq_0020.html).
	IsConfig pulumi.BoolPtrInput
	// Specifies the maximum memory of the image, in MB unit.
	MaxRam pulumi.IntPtrInput
	// Specifies the minimum size of the system disk, in GB unit.
	// Changing this parameter will create a new resource.
	// + When the operating system is Linux, the value ranges from `10` to `1,024`.
	// + When the operating system is Windows, the value ranges from `20` to `1,024`.
	MinDisk pulumi.IntInput
	// Specifies the minimum memory of the image, in MB unit.
	MinRam pulumi.IntPtrInput
	// Specifies the name of the image.
	// The valid length is limited from `1` to `128` characters.
	// The first and last letters of the name cannot be spaces.
	// The name can contain uppercase letters, lowercase letters, numbers, spaces, chinese, and special characters (-._).
	Name pulumi.StringPtrInput
	// Specifies the operating system version of the image.
	// Changing this parameter will create a new resource.
	// For its values, see [API docs](https://support.huaweicloud.com/intl/en-us/api-ims/ims_03_0910.html).
	OsVersion pulumi.StringInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// Specifies the key/value pairs to associate with the image.
	Tags pulumi.StringMapInput
}

func (ObsIsoImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*obsIsoImageArgs)(nil)).Elem()
}

type ObsIsoImageInput interface {
	pulumi.Input

	ToObsIsoImageOutput() ObsIsoImageOutput
	ToObsIsoImageOutputWithContext(ctx context.Context) ObsIsoImageOutput
}

func (*ObsIsoImage) ElementType() reflect.Type {
	return reflect.TypeOf((**ObsIsoImage)(nil)).Elem()
}

func (i *ObsIsoImage) ToObsIsoImageOutput() ObsIsoImageOutput {
	return i.ToObsIsoImageOutputWithContext(context.Background())
}

func (i *ObsIsoImage) ToObsIsoImageOutputWithContext(ctx context.Context) ObsIsoImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsIsoImageOutput)
}

// ObsIsoImageArrayInput is an input type that accepts ObsIsoImageArray and ObsIsoImageArrayOutput values.
// You can construct a concrete instance of `ObsIsoImageArrayInput` via:
//
//	ObsIsoImageArray{ ObsIsoImageArgs{...} }
type ObsIsoImageArrayInput interface {
	pulumi.Input

	ToObsIsoImageArrayOutput() ObsIsoImageArrayOutput
	ToObsIsoImageArrayOutputWithContext(context.Context) ObsIsoImageArrayOutput
}

type ObsIsoImageArray []ObsIsoImageInput

func (ObsIsoImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObsIsoImage)(nil)).Elem()
}

func (i ObsIsoImageArray) ToObsIsoImageArrayOutput() ObsIsoImageArrayOutput {
	return i.ToObsIsoImageArrayOutputWithContext(context.Background())
}

func (i ObsIsoImageArray) ToObsIsoImageArrayOutputWithContext(ctx context.Context) ObsIsoImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsIsoImageArrayOutput)
}

// ObsIsoImageMapInput is an input type that accepts ObsIsoImageMap and ObsIsoImageMapOutput values.
// You can construct a concrete instance of `ObsIsoImageMapInput` via:
//
//	ObsIsoImageMap{ "key": ObsIsoImageArgs{...} }
type ObsIsoImageMapInput interface {
	pulumi.Input

	ToObsIsoImageMapOutput() ObsIsoImageMapOutput
	ToObsIsoImageMapOutputWithContext(context.Context) ObsIsoImageMapOutput
}

type ObsIsoImageMap map[string]ObsIsoImageInput

func (ObsIsoImageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObsIsoImage)(nil)).Elem()
}

func (i ObsIsoImageMap) ToObsIsoImageMapOutput() ObsIsoImageMapOutput {
	return i.ToObsIsoImageMapOutputWithContext(context.Background())
}

func (i ObsIsoImageMap) ToObsIsoImageMapOutputWithContext(ctx context.Context) ObsIsoImageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsIsoImageMapOutput)
}

type ObsIsoImageOutput struct{ *pulumi.OutputState }

func (ObsIsoImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObsIsoImage)(nil)).Elem()
}

func (o ObsIsoImageOutput) ToObsIsoImageOutput() ObsIsoImageOutput {
	return o
}

func (o ObsIsoImageOutput) ToObsIsoImageOutputWithContext(ctx context.Context) ObsIsoImageOutput {
	return o
}

// The time when the image status changes to active, in RFC3339 format.
func (o ObsIsoImageOutput) ActiveAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.StringOutput { return v.ActiveAt }).(pulumi.StringOutput)
}

// Specifies the schema type of the image. The value can be **x86** or
// **arm**. Defaults to **x86**. Changing this parameter will create a new resource.
func (o ObsIsoImageOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.StringOutput { return v.Architecture }).(pulumi.StringOutput)
}

// Specifies the custom key for creating encrypted image.
// Changing this parameter will create a new resource.
func (o ObsIsoImageOutput) CmkId() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.StringOutput { return v.CmkId }).(pulumi.StringOutput)
}

// The creation time of the image, in RFC3339 format.
func (o ObsIsoImageOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The image source. The format is **file,image_url**.
func (o ObsIsoImageOutput) DataOrigin() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.StringOutput { return v.DataOrigin }).(pulumi.StringOutput)
}

// Specifies the description of the image.
func (o ObsIsoImageOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The image format. The valid value is **iso**.
func (o ObsIsoImageOutput) DiskFormat() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.StringOutput { return v.DiskFormat }).(pulumi.StringOutput)
}

// Specifies the enterprise project ID to which the IMS image belongs.
// For enterprise users, if omitted, default enterprise project will be used.
func (o ObsIsoImageOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// The size of the image file, in bytes unit.
func (o ObsIsoImageOutput) ImageSize() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.StringOutput { return v.ImageSize }).(pulumi.StringOutput)
}

// Specifies the URL of the external image file in the OBS bucket, the format
// is **OBS bucket name:image file name**. The storage category for OBS bucket and image file must be OBS standard
// storage, and the image file must be ISO format. Changing this parameter will create a new resource.
func (o ObsIsoImageOutput) ImageUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.StringOutput { return v.ImageUrl }).(pulumi.StringOutput)
}

// Specifies whether to automatically configure. The value can be **true** or
// **false**. Defaults to **false**. Changing this parameter will create a new resource.
// About the content of automatic backend configuration, please refer to
// [API docs](https://support.huaweicloud.com/intl/en-us/ims_faq/ims_faq_0020.html).
func (o ObsIsoImageOutput) IsConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.BoolPtrOutput { return v.IsConfig }).(pulumi.BoolPtrOutput)
}

// Specifies the maximum memory of the image, in MB unit.
func (o ObsIsoImageOutput) MaxRam() pulumi.IntOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.IntOutput { return v.MaxRam }).(pulumi.IntOutput)
}

// Specifies the minimum size of the system disk, in GB unit.
// Changing this parameter will create a new resource.
// + When the operating system is Linux, the value ranges from `10` to `1,024`.
// + When the operating system is Windows, the value ranges from `20` to `1,024`.
func (o ObsIsoImageOutput) MinDisk() pulumi.IntOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.IntOutput { return v.MinDisk }).(pulumi.IntOutput)
}

// Specifies the minimum memory of the image, in MB unit.
func (o ObsIsoImageOutput) MinRam() pulumi.IntOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.IntOutput { return v.MinRam }).(pulumi.IntOutput)
}

// Specifies the name of the image.
// The valid length is limited from `1` to `128` characters.
// The first and last letters of the name cannot be spaces.
// The name can contain uppercase letters, lowercase letters, numbers, spaces, chinese, and special characters (-._).
func (o ObsIsoImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The operating system type of the image. The value can be **Windows** or **Linux**.
func (o ObsIsoImageOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.StringOutput { return v.OsType }).(pulumi.StringOutput)
}

// Specifies the operating system version of the image.
// Changing this parameter will create a new resource.
// For its values, see [API docs](https://support.huaweicloud.com/intl/en-us/api-ims/ims_03_0910.html).
func (o ObsIsoImageOutput) OsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.StringOutput { return v.OsVersion }).(pulumi.StringOutput)
}

// Specifies the region in which to create the resource.
// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
func (o ObsIsoImageOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The status of the image. The value can be **active**, **queued**, **saving**, **deleted**, or **killed*,
// only image with a status of **active** can be used.
func (o ObsIsoImageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the key/value pairs to associate with the image.
func (o ObsIsoImageOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The last update time of the image, in RFC3339 format.
func (o ObsIsoImageOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// Whether the image is visible to other tenants.
func (o ObsIsoImageOutput) Visibility() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsIsoImage) pulumi.StringOutput { return v.Visibility }).(pulumi.StringOutput)
}

type ObsIsoImageArrayOutput struct{ *pulumi.OutputState }

func (ObsIsoImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObsIsoImage)(nil)).Elem()
}

func (o ObsIsoImageArrayOutput) ToObsIsoImageArrayOutput() ObsIsoImageArrayOutput {
	return o
}

func (o ObsIsoImageArrayOutput) ToObsIsoImageArrayOutputWithContext(ctx context.Context) ObsIsoImageArrayOutput {
	return o
}

func (o ObsIsoImageArrayOutput) Index(i pulumi.IntInput) ObsIsoImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ObsIsoImage {
		return vs[0].([]*ObsIsoImage)[vs[1].(int)]
	}).(ObsIsoImageOutput)
}

type ObsIsoImageMapOutput struct{ *pulumi.OutputState }

func (ObsIsoImageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObsIsoImage)(nil)).Elem()
}

func (o ObsIsoImageMapOutput) ToObsIsoImageMapOutput() ObsIsoImageMapOutput {
	return o
}

func (o ObsIsoImageMapOutput) ToObsIsoImageMapOutputWithContext(ctx context.Context) ObsIsoImageMapOutput {
	return o
}

func (o ObsIsoImageMapOutput) MapIndex(k pulumi.StringInput) ObsIsoImageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ObsIsoImage {
		return vs[0].(map[string]*ObsIsoImage)[vs[1].(string)]
	}).(ObsIsoImageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ObsIsoImageInput)(nil)).Elem(), &ObsIsoImage{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsIsoImageArrayInput)(nil)).Elem(), ObsIsoImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsIsoImageMapInput)(nil)).Elem(), ObsIsoImageMap{})
	pulumi.RegisterOutputType(ObsIsoImageOutput{})
	pulumi.RegisterOutputType(ObsIsoImageArrayOutput{})
	pulumi.RegisterOutputType(ObsIsoImageMapOutput{})
}
