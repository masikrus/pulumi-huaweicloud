// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ims

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of OS versions supported by IMS image within HuaweiCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Ims"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Ims"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Ims.GetOsVersions(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOsVersions(ctx *pulumi.Context, args *GetOsVersionsArgs, opts ...pulumi.InvokeOption) (*GetOsVersionsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetOsVersionsResult
	err := ctx.Invoke("huaweicloud:Ims/getOsVersions:getOsVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOsVersions.
type GetOsVersionsArgs struct {
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the label value for the OS versions.
	// Multiple tags separated by commas, e.g. **bms,uefi**.
	// The valid values are as follows:
	// + **bms**: OS versions that supports BMS image type.
	// + **uefi**: OS versions that supports UEFI boot mode.
	// + **arm**: OS versions based on ARM architecture.
	// + **x86**: OS versions based on x86 architecture.
	Tag *string `pulumi:"tag"`
}

// A collection of values returned by getOsVersions.
type GetOsVersionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The OS version details.
	OsVersions []GetOsVersionsOsVersion `pulumi:"osVersions"`
	Region     string                   `pulumi:"region"`
	Tag        *string                  `pulumi:"tag"`
}

func GetOsVersionsOutput(ctx *pulumi.Context, args GetOsVersionsOutputArgs, opts ...pulumi.InvokeOption) GetOsVersionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOsVersionsResult, error) {
			args := v.(GetOsVersionsArgs)
			r, err := GetOsVersions(ctx, &args, opts...)
			var s GetOsVersionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOsVersionsResultOutput)
}

// A collection of arguments for invoking getOsVersions.
type GetOsVersionsOutputArgs struct {
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the label value for the OS versions.
	// Multiple tags separated by commas, e.g. **bms,uefi**.
	// The valid values are as follows:
	// + **bms**: OS versions that supports BMS image type.
	// + **uefi**: OS versions that supports UEFI boot mode.
	// + **arm**: OS versions based on ARM architecture.
	// + **x86**: OS versions based on x86 architecture.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (GetOsVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOsVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getOsVersions.
type GetOsVersionsResultOutput struct{ *pulumi.OutputState }

func (GetOsVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOsVersionsResult)(nil)).Elem()
}

func (o GetOsVersionsResultOutput) ToGetOsVersionsResultOutput() GetOsVersionsResultOutput {
	return o
}

func (o GetOsVersionsResultOutput) ToGetOsVersionsResultOutputWithContext(ctx context.Context) GetOsVersionsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetOsVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOsVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The OS version details.
func (o GetOsVersionsResultOutput) OsVersions() GetOsVersionsOsVersionArrayOutput {
	return o.ApplyT(func(v GetOsVersionsResult) []GetOsVersionsOsVersion { return v.OsVersions }).(GetOsVersionsOsVersionArrayOutput)
}

func (o GetOsVersionsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetOsVersionsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetOsVersionsResultOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOsVersionsResult) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOsVersionsResultOutput{})
}
