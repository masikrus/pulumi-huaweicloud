// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ims

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetImagesImage struct {
	// Specifies whether the image supports host security or host monitoring.
	// The valid values are as follows:
	// + **hss**: Host security.
	// + **ces**: Host monitoring.
	// + **hss,ces**: Both support.
	__supportAgentList string `pulumi:"__supportAgentList"`
	// The time when the image status changes to active, in RFC3339 format.
	ActiveAt string `pulumi:"activeAt"`
	// Specifies the image architecture type. The value can be **x86** or **arm**.
	Architecture string `pulumi:"architecture"`
	// The backup ID of the whole image in the CBR vault.
	BackupId string `pulumi:"backupId"`
	// The format of the image's container.
	ContainerFormat string `pulumi:"containerFormat"`
	// The creation time of the image, in RFC3339 format.
	CreatedAt string `pulumi:"createdAt"`
	// The image source. The format is **server_backup,backup_id**,  **instance,instance_id**,
	// **server_backup,vault_id**,  **volume,volume_id**, **file,image_url**, or **image,region,image_id**.
	DataOrigin string `pulumi:"dataOrigin"`
	// The description of the image.
	Description string `pulumi:"description"`
	// The image format. The value can be **zvhd2**, **vhd**, **zvhd**, **raw**, **qcow2**, or **iso**.
	DiskFormat string `pulumi:"diskFormat"`
	// Specifies the enterprise project ID of the image.
	// For enterprise users, if omitted, will query the images under all enterprise projects.
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	// The image file download and upload links.
	File string `pulumi:"file"`
	// The ID of the image
	Id string `pulumi:"id"`
	// Specifies the environment where the image is used.
	// The valid values are as follows:
	// + **FusionCompute**: Cloud server image, also known as system disk image.
	// + **DataImage**: Data disk image.
	// + **Ironic**: Bare metal server image.
	// + **IsoImage**: ISO image.
	ImageType string `pulumi:"imageType"`
	// The maximum memory supported by the image, in MB unit.
	MaxRamMb int `pulumi:"maxRamMb"`
	// The minimum disk space required to run an image, in GB unit.
	// + When the operating system is Linux, the value ranges from `10` to `1,024`.
	// + When the operating system is Windows, the value ranges from `20` to `1,024`.
	MinDiskGb int `pulumi:"minDiskGb"`
	// The minimum memory required to run an image, in MB unit.
	MinRamMb int `pulumi:"minRamMb"`
	// Specifies the name of the image. Cannot be used simultaneously with `nameRegex`.
	Name string `pulumi:"name"`
	// Specifies the image OS type. The value can be **Windows**, **Ubuntu**, **RedHat**, **SUSE**,
	// **CentOS**, **Debian**, **OpenSUSE**, **Oracle Linux**, **Fedora**, **Other**, **CoreOS**, or **EulerOS**.
	Os string `pulumi:"os"`
	// The operating system version of the image.
	OsVersion string `pulumi:"osVersion"`
	// Specifies the owner (UUID) of the image.
	Owner string `pulumi:"owner"`
	// Indicates whether the image is protected, protected images cannot be deleted.
	// The valid value is **true** or **false**.
	Protected bool `pulumi:"protected"`
	// The image view.
	Schema string `pulumi:"schema"`
	// The size of the image file, in bytes unit.
	SizeBytes int `pulumi:"sizeBytes"`
	// The status of the image. The valid value is **active**.
	Status string `pulumi:"status"`
	// The last update time of the image, in RFC3339 format.
	UpdatedAt string `pulumi:"updatedAt"`
	// Specifies the visibility of the image. Must be one of **public**, **private**,
	// **market** or **shared**.
	Visibility string `pulumi:"visibility"`
}

// GetImagesImageInput is an input type that accepts GetImagesImageArgs and GetImagesImageOutput values.
// You can construct a concrete instance of `GetImagesImageInput` via:
//
//	GetImagesImageArgs{...}
type GetImagesImageInput interface {
	pulumi.Input

	ToGetImagesImageOutput() GetImagesImageOutput
	ToGetImagesImageOutputWithContext(context.Context) GetImagesImageOutput
}

type GetImagesImageArgs struct {
	// Specifies whether the image supports host security or host monitoring.
	// The valid values are as follows:
	// + **hss**: Host security.
	// + **ces**: Host monitoring.
	// + **hss,ces**: Both support.
	__supportAgentList pulumi.StringInput `pulumi:"__supportAgentList"`
	// The time when the image status changes to active, in RFC3339 format.
	ActiveAt pulumi.StringInput `pulumi:"activeAt"`
	// Specifies the image architecture type. The value can be **x86** or **arm**.
	Architecture pulumi.StringInput `pulumi:"architecture"`
	// The backup ID of the whole image in the CBR vault.
	BackupId pulumi.StringInput `pulumi:"backupId"`
	// The format of the image's container.
	ContainerFormat pulumi.StringInput `pulumi:"containerFormat"`
	// The creation time of the image, in RFC3339 format.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The image source. The format is **server_backup,backup_id**,  **instance,instance_id**,
	// **server_backup,vault_id**,  **volume,volume_id**, **file,image_url**, or **image,region,image_id**.
	DataOrigin pulumi.StringInput `pulumi:"dataOrigin"`
	// The description of the image.
	Description pulumi.StringInput `pulumi:"description"`
	// The image format. The value can be **zvhd2**, **vhd**, **zvhd**, **raw**, **qcow2**, or **iso**.
	DiskFormat pulumi.StringInput `pulumi:"diskFormat"`
	// Specifies the enterprise project ID of the image.
	// For enterprise users, if omitted, will query the images under all enterprise projects.
	EnterpriseProjectId pulumi.StringInput `pulumi:"enterpriseProjectId"`
	// The image file download and upload links.
	File pulumi.StringInput `pulumi:"file"`
	// The ID of the image
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the environment where the image is used.
	// The valid values are as follows:
	// + **FusionCompute**: Cloud server image, also known as system disk image.
	// + **DataImage**: Data disk image.
	// + **Ironic**: Bare metal server image.
	// + **IsoImage**: ISO image.
	ImageType pulumi.StringInput `pulumi:"imageType"`
	// The maximum memory supported by the image, in MB unit.
	MaxRamMb pulumi.IntInput `pulumi:"maxRamMb"`
	// The minimum disk space required to run an image, in GB unit.
	// + When the operating system is Linux, the value ranges from `10` to `1,024`.
	// + When the operating system is Windows, the value ranges from `20` to `1,024`.
	MinDiskGb pulumi.IntInput `pulumi:"minDiskGb"`
	// The minimum memory required to run an image, in MB unit.
	MinRamMb pulumi.IntInput `pulumi:"minRamMb"`
	// Specifies the name of the image. Cannot be used simultaneously with `nameRegex`.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the image OS type. The value can be **Windows**, **Ubuntu**, **RedHat**, **SUSE**,
	// **CentOS**, **Debian**, **OpenSUSE**, **Oracle Linux**, **Fedora**, **Other**, **CoreOS**, or **EulerOS**.
	Os pulumi.StringInput `pulumi:"os"`
	// The operating system version of the image.
	OsVersion pulumi.StringInput `pulumi:"osVersion"`
	// Specifies the owner (UUID) of the image.
	Owner pulumi.StringInput `pulumi:"owner"`
	// Indicates whether the image is protected, protected images cannot be deleted.
	// The valid value is **true** or **false**.
	Protected pulumi.BoolInput `pulumi:"protected"`
	// The image view.
	Schema pulumi.StringInput `pulumi:"schema"`
	// The size of the image file, in bytes unit.
	SizeBytes pulumi.IntInput `pulumi:"sizeBytes"`
	// The status of the image. The valid value is **active**.
	Status pulumi.StringInput `pulumi:"status"`
	// The last update time of the image, in RFC3339 format.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// Specifies the visibility of the image. Must be one of **public**, **private**,
	// **market** or **shared**.
	Visibility pulumi.StringInput `pulumi:"visibility"`
}

func (GetImagesImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArgs) ToGetImagesImageOutput() GetImagesImageOutput {
	return i.ToGetImagesImageOutputWithContext(context.Background())
}

func (i GetImagesImageArgs) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageOutput)
}

// GetImagesImageArrayInput is an input type that accepts GetImagesImageArray and GetImagesImageArrayOutput values.
// You can construct a concrete instance of `GetImagesImageArrayInput` via:
//
//	GetImagesImageArray{ GetImagesImageArgs{...} }
type GetImagesImageArrayInput interface {
	pulumi.Input

	ToGetImagesImageArrayOutput() GetImagesImageArrayOutput
	ToGetImagesImageArrayOutputWithContext(context.Context) GetImagesImageArrayOutput
}

type GetImagesImageArray []GetImagesImageInput

func (GetImagesImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return i.ToGetImagesImageArrayOutputWithContext(context.Background())
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageArrayOutput)
}

type GetImagesImageOutput struct{ *pulumi.OutputState }

func (GetImagesImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageOutput) ToGetImagesImageOutput() GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return o
}

// Specifies whether the image supports host security or host monitoring.
// The valid values are as follows:
// + **hss**: Host security.
// + **ces**: Host monitoring.
// + **hss,ces**: Both support.
func (o GetImagesImageOutput) __supportAgentList() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.__supportAgentList }).(pulumi.StringOutput)
}

// The time when the image status changes to active, in RFC3339 format.
func (o GetImagesImageOutput) ActiveAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ActiveAt }).(pulumi.StringOutput)
}

// Specifies the image architecture type. The value can be **x86** or **arm**.
func (o GetImagesImageOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Architecture }).(pulumi.StringOutput)
}

// The backup ID of the whole image in the CBR vault.
func (o GetImagesImageOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.BackupId }).(pulumi.StringOutput)
}

// The format of the image's container.
func (o GetImagesImageOutput) ContainerFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ContainerFormat }).(pulumi.StringOutput)
}

// The creation time of the image, in RFC3339 format.
func (o GetImagesImageOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The image source. The format is **server_backup,backup_id**,  **instance,instance_id**,
// **server_backup,vault_id**,  **volume,volume_id**, **file,image_url**, or **image,region,image_id**.
func (o GetImagesImageOutput) DataOrigin() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.DataOrigin }).(pulumi.StringOutput)
}

// The description of the image.
func (o GetImagesImageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Description }).(pulumi.StringOutput)
}

// The image format. The value can be **zvhd2**, **vhd**, **zvhd**, **raw**, **qcow2**, or **iso**.
func (o GetImagesImageOutput) DiskFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.DiskFormat }).(pulumi.StringOutput)
}

// Specifies the enterprise project ID of the image.
// For enterprise users, if omitted, will query the images under all enterprise projects.
func (o GetImagesImageOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// The image file download and upload links.
func (o GetImagesImageOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.File }).(pulumi.StringOutput)
}

// The ID of the image
func (o GetImagesImageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the environment where the image is used.
// The valid values are as follows:
// + **FusionCompute**: Cloud server image, also known as system disk image.
// + **DataImage**: Data disk image.
// + **Ironic**: Bare metal server image.
// + **IsoImage**: ISO image.
func (o GetImagesImageOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageType }).(pulumi.StringOutput)
}

// The maximum memory supported by the image, in MB unit.
func (o GetImagesImageOutput) MaxRamMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImage) int { return v.MaxRamMb }).(pulumi.IntOutput)
}

// The minimum disk space required to run an image, in GB unit.
// + When the operating system is Linux, the value ranges from `10` to `1,024`.
// + When the operating system is Windows, the value ranges from `20` to `1,024`.
func (o GetImagesImageOutput) MinDiskGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImage) int { return v.MinDiskGb }).(pulumi.IntOutput)
}

// The minimum memory required to run an image, in MB unit.
func (o GetImagesImageOutput) MinRamMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImage) int { return v.MinRamMb }).(pulumi.IntOutput)
}

// Specifies the name of the image. Cannot be used simultaneously with `nameRegex`.
func (o GetImagesImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the image OS type. The value can be **Windows**, **Ubuntu**, **RedHat**, **SUSE**,
// **CentOS**, **Debian**, **OpenSUSE**, **Oracle Linux**, **Fedora**, **Other**, **CoreOS**, or **EulerOS**.
func (o GetImagesImageOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Os }).(pulumi.StringOutput)
}

// The operating system version of the image.
func (o GetImagesImageOutput) OsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.OsVersion }).(pulumi.StringOutput)
}

// Specifies the owner (UUID) of the image.
func (o GetImagesImageOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Owner }).(pulumi.StringOutput)
}

// Indicates whether the image is protected, protected images cannot be deleted.
// The valid value is **true** or **false**.
func (o GetImagesImageOutput) Protected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImagesImage) bool { return v.Protected }).(pulumi.BoolOutput)
}

// The image view.
func (o GetImagesImageOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Schema }).(pulumi.StringOutput)
}

// The size of the image file, in bytes unit.
func (o GetImagesImageOutput) SizeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImage) int { return v.SizeBytes }).(pulumi.IntOutput)
}

// The status of the image. The valid value is **active**.
func (o GetImagesImageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Status }).(pulumi.StringOutput)
}

// The last update time of the image, in RFC3339 format.
func (o GetImagesImageOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// Specifies the visibility of the image. Must be one of **public**, **private**,
// **market** or **shared**.
func (o GetImagesImageOutput) Visibility() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Visibility }).(pulumi.StringOutput)
}

type GetImagesImageArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) Index(i pulumi.IntInput) GetImagesImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImage {
		return vs[0].([]GetImagesImage)[vs[1].(int)]
	}).(GetImagesImageOutput)
}

type GetOsVersionsOsVersion struct {
	// The operating system platform.
	Platform string `pulumi:"platform"`
	// The operating system details.
	Versions []GetOsVersionsOsVersionVersion `pulumi:"versions"`
}

// GetOsVersionsOsVersionInput is an input type that accepts GetOsVersionsOsVersionArgs and GetOsVersionsOsVersionOutput values.
// You can construct a concrete instance of `GetOsVersionsOsVersionInput` via:
//
//	GetOsVersionsOsVersionArgs{...}
type GetOsVersionsOsVersionInput interface {
	pulumi.Input

	ToGetOsVersionsOsVersionOutput() GetOsVersionsOsVersionOutput
	ToGetOsVersionsOsVersionOutputWithContext(context.Context) GetOsVersionsOsVersionOutput
}

type GetOsVersionsOsVersionArgs struct {
	// The operating system platform.
	Platform pulumi.StringInput `pulumi:"platform"`
	// The operating system details.
	Versions GetOsVersionsOsVersionVersionArrayInput `pulumi:"versions"`
}

func (GetOsVersionsOsVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOsVersionsOsVersion)(nil)).Elem()
}

func (i GetOsVersionsOsVersionArgs) ToGetOsVersionsOsVersionOutput() GetOsVersionsOsVersionOutput {
	return i.ToGetOsVersionsOsVersionOutputWithContext(context.Background())
}

func (i GetOsVersionsOsVersionArgs) ToGetOsVersionsOsVersionOutputWithContext(ctx context.Context) GetOsVersionsOsVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOsVersionsOsVersionOutput)
}

// GetOsVersionsOsVersionArrayInput is an input type that accepts GetOsVersionsOsVersionArray and GetOsVersionsOsVersionArrayOutput values.
// You can construct a concrete instance of `GetOsVersionsOsVersionArrayInput` via:
//
//	GetOsVersionsOsVersionArray{ GetOsVersionsOsVersionArgs{...} }
type GetOsVersionsOsVersionArrayInput interface {
	pulumi.Input

	ToGetOsVersionsOsVersionArrayOutput() GetOsVersionsOsVersionArrayOutput
	ToGetOsVersionsOsVersionArrayOutputWithContext(context.Context) GetOsVersionsOsVersionArrayOutput
}

type GetOsVersionsOsVersionArray []GetOsVersionsOsVersionInput

func (GetOsVersionsOsVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOsVersionsOsVersion)(nil)).Elem()
}

func (i GetOsVersionsOsVersionArray) ToGetOsVersionsOsVersionArrayOutput() GetOsVersionsOsVersionArrayOutput {
	return i.ToGetOsVersionsOsVersionArrayOutputWithContext(context.Background())
}

func (i GetOsVersionsOsVersionArray) ToGetOsVersionsOsVersionArrayOutputWithContext(ctx context.Context) GetOsVersionsOsVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOsVersionsOsVersionArrayOutput)
}

type GetOsVersionsOsVersionOutput struct{ *pulumi.OutputState }

func (GetOsVersionsOsVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOsVersionsOsVersion)(nil)).Elem()
}

func (o GetOsVersionsOsVersionOutput) ToGetOsVersionsOsVersionOutput() GetOsVersionsOsVersionOutput {
	return o
}

func (o GetOsVersionsOsVersionOutput) ToGetOsVersionsOsVersionOutputWithContext(ctx context.Context) GetOsVersionsOsVersionOutput {
	return o
}

// The operating system platform.
func (o GetOsVersionsOsVersionOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetOsVersionsOsVersion) string { return v.Platform }).(pulumi.StringOutput)
}

// The operating system details.
func (o GetOsVersionsOsVersionOutput) Versions() GetOsVersionsOsVersionVersionArrayOutput {
	return o.ApplyT(func(v GetOsVersionsOsVersion) []GetOsVersionsOsVersionVersion { return v.Versions }).(GetOsVersionsOsVersionVersionArrayOutput)
}

type GetOsVersionsOsVersionArrayOutput struct{ *pulumi.OutputState }

func (GetOsVersionsOsVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOsVersionsOsVersion)(nil)).Elem()
}

func (o GetOsVersionsOsVersionArrayOutput) ToGetOsVersionsOsVersionArrayOutput() GetOsVersionsOsVersionArrayOutput {
	return o
}

func (o GetOsVersionsOsVersionArrayOutput) ToGetOsVersionsOsVersionArrayOutputWithContext(ctx context.Context) GetOsVersionsOsVersionArrayOutput {
	return o
}

func (o GetOsVersionsOsVersionArrayOutput) Index(i pulumi.IntInput) GetOsVersionsOsVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOsVersionsOsVersion {
		return vs[0].([]GetOsVersionsOsVersion)[vs[1].(int)]
	}).(GetOsVersionsOsVersionOutput)
}

type GetOsVersionsOsVersionVersion struct {
	// The number of bits for the operating system.
	OsBit int `pulumi:"osBit"`
	// The type of operating system.
	OsType string `pulumi:"osType"`
	// The complete information of the operating system.
	OsVersion string `pulumi:"osVersion"`
	// The operating system key value.
	// By default, the value of `osVersion` is taken as the `osVersionKey` value.
	OsVersionKey string `pulumi:"osVersionKey"`
	// The operating system platform.
	Platform string `pulumi:"platform"`
}

// GetOsVersionsOsVersionVersionInput is an input type that accepts GetOsVersionsOsVersionVersionArgs and GetOsVersionsOsVersionVersionOutput values.
// You can construct a concrete instance of `GetOsVersionsOsVersionVersionInput` via:
//
//	GetOsVersionsOsVersionVersionArgs{...}
type GetOsVersionsOsVersionVersionInput interface {
	pulumi.Input

	ToGetOsVersionsOsVersionVersionOutput() GetOsVersionsOsVersionVersionOutput
	ToGetOsVersionsOsVersionVersionOutputWithContext(context.Context) GetOsVersionsOsVersionVersionOutput
}

type GetOsVersionsOsVersionVersionArgs struct {
	// The number of bits for the operating system.
	OsBit pulumi.IntInput `pulumi:"osBit"`
	// The type of operating system.
	OsType pulumi.StringInput `pulumi:"osType"`
	// The complete information of the operating system.
	OsVersion pulumi.StringInput `pulumi:"osVersion"`
	// The operating system key value.
	// By default, the value of `osVersion` is taken as the `osVersionKey` value.
	OsVersionKey pulumi.StringInput `pulumi:"osVersionKey"`
	// The operating system platform.
	Platform pulumi.StringInput `pulumi:"platform"`
}

func (GetOsVersionsOsVersionVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOsVersionsOsVersionVersion)(nil)).Elem()
}

func (i GetOsVersionsOsVersionVersionArgs) ToGetOsVersionsOsVersionVersionOutput() GetOsVersionsOsVersionVersionOutput {
	return i.ToGetOsVersionsOsVersionVersionOutputWithContext(context.Background())
}

func (i GetOsVersionsOsVersionVersionArgs) ToGetOsVersionsOsVersionVersionOutputWithContext(ctx context.Context) GetOsVersionsOsVersionVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOsVersionsOsVersionVersionOutput)
}

// GetOsVersionsOsVersionVersionArrayInput is an input type that accepts GetOsVersionsOsVersionVersionArray and GetOsVersionsOsVersionVersionArrayOutput values.
// You can construct a concrete instance of `GetOsVersionsOsVersionVersionArrayInput` via:
//
//	GetOsVersionsOsVersionVersionArray{ GetOsVersionsOsVersionVersionArgs{...} }
type GetOsVersionsOsVersionVersionArrayInput interface {
	pulumi.Input

	ToGetOsVersionsOsVersionVersionArrayOutput() GetOsVersionsOsVersionVersionArrayOutput
	ToGetOsVersionsOsVersionVersionArrayOutputWithContext(context.Context) GetOsVersionsOsVersionVersionArrayOutput
}

type GetOsVersionsOsVersionVersionArray []GetOsVersionsOsVersionVersionInput

func (GetOsVersionsOsVersionVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOsVersionsOsVersionVersion)(nil)).Elem()
}

func (i GetOsVersionsOsVersionVersionArray) ToGetOsVersionsOsVersionVersionArrayOutput() GetOsVersionsOsVersionVersionArrayOutput {
	return i.ToGetOsVersionsOsVersionVersionArrayOutputWithContext(context.Background())
}

func (i GetOsVersionsOsVersionVersionArray) ToGetOsVersionsOsVersionVersionArrayOutputWithContext(ctx context.Context) GetOsVersionsOsVersionVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOsVersionsOsVersionVersionArrayOutput)
}

type GetOsVersionsOsVersionVersionOutput struct{ *pulumi.OutputState }

func (GetOsVersionsOsVersionVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOsVersionsOsVersionVersion)(nil)).Elem()
}

func (o GetOsVersionsOsVersionVersionOutput) ToGetOsVersionsOsVersionVersionOutput() GetOsVersionsOsVersionVersionOutput {
	return o
}

func (o GetOsVersionsOsVersionVersionOutput) ToGetOsVersionsOsVersionVersionOutputWithContext(ctx context.Context) GetOsVersionsOsVersionVersionOutput {
	return o
}

// The number of bits for the operating system.
func (o GetOsVersionsOsVersionVersionOutput) OsBit() pulumi.IntOutput {
	return o.ApplyT(func(v GetOsVersionsOsVersionVersion) int { return v.OsBit }).(pulumi.IntOutput)
}

// The type of operating system.
func (o GetOsVersionsOsVersionVersionOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOsVersionsOsVersionVersion) string { return v.OsType }).(pulumi.StringOutput)
}

// The complete information of the operating system.
func (o GetOsVersionsOsVersionVersionOutput) OsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetOsVersionsOsVersionVersion) string { return v.OsVersion }).(pulumi.StringOutput)
}

// The operating system key value.
// By default, the value of `osVersion` is taken as the `osVersionKey` value.
func (o GetOsVersionsOsVersionVersionOutput) OsVersionKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetOsVersionsOsVersionVersion) string { return v.OsVersionKey }).(pulumi.StringOutput)
}

// The operating system platform.
func (o GetOsVersionsOsVersionVersionOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetOsVersionsOsVersionVersion) string { return v.Platform }).(pulumi.StringOutput)
}

type GetOsVersionsOsVersionVersionArrayOutput struct{ *pulumi.OutputState }

func (GetOsVersionsOsVersionVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOsVersionsOsVersionVersion)(nil)).Elem()
}

func (o GetOsVersionsOsVersionVersionArrayOutput) ToGetOsVersionsOsVersionVersionArrayOutput() GetOsVersionsOsVersionVersionArrayOutput {
	return o
}

func (o GetOsVersionsOsVersionVersionArrayOutput) ToGetOsVersionsOsVersionVersionArrayOutputWithContext(ctx context.Context) GetOsVersionsOsVersionVersionArrayOutput {
	return o
}

func (o GetOsVersionsOsVersionVersionArrayOutput) Index(i pulumi.IntInput) GetOsVersionsOsVersionVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOsVersionsOsVersionVersion {
		return vs[0].([]GetOsVersionsOsVersionVersion)[vs[1].(int)]
	}).(GetOsVersionsOsVersionVersionOutput)
}

type GetQuotasQuota struct {
	// The quota resources.
	Resources []GetQuotasQuotaResource `pulumi:"resources"`
}

// GetQuotasQuotaInput is an input type that accepts GetQuotasQuotaArgs and GetQuotasQuotaOutput values.
// You can construct a concrete instance of `GetQuotasQuotaInput` via:
//
//	GetQuotasQuotaArgs{...}
type GetQuotasQuotaInput interface {
	pulumi.Input

	ToGetQuotasQuotaOutput() GetQuotasQuotaOutput
	ToGetQuotasQuotaOutputWithContext(context.Context) GetQuotasQuotaOutput
}

type GetQuotasQuotaArgs struct {
	// The quota resources.
	Resources GetQuotasQuotaResourceArrayInput `pulumi:"resources"`
}

func (GetQuotasQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasQuota)(nil)).Elem()
}

func (i GetQuotasQuotaArgs) ToGetQuotasQuotaOutput() GetQuotasQuotaOutput {
	return i.ToGetQuotasQuotaOutputWithContext(context.Background())
}

func (i GetQuotasQuotaArgs) ToGetQuotasQuotaOutputWithContext(ctx context.Context) GetQuotasQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotasQuotaOutput)
}

// GetQuotasQuotaArrayInput is an input type that accepts GetQuotasQuotaArray and GetQuotasQuotaArrayOutput values.
// You can construct a concrete instance of `GetQuotasQuotaArrayInput` via:
//
//	GetQuotasQuotaArray{ GetQuotasQuotaArgs{...} }
type GetQuotasQuotaArrayInput interface {
	pulumi.Input

	ToGetQuotasQuotaArrayOutput() GetQuotasQuotaArrayOutput
	ToGetQuotasQuotaArrayOutputWithContext(context.Context) GetQuotasQuotaArrayOutput
}

type GetQuotasQuotaArray []GetQuotasQuotaInput

func (GetQuotasQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotasQuota)(nil)).Elem()
}

func (i GetQuotasQuotaArray) ToGetQuotasQuotaArrayOutput() GetQuotasQuotaArrayOutput {
	return i.ToGetQuotasQuotaArrayOutputWithContext(context.Background())
}

func (i GetQuotasQuotaArray) ToGetQuotasQuotaArrayOutputWithContext(ctx context.Context) GetQuotasQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotasQuotaArrayOutput)
}

type GetQuotasQuotaOutput struct{ *pulumi.OutputState }

func (GetQuotasQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasQuota)(nil)).Elem()
}

func (o GetQuotasQuotaOutput) ToGetQuotasQuotaOutput() GetQuotasQuotaOutput {
	return o
}

func (o GetQuotasQuotaOutput) ToGetQuotasQuotaOutputWithContext(ctx context.Context) GetQuotasQuotaOutput {
	return o
}

// The quota resources.
func (o GetQuotasQuotaOutput) Resources() GetQuotasQuotaResourceArrayOutput {
	return o.ApplyT(func(v GetQuotasQuota) []GetQuotasQuotaResource { return v.Resources }).(GetQuotasQuotaResourceArrayOutput)
}

type GetQuotasQuotaArrayOutput struct{ *pulumi.OutputState }

func (GetQuotasQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotasQuota)(nil)).Elem()
}

func (o GetQuotasQuotaArrayOutput) ToGetQuotasQuotaArrayOutput() GetQuotasQuotaArrayOutput {
	return o
}

func (o GetQuotasQuotaArrayOutput) ToGetQuotasQuotaArrayOutputWithContext(ctx context.Context) GetQuotasQuotaArrayOutput {
	return o
}

func (o GetQuotasQuotaArrayOutput) Index(i pulumi.IntInput) GetQuotasQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuotasQuota {
		return vs[0].([]GetQuotasQuota)[vs[1].(int)]
	}).(GetQuotasQuotaOutput)
}

type GetQuotasQuotaResource struct {
	// The maximum quota of resources.
	Max int `pulumi:"max"`
	// The minimum quota of resources.
	Min int `pulumi:"min"`
	// The total quota of resources.
	Quota int `pulumi:"quota"`
	// The resource type. The valid value is **image**.
	Type string `pulumi:"type"`
	// The number of resource quotas already in use.
	Used int `pulumi:"used"`
}

// GetQuotasQuotaResourceInput is an input type that accepts GetQuotasQuotaResourceArgs and GetQuotasQuotaResourceOutput values.
// You can construct a concrete instance of `GetQuotasQuotaResourceInput` via:
//
//	GetQuotasQuotaResourceArgs{...}
type GetQuotasQuotaResourceInput interface {
	pulumi.Input

	ToGetQuotasQuotaResourceOutput() GetQuotasQuotaResourceOutput
	ToGetQuotasQuotaResourceOutputWithContext(context.Context) GetQuotasQuotaResourceOutput
}

type GetQuotasQuotaResourceArgs struct {
	// The maximum quota of resources.
	Max pulumi.IntInput `pulumi:"max"`
	// The minimum quota of resources.
	Min pulumi.IntInput `pulumi:"min"`
	// The total quota of resources.
	Quota pulumi.IntInput `pulumi:"quota"`
	// The resource type. The valid value is **image**.
	Type pulumi.StringInput `pulumi:"type"`
	// The number of resource quotas already in use.
	Used pulumi.IntInput `pulumi:"used"`
}

func (GetQuotasQuotaResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasQuotaResource)(nil)).Elem()
}

func (i GetQuotasQuotaResourceArgs) ToGetQuotasQuotaResourceOutput() GetQuotasQuotaResourceOutput {
	return i.ToGetQuotasQuotaResourceOutputWithContext(context.Background())
}

func (i GetQuotasQuotaResourceArgs) ToGetQuotasQuotaResourceOutputWithContext(ctx context.Context) GetQuotasQuotaResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotasQuotaResourceOutput)
}

// GetQuotasQuotaResourceArrayInput is an input type that accepts GetQuotasQuotaResourceArray and GetQuotasQuotaResourceArrayOutput values.
// You can construct a concrete instance of `GetQuotasQuotaResourceArrayInput` via:
//
//	GetQuotasQuotaResourceArray{ GetQuotasQuotaResourceArgs{...} }
type GetQuotasQuotaResourceArrayInput interface {
	pulumi.Input

	ToGetQuotasQuotaResourceArrayOutput() GetQuotasQuotaResourceArrayOutput
	ToGetQuotasQuotaResourceArrayOutputWithContext(context.Context) GetQuotasQuotaResourceArrayOutput
}

type GetQuotasQuotaResourceArray []GetQuotasQuotaResourceInput

func (GetQuotasQuotaResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotasQuotaResource)(nil)).Elem()
}

func (i GetQuotasQuotaResourceArray) ToGetQuotasQuotaResourceArrayOutput() GetQuotasQuotaResourceArrayOutput {
	return i.ToGetQuotasQuotaResourceArrayOutputWithContext(context.Background())
}

func (i GetQuotasQuotaResourceArray) ToGetQuotasQuotaResourceArrayOutputWithContext(ctx context.Context) GetQuotasQuotaResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotasQuotaResourceArrayOutput)
}

type GetQuotasQuotaResourceOutput struct{ *pulumi.OutputState }

func (GetQuotasQuotaResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasQuotaResource)(nil)).Elem()
}

func (o GetQuotasQuotaResourceOutput) ToGetQuotasQuotaResourceOutput() GetQuotasQuotaResourceOutput {
	return o
}

func (o GetQuotasQuotaResourceOutput) ToGetQuotasQuotaResourceOutputWithContext(ctx context.Context) GetQuotasQuotaResourceOutput {
	return o
}

// The maximum quota of resources.
func (o GetQuotasQuotaResourceOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v GetQuotasQuotaResource) int { return v.Max }).(pulumi.IntOutput)
}

// The minimum quota of resources.
func (o GetQuotasQuotaResourceOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v GetQuotasQuotaResource) int { return v.Min }).(pulumi.IntOutput)
}

// The total quota of resources.
func (o GetQuotasQuotaResourceOutput) Quota() pulumi.IntOutput {
	return o.ApplyT(func(v GetQuotasQuotaResource) int { return v.Quota }).(pulumi.IntOutput)
}

// The resource type. The valid value is **image**.
func (o GetQuotasQuotaResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuotaResource) string { return v.Type }).(pulumi.StringOutput)
}

// The number of resource quotas already in use.
func (o GetQuotasQuotaResourceOutput) Used() pulumi.IntOutput {
	return o.ApplyT(func(v GetQuotasQuotaResource) int { return v.Used }).(pulumi.IntOutput)
}

type GetQuotasQuotaResourceArrayOutput struct{ *pulumi.OutputState }

func (GetQuotasQuotaResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotasQuotaResource)(nil)).Elem()
}

func (o GetQuotasQuotaResourceArrayOutput) ToGetQuotasQuotaResourceArrayOutput() GetQuotasQuotaResourceArrayOutput {
	return o
}

func (o GetQuotasQuotaResourceArrayOutput) ToGetQuotasQuotaResourceArrayOutputWithContext(ctx context.Context) GetQuotasQuotaResourceArrayOutput {
	return o
}

func (o GetQuotasQuotaResourceArrayOutput) Index(i pulumi.IntInput) GetQuotasQuotaResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuotasQuotaResource {
		return vs[0].([]GetQuotasQuotaResource)[vs[1].(int)]
	}).(GetQuotasQuotaResourceOutput)
}

type GetTagsTag struct {
	// The key of the tag.
	Key string `pulumi:"key"`
	// The value list of the tag. If the tag has only a key, it appears as an empty string in the value list.
	Values []string `pulumi:"values"`
}

// GetTagsTagInput is an input type that accepts GetTagsTagArgs and GetTagsTagOutput values.
// You can construct a concrete instance of `GetTagsTagInput` via:
//
//	GetTagsTagArgs{...}
type GetTagsTagInput interface {
	pulumi.Input

	ToGetTagsTagOutput() GetTagsTagOutput
	ToGetTagsTagOutputWithContext(context.Context) GetTagsTagOutput
}

type GetTagsTagArgs struct {
	// The key of the tag.
	Key pulumi.StringInput `pulumi:"key"`
	// The value list of the tag. If the tag has only a key, it appears as an empty string in the value list.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTag)(nil)).Elem()
}

func (i GetTagsTagArgs) ToGetTagsTagOutput() GetTagsTagOutput {
	return i.ToGetTagsTagOutputWithContext(context.Background())
}

func (i GetTagsTagArgs) ToGetTagsTagOutputWithContext(ctx context.Context) GetTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagOutput)
}

// GetTagsTagArrayInput is an input type that accepts GetTagsTagArray and GetTagsTagArrayOutput values.
// You can construct a concrete instance of `GetTagsTagArrayInput` via:
//
//	GetTagsTagArray{ GetTagsTagArgs{...} }
type GetTagsTagArrayInput interface {
	pulumi.Input

	ToGetTagsTagArrayOutput() GetTagsTagArrayOutput
	ToGetTagsTagArrayOutputWithContext(context.Context) GetTagsTagArrayOutput
}

type GetTagsTagArray []GetTagsTagInput

func (GetTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTag)(nil)).Elem()
}

func (i GetTagsTagArray) ToGetTagsTagArrayOutput() GetTagsTagArrayOutput {
	return i.ToGetTagsTagArrayOutputWithContext(context.Background())
}

func (i GetTagsTagArray) ToGetTagsTagArrayOutputWithContext(ctx context.Context) GetTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagArrayOutput)
}

type GetTagsTagOutput struct{ *pulumi.OutputState }

func (GetTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTag)(nil)).Elem()
}

func (o GetTagsTagOutput) ToGetTagsTagOutput() GetTagsTagOutput {
	return o
}

func (o GetTagsTagOutput) ToGetTagsTagOutputWithContext(ctx context.Context) GetTagsTagOutput {
	return o
}

// The key of the tag.
func (o GetTagsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value list of the tag. If the tag has only a key, it appears as an empty string in the value list.
func (o GetTagsTagOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTagsTag) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetTagsTagArrayOutput struct{ *pulumi.OutputState }

func (GetTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTag)(nil)).Elem()
}

func (o GetTagsTagArrayOutput) ToGetTagsTagArrayOutput() GetTagsTagArrayOutput {
	return o
}

func (o GetTagsTagArrayOutput) ToGetTagsTagArrayOutputWithContext(ctx context.Context) GetTagsTagArrayOutput {
	return o
}

func (o GetTagsTagArrayOutput) Index(i pulumi.IntInput) GetTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagsTag {
		return vs[0].([]GetTagsTag)[vs[1].(int)]
	}).(GetTagsTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageInput)(nil)).Elem(), GetImagesImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageArrayInput)(nil)).Elem(), GetImagesImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOsVersionsOsVersionInput)(nil)).Elem(), GetOsVersionsOsVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOsVersionsOsVersionArrayInput)(nil)).Elem(), GetOsVersionsOsVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOsVersionsOsVersionVersionInput)(nil)).Elem(), GetOsVersionsOsVersionVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOsVersionsOsVersionVersionArrayInput)(nil)).Elem(), GetOsVersionsOsVersionVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuotasQuotaInput)(nil)).Elem(), GetQuotasQuotaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuotasQuotaArrayInput)(nil)).Elem(), GetQuotasQuotaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuotasQuotaResourceInput)(nil)).Elem(), GetQuotasQuotaResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuotasQuotaResourceArrayInput)(nil)).Elem(), GetQuotasQuotaResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagInput)(nil)).Elem(), GetTagsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagArrayInput)(nil)).Elem(), GetTagsTagArray{})
	pulumi.RegisterOutputType(GetImagesImageOutput{})
	pulumi.RegisterOutputType(GetImagesImageArrayOutput{})
	pulumi.RegisterOutputType(GetOsVersionsOsVersionOutput{})
	pulumi.RegisterOutputType(GetOsVersionsOsVersionArrayOutput{})
	pulumi.RegisterOutputType(GetOsVersionsOsVersionVersionOutput{})
	pulumi.RegisterOutputType(GetOsVersionsOsVersionVersionArrayOutput{})
	pulumi.RegisterOutputType(GetQuotasQuotaOutput{})
	pulumi.RegisterOutputType(GetQuotasQuotaArrayOutput{})
	pulumi.RegisterOutputType(GetQuotasQuotaResourceOutput{})
	pulumi.RegisterOutputType(GetQuotasQuotaResourceArrayOutput{})
	pulumi.RegisterOutputType(GetTagsTagOutput{})
	pulumi.RegisterOutputType(GetTagsTagArrayOutput{})
}
