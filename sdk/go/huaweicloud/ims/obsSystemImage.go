// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ims

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an IMS system image resource created from external image file in the OBS bucket within HuaweiCloud.
//
// ## Example Usage
// ### Creating an IMS system image from an external image file in the OBS bucket
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Ims"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := cfg.RequireObject("name")
//			imageUrl := cfg.RequireObject("imageUrl")
//			minDisk := cfg.RequireObject("minDisk")
//			_, err := Ims.NewObsSystemImage(ctx, "test", &Ims.ObsSystemImageArgs{
//				ImageUrl: pulumi.Any(imageUrl),
//				MinDisk:  pulumi.Any(minDisk),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The IMS OBS system image resource can be imported using the `id`, e.g. bash
//
// ```sh
//
//	$ pulumi import huaweicloud:Ims/obsSystemImage:ObsSystemImage test <id>
//
// ```
//
//	Note that the imported state may not be identical to your resource definition, due to some attributes missing from the API response, security or some other reason. The missing attributes include`type`, `is_config`, `is_quick_import`. It is generally recommended running `terraform plan` after importing the resource. You can then decide if changes should be applied to the resource, or the resource definition should be updated to align with the image. Also, you can ignore changes as below. resource "huaweicloud_ims_obs_system_image" "test" {
//
//	...
//
//	lifecycle {
//
//	ignore_changes = [
//
//	type, is_config, is_quick_import,
//
//	]
//
//	} }
type ObsSystemImage struct {
	pulumi.CustomResourceState

	// The time when the image status changes to active, in RFC3339 format.
	ActiveAt pulumi.StringOutput `pulumi:"activeAt"`
	// Specifies the schema type of the image. The value can be **x86** or
	// **arm**. Defaults to **x86**. Changing this parameter will create a new resource.
	Architecture pulumi.StringOutput `pulumi:"architecture"`
	// Specifies the custom key for creating encrypted image.
	// Changing this parameter will create a new resource.
	CmkId pulumi.StringOutput `pulumi:"cmkId"`
	// The creation time of the image, in RFC3339 format.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The image source. The format is **file,image_url**.
	DataOrigin pulumi.StringOutput `pulumi:"dataOrigin"`
	// Specifies the description of the image.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The image format. The value can be **zvhd2**, **vhd**, **zvhd**, **raw**, or **qcow2**.
	DiskFormat pulumi.StringOutput `pulumi:"diskFormat"`
	// Specifies the enterprise project ID to which the IMS image belongs.
	// For enterprise users, if omitted, default enterprise project will be used.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// The size of the image file, in bytes unit.
	ImageSize pulumi.StringOutput `pulumi:"imageSize"`
	// Specifies the URL of the external image file in the OBS bucket, the format
	// is **OBS bucket name:image file name**. Changing this parameter will create a new resource.
	ImageUrl pulumi.StringOutput `pulumi:"imageUrl"`
	// Specifies whether to automatically configure. The value can be **true** or
	// **false**. Defaults to **false**. Changing this parameter will create a new resource.
	// About the content of automatic backend configuration, please refer to
	// [API docs](https://support.huaweicloud.com/intl/en-us/ims_faq/ims_faq_0020.html).
	IsConfig pulumi.BoolPtrOutput `pulumi:"isConfig"`
	// Specifies whether to use the image file quick import method to create
	// an image. The value can be **true** or **false**. Changing this parameter will create a new resource.
	// For constraints and limitations on fast import of image files,
	// please refer to [API docs](https://support.huaweicloud.com/intl/en-us/api-ims/ims_03_0605.html).
	IsQuickImport pulumi.BoolPtrOutput `pulumi:"isQuickImport"`
	// Specifies the maximum memory of the image, in MB unit.
	MaxRam pulumi.IntOutput `pulumi:"maxRam"`
	// Specifies the minimum size of the system disk, in GB unit.
	// Changing this parameter will create a new resource.
	// + When the operating system is Linux, the value ranges from `10` to `1,024`.
	// + When the operating system is Windows, the value ranges from `20` to `1,024`.
	MinDisk pulumi.IntOutput `pulumi:"minDisk"`
	// Specifies the minimum memory of the image, in MB unit.
	MinRam pulumi.IntOutput `pulumi:"minRam"`
	// Specifies the name of the image.
	// The valid length is limited from `1` to `128` characters.
	// The first and last letters of the name cannot be spaces.
	// The name can contain uppercase letters, lowercase letters, numbers, spaces, chinese, and special characters (-._).
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the operating system type of the image. The value can be
	// **Windows** or **Linux**. Changing this parameter will create a new resource.
	OsType pulumi.StringOutput `pulumi:"osType"`
	// Specifies the operating system version of the image. This field is
	// required when `isQuickImport` set to **true**. Changing this parameter will create a new resource.
	// For its values, see [API docs](https://support.huaweicloud.com/intl/en-us/api-ims/ims_03_0910.html).
	OsVersion pulumi.StringOutput `pulumi:"osVersion"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// The status of the image. The value can be **active**, **queued**, **saving**, **deleted**, or **killed*,
	// only image with a status of **active** can be used.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the key/value pairs to associate with the image.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the image type. The value can be **ECS**, **FusionCompute**, **BMS**,
	// or **Ironic**. Defaults to **ECS**. Changing this parameter will create a new resource.
	// + Set to **ECS** or **FusionCompute** represent the creation of ECS server image.
	// + Set to **BMS** or **Ironic** represent the creation of BMS server image.
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// The last update time of the image, in RFC3339 format.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// Whether the image is visible to other tenants.
	Visibility pulumi.StringOutput `pulumi:"visibility"`
}

// NewObsSystemImage registers a new resource with the given unique name, arguments, and options.
func NewObsSystemImage(ctx *pulumi.Context,
	name string, args *ObsSystemImageArgs, opts ...pulumi.ResourceOption) (*ObsSystemImage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ImageUrl == nil {
		return nil, errors.New("invalid value for required argument 'ImageUrl'")
	}
	if args.MinDisk == nil {
		return nil, errors.New("invalid value for required argument 'MinDisk'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ObsSystemImage
	err := ctx.RegisterResource("huaweicloud:Ims/obsSystemImage:ObsSystemImage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObsSystemImage gets an existing ObsSystemImage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObsSystemImage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObsSystemImageState, opts ...pulumi.ResourceOption) (*ObsSystemImage, error) {
	var resource ObsSystemImage
	err := ctx.ReadResource("huaweicloud:Ims/obsSystemImage:ObsSystemImage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObsSystemImage resources.
type obsSystemImageState struct {
	// The time when the image status changes to active, in RFC3339 format.
	ActiveAt *string `pulumi:"activeAt"`
	// Specifies the schema type of the image. The value can be **x86** or
	// **arm**. Defaults to **x86**. Changing this parameter will create a new resource.
	Architecture *string `pulumi:"architecture"`
	// Specifies the custom key for creating encrypted image.
	// Changing this parameter will create a new resource.
	CmkId *string `pulumi:"cmkId"`
	// The creation time of the image, in RFC3339 format.
	CreatedAt *string `pulumi:"createdAt"`
	// The image source. The format is **file,image_url**.
	DataOrigin *string `pulumi:"dataOrigin"`
	// Specifies the description of the image.
	Description *string `pulumi:"description"`
	// The image format. The value can be **zvhd2**, **vhd**, **zvhd**, **raw**, or **qcow2**.
	DiskFormat *string `pulumi:"diskFormat"`
	// Specifies the enterprise project ID to which the IMS image belongs.
	// For enterprise users, if omitted, default enterprise project will be used.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The size of the image file, in bytes unit.
	ImageSize *string `pulumi:"imageSize"`
	// Specifies the URL of the external image file in the OBS bucket, the format
	// is **OBS bucket name:image file name**. Changing this parameter will create a new resource.
	ImageUrl *string `pulumi:"imageUrl"`
	// Specifies whether to automatically configure. The value can be **true** or
	// **false**. Defaults to **false**. Changing this parameter will create a new resource.
	// About the content of automatic backend configuration, please refer to
	// [API docs](https://support.huaweicloud.com/intl/en-us/ims_faq/ims_faq_0020.html).
	IsConfig *bool `pulumi:"isConfig"`
	// Specifies whether to use the image file quick import method to create
	// an image. The value can be **true** or **false**. Changing this parameter will create a new resource.
	// For constraints and limitations on fast import of image files,
	// please refer to [API docs](https://support.huaweicloud.com/intl/en-us/api-ims/ims_03_0605.html).
	IsQuickImport *bool `pulumi:"isQuickImport"`
	// Specifies the maximum memory of the image, in MB unit.
	MaxRam *int `pulumi:"maxRam"`
	// Specifies the minimum size of the system disk, in GB unit.
	// Changing this parameter will create a new resource.
	// + When the operating system is Linux, the value ranges from `10` to `1,024`.
	// + When the operating system is Windows, the value ranges from `20` to `1,024`.
	MinDisk *int `pulumi:"minDisk"`
	// Specifies the minimum memory of the image, in MB unit.
	MinRam *int `pulumi:"minRam"`
	// Specifies the name of the image.
	// The valid length is limited from `1` to `128` characters.
	// The first and last letters of the name cannot be spaces.
	// The name can contain uppercase letters, lowercase letters, numbers, spaces, chinese, and special characters (-._).
	Name *string `pulumi:"name"`
	// Specifies the operating system type of the image. The value can be
	// **Windows** or **Linux**. Changing this parameter will create a new resource.
	OsType *string `pulumi:"osType"`
	// Specifies the operating system version of the image. This field is
	// required when `isQuickImport` set to **true**. Changing this parameter will create a new resource.
	// For its values, see [API docs](https://support.huaweicloud.com/intl/en-us/api-ims/ims_03_0910.html).
	OsVersion *string `pulumi:"osVersion"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// The status of the image. The value can be **active**, **queued**, **saving**, **deleted**, or **killed*,
	// only image with a status of **active** can be used.
	Status *string `pulumi:"status"`
	// Specifies the key/value pairs to associate with the image.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the image type. The value can be **ECS**, **FusionCompute**, **BMS**,
	// or **Ironic**. Defaults to **ECS**. Changing this parameter will create a new resource.
	// + Set to **ECS** or **FusionCompute** represent the creation of ECS server image.
	// + Set to **BMS** or **Ironic** represent the creation of BMS server image.
	Type *string `pulumi:"type"`
	// The last update time of the image, in RFC3339 format.
	UpdatedAt *string `pulumi:"updatedAt"`
	// Whether the image is visible to other tenants.
	Visibility *string `pulumi:"visibility"`
}

type ObsSystemImageState struct {
	// The time when the image status changes to active, in RFC3339 format.
	ActiveAt pulumi.StringPtrInput
	// Specifies the schema type of the image. The value can be **x86** or
	// **arm**. Defaults to **x86**. Changing this parameter will create a new resource.
	Architecture pulumi.StringPtrInput
	// Specifies the custom key for creating encrypted image.
	// Changing this parameter will create a new resource.
	CmkId pulumi.StringPtrInput
	// The creation time of the image, in RFC3339 format.
	CreatedAt pulumi.StringPtrInput
	// The image source. The format is **file,image_url**.
	DataOrigin pulumi.StringPtrInput
	// Specifies the description of the image.
	Description pulumi.StringPtrInput
	// The image format. The value can be **zvhd2**, **vhd**, **zvhd**, **raw**, or **qcow2**.
	DiskFormat pulumi.StringPtrInput
	// Specifies the enterprise project ID to which the IMS image belongs.
	// For enterprise users, if omitted, default enterprise project will be used.
	EnterpriseProjectId pulumi.StringPtrInput
	// The size of the image file, in bytes unit.
	ImageSize pulumi.StringPtrInput
	// Specifies the URL of the external image file in the OBS bucket, the format
	// is **OBS bucket name:image file name**. Changing this parameter will create a new resource.
	ImageUrl pulumi.StringPtrInput
	// Specifies whether to automatically configure. The value can be **true** or
	// **false**. Defaults to **false**. Changing this parameter will create a new resource.
	// About the content of automatic backend configuration, please refer to
	// [API docs](https://support.huaweicloud.com/intl/en-us/ims_faq/ims_faq_0020.html).
	IsConfig pulumi.BoolPtrInput
	// Specifies whether to use the image file quick import method to create
	// an image. The value can be **true** or **false**. Changing this parameter will create a new resource.
	// For constraints and limitations on fast import of image files,
	// please refer to [API docs](https://support.huaweicloud.com/intl/en-us/api-ims/ims_03_0605.html).
	IsQuickImport pulumi.BoolPtrInput
	// Specifies the maximum memory of the image, in MB unit.
	MaxRam pulumi.IntPtrInput
	// Specifies the minimum size of the system disk, in GB unit.
	// Changing this parameter will create a new resource.
	// + When the operating system is Linux, the value ranges from `10` to `1,024`.
	// + When the operating system is Windows, the value ranges from `20` to `1,024`.
	MinDisk pulumi.IntPtrInput
	// Specifies the minimum memory of the image, in MB unit.
	MinRam pulumi.IntPtrInput
	// Specifies the name of the image.
	// The valid length is limited from `1` to `128` characters.
	// The first and last letters of the name cannot be spaces.
	// The name can contain uppercase letters, lowercase letters, numbers, spaces, chinese, and special characters (-._).
	Name pulumi.StringPtrInput
	// Specifies the operating system type of the image. The value can be
	// **Windows** or **Linux**. Changing this parameter will create a new resource.
	OsType pulumi.StringPtrInput
	// Specifies the operating system version of the image. This field is
	// required when `isQuickImport` set to **true**. Changing this parameter will create a new resource.
	// For its values, see [API docs](https://support.huaweicloud.com/intl/en-us/api-ims/ims_03_0910.html).
	OsVersion pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// The status of the image. The value can be **active**, **queued**, **saving**, **deleted**, or **killed*,
	// only image with a status of **active** can be used.
	Status pulumi.StringPtrInput
	// Specifies the key/value pairs to associate with the image.
	Tags pulumi.StringMapInput
	// Specifies the image type. The value can be **ECS**, **FusionCompute**, **BMS**,
	// or **Ironic**. Defaults to **ECS**. Changing this parameter will create a new resource.
	// + Set to **ECS** or **FusionCompute** represent the creation of ECS server image.
	// + Set to **BMS** or **Ironic** represent the creation of BMS server image.
	Type pulumi.StringPtrInput
	// The last update time of the image, in RFC3339 format.
	UpdatedAt pulumi.StringPtrInput
	// Whether the image is visible to other tenants.
	Visibility pulumi.StringPtrInput
}

func (ObsSystemImageState) ElementType() reflect.Type {
	return reflect.TypeOf((*obsSystemImageState)(nil)).Elem()
}

type obsSystemImageArgs struct {
	// Specifies the schema type of the image. The value can be **x86** or
	// **arm**. Defaults to **x86**. Changing this parameter will create a new resource.
	Architecture *string `pulumi:"architecture"`
	// Specifies the custom key for creating encrypted image.
	// Changing this parameter will create a new resource.
	CmkId *string `pulumi:"cmkId"`
	// Specifies the description of the image.
	Description *string `pulumi:"description"`
	// Specifies the enterprise project ID to which the IMS image belongs.
	// For enterprise users, if omitted, default enterprise project will be used.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the URL of the external image file in the OBS bucket, the format
	// is **OBS bucket name:image file name**. Changing this parameter will create a new resource.
	ImageUrl string `pulumi:"imageUrl"`
	// Specifies whether to automatically configure. The value can be **true** or
	// **false**. Defaults to **false**. Changing this parameter will create a new resource.
	// About the content of automatic backend configuration, please refer to
	// [API docs](https://support.huaweicloud.com/intl/en-us/ims_faq/ims_faq_0020.html).
	IsConfig *bool `pulumi:"isConfig"`
	// Specifies whether to use the image file quick import method to create
	// an image. The value can be **true** or **false**. Changing this parameter will create a new resource.
	// For constraints and limitations on fast import of image files,
	// please refer to [API docs](https://support.huaweicloud.com/intl/en-us/api-ims/ims_03_0605.html).
	IsQuickImport *bool `pulumi:"isQuickImport"`
	// Specifies the maximum memory of the image, in MB unit.
	MaxRam *int `pulumi:"maxRam"`
	// Specifies the minimum size of the system disk, in GB unit.
	// Changing this parameter will create a new resource.
	// + When the operating system is Linux, the value ranges from `10` to `1,024`.
	// + When the operating system is Windows, the value ranges from `20` to `1,024`.
	MinDisk int `pulumi:"minDisk"`
	// Specifies the minimum memory of the image, in MB unit.
	MinRam *int `pulumi:"minRam"`
	// Specifies the name of the image.
	// The valid length is limited from `1` to `128` characters.
	// The first and last letters of the name cannot be spaces.
	// The name can contain uppercase letters, lowercase letters, numbers, spaces, chinese, and special characters (-._).
	Name *string `pulumi:"name"`
	// Specifies the operating system type of the image. The value can be
	// **Windows** or **Linux**. Changing this parameter will create a new resource.
	OsType *string `pulumi:"osType"`
	// Specifies the operating system version of the image. This field is
	// required when `isQuickImport` set to **true**. Changing this parameter will create a new resource.
	// For its values, see [API docs](https://support.huaweicloud.com/intl/en-us/api-ims/ims_03_0910.html).
	OsVersion *string `pulumi:"osVersion"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// Specifies the key/value pairs to associate with the image.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the image type. The value can be **ECS**, **FusionCompute**, **BMS**,
	// or **Ironic**. Defaults to **ECS**. Changing this parameter will create a new resource.
	// + Set to **ECS** or **FusionCompute** represent the creation of ECS server image.
	// + Set to **BMS** or **Ironic** represent the creation of BMS server image.
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a ObsSystemImage resource.
type ObsSystemImageArgs struct {
	// Specifies the schema type of the image. The value can be **x86** or
	// **arm**. Defaults to **x86**. Changing this parameter will create a new resource.
	Architecture pulumi.StringPtrInput
	// Specifies the custom key for creating encrypted image.
	// Changing this parameter will create a new resource.
	CmkId pulumi.StringPtrInput
	// Specifies the description of the image.
	Description pulumi.StringPtrInput
	// Specifies the enterprise project ID to which the IMS image belongs.
	// For enterprise users, if omitted, default enterprise project will be used.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the URL of the external image file in the OBS bucket, the format
	// is **OBS bucket name:image file name**. Changing this parameter will create a new resource.
	ImageUrl pulumi.StringInput
	// Specifies whether to automatically configure. The value can be **true** or
	// **false**. Defaults to **false**. Changing this parameter will create a new resource.
	// About the content of automatic backend configuration, please refer to
	// [API docs](https://support.huaweicloud.com/intl/en-us/ims_faq/ims_faq_0020.html).
	IsConfig pulumi.BoolPtrInput
	// Specifies whether to use the image file quick import method to create
	// an image. The value can be **true** or **false**. Changing this parameter will create a new resource.
	// For constraints and limitations on fast import of image files,
	// please refer to [API docs](https://support.huaweicloud.com/intl/en-us/api-ims/ims_03_0605.html).
	IsQuickImport pulumi.BoolPtrInput
	// Specifies the maximum memory of the image, in MB unit.
	MaxRam pulumi.IntPtrInput
	// Specifies the minimum size of the system disk, in GB unit.
	// Changing this parameter will create a new resource.
	// + When the operating system is Linux, the value ranges from `10` to `1,024`.
	// + When the operating system is Windows, the value ranges from `20` to `1,024`.
	MinDisk pulumi.IntInput
	// Specifies the minimum memory of the image, in MB unit.
	MinRam pulumi.IntPtrInput
	// Specifies the name of the image.
	// The valid length is limited from `1` to `128` characters.
	// The first and last letters of the name cannot be spaces.
	// The name can contain uppercase letters, lowercase letters, numbers, spaces, chinese, and special characters (-._).
	Name pulumi.StringPtrInput
	// Specifies the operating system type of the image. The value can be
	// **Windows** or **Linux**. Changing this parameter will create a new resource.
	OsType pulumi.StringPtrInput
	// Specifies the operating system version of the image. This field is
	// required when `isQuickImport` set to **true**. Changing this parameter will create a new resource.
	// For its values, see [API docs](https://support.huaweicloud.com/intl/en-us/api-ims/ims_03_0910.html).
	OsVersion pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// Specifies the key/value pairs to associate with the image.
	Tags pulumi.StringMapInput
	// Specifies the image type. The value can be **ECS**, **FusionCompute**, **BMS**,
	// or **Ironic**. Defaults to **ECS**. Changing this parameter will create a new resource.
	// + Set to **ECS** or **FusionCompute** represent the creation of ECS server image.
	// + Set to **BMS** or **Ironic** represent the creation of BMS server image.
	Type pulumi.StringPtrInput
}

func (ObsSystemImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*obsSystemImageArgs)(nil)).Elem()
}

type ObsSystemImageInput interface {
	pulumi.Input

	ToObsSystemImageOutput() ObsSystemImageOutput
	ToObsSystemImageOutputWithContext(ctx context.Context) ObsSystemImageOutput
}

func (*ObsSystemImage) ElementType() reflect.Type {
	return reflect.TypeOf((**ObsSystemImage)(nil)).Elem()
}

func (i *ObsSystemImage) ToObsSystemImageOutput() ObsSystemImageOutput {
	return i.ToObsSystemImageOutputWithContext(context.Background())
}

func (i *ObsSystemImage) ToObsSystemImageOutputWithContext(ctx context.Context) ObsSystemImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsSystemImageOutput)
}

// ObsSystemImageArrayInput is an input type that accepts ObsSystemImageArray and ObsSystemImageArrayOutput values.
// You can construct a concrete instance of `ObsSystemImageArrayInput` via:
//
//	ObsSystemImageArray{ ObsSystemImageArgs{...} }
type ObsSystemImageArrayInput interface {
	pulumi.Input

	ToObsSystemImageArrayOutput() ObsSystemImageArrayOutput
	ToObsSystemImageArrayOutputWithContext(context.Context) ObsSystemImageArrayOutput
}

type ObsSystemImageArray []ObsSystemImageInput

func (ObsSystemImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObsSystemImage)(nil)).Elem()
}

func (i ObsSystemImageArray) ToObsSystemImageArrayOutput() ObsSystemImageArrayOutput {
	return i.ToObsSystemImageArrayOutputWithContext(context.Background())
}

func (i ObsSystemImageArray) ToObsSystemImageArrayOutputWithContext(ctx context.Context) ObsSystemImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsSystemImageArrayOutput)
}

// ObsSystemImageMapInput is an input type that accepts ObsSystemImageMap and ObsSystemImageMapOutput values.
// You can construct a concrete instance of `ObsSystemImageMapInput` via:
//
//	ObsSystemImageMap{ "key": ObsSystemImageArgs{...} }
type ObsSystemImageMapInput interface {
	pulumi.Input

	ToObsSystemImageMapOutput() ObsSystemImageMapOutput
	ToObsSystemImageMapOutputWithContext(context.Context) ObsSystemImageMapOutput
}

type ObsSystemImageMap map[string]ObsSystemImageInput

func (ObsSystemImageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObsSystemImage)(nil)).Elem()
}

func (i ObsSystemImageMap) ToObsSystemImageMapOutput() ObsSystemImageMapOutput {
	return i.ToObsSystemImageMapOutputWithContext(context.Background())
}

func (i ObsSystemImageMap) ToObsSystemImageMapOutputWithContext(ctx context.Context) ObsSystemImageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObsSystemImageMapOutput)
}

type ObsSystemImageOutput struct{ *pulumi.OutputState }

func (ObsSystemImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObsSystemImage)(nil)).Elem()
}

func (o ObsSystemImageOutput) ToObsSystemImageOutput() ObsSystemImageOutput {
	return o
}

func (o ObsSystemImageOutput) ToObsSystemImageOutputWithContext(ctx context.Context) ObsSystemImageOutput {
	return o
}

// The time when the image status changes to active, in RFC3339 format.
func (o ObsSystemImageOutput) ActiveAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringOutput { return v.ActiveAt }).(pulumi.StringOutput)
}

// Specifies the schema type of the image. The value can be **x86** or
// **arm**. Defaults to **x86**. Changing this parameter will create a new resource.
func (o ObsSystemImageOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringOutput { return v.Architecture }).(pulumi.StringOutput)
}

// Specifies the custom key for creating encrypted image.
// Changing this parameter will create a new resource.
func (o ObsSystemImageOutput) CmkId() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringOutput { return v.CmkId }).(pulumi.StringOutput)
}

// The creation time of the image, in RFC3339 format.
func (o ObsSystemImageOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The image source. The format is **file,image_url**.
func (o ObsSystemImageOutput) DataOrigin() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringOutput { return v.DataOrigin }).(pulumi.StringOutput)
}

// Specifies the description of the image.
func (o ObsSystemImageOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The image format. The value can be **zvhd2**, **vhd**, **zvhd**, **raw**, or **qcow2**.
func (o ObsSystemImageOutput) DiskFormat() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringOutput { return v.DiskFormat }).(pulumi.StringOutput)
}

// Specifies the enterprise project ID to which the IMS image belongs.
// For enterprise users, if omitted, default enterprise project will be used.
func (o ObsSystemImageOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// The size of the image file, in bytes unit.
func (o ObsSystemImageOutput) ImageSize() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringOutput { return v.ImageSize }).(pulumi.StringOutput)
}

// Specifies the URL of the external image file in the OBS bucket, the format
// is **OBS bucket name:image file name**. Changing this parameter will create a new resource.
func (o ObsSystemImageOutput) ImageUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringOutput { return v.ImageUrl }).(pulumi.StringOutput)
}

// Specifies whether to automatically configure. The value can be **true** or
// **false**. Defaults to **false**. Changing this parameter will create a new resource.
// About the content of automatic backend configuration, please refer to
// [API docs](https://support.huaweicloud.com/intl/en-us/ims_faq/ims_faq_0020.html).
func (o ObsSystemImageOutput) IsConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.BoolPtrOutput { return v.IsConfig }).(pulumi.BoolPtrOutput)
}

// Specifies whether to use the image file quick import method to create
// an image. The value can be **true** or **false**. Changing this parameter will create a new resource.
// For constraints and limitations on fast import of image files,
// please refer to [API docs](https://support.huaweicloud.com/intl/en-us/api-ims/ims_03_0605.html).
func (o ObsSystemImageOutput) IsQuickImport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.BoolPtrOutput { return v.IsQuickImport }).(pulumi.BoolPtrOutput)
}

// Specifies the maximum memory of the image, in MB unit.
func (o ObsSystemImageOutput) MaxRam() pulumi.IntOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.IntOutput { return v.MaxRam }).(pulumi.IntOutput)
}

// Specifies the minimum size of the system disk, in GB unit.
// Changing this parameter will create a new resource.
// + When the operating system is Linux, the value ranges from `10` to `1,024`.
// + When the operating system is Windows, the value ranges from `20` to `1,024`.
func (o ObsSystemImageOutput) MinDisk() pulumi.IntOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.IntOutput { return v.MinDisk }).(pulumi.IntOutput)
}

// Specifies the minimum memory of the image, in MB unit.
func (o ObsSystemImageOutput) MinRam() pulumi.IntOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.IntOutput { return v.MinRam }).(pulumi.IntOutput)
}

// Specifies the name of the image.
// The valid length is limited from `1` to `128` characters.
// The first and last letters of the name cannot be spaces.
// The name can contain uppercase letters, lowercase letters, numbers, spaces, chinese, and special characters (-._).
func (o ObsSystemImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the operating system type of the image. The value can be
// **Windows** or **Linux**. Changing this parameter will create a new resource.
func (o ObsSystemImageOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringOutput { return v.OsType }).(pulumi.StringOutput)
}

// Specifies the operating system version of the image. This field is
// required when `isQuickImport` set to **true**. Changing this parameter will create a new resource.
// For its values, see [API docs](https://support.huaweicloud.com/intl/en-us/api-ims/ims_03_0910.html).
func (o ObsSystemImageOutput) OsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringOutput { return v.OsVersion }).(pulumi.StringOutput)
}

// Specifies the region in which to create the resource.
// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
func (o ObsSystemImageOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The status of the image. The value can be **active**, **queued**, **saving**, **deleted**, or **killed*,
// only image with a status of **active** can be used.
func (o ObsSystemImageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the key/value pairs to associate with the image.
func (o ObsSystemImageOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the image type. The value can be **ECS**, **FusionCompute**, **BMS**,
// or **Ironic**. Defaults to **ECS**. Changing this parameter will create a new resource.
// + Set to **ECS** or **FusionCompute** represent the creation of ECS server image.
// + Set to **BMS** or **Ironic** represent the creation of BMS server image.
func (o ObsSystemImageOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

// The last update time of the image, in RFC3339 format.
func (o ObsSystemImageOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// Whether the image is visible to other tenants.
func (o ObsSystemImageOutput) Visibility() pulumi.StringOutput {
	return o.ApplyT(func(v *ObsSystemImage) pulumi.StringOutput { return v.Visibility }).(pulumi.StringOutput)
}

type ObsSystemImageArrayOutput struct{ *pulumi.OutputState }

func (ObsSystemImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObsSystemImage)(nil)).Elem()
}

func (o ObsSystemImageArrayOutput) ToObsSystemImageArrayOutput() ObsSystemImageArrayOutput {
	return o
}

func (o ObsSystemImageArrayOutput) ToObsSystemImageArrayOutputWithContext(ctx context.Context) ObsSystemImageArrayOutput {
	return o
}

func (o ObsSystemImageArrayOutput) Index(i pulumi.IntInput) ObsSystemImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ObsSystemImage {
		return vs[0].([]*ObsSystemImage)[vs[1].(int)]
	}).(ObsSystemImageOutput)
}

type ObsSystemImageMapOutput struct{ *pulumi.OutputState }

func (ObsSystemImageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObsSystemImage)(nil)).Elem()
}

func (o ObsSystemImageMapOutput) ToObsSystemImageMapOutput() ObsSystemImageMapOutput {
	return o
}

func (o ObsSystemImageMapOutput) ToObsSystemImageMapOutputWithContext(ctx context.Context) ObsSystemImageMapOutput {
	return o
}

func (o ObsSystemImageMapOutput) MapIndex(k pulumi.StringInput) ObsSystemImageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ObsSystemImage {
		return vs[0].(map[string]*ObsSystemImage)[vs[1].(string)]
	}).(ObsSystemImageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ObsSystemImageInput)(nil)).Elem(), &ObsSystemImage{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsSystemImageArrayInput)(nil)).Elem(), ObsSystemImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObsSystemImageMapInput)(nil)).Elem(), ObsSystemImageMap{})
	pulumi.RegisterOutputType(ObsSystemImageOutput{})
	pulumi.RegisterOutputType(ObsSystemImageArrayOutput{})
	pulumi.RegisterOutputType(ObsSystemImageMapOutput{})
}
