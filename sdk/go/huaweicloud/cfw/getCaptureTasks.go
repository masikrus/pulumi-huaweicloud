// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfw

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of CFW capture tasks.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Cfw"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Cfw"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			fwInstanceId := cfg.RequireObject("fwInstanceId")
//			_, err := Cfw.GetCaptureTasks(ctx, &cfw.GetCaptureTasksArgs{
//				FwInstanceId: fwInstanceId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCaptureTasks(ctx *pulumi.Context, args *GetCaptureTasksArgs, opts ...pulumi.InvokeOption) (*GetCaptureTasksResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetCaptureTasksResult
	err := ctx.Invoke("huaweicloud:Cfw/getCaptureTasks:getCaptureTasks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCaptureTasks.
type GetCaptureTasksArgs struct {
	// Specifies the ID of the firewall instance.
	FwInstanceId string `pulumi:"fwInstanceId"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getCaptureTasks.
type GetCaptureTasksResult struct {
	FwInstanceId string `pulumi:"fwInstanceId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of capture task information.
	Records []GetCaptureTasksRecord `pulumi:"records"`
	Region  string                  `pulumi:"region"`
}

func GetCaptureTasksOutput(ctx *pulumi.Context, args GetCaptureTasksOutputArgs, opts ...pulumi.InvokeOption) GetCaptureTasksResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCaptureTasksResult, error) {
			args := v.(GetCaptureTasksArgs)
			r, err := GetCaptureTasks(ctx, &args, opts...)
			var s GetCaptureTasksResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCaptureTasksResultOutput)
}

// A collection of arguments for invoking getCaptureTasks.
type GetCaptureTasksOutputArgs struct {
	// Specifies the ID of the firewall instance.
	FwInstanceId pulumi.StringInput `pulumi:"fwInstanceId"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetCaptureTasksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaptureTasksArgs)(nil)).Elem()
}

// A collection of values returned by getCaptureTasks.
type GetCaptureTasksResultOutput struct{ *pulumi.OutputState }

func (GetCaptureTasksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaptureTasksResult)(nil)).Elem()
}

func (o GetCaptureTasksResultOutput) ToGetCaptureTasksResultOutput() GetCaptureTasksResultOutput {
	return o
}

func (o GetCaptureTasksResultOutput) ToGetCaptureTasksResultOutputWithContext(ctx context.Context) GetCaptureTasksResultOutput {
	return o
}

func (o GetCaptureTasksResultOutput) FwInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTasksResult) string { return v.FwInstanceId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCaptureTasksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTasksResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of capture task information.
func (o GetCaptureTasksResultOutput) Records() GetCaptureTasksRecordArrayOutput {
	return o.ApplyT(func(v GetCaptureTasksResult) []GetCaptureTasksRecord { return v.Records }).(GetCaptureTasksRecordArrayOutput)
}

func (o GetCaptureTasksResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTasksResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCaptureTasksResultOutput{})
}
