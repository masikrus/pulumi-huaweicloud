// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package er

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of associations.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Er"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Er"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			routeTableId := cfg.RequireObject("routeTableId")
//			_, err := Er.GetAssociations(ctx, &er.GetAssociationsArgs{
//				InstanceId:   instanceId,
//				RouteTableId: routeTableId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAssociations(ctx *pulumi.Context, args *GetAssociationsArgs, opts ...pulumi.InvokeOption) (*GetAssociationsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetAssociationsResult
	err := ctx.Invoke("huaweicloud:Er/getAssociations:getAssociations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAssociations.
type GetAssociationsArgs struct {
	// Specifies the attachment ID corresponding to the association.
	AttachmentId *string `pulumi:"attachmentId"`
	// Specifies the attachment type corresponding to the association.
	AttachmentType *string `pulumi:"attachmentType"`
	// Specifies the ER instance ID to which the association belongs.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the region in which to query the data source.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the route table ID to which the association belongs.
	RouteTableId string `pulumi:"routeTableId"`
	// Specifies the status of the association. Default value is `available`.
	// The valid values are as follows:
	// + **available**
	// + **failed**
	Status *string `pulumi:"status"`
}

// A collection of values returned by getAssociations.
type GetAssociationsResult struct {
	// All associations that match the filter parameters.
	// The associations structure is documented below.
	Associations   []GetAssociationsAssociation `pulumi:"associations"`
	AttachmentId   *string                      `pulumi:"attachmentId"`
	AttachmentType *string                      `pulumi:"attachmentType"`
	// The provider-assigned unique ID for this managed resource.
	Id           string  `pulumi:"id"`
	InstanceId   string  `pulumi:"instanceId"`
	Region       *string `pulumi:"region"`
	RouteTableId string  `pulumi:"routeTableId"`
	// The current status of the association.
	Status *string `pulumi:"status"`
}

func GetAssociationsOutput(ctx *pulumi.Context, args GetAssociationsOutputArgs, opts ...pulumi.InvokeOption) GetAssociationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAssociationsResult, error) {
			args := v.(GetAssociationsArgs)
			r, err := GetAssociations(ctx, &args, opts...)
			var s GetAssociationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAssociationsResultOutput)
}

// A collection of arguments for invoking getAssociations.
type GetAssociationsOutputArgs struct {
	// Specifies the attachment ID corresponding to the association.
	AttachmentId pulumi.StringPtrInput `pulumi:"attachmentId"`
	// Specifies the attachment type corresponding to the association.
	AttachmentType pulumi.StringPtrInput `pulumi:"attachmentType"`
	// Specifies the ER instance ID to which the association belongs.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Specifies the region in which to query the data source.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the route table ID to which the association belongs.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// Specifies the status of the association. Default value is `available`.
	// The valid values are as follows:
	// + **available**
	// + **failed**
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetAssociationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssociationsArgs)(nil)).Elem()
}

// A collection of values returned by getAssociations.
type GetAssociationsResultOutput struct{ *pulumi.OutputState }

func (GetAssociationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssociationsResult)(nil)).Elem()
}

func (o GetAssociationsResultOutput) ToGetAssociationsResultOutput() GetAssociationsResultOutput {
	return o
}

func (o GetAssociationsResultOutput) ToGetAssociationsResultOutputWithContext(ctx context.Context) GetAssociationsResultOutput {
	return o
}

// All associations that match the filter parameters.
// The associations structure is documented below.
func (o GetAssociationsResultOutput) Associations() GetAssociationsAssociationArrayOutput {
	return o.ApplyT(func(v GetAssociationsResult) []GetAssociationsAssociation { return v.Associations }).(GetAssociationsAssociationArrayOutput)
}

func (o GetAssociationsResultOutput) AttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAssociationsResult) *string { return v.AttachmentId }).(pulumi.StringPtrOutput)
}

func (o GetAssociationsResultOutput) AttachmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAssociationsResult) *string { return v.AttachmentType }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAssociationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAssociationsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetAssociationsResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAssociationsResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GetAssociationsResultOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsResult) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The current status of the association.
func (o GetAssociationsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAssociationsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAssociationsResultOutput{})
}
