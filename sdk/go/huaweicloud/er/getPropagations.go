// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package er

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of propagations.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Er"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Er"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			routeTableId := cfg.RequireObject("routeTableId")
//			attachmentId := cfg.RequireObject("attachmentId")
//			_, err := Er.GetPropagations(ctx, &er.GetPropagationsArgs{
//				InstanceId:   instanceId,
//				RouteTableId: routeTableId,
//				AttachmentId: pulumi.StringRef(attachmentId),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPropagations(ctx *pulumi.Context, args *GetPropagationsArgs, opts ...pulumi.InvokeOption) (*GetPropagationsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetPropagationsResult
	err := ctx.Invoke("huaweicloud:Er/getPropagations:getPropagations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPropagations.
type GetPropagationsArgs struct {
	// Specifies the attachment ID to which the propagation belongs.
	AttachmentId *string `pulumi:"attachmentId"`
	// Specifies the attachment type of corresponding to the propagation.\
	// The valid values are as follows:
	// + **vpc**: Virtual private cloud.
	// + **vpn**: VPN gateway.
	// + **vgw**: Virtual gateway of cloud private line.
	// + **peering**: Peering connection, through the cloud connection (CC) to load ERs in different regions to create a
	//   peering connection.
	// + **enc**: Enterprise connect network in EC.
	// + **cfw**: VPC border firewall.
	AttachmentType *string `pulumi:"attachmentType"`
	// Specifies the ER instance ID to which the propagation belongs.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the region in which to query the data source.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the route table ID to which the propagation belongs.
	RouteTableId string `pulumi:"routeTableId"`
	// Specifies the status of the propagation. Default value is `available`.
	// The valid values are as follows:
	// + **available**
	// + **failed**
	Status *string `pulumi:"status"`
}

// A collection of values returned by getPropagations.
type GetPropagationsResult struct {
	// The attachment ID corresponding to the propagation.
	AttachmentId *string `pulumi:"attachmentId"`
	// The attachment type corresponding to the propagation.
	AttachmentType *string `pulumi:"attachmentType"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ER instance ID to which the propagation belongs.
	InstanceId string `pulumi:"instanceId"`
	// All propagations that match the filter parameters.
	// The propagations structure is documented below.
	Propagations []GetPropagationsPropagation `pulumi:"propagations"`
	Region       *string                      `pulumi:"region"`
	// The route table ID of corresponding to the propagation.
	RouteTableId string `pulumi:"routeTableId"`
	// The current status of the propagation.
	Status *string `pulumi:"status"`
}

func GetPropagationsOutput(ctx *pulumi.Context, args GetPropagationsOutputArgs, opts ...pulumi.InvokeOption) GetPropagationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPropagationsResult, error) {
			args := v.(GetPropagationsArgs)
			r, err := GetPropagations(ctx, &args, opts...)
			var s GetPropagationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPropagationsResultOutput)
}

// A collection of arguments for invoking getPropagations.
type GetPropagationsOutputArgs struct {
	// Specifies the attachment ID to which the propagation belongs.
	AttachmentId pulumi.StringPtrInput `pulumi:"attachmentId"`
	// Specifies the attachment type of corresponding to the propagation.\
	// The valid values are as follows:
	// + **vpc**: Virtual private cloud.
	// + **vpn**: VPN gateway.
	// + **vgw**: Virtual gateway of cloud private line.
	// + **peering**: Peering connection, through the cloud connection (CC) to load ERs in different regions to create a
	//   peering connection.
	// + **enc**: Enterprise connect network in EC.
	// + **cfw**: VPC border firewall.
	AttachmentType pulumi.StringPtrInput `pulumi:"attachmentType"`
	// Specifies the ER instance ID to which the propagation belongs.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Specifies the region in which to query the data source.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the route table ID to which the propagation belongs.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// Specifies the status of the propagation. Default value is `available`.
	// The valid values are as follows:
	// + **available**
	// + **failed**
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetPropagationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropagationsArgs)(nil)).Elem()
}

// A collection of values returned by getPropagations.
type GetPropagationsResultOutput struct{ *pulumi.OutputState }

func (GetPropagationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropagationsResult)(nil)).Elem()
}

func (o GetPropagationsResultOutput) ToGetPropagationsResultOutput() GetPropagationsResultOutput {
	return o
}

func (o GetPropagationsResultOutput) ToGetPropagationsResultOutputWithContext(ctx context.Context) GetPropagationsResultOutput {
	return o
}

// The attachment ID corresponding to the propagation.
func (o GetPropagationsResultOutput) AttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropagationsResult) *string { return v.AttachmentId }).(pulumi.StringPtrOutput)
}

// The attachment type corresponding to the propagation.
func (o GetPropagationsResultOutput) AttachmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropagationsResult) *string { return v.AttachmentType }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPropagationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropagationsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ER instance ID to which the propagation belongs.
func (o GetPropagationsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropagationsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// All propagations that match the filter parameters.
// The propagations structure is documented below.
func (o GetPropagationsResultOutput) Propagations() GetPropagationsPropagationArrayOutput {
	return o.ApplyT(func(v GetPropagationsResult) []GetPropagationsPropagation { return v.Propagations }).(GetPropagationsPropagationArrayOutput)
}

func (o GetPropagationsResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropagationsResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The route table ID of corresponding to the propagation.
func (o GetPropagationsResultOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropagationsResult) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The current status of the propagation.
func (o GetPropagationsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropagationsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPropagationsResultOutput{})
}
