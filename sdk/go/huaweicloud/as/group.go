// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package as

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an AS group resource within HuaweiCloud.
//
// ## Example Usage
// ### Basic Autoscaling Group
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/As"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/As"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			configurationId := cfg.RequireObject("configurationId")
//			vpcId := cfg.RequireObject("vpcId")
//			subnetId := cfg.RequireObject("subnetId")
//			_, err := As.NewGroup(ctx, "myAsGroup", &As.GroupArgs{
//				ScalingGroupName:       pulumi.String("my_as_group"),
//				ScalingConfigurationId: pulumi.Any(configurationId),
//				DesireInstanceNumber:   pulumi.Int(2),
//				MinInstanceNumber:      pulumi.Int(0),
//				MaxInstanceNumber:      pulumi.Int(10),
//				VpcId:                  pulumi.Any(vpcId),
//				DeletePublicip:         pulumi.Bool(true),
//				DeleteInstances:        pulumi.String("yes"),
//				Networks: as.GroupNetworkArray{
//					&as.GroupNetworkArgs{
//						Id: pulumi.Any(subnetId),
//					},
//				},
//				Tags: pulumi.StringMap{
//					"foo": pulumi.String("bar"),
//					"key": pulumi.String("value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Autoscaling Group Only Remove Members When Scaling Down
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/As"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/As"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			configurationId := cfg.RequireObject("configurationId")
//			vpcId := cfg.RequireObject("vpcId")
//			subnetId := cfg.RequireObject("subnetId")
//			_, err := As.NewGroup(ctx, "myAsGroupOnlyRemoveMembers", &As.GroupArgs{
//				ScalingGroupName:       pulumi.String("my_as_group_only_remove_members"),
//				ScalingConfigurationId: pulumi.Any(configurationId),
//				DesireInstanceNumber:   pulumi.Int(2),
//				MinInstanceNumber:      pulumi.Int(0),
//				MaxInstanceNumber:      pulumi.Int(10),
//				VpcId:                  pulumi.Any(vpcId),
//				DeletePublicip:         pulumi.Bool(true),
//				DeleteInstances:        pulumi.String("no"),
//				Networks: as.GroupNetworkArray{
//					&as.GroupNetworkArgs{
//						Id: pulumi.Any(subnetId),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Autoscaling Group With Elastic Load Balancer Listener
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/As"
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Elb"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/As"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			configurationId := cfg.RequireObject("configurationId")
//			vpcId := cfg.RequireObject("vpcId")
//			subnetId := cfg.RequireObject("subnetId")
//			ipv4SubnetId := cfg.RequireObject("ipv4SubnetId")
//			testLoadbalancer, err := Elb.NewLoadbalancer(ctx, "testLoadbalancer", &Elb.LoadbalancerArgs{
//				VipSubnetId: pulumi.Any(ipv4SubnetId),
//			})
//			if err != nil {
//				return err
//			}
//			testListener, err := Elb.NewListener(ctx, "testListener", &Elb.ListenerArgs{
//				Protocol:       pulumi.String("HTTP"),
//				ProtocolPort:   pulumi.Int(8080),
//				LoadbalancerId: testLoadbalancer.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			testPool, err := Elb.NewPool(ctx, "testPool", &Elb.PoolArgs{
//				Protocol:   pulumi.String("HTTP"),
//				LbMethod:   pulumi.String("ROUND_ROBIN"),
//				ListenerId: testListener.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = As.NewGroup(ctx, "myAsGroupWithEnhancedLb", &As.GroupArgs{
//				ScalingGroupName:       pulumi.String("my_as_group_with_enhanced_lb"),
//				ScalingConfigurationId: pulumi.Any(configurationId),
//				DesireInstanceNumber:   pulumi.Int(2),
//				MinInstanceNumber:      pulumi.Int(0),
//				MaxInstanceNumber:      pulumi.Int(10),
//				VpcId:                  pulumi.Any(vpcId),
//				Networks: as.GroupNetworkArray{
//					&as.GroupNetworkArgs{
//						Id: pulumi.Any(subnetId),
//					},
//				},
//				LbaasListeners: as.GroupLbaasListenerArray{
//					&as.GroupLbaasListenerArgs{
//						PoolId:       testPool.ID(),
//						ProtocolPort: testListener.ProtocolPort,
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// AS groups can be imported by their `id`. For example, bash
//
// ```sh
//
//	$ pulumi import huaweicloud:As/group:Group test <id>
//
// ```
//
//	Note that the imported state may not be identical to your resource definition, due to some attributes missing from the API response, security or some other reason. The missing attributes include`delete_instances`. It is generally recommended running `terraform plan` after importing the resource. You can then decide if changes should be applied to the resource, or the resource definition should be updated to align with the group. Also, you can ignore changes as below. hcl resource "huaweicloud_as_group" "test" {
//
//	...
//
//	lifecycle {
//
//	ignore_changes = [
//
//	delete_instances,
//
//	]
//
//	} }
type Group struct {
	pulumi.CustomResourceState

	// The scaling activity type of the AS group.
	ActivityType pulumi.StringOutput `pulumi:"activityType"`
	// Specifies the IAM agency name. If you change the agency,
	// the new agency will be available for ECSs scaled out after the change.
	AgencyName pulumi.StringOutput `pulumi:"agencyName"`
	// Specifies the availability zones in which to create the instances in the
	// autoscaling group. If this field is not specified, the system will automatically specify one.
	AvailabilityZones pulumi.StringArrayOutput `pulumi:"availabilityZones"`
	// schema: Deprecated; use availability_zones instead
	AvailableZones pulumi.StringArrayOutput `pulumi:"availableZones"`
	// Specifies the cooling duration (in seconds). The value ranges from `0` to `86,400`.
	// Defaults to `300`.
	CoolDownTime pulumi.IntPtrOutput `pulumi:"coolDownTime"`
	// The creation time of the AS group.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The number of current instances in the AS group.
	CurrentInstanceNumber pulumi.IntOutput `pulumi:"currentInstanceNumber"`
	// Specifies whether to delete the instances in the AS group when deleting
	// the AS group. The options are **yes** and **no**.
	DeleteInstances pulumi.StringPtrOutput `pulumi:"deleteInstances"`
	// Specifies whether to release the EIPs bound to ECSs when the ECSs are removed
	// from the AS group. Defaults to **false**.
	DeletePublicip pulumi.BoolPtrOutput `pulumi:"deletePublicip"`
	// Specifies whether to delete the data disks attached to ECSs when the ECSs are removed.
	// Defaults to **false**.
	DeleteVolume pulumi.BoolOutput `pulumi:"deleteVolume"`
	// Specifies the description of the AS group.
	// The value can contain `0` to `256` characters.
	Description pulumi.StringOutput `pulumi:"description"`
	// Specifies the expected number of instances. The default value is the
	// minimum number of instances. The value ranges from the minimum number of instances to the maximum number of instances.
	DesireInstanceNumber pulumi.IntOutput `pulumi:"desireInstanceNumber"`
	// The details about the AS group. If a scaling action fails, this parameter is used to record errors.
	Detail pulumi.StringOutput `pulumi:"detail"`
	// Specifies whether to enable the AS Group. Defaults to **true**.
	Enable pulumi.BoolPtrOutput `pulumi:"enable"`
	// Specifies the enterprise project ID of the AS group.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// Specifies whether to forcibly delete the AS group, remove the ECS instances and
	// release them. Defaults to **false**.
	ForceDelete pulumi.BoolPtrOutput `pulumi:"forceDelete"`
	// Specifies the health check grace period for instances.
	// The unit is second and the value ranges from `0` to `86,400`. Defaults to `600`.
	HealthPeriodicAuditGracePeriod pulumi.IntOutput `pulumi:"healthPeriodicAuditGracePeriod"`
	// Specifies the health check method for instances in the AS group.
	// The health check methods include **ELB_AUDIT** and **NOVA_AUDIT**. If load balancing is configured, the default value of
	// this parameter is **ELB_AUDIT**. Otherwise, the default value is **NOVA_AUDIT**.
	HealthPeriodicAuditMethod pulumi.StringPtrOutput `pulumi:"healthPeriodicAuditMethod"`
	// Specifies the health check period for instances. The unit is minute
	// and value includes **0**, **1**, **5** (default), **15**, **60**, and **180**.
	// If the value is set to **0**, health check is performed every 10 seconds.
	HealthPeriodicAuditTime pulumi.IntPtrOutput `pulumi:"healthPeriodicAuditTime"`
	// Specifies the instance removal policy. The policy has four
	// options: **OLD_CONFIG_OLD_INSTANCE** (default), **OLD_CONFIG_NEW_INSTANCE**, **OLD_INSTANCE**, and **NEW_INSTANCE**.
	InstanceTerminatePolicy pulumi.StringPtrOutput `pulumi:"instanceTerminatePolicy"`
	// The instances IDs of the AS group.
	Instances pulumi.StringArrayOutput `pulumi:"instances"`
	// The scaling flag of the AS group.
	IsScaling pulumi.BoolOutput `pulumi:"isScaling"`
	// The system supports the binding of up to six ELB listeners, the IDs of which are separated using a comma.
	//
	// Deprecated: use lbaas_listeners instead
	LbListenerId pulumi.StringPtrOutput `pulumi:"lbListenerId"`
	// Specifies an array of one or more enhanced load balancer. The system supports
	// the binding of up to six load balancers. The lbaasListeners structure is documented below.
	LbaasListeners GroupLbaasListenerArrayOutput `pulumi:"lbaasListeners"`
	// Specifies the maximum number of instances. The value ranges from `0` to `300`.
	// Defaults to `0`.
	MaxInstanceNumber pulumi.IntPtrOutput `pulumi:"maxInstanceNumber"`
	// Specifies the minimum number of instances. Defaults to `0`.
	MinInstanceNumber pulumi.IntPtrOutput `pulumi:"minInstanceNumber"`
	// Specifies the priority policy used to select target AZs when adjusting
	// the number of instances in an AS group. The value can be **EQUILIBRIUM_DISTRIBUTE** or **PICK_FIRST**.
	MultiAzScalingPolicy pulumi.StringOutput `pulumi:"multiAzScalingPolicy"`
	// Specifies an array of one or more network IDs. The system supports up to five networks.
	// The networks structure is documented below.
	Networks GroupNetworkArrayOutput `pulumi:"networks"`
	// schema: Deprecated; The notification mode has been canceled
	Notifications pulumi.StringArrayOutput `pulumi:"notifications"`
	// Specifies the region in which to create the AS group.
	// If omitted, the provider-level region will be used. Changing this creates a new group.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the configuration ID which defines configurations
	// of instances in the AS group.
	ScalingConfigurationId pulumi.StringOutput `pulumi:"scalingConfigurationId"`
	// The name of the AS configuration to which the AS group belongs.
	ScalingConfigurationName pulumi.StringOutput `pulumi:"scalingConfigurationName"`
	// Specifies the name of the scaling group. The name can contain
	// letters, digits, underscores(_), and hyphens(-),and cannot exceed 64 characters.
	ScalingGroupName pulumi.StringOutput `pulumi:"scalingGroupName"`
	// Specifies an array of one or more security group IDs to associate with the group.
	// The securityGroups structure is documented below.
	SecurityGroups GroupSecurityGroupArrayOutput `pulumi:"securityGroups"`
	// The status of the AS group.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the key/value pairs to associate with the AS group.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the VPC ID. Changing this creates a new group.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewGroup registers a new resource with the given unique name, arguments, and options.
func NewGroup(ctx *pulumi.Context,
	name string, args *GroupArgs, opts ...pulumi.ResourceOption) (*Group, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Networks == nil {
		return nil, errors.New("invalid value for required argument 'Networks'")
	}
	if args.ScalingGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ScalingGroupName'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Group
	err := ctx.RegisterResource("huaweicloud:As/group:Group", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGroup gets an existing Group resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GroupState, opts ...pulumi.ResourceOption) (*Group, error) {
	var resource Group
	err := ctx.ReadResource("huaweicloud:As/group:Group", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Group resources.
type groupState struct {
	// The scaling activity type of the AS group.
	ActivityType *string `pulumi:"activityType"`
	// Specifies the IAM agency name. If you change the agency,
	// the new agency will be available for ECSs scaled out after the change.
	AgencyName *string `pulumi:"agencyName"`
	// Specifies the availability zones in which to create the instances in the
	// autoscaling group. If this field is not specified, the system will automatically specify one.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// schema: Deprecated; use availability_zones instead
	AvailableZones []string `pulumi:"availableZones"`
	// Specifies the cooling duration (in seconds). The value ranges from `0` to `86,400`.
	// Defaults to `300`.
	CoolDownTime *int `pulumi:"coolDownTime"`
	// The creation time of the AS group.
	CreateTime *string `pulumi:"createTime"`
	// The number of current instances in the AS group.
	CurrentInstanceNumber *int `pulumi:"currentInstanceNumber"`
	// Specifies whether to delete the instances in the AS group when deleting
	// the AS group. The options are **yes** and **no**.
	DeleteInstances *string `pulumi:"deleteInstances"`
	// Specifies whether to release the EIPs bound to ECSs when the ECSs are removed
	// from the AS group. Defaults to **false**.
	DeletePublicip *bool `pulumi:"deletePublicip"`
	// Specifies whether to delete the data disks attached to ECSs when the ECSs are removed.
	// Defaults to **false**.
	DeleteVolume *bool `pulumi:"deleteVolume"`
	// Specifies the description of the AS group.
	// The value can contain `0` to `256` characters.
	Description *string `pulumi:"description"`
	// Specifies the expected number of instances. The default value is the
	// minimum number of instances. The value ranges from the minimum number of instances to the maximum number of instances.
	DesireInstanceNumber *int `pulumi:"desireInstanceNumber"`
	// The details about the AS group. If a scaling action fails, this parameter is used to record errors.
	Detail *string `pulumi:"detail"`
	// Specifies whether to enable the AS Group. Defaults to **true**.
	Enable *bool `pulumi:"enable"`
	// Specifies the enterprise project ID of the AS group.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies whether to forcibly delete the AS group, remove the ECS instances and
	// release them. Defaults to **false**.
	ForceDelete *bool `pulumi:"forceDelete"`
	// Specifies the health check grace period for instances.
	// The unit is second and the value ranges from `0` to `86,400`. Defaults to `600`.
	HealthPeriodicAuditGracePeriod *int `pulumi:"healthPeriodicAuditGracePeriod"`
	// Specifies the health check method for instances in the AS group.
	// The health check methods include **ELB_AUDIT** and **NOVA_AUDIT**. If load balancing is configured, the default value of
	// this parameter is **ELB_AUDIT**. Otherwise, the default value is **NOVA_AUDIT**.
	HealthPeriodicAuditMethod *string `pulumi:"healthPeriodicAuditMethod"`
	// Specifies the health check period for instances. The unit is minute
	// and value includes **0**, **1**, **5** (default), **15**, **60**, and **180**.
	// If the value is set to **0**, health check is performed every 10 seconds.
	HealthPeriodicAuditTime *int `pulumi:"healthPeriodicAuditTime"`
	// Specifies the instance removal policy. The policy has four
	// options: **OLD_CONFIG_OLD_INSTANCE** (default), **OLD_CONFIG_NEW_INSTANCE**, **OLD_INSTANCE**, and **NEW_INSTANCE**.
	InstanceTerminatePolicy *string `pulumi:"instanceTerminatePolicy"`
	// The instances IDs of the AS group.
	Instances []string `pulumi:"instances"`
	// The scaling flag of the AS group.
	IsScaling *bool `pulumi:"isScaling"`
	// The system supports the binding of up to six ELB listeners, the IDs of which are separated using a comma.
	//
	// Deprecated: use lbaas_listeners instead
	LbListenerId *string `pulumi:"lbListenerId"`
	// Specifies an array of one or more enhanced load balancer. The system supports
	// the binding of up to six load balancers. The lbaasListeners structure is documented below.
	LbaasListeners []GroupLbaasListener `pulumi:"lbaasListeners"`
	// Specifies the maximum number of instances. The value ranges from `0` to `300`.
	// Defaults to `0`.
	MaxInstanceNumber *int `pulumi:"maxInstanceNumber"`
	// Specifies the minimum number of instances. Defaults to `0`.
	MinInstanceNumber *int `pulumi:"minInstanceNumber"`
	// Specifies the priority policy used to select target AZs when adjusting
	// the number of instances in an AS group. The value can be **EQUILIBRIUM_DISTRIBUTE** or **PICK_FIRST**.
	MultiAzScalingPolicy *string `pulumi:"multiAzScalingPolicy"`
	// Specifies an array of one or more network IDs. The system supports up to five networks.
	// The networks structure is documented below.
	Networks []GroupNetwork `pulumi:"networks"`
	// schema: Deprecated; The notification mode has been canceled
	Notifications []string `pulumi:"notifications"`
	// Specifies the region in which to create the AS group.
	// If omitted, the provider-level region will be used. Changing this creates a new group.
	Region *string `pulumi:"region"`
	// Specifies the configuration ID which defines configurations
	// of instances in the AS group.
	ScalingConfigurationId *string `pulumi:"scalingConfigurationId"`
	// The name of the AS configuration to which the AS group belongs.
	ScalingConfigurationName *string `pulumi:"scalingConfigurationName"`
	// Specifies the name of the scaling group. The name can contain
	// letters, digits, underscores(_), and hyphens(-),and cannot exceed 64 characters.
	ScalingGroupName *string `pulumi:"scalingGroupName"`
	// Specifies an array of one or more security group IDs to associate with the group.
	// The securityGroups structure is documented below.
	SecurityGroups []GroupSecurityGroup `pulumi:"securityGroups"`
	// The status of the AS group.
	Status *string `pulumi:"status"`
	// Specifies the key/value pairs to associate with the AS group.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the VPC ID. Changing this creates a new group.
	VpcId *string `pulumi:"vpcId"`
}

type GroupState struct {
	// The scaling activity type of the AS group.
	ActivityType pulumi.StringPtrInput
	// Specifies the IAM agency name. If you change the agency,
	// the new agency will be available for ECSs scaled out after the change.
	AgencyName pulumi.StringPtrInput
	// Specifies the availability zones in which to create the instances in the
	// autoscaling group. If this field is not specified, the system will automatically specify one.
	AvailabilityZones pulumi.StringArrayInput
	// schema: Deprecated; use availability_zones instead
	AvailableZones pulumi.StringArrayInput
	// Specifies the cooling duration (in seconds). The value ranges from `0` to `86,400`.
	// Defaults to `300`.
	CoolDownTime pulumi.IntPtrInput
	// The creation time of the AS group.
	CreateTime pulumi.StringPtrInput
	// The number of current instances in the AS group.
	CurrentInstanceNumber pulumi.IntPtrInput
	// Specifies whether to delete the instances in the AS group when deleting
	// the AS group. The options are **yes** and **no**.
	DeleteInstances pulumi.StringPtrInput
	// Specifies whether to release the EIPs bound to ECSs when the ECSs are removed
	// from the AS group. Defaults to **false**.
	DeletePublicip pulumi.BoolPtrInput
	// Specifies whether to delete the data disks attached to ECSs when the ECSs are removed.
	// Defaults to **false**.
	DeleteVolume pulumi.BoolPtrInput
	// Specifies the description of the AS group.
	// The value can contain `0` to `256` characters.
	Description pulumi.StringPtrInput
	// Specifies the expected number of instances. The default value is the
	// minimum number of instances. The value ranges from the minimum number of instances to the maximum number of instances.
	DesireInstanceNumber pulumi.IntPtrInput
	// The details about the AS group. If a scaling action fails, this parameter is used to record errors.
	Detail pulumi.StringPtrInput
	// Specifies whether to enable the AS Group. Defaults to **true**.
	Enable pulumi.BoolPtrInput
	// Specifies the enterprise project ID of the AS group.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies whether to forcibly delete the AS group, remove the ECS instances and
	// release them. Defaults to **false**.
	ForceDelete pulumi.BoolPtrInput
	// Specifies the health check grace period for instances.
	// The unit is second and the value ranges from `0` to `86,400`. Defaults to `600`.
	HealthPeriodicAuditGracePeriod pulumi.IntPtrInput
	// Specifies the health check method for instances in the AS group.
	// The health check methods include **ELB_AUDIT** and **NOVA_AUDIT**. If load balancing is configured, the default value of
	// this parameter is **ELB_AUDIT**. Otherwise, the default value is **NOVA_AUDIT**.
	HealthPeriodicAuditMethod pulumi.StringPtrInput
	// Specifies the health check period for instances. The unit is minute
	// and value includes **0**, **1**, **5** (default), **15**, **60**, and **180**.
	// If the value is set to **0**, health check is performed every 10 seconds.
	HealthPeriodicAuditTime pulumi.IntPtrInput
	// Specifies the instance removal policy. The policy has four
	// options: **OLD_CONFIG_OLD_INSTANCE** (default), **OLD_CONFIG_NEW_INSTANCE**, **OLD_INSTANCE**, and **NEW_INSTANCE**.
	InstanceTerminatePolicy pulumi.StringPtrInput
	// The instances IDs of the AS group.
	Instances pulumi.StringArrayInput
	// The scaling flag of the AS group.
	IsScaling pulumi.BoolPtrInput
	// The system supports the binding of up to six ELB listeners, the IDs of which are separated using a comma.
	//
	// Deprecated: use lbaas_listeners instead
	LbListenerId pulumi.StringPtrInput
	// Specifies an array of one or more enhanced load balancer. The system supports
	// the binding of up to six load balancers. The lbaasListeners structure is documented below.
	LbaasListeners GroupLbaasListenerArrayInput
	// Specifies the maximum number of instances. The value ranges from `0` to `300`.
	// Defaults to `0`.
	MaxInstanceNumber pulumi.IntPtrInput
	// Specifies the minimum number of instances. Defaults to `0`.
	MinInstanceNumber pulumi.IntPtrInput
	// Specifies the priority policy used to select target AZs when adjusting
	// the number of instances in an AS group. The value can be **EQUILIBRIUM_DISTRIBUTE** or **PICK_FIRST**.
	MultiAzScalingPolicy pulumi.StringPtrInput
	// Specifies an array of one or more network IDs. The system supports up to five networks.
	// The networks structure is documented below.
	Networks GroupNetworkArrayInput
	// schema: Deprecated; The notification mode has been canceled
	Notifications pulumi.StringArrayInput
	// Specifies the region in which to create the AS group.
	// If omitted, the provider-level region will be used. Changing this creates a new group.
	Region pulumi.StringPtrInput
	// Specifies the configuration ID which defines configurations
	// of instances in the AS group.
	ScalingConfigurationId pulumi.StringPtrInput
	// The name of the AS configuration to which the AS group belongs.
	ScalingConfigurationName pulumi.StringPtrInput
	// Specifies the name of the scaling group. The name can contain
	// letters, digits, underscores(_), and hyphens(-),and cannot exceed 64 characters.
	ScalingGroupName pulumi.StringPtrInput
	// Specifies an array of one or more security group IDs to associate with the group.
	// The securityGroups structure is documented below.
	SecurityGroups GroupSecurityGroupArrayInput
	// The status of the AS group.
	Status pulumi.StringPtrInput
	// Specifies the key/value pairs to associate with the AS group.
	Tags pulumi.StringMapInput
	// Specifies the VPC ID. Changing this creates a new group.
	VpcId pulumi.StringPtrInput
}

func (GroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*groupState)(nil)).Elem()
}

type groupArgs struct {
	// Specifies the IAM agency name. If you change the agency,
	// the new agency will be available for ECSs scaled out after the change.
	AgencyName *string `pulumi:"agencyName"`
	// Specifies the availability zones in which to create the instances in the
	// autoscaling group. If this field is not specified, the system will automatically specify one.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// schema: Deprecated; use availability_zones instead
	AvailableZones []string `pulumi:"availableZones"`
	// Specifies the cooling duration (in seconds). The value ranges from `0` to `86,400`.
	// Defaults to `300`.
	CoolDownTime *int `pulumi:"coolDownTime"`
	// Specifies whether to delete the instances in the AS group when deleting
	// the AS group. The options are **yes** and **no**.
	DeleteInstances *string `pulumi:"deleteInstances"`
	// Specifies whether to release the EIPs bound to ECSs when the ECSs are removed
	// from the AS group. Defaults to **false**.
	DeletePublicip *bool `pulumi:"deletePublicip"`
	// Specifies whether to delete the data disks attached to ECSs when the ECSs are removed.
	// Defaults to **false**.
	DeleteVolume *bool `pulumi:"deleteVolume"`
	// Specifies the description of the AS group.
	// The value can contain `0` to `256` characters.
	Description *string `pulumi:"description"`
	// Specifies the expected number of instances. The default value is the
	// minimum number of instances. The value ranges from the minimum number of instances to the maximum number of instances.
	DesireInstanceNumber *int `pulumi:"desireInstanceNumber"`
	// Specifies whether to enable the AS Group. Defaults to **true**.
	Enable *bool `pulumi:"enable"`
	// Specifies the enterprise project ID of the AS group.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies whether to forcibly delete the AS group, remove the ECS instances and
	// release them. Defaults to **false**.
	ForceDelete *bool `pulumi:"forceDelete"`
	// Specifies the health check grace period for instances.
	// The unit is second and the value ranges from `0` to `86,400`. Defaults to `600`.
	HealthPeriodicAuditGracePeriod *int `pulumi:"healthPeriodicAuditGracePeriod"`
	// Specifies the health check method for instances in the AS group.
	// The health check methods include **ELB_AUDIT** and **NOVA_AUDIT**. If load balancing is configured, the default value of
	// this parameter is **ELB_AUDIT**. Otherwise, the default value is **NOVA_AUDIT**.
	HealthPeriodicAuditMethod *string `pulumi:"healthPeriodicAuditMethod"`
	// Specifies the health check period for instances. The unit is minute
	// and value includes **0**, **1**, **5** (default), **15**, **60**, and **180**.
	// If the value is set to **0**, health check is performed every 10 seconds.
	HealthPeriodicAuditTime *int `pulumi:"healthPeriodicAuditTime"`
	// Specifies the instance removal policy. The policy has four
	// options: **OLD_CONFIG_OLD_INSTANCE** (default), **OLD_CONFIG_NEW_INSTANCE**, **OLD_INSTANCE**, and **NEW_INSTANCE**.
	InstanceTerminatePolicy *string `pulumi:"instanceTerminatePolicy"`
	// The system supports the binding of up to six ELB listeners, the IDs of which are separated using a comma.
	//
	// Deprecated: use lbaas_listeners instead
	LbListenerId *string `pulumi:"lbListenerId"`
	// Specifies an array of one or more enhanced load balancer. The system supports
	// the binding of up to six load balancers. The lbaasListeners structure is documented below.
	LbaasListeners []GroupLbaasListener `pulumi:"lbaasListeners"`
	// Specifies the maximum number of instances. The value ranges from `0` to `300`.
	// Defaults to `0`.
	MaxInstanceNumber *int `pulumi:"maxInstanceNumber"`
	// Specifies the minimum number of instances. Defaults to `0`.
	MinInstanceNumber *int `pulumi:"minInstanceNumber"`
	// Specifies the priority policy used to select target AZs when adjusting
	// the number of instances in an AS group. The value can be **EQUILIBRIUM_DISTRIBUTE** or **PICK_FIRST**.
	MultiAzScalingPolicy *string `pulumi:"multiAzScalingPolicy"`
	// Specifies an array of one or more network IDs. The system supports up to five networks.
	// The networks structure is documented below.
	Networks []GroupNetwork `pulumi:"networks"`
	// schema: Deprecated; The notification mode has been canceled
	Notifications []string `pulumi:"notifications"`
	// Specifies the region in which to create the AS group.
	// If omitted, the provider-level region will be used. Changing this creates a new group.
	Region *string `pulumi:"region"`
	// Specifies the configuration ID which defines configurations
	// of instances in the AS group.
	ScalingConfigurationId *string `pulumi:"scalingConfigurationId"`
	// Specifies the name of the scaling group. The name can contain
	// letters, digits, underscores(_), and hyphens(-),and cannot exceed 64 characters.
	ScalingGroupName string `pulumi:"scalingGroupName"`
	// Specifies an array of one or more security group IDs to associate with the group.
	// The securityGroups structure is documented below.
	SecurityGroups []GroupSecurityGroup `pulumi:"securityGroups"`
	// Specifies the key/value pairs to associate with the AS group.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the VPC ID. Changing this creates a new group.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a Group resource.
type GroupArgs struct {
	// Specifies the IAM agency name. If you change the agency,
	// the new agency will be available for ECSs scaled out after the change.
	AgencyName pulumi.StringPtrInput
	// Specifies the availability zones in which to create the instances in the
	// autoscaling group. If this field is not specified, the system will automatically specify one.
	AvailabilityZones pulumi.StringArrayInput
	// schema: Deprecated; use availability_zones instead
	AvailableZones pulumi.StringArrayInput
	// Specifies the cooling duration (in seconds). The value ranges from `0` to `86,400`.
	// Defaults to `300`.
	CoolDownTime pulumi.IntPtrInput
	// Specifies whether to delete the instances in the AS group when deleting
	// the AS group. The options are **yes** and **no**.
	DeleteInstances pulumi.StringPtrInput
	// Specifies whether to release the EIPs bound to ECSs when the ECSs are removed
	// from the AS group. Defaults to **false**.
	DeletePublicip pulumi.BoolPtrInput
	// Specifies whether to delete the data disks attached to ECSs when the ECSs are removed.
	// Defaults to **false**.
	DeleteVolume pulumi.BoolPtrInput
	// Specifies the description of the AS group.
	// The value can contain `0` to `256` characters.
	Description pulumi.StringPtrInput
	// Specifies the expected number of instances. The default value is the
	// minimum number of instances. The value ranges from the minimum number of instances to the maximum number of instances.
	DesireInstanceNumber pulumi.IntPtrInput
	// Specifies whether to enable the AS Group. Defaults to **true**.
	Enable pulumi.BoolPtrInput
	// Specifies the enterprise project ID of the AS group.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies whether to forcibly delete the AS group, remove the ECS instances and
	// release them. Defaults to **false**.
	ForceDelete pulumi.BoolPtrInput
	// Specifies the health check grace period for instances.
	// The unit is second and the value ranges from `0` to `86,400`. Defaults to `600`.
	HealthPeriodicAuditGracePeriod pulumi.IntPtrInput
	// Specifies the health check method for instances in the AS group.
	// The health check methods include **ELB_AUDIT** and **NOVA_AUDIT**. If load balancing is configured, the default value of
	// this parameter is **ELB_AUDIT**. Otherwise, the default value is **NOVA_AUDIT**.
	HealthPeriodicAuditMethod pulumi.StringPtrInput
	// Specifies the health check period for instances. The unit is minute
	// and value includes **0**, **1**, **5** (default), **15**, **60**, and **180**.
	// If the value is set to **0**, health check is performed every 10 seconds.
	HealthPeriodicAuditTime pulumi.IntPtrInput
	// Specifies the instance removal policy. The policy has four
	// options: **OLD_CONFIG_OLD_INSTANCE** (default), **OLD_CONFIG_NEW_INSTANCE**, **OLD_INSTANCE**, and **NEW_INSTANCE**.
	InstanceTerminatePolicy pulumi.StringPtrInput
	// The system supports the binding of up to six ELB listeners, the IDs of which are separated using a comma.
	//
	// Deprecated: use lbaas_listeners instead
	LbListenerId pulumi.StringPtrInput
	// Specifies an array of one or more enhanced load balancer. The system supports
	// the binding of up to six load balancers. The lbaasListeners structure is documented below.
	LbaasListeners GroupLbaasListenerArrayInput
	// Specifies the maximum number of instances. The value ranges from `0` to `300`.
	// Defaults to `0`.
	MaxInstanceNumber pulumi.IntPtrInput
	// Specifies the minimum number of instances. Defaults to `0`.
	MinInstanceNumber pulumi.IntPtrInput
	// Specifies the priority policy used to select target AZs when adjusting
	// the number of instances in an AS group. The value can be **EQUILIBRIUM_DISTRIBUTE** or **PICK_FIRST**.
	MultiAzScalingPolicy pulumi.StringPtrInput
	// Specifies an array of one or more network IDs. The system supports up to five networks.
	// The networks structure is documented below.
	Networks GroupNetworkArrayInput
	// schema: Deprecated; The notification mode has been canceled
	Notifications pulumi.StringArrayInput
	// Specifies the region in which to create the AS group.
	// If omitted, the provider-level region will be used. Changing this creates a new group.
	Region pulumi.StringPtrInput
	// Specifies the configuration ID which defines configurations
	// of instances in the AS group.
	ScalingConfigurationId pulumi.StringPtrInput
	// Specifies the name of the scaling group. The name can contain
	// letters, digits, underscores(_), and hyphens(-),and cannot exceed 64 characters.
	ScalingGroupName pulumi.StringInput
	// Specifies an array of one or more security group IDs to associate with the group.
	// The securityGroups structure is documented below.
	SecurityGroups GroupSecurityGroupArrayInput
	// Specifies the key/value pairs to associate with the AS group.
	Tags pulumi.StringMapInput
	// Specifies the VPC ID. Changing this creates a new group.
	VpcId pulumi.StringInput
}

func (GroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*groupArgs)(nil)).Elem()
}

type GroupInput interface {
	pulumi.Input

	ToGroupOutput() GroupOutput
	ToGroupOutputWithContext(ctx context.Context) GroupOutput
}

func (*Group) ElementType() reflect.Type {
	return reflect.TypeOf((**Group)(nil)).Elem()
}

func (i *Group) ToGroupOutput() GroupOutput {
	return i.ToGroupOutputWithContext(context.Background())
}

func (i *Group) ToGroupOutputWithContext(ctx context.Context) GroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupOutput)
}

// GroupArrayInput is an input type that accepts GroupArray and GroupArrayOutput values.
// You can construct a concrete instance of `GroupArrayInput` via:
//
//	GroupArray{ GroupArgs{...} }
type GroupArrayInput interface {
	pulumi.Input

	ToGroupArrayOutput() GroupArrayOutput
	ToGroupArrayOutputWithContext(context.Context) GroupArrayOutput
}

type GroupArray []GroupInput

func (GroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Group)(nil)).Elem()
}

func (i GroupArray) ToGroupArrayOutput() GroupArrayOutput {
	return i.ToGroupArrayOutputWithContext(context.Background())
}

func (i GroupArray) ToGroupArrayOutputWithContext(ctx context.Context) GroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupArrayOutput)
}

// GroupMapInput is an input type that accepts GroupMap and GroupMapOutput values.
// You can construct a concrete instance of `GroupMapInput` via:
//
//	GroupMap{ "key": GroupArgs{...} }
type GroupMapInput interface {
	pulumi.Input

	ToGroupMapOutput() GroupMapOutput
	ToGroupMapOutputWithContext(context.Context) GroupMapOutput
}

type GroupMap map[string]GroupInput

func (GroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Group)(nil)).Elem()
}

func (i GroupMap) ToGroupMapOutput() GroupMapOutput {
	return i.ToGroupMapOutputWithContext(context.Background())
}

func (i GroupMap) ToGroupMapOutputWithContext(ctx context.Context) GroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMapOutput)
}

type GroupOutput struct{ *pulumi.OutputState }

func (GroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Group)(nil)).Elem()
}

func (o GroupOutput) ToGroupOutput() GroupOutput {
	return o
}

func (o GroupOutput) ToGroupOutputWithContext(ctx context.Context) GroupOutput {
	return o
}

// The scaling activity type of the AS group.
func (o GroupOutput) ActivityType() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.ActivityType }).(pulumi.StringOutput)
}

// Specifies the IAM agency name. If you change the agency,
// the new agency will be available for ECSs scaled out after the change.
func (o GroupOutput) AgencyName() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.AgencyName }).(pulumi.StringOutput)
}

// Specifies the availability zones in which to create the instances in the
// autoscaling group. If this field is not specified, the system will automatically specify one.
func (o GroupOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Group) pulumi.StringArrayOutput { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// schema: Deprecated; use availability_zones instead
func (o GroupOutput) AvailableZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Group) pulumi.StringArrayOutput { return v.AvailableZones }).(pulumi.StringArrayOutput)
}

// Specifies the cooling duration (in seconds). The value ranges from `0` to `86,400`.
// Defaults to `300`.
func (o GroupOutput) CoolDownTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.IntPtrOutput { return v.CoolDownTime }).(pulumi.IntPtrOutput)
}

// The creation time of the AS group.
func (o GroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The number of current instances in the AS group.
func (o GroupOutput) CurrentInstanceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *Group) pulumi.IntOutput { return v.CurrentInstanceNumber }).(pulumi.IntOutput)
}

// Specifies whether to delete the instances in the AS group when deleting
// the AS group. The options are **yes** and **no**.
func (o GroupOutput) DeleteInstances() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.StringPtrOutput { return v.DeleteInstances }).(pulumi.StringPtrOutput)
}

// Specifies whether to release the EIPs bound to ECSs when the ECSs are removed
// from the AS group. Defaults to **false**.
func (o GroupOutput) DeletePublicip() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.BoolPtrOutput { return v.DeletePublicip }).(pulumi.BoolPtrOutput)
}

// Specifies whether to delete the data disks attached to ECSs when the ECSs are removed.
// Defaults to **false**.
func (o GroupOutput) DeleteVolume() pulumi.BoolOutput {
	return o.ApplyT(func(v *Group) pulumi.BoolOutput { return v.DeleteVolume }).(pulumi.BoolOutput)
}

// Specifies the description of the AS group.
// The value can contain `0` to `256` characters.
func (o GroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Specifies the expected number of instances. The default value is the
// minimum number of instances. The value ranges from the minimum number of instances to the maximum number of instances.
func (o GroupOutput) DesireInstanceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *Group) pulumi.IntOutput { return v.DesireInstanceNumber }).(pulumi.IntOutput)
}

// The details about the AS group. If a scaling action fails, this parameter is used to record errors.
func (o GroupOutput) Detail() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.Detail }).(pulumi.StringOutput)
}

// Specifies whether to enable the AS Group. Defaults to **true**.
func (o GroupOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.BoolPtrOutput { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Specifies the enterprise project ID of the AS group.
func (o GroupOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// Specifies whether to forcibly delete the AS group, remove the ECS instances and
// release them. Defaults to **false**.
func (o GroupOutput) ForceDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.BoolPtrOutput { return v.ForceDelete }).(pulumi.BoolPtrOutput)
}

// Specifies the health check grace period for instances.
// The unit is second and the value ranges from `0` to `86,400`. Defaults to `600`.
func (o GroupOutput) HealthPeriodicAuditGracePeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *Group) pulumi.IntOutput { return v.HealthPeriodicAuditGracePeriod }).(pulumi.IntOutput)
}

// Specifies the health check method for instances in the AS group.
// The health check methods include **ELB_AUDIT** and **NOVA_AUDIT**. If load balancing is configured, the default value of
// this parameter is **ELB_AUDIT**. Otherwise, the default value is **NOVA_AUDIT**.
func (o GroupOutput) HealthPeriodicAuditMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.StringPtrOutput { return v.HealthPeriodicAuditMethod }).(pulumi.StringPtrOutput)
}

// Specifies the health check period for instances. The unit is minute
// and value includes **0**, **1**, **5** (default), **15**, **60**, and **180**.
// If the value is set to **0**, health check is performed every 10 seconds.
func (o GroupOutput) HealthPeriodicAuditTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.IntPtrOutput { return v.HealthPeriodicAuditTime }).(pulumi.IntPtrOutput)
}

// Specifies the instance removal policy. The policy has four
// options: **OLD_CONFIG_OLD_INSTANCE** (default), **OLD_CONFIG_NEW_INSTANCE**, **OLD_INSTANCE**, and **NEW_INSTANCE**.
func (o GroupOutput) InstanceTerminatePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.StringPtrOutput { return v.InstanceTerminatePolicy }).(pulumi.StringPtrOutput)
}

// The instances IDs of the AS group.
func (o GroupOutput) Instances() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Group) pulumi.StringArrayOutput { return v.Instances }).(pulumi.StringArrayOutput)
}

// The scaling flag of the AS group.
func (o GroupOutput) IsScaling() pulumi.BoolOutput {
	return o.ApplyT(func(v *Group) pulumi.BoolOutput { return v.IsScaling }).(pulumi.BoolOutput)
}

// The system supports the binding of up to six ELB listeners, the IDs of which are separated using a comma.
//
// Deprecated: use lbaas_listeners instead
func (o GroupOutput) LbListenerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.StringPtrOutput { return v.LbListenerId }).(pulumi.StringPtrOutput)
}

// Specifies an array of one or more enhanced load balancer. The system supports
// the binding of up to six load balancers. The lbaasListeners structure is documented below.
func (o GroupOutput) LbaasListeners() GroupLbaasListenerArrayOutput {
	return o.ApplyT(func(v *Group) GroupLbaasListenerArrayOutput { return v.LbaasListeners }).(GroupLbaasListenerArrayOutput)
}

// Specifies the maximum number of instances. The value ranges from `0` to `300`.
// Defaults to `0`.
func (o GroupOutput) MaxInstanceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.IntPtrOutput { return v.MaxInstanceNumber }).(pulumi.IntPtrOutput)
}

// Specifies the minimum number of instances. Defaults to `0`.
func (o GroupOutput) MinInstanceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.IntPtrOutput { return v.MinInstanceNumber }).(pulumi.IntPtrOutput)
}

// Specifies the priority policy used to select target AZs when adjusting
// the number of instances in an AS group. The value can be **EQUILIBRIUM_DISTRIBUTE** or **PICK_FIRST**.
func (o GroupOutput) MultiAzScalingPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.MultiAzScalingPolicy }).(pulumi.StringOutput)
}

// Specifies an array of one or more network IDs. The system supports up to five networks.
// The networks structure is documented below.
func (o GroupOutput) Networks() GroupNetworkArrayOutput {
	return o.ApplyT(func(v *Group) GroupNetworkArrayOutput { return v.Networks }).(GroupNetworkArrayOutput)
}

// schema: Deprecated; The notification mode has been canceled
func (o GroupOutput) Notifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Group) pulumi.StringArrayOutput { return v.Notifications }).(pulumi.StringArrayOutput)
}

// Specifies the region in which to create the AS group.
// If omitted, the provider-level region will be used. Changing this creates a new group.
func (o GroupOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the configuration ID which defines configurations
// of instances in the AS group.
func (o GroupOutput) ScalingConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.ScalingConfigurationId }).(pulumi.StringOutput)
}

// The name of the AS configuration to which the AS group belongs.
func (o GroupOutput) ScalingConfigurationName() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.ScalingConfigurationName }).(pulumi.StringOutput)
}

// Specifies the name of the scaling group. The name can contain
// letters, digits, underscores(_), and hyphens(-),and cannot exceed 64 characters.
func (o GroupOutput) ScalingGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.ScalingGroupName }).(pulumi.StringOutput)
}

// Specifies an array of one or more security group IDs to associate with the group.
// The securityGroups structure is documented below.
func (o GroupOutput) SecurityGroups() GroupSecurityGroupArrayOutput {
	return o.ApplyT(func(v *Group) GroupSecurityGroupArrayOutput { return v.SecurityGroups }).(GroupSecurityGroupArrayOutput)
}

// The status of the AS group.
func (o GroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the key/value pairs to associate with the AS group.
func (o GroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Group) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the VPC ID. Changing this creates a new group.
func (o GroupOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type GroupArrayOutput struct{ *pulumi.OutputState }

func (GroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Group)(nil)).Elem()
}

func (o GroupArrayOutput) ToGroupArrayOutput() GroupArrayOutput {
	return o
}

func (o GroupArrayOutput) ToGroupArrayOutputWithContext(ctx context.Context) GroupArrayOutput {
	return o
}

func (o GroupArrayOutput) Index(i pulumi.IntInput) GroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Group {
		return vs[0].([]*Group)[vs[1].(int)]
	}).(GroupOutput)
}

type GroupMapOutput struct{ *pulumi.OutputState }

func (GroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Group)(nil)).Elem()
}

func (o GroupMapOutput) ToGroupMapOutput() GroupMapOutput {
	return o
}

func (o GroupMapOutput) ToGroupMapOutputWithContext(ctx context.Context) GroupMapOutput {
	return o
}

func (o GroupMapOutput) MapIndex(k pulumi.StringInput) GroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Group {
		return vs[0].(map[string]*Group)[vs[1].(string)]
	}).(GroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GroupInput)(nil)).Elem(), &Group{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupArrayInput)(nil)).Elem(), GroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMapInput)(nil)).Elem(), GroupMap{})
	pulumi.RegisterOutputType(GroupOutput{})
	pulumi.RegisterOutputType(GroupArrayOutput{})
	pulumi.RegisterOutputType(GroupMapOutput{})
}
