# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['OmAccountActionArgs', 'OmAccountAction']

@pulumi.input_type
class OmAccountActionArgs:
    def __init__(__self__, *,
                 cluster_id: pulumi.Input[_builtins.str],
                 operation: pulumi.Input[_builtins.str],
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a OmAccountAction resource.
        :param pulumi.Input[_builtins.str] cluster_id: Specifies the DWS cluster ID.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] operation: Specifies the operation type of the OM account.
               Changing this creates a new resource.
               The valid values are as follows:
               + **addOmUser**: Turn on the OM account switch.
               + **deleteOmUser**: Turn off the OM account switch.
               + **increaseOmUserPeriod**: Extend the validity period of the OM account.
               
               > The **increaseOmUserPeriod** action is available only the OM account is enabled.
               Each time a resource is created, the account validity period is extended by `8` hours
               based on the current expiration time.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        """
        pulumi.set(__self__, "cluster_id", cluster_id)
        pulumi.set(__self__, "operation", operation)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the DWS cluster ID.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "cluster_id")

    @cluster_id.setter
    def cluster_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "cluster_id", value)

    @_builtins.property
    @pulumi.getter
    def operation(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the operation type of the OM account.
        Changing this creates a new resource.
        The valid values are as follows:
        + **addOmUser**: Turn on the OM account switch.
        + **deleteOmUser**: Turn off the OM account switch.
        + **increaseOmUserPeriod**: Extend the validity period of the OM account.

        > The **increaseOmUserPeriod** action is available only the OM account is enabled.
        Each time a resource is created, the account validity period is extended by `8` hours
        based on the current expiration time.
        """
        return pulumi.get(self, "operation")

    @operation.setter
    def operation(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "operation", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _OmAccountActionState:
    def __init__(__self__, *,
                 cluster_id: Optional[pulumi.Input[_builtins.str]] = None,
                 operation: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering OmAccountAction resources.
        :param pulumi.Input[_builtins.str] cluster_id: Specifies the DWS cluster ID.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] operation: Specifies the operation type of the OM account.
               Changing this creates a new resource.
               The valid values are as follows:
               + **addOmUser**: Turn on the OM account switch.
               + **deleteOmUser**: Turn off the OM account switch.
               + **increaseOmUserPeriod**: Extend the validity period of the OM account.
               
               > The **increaseOmUserPeriod** action is available only the OM account is enabled.
               Each time a resource is created, the account validity period is extended by `8` hours
               based on the current expiration time.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        """
        if cluster_id is not None:
            pulumi.set(__self__, "cluster_id", cluster_id)
        if operation is not None:
            pulumi.set(__self__, "operation", operation)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the DWS cluster ID.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "cluster_id")

    @cluster_id.setter
    def cluster_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cluster_id", value)

    @_builtins.property
    @pulumi.getter
    def operation(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the operation type of the OM account.
        Changing this creates a new resource.
        The valid values are as follows:
        + **addOmUser**: Turn on the OM account switch.
        + **deleteOmUser**: Turn off the OM account switch.
        + **increaseOmUserPeriod**: Extend the validity period of the OM account.

        > The **increaseOmUserPeriod** action is available only the OM account is enabled.
        Each time a resource is created, the account validity period is extended by `8` hours
        based on the current expiration time.
        """
        return pulumi.get(self, "operation")

    @operation.setter
    def operation(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "operation", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.type_token("huaweicloud:Dws/omAccountAction:OmAccountAction")
class OmAccountAction(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cluster_id: Optional[pulumi.Input[_builtins.str]] = None,
                 operation: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Use this resource to operate OM account for DWS cluster within HuaweiCloud.

        > 1. This resource is supported only in `8.1.3.110` or later.
        >       <br>2. This resource is only a one-time action resource for operating the OM account. Deleting this resource
        >       will not clear the corresponding request record, but will only remove the resource information from the tfstate file.

        ## Example Usage

        ### Turn on the OM account switch

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        dws_cluster_id = config.require_object("dwsClusterId")
        test = huaweicloud.dws.OmAccountAction("test",
            cluster_id=dws_cluster_id,
            operation="addOmUser")
        ```

        ### The validity period of the OM account is extended by 16 hours

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        dws_cluster_id = config.require_object("dwsClusterId")
        test = huaweicloud.dws.OmAccountAction("test",
            cluster_id=dws_cluster_id,
            operation="addOmUser")
        increase_period = []
        for range in [{"value": i} for i in range(0, 2)]:
            increase_period.append(huaweicloud.dws.OmAccountAction(f"increase_period-{range['value']}",
                cluster_id=dws_cluster_id,
                operation="increaseOmUserPeriod",
                opts = pulumi.ResourceOptions(depends_on=[test])))
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] cluster_id: Specifies the DWS cluster ID.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] operation: Specifies the operation type of the OM account.
               Changing this creates a new resource.
               The valid values are as follows:
               + **addOmUser**: Turn on the OM account switch.
               + **deleteOmUser**: Turn off the OM account switch.
               + **increaseOmUserPeriod**: Extend the validity period of the OM account.
               
               > The **increaseOmUserPeriod** action is available only the OM account is enabled.
               Each time a resource is created, the account validity period is extended by `8` hours
               based on the current expiration time.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OmAccountActionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Use this resource to operate OM account for DWS cluster within HuaweiCloud.

        > 1. This resource is supported only in `8.1.3.110` or later.
        >       <br>2. This resource is only a one-time action resource for operating the OM account. Deleting this resource
        >       will not clear the corresponding request record, but will only remove the resource information from the tfstate file.

        ## Example Usage

        ### Turn on the OM account switch

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        dws_cluster_id = config.require_object("dwsClusterId")
        test = huaweicloud.dws.OmAccountAction("test",
            cluster_id=dws_cluster_id,
            operation="addOmUser")
        ```

        ### The validity period of the OM account is extended by 16 hours

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        dws_cluster_id = config.require_object("dwsClusterId")
        test = huaweicloud.dws.OmAccountAction("test",
            cluster_id=dws_cluster_id,
            operation="addOmUser")
        increase_period = []
        for range in [{"value": i} for i in range(0, 2)]:
            increase_period.append(huaweicloud.dws.OmAccountAction(f"increase_period-{range['value']}",
                cluster_id=dws_cluster_id,
                operation="increaseOmUserPeriod",
                opts = pulumi.ResourceOptions(depends_on=[test])))
        ```

        :param str resource_name: The name of the resource.
        :param OmAccountActionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OmAccountActionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cluster_id: Optional[pulumi.Input[_builtins.str]] = None,
                 operation: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OmAccountActionArgs.__new__(OmAccountActionArgs)

            if cluster_id is None and not opts.urn:
                raise TypeError("Missing required property 'cluster_id'")
            __props__.__dict__["cluster_id"] = cluster_id
            if operation is None and not opts.urn:
                raise TypeError("Missing required property 'operation'")
            __props__.__dict__["operation"] = operation
            __props__.__dict__["region"] = region
        super(OmAccountAction, __self__).__init__(
            'huaweicloud:Dws/omAccountAction:OmAccountAction',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            cluster_id: Optional[pulumi.Input[_builtins.str]] = None,
            operation: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None) -> 'OmAccountAction':
        """
        Get an existing OmAccountAction resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] cluster_id: Specifies the DWS cluster ID.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] operation: Specifies the operation type of the OM account.
               Changing this creates a new resource.
               The valid values are as follows:
               + **addOmUser**: Turn on the OM account switch.
               + **deleteOmUser**: Turn off the OM account switch.
               + **increaseOmUserPeriod**: Extend the validity period of the OM account.
               
               > The **increaseOmUserPeriod** action is available only the OM account is enabled.
               Each time a resource is created, the account validity period is extended by `8` hours
               based on the current expiration time.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OmAccountActionState.__new__(_OmAccountActionState)

        __props__.__dict__["cluster_id"] = cluster_id
        __props__.__dict__["operation"] = operation
        __props__.__dict__["region"] = region
        return OmAccountAction(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the DWS cluster ID.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "cluster_id")

    @_builtins.property
    @pulumi.getter
    def operation(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the operation type of the OM account.
        Changing this creates a new resource.
        The valid values are as follows:
        + **addOmUser**: Turn on the OM account switch.
        + **deleteOmUser**: Turn off the OM account switch.
        + **increaseOmUserPeriod**: Extend the validity period of the OM account.

        > The **increaseOmUserPeriod** action is available only the OM account is enabled.
        Each time a resource is created, the account validity period is extended by `8` hours
        based on the current expiration time.
        """
        return pulumi.get(self, "operation")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

