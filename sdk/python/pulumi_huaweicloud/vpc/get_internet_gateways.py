# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetInternetGatewaysResult',
    'AwaitableGetInternetGatewaysResult',
    'get_internet_gateways',
    'get_internet_gateways_output',
]

@pulumi.output_type
class GetInternetGatewaysResult:
    """
    A collection of values returned by getInternetGateways.
    """
    def __init__(__self__, id=None, igw_id=None, igw_name=None, region=None, vpc_id=None, vpc_igws=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if igw_id and not isinstance(igw_id, str):
            raise TypeError("Expected argument 'igw_id' to be a str")
        pulumi.set(__self__, "igw_id", igw_id)
        if igw_name and not isinstance(igw_name, str):
            raise TypeError("Expected argument 'igw_name' to be a str")
        pulumi.set(__self__, "igw_name", igw_name)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if vpc_id and not isinstance(vpc_id, str):
            raise TypeError("Expected argument 'vpc_id' to be a str")
        pulumi.set(__self__, "vpc_id", vpc_id)
        if vpc_igws and not isinstance(vpc_igws, list):
            raise TypeError("Expected argument 'vpc_igws' to be a list")
        pulumi.set(__self__, "vpc_igws", vpc_igws)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="igwId")
    def igw_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "igw_id")

    @_builtins.property
    @pulumi.getter(name="igwName")
    def igw_name(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "igw_name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[_builtins.str]:
        """
        The VPC ID to which the IGW associated with.
        """
        return pulumi.get(self, "vpc_id")

    @_builtins.property
    @pulumi.getter(name="vpcIgws")
    def vpc_igws(self) -> Sequence['outputs.GetInternetGatewaysVpcIgwResult']:
        """
        The list of VPC IGWs.
        The vpc_igws structure is documented below.
        """
        return pulumi.get(self, "vpc_igws")


class AwaitableGetInternetGatewaysResult(GetInternetGatewaysResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInternetGatewaysResult(
            id=self.id,
            igw_id=self.igw_id,
            igw_name=self.igw_name,
            region=self.region,
            vpc_id=self.vpc_id,
            vpc_igws=self.vpc_igws)


def get_internet_gateways(igw_id: Optional[_builtins.str] = None,
                          igw_name: Optional[_builtins.str] = None,
                          region: Optional[_builtins.str] = None,
                          vpc_id: Optional[_builtins.str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInternetGatewaysResult:
    """
    Use this data source to get a list of VPC Internet gateways.

    ## Example Usage

    ### Example Usage of getting all IGWs

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    all = huaweicloud.Vpc.get_internet_gateways()
    ```

    ### Example Usage to filter specific IGWs

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    igw_name = config.require_object("igwName")
    filter_by_name = huaweicloud.Vpc.get_internet_gateways(igw_name=igw_name)
    ```


    :param _builtins.str igw_id: Specifies the IGW ID.
    :param _builtins.str igw_name: Specifies the IGW name.
    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    :param _builtins.str vpc_id: Specifies the VPC ID.
    """
    __args__ = dict()
    __args__['igwId'] = igw_id
    __args__['igwName'] = igw_name
    __args__['region'] = region
    __args__['vpcId'] = vpc_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Vpc/getInternetGateways:getInternetGateways', __args__, opts=opts, typ=GetInternetGatewaysResult).value

    return AwaitableGetInternetGatewaysResult(
        id=pulumi.get(__ret__, 'id'),
        igw_id=pulumi.get(__ret__, 'igw_id'),
        igw_name=pulumi.get(__ret__, 'igw_name'),
        region=pulumi.get(__ret__, 'region'),
        vpc_id=pulumi.get(__ret__, 'vpc_id'),
        vpc_igws=pulumi.get(__ret__, 'vpc_igws'))
def get_internet_gateways_output(igw_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                 igw_name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                 region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                 vpc_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                 opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetInternetGatewaysResult]:
    """
    Use this data source to get a list of VPC Internet gateways.

    ## Example Usage

    ### Example Usage of getting all IGWs

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    all = huaweicloud.Vpc.get_internet_gateways()
    ```

    ### Example Usage to filter specific IGWs

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    igw_name = config.require_object("igwName")
    filter_by_name = huaweicloud.Vpc.get_internet_gateways(igw_name=igw_name)
    ```


    :param _builtins.str igw_id: Specifies the IGW ID.
    :param _builtins.str igw_name: Specifies the IGW name.
    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    :param _builtins.str vpc_id: Specifies the VPC ID.
    """
    __args__ = dict()
    __args__['igwId'] = igw_id
    __args__['igwName'] = igw_name
    __args__['region'] = region
    __args__['vpcId'] = vpc_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Vpc/getInternetGateways:getInternetGateways', __args__, opts=opts, typ=GetInternetGatewaysResult)
    return __ret__.apply(lambda __response__: GetInternetGatewaysResult(
        id=pulumi.get(__response__, 'id'),
        igw_id=pulumi.get(__response__, 'igw_id'),
        igw_name=pulumi.get(__response__, 'igw_name'),
        region=pulumi.get(__response__, 'region'),
        vpc_id=pulumi.get(__response__, 'vpc_id'),
        vpc_igws=pulumi.get(__response__, 'vpc_igws')))
