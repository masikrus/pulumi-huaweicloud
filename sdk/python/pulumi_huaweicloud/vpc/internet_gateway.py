# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['InternetGatewayArgs', 'InternetGateway']

@pulumi.input_type
class InternetGatewayArgs:
    def __init__(__self__, *,
                 vpc_id: pulumi.Input[_builtins.str],
                 add_route: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_ipv6: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 subnet_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a InternetGateway resource.
        :param pulumi.Input[_builtins.str] vpc_id: Specifies the VPC ID which the IGW associated with. A VPC can only associate
               with one IGW. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] add_route: Specifies whether to add a default route pointing to the IGW in the default
               route table of the VPC with the destination address 0.0.0.0/0. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_ipv6: Specifies whether to enable IPv6. It's not allow change true to false. Make sure the
               subnet is enable IPv6 before setting to true.
        :param pulumi.Input[_builtins.str] name: Specifies the IGW name.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the IGW.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] subnet_id: Specifies the subnet ID which the IGW associated with.
               Changing this creates a new resource.
        """
        pulumi.set(__self__, "vpc_id", vpc_id)
        if add_route is not None:
            pulumi.set(__self__, "add_route", add_route)
        if enable_ipv6 is not None:
            pulumi.set(__self__, "enable_ipv6", enable_ipv6)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if subnet_id is not None:
            pulumi.set(__self__, "subnet_id", subnet_id)

    @_builtins.property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the VPC ID which the IGW associated with. A VPC can only associate
        with one IGW. Changing this creates a new resource.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "vpc_id", value)

    @_builtins.property
    @pulumi.getter(name="addRoute")
    def add_route(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to add a default route pointing to the IGW in the default
        route table of the VPC with the destination address 0.0.0.0/0. Changing this creates a new resource.
        """
        return pulumi.get(self, "add_route")

    @add_route.setter
    def add_route(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "add_route", value)

    @_builtins.property
    @pulumi.getter(name="enableIpv6")
    def enable_ipv6(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to enable IPv6. It's not allow change true to false. Make sure the
        subnet is enable IPv6 before setting to true.
        """
        return pulumi.get(self, "enable_ipv6")

    @enable_ipv6.setter
    def enable_ipv6(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_ipv6", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the IGW name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the IGW.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the subnet ID which the IGW associated with.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "subnet_id", value)


@pulumi.input_type
class _InternetGatewayState:
    def __init__(__self__, *,
                 add_route: Optional[pulumi.Input[_builtins.bool]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_ipv6: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 vpc_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering InternetGateway resources.
        :param pulumi.Input[_builtins.bool] add_route: Specifies whether to add a default route pointing to the IGW in the default
               route table of the VPC with the destination address 0.0.0.0/0. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] created_at: The create time of the IGW.
        :param pulumi.Input[_builtins.bool] enable_ipv6: Specifies whether to enable IPv6. It's not allow change true to false. Make sure the
               subnet is enable IPv6 before setting to true.
        :param pulumi.Input[_builtins.str] name: Specifies the IGW name.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the IGW.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] subnet_id: Specifies the subnet ID which the IGW associated with.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] updated_at: The update time of the IGW.
        :param pulumi.Input[_builtins.str] vpc_id: Specifies the VPC ID which the IGW associated with. A VPC can only associate
               with one IGW. Changing this creates a new resource.
        """
        if add_route is not None:
            pulumi.set(__self__, "add_route", add_route)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if enable_ipv6 is not None:
            pulumi.set(__self__, "enable_ipv6", enable_ipv6)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if subnet_id is not None:
            pulumi.set(__self__, "subnet_id", subnet_id)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if vpc_id is not None:
            pulumi.set(__self__, "vpc_id", vpc_id)

    @_builtins.property
    @pulumi.getter(name="addRoute")
    def add_route(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to add a default route pointing to the IGW in the default
        route table of the VPC with the destination address 0.0.0.0/0. Changing this creates a new resource.
        """
        return pulumi.get(self, "add_route")

    @add_route.setter
    def add_route(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "add_route", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The create time of the IGW.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="enableIpv6")
    def enable_ipv6(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to enable IPv6. It's not allow change true to false. Make sure the
        subnet is enable IPv6 before setting to true.
        """
        return pulumi.get(self, "enable_ipv6")

    @enable_ipv6.setter
    def enable_ipv6(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_ipv6", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the IGW name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the IGW.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the subnet ID which the IGW associated with.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "subnet_id", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The update time of the IGW.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the VPC ID which the IGW associated with. A VPC can only associate
        with one IGW. Changing this creates a new resource.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "vpc_id", value)


@pulumi.type_token("huaweicloud:Vpc/internetGateway:InternetGateway")
class InternetGateway(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 add_route: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_ipv6: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 vpc_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a VPC internet gateway resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        vpc_id = config.require_object("vpcId")
        igw_name = config.require_object("igwName")
        test = huaweicloud.vpc.InternetGateway("test",
            vpc_id=vpc_id,
            name=igw_name,
            add_route=True)
        ```

        ## Import

        The VPC internet gateway can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Vpc/internetGateway:InternetGateway test <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.bool] add_route: Specifies whether to add a default route pointing to the IGW in the default
               route table of the VPC with the destination address 0.0.0.0/0. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_ipv6: Specifies whether to enable IPv6. It's not allow change true to false. Make sure the
               subnet is enable IPv6 before setting to true.
        :param pulumi.Input[_builtins.str] name: Specifies the IGW name.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the IGW.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] subnet_id: Specifies the subnet ID which the IGW associated with.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] vpc_id: Specifies the VPC ID which the IGW associated with. A VPC can only associate
               with one IGW. Changing this creates a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: InternetGatewayArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a VPC internet gateway resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        vpc_id = config.require_object("vpcId")
        igw_name = config.require_object("igwName")
        test = huaweicloud.vpc.InternetGateway("test",
            vpc_id=vpc_id,
            name=igw_name,
            add_route=True)
        ```

        ## Import

        The VPC internet gateway can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Vpc/internetGateway:InternetGateway test <id>
        ```

        :param str resource_name: The name of the resource.
        :param InternetGatewayArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(InternetGatewayArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 add_route: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_ipv6: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 vpc_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = InternetGatewayArgs.__new__(InternetGatewayArgs)

            __props__.__dict__["add_route"] = add_route
            __props__.__dict__["enable_ipv6"] = enable_ipv6
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            __props__.__dict__["subnet_id"] = subnet_id
            if vpc_id is None and not opts.urn:
                raise TypeError("Missing required property 'vpc_id'")
            __props__.__dict__["vpc_id"] = vpc_id
            __props__.__dict__["created_at"] = None
            __props__.__dict__["updated_at"] = None
        super(InternetGateway, __self__).__init__(
            'huaweicloud:Vpc/internetGateway:InternetGateway',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            add_route: Optional[pulumi.Input[_builtins.bool]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            enable_ipv6: Optional[pulumi.Input[_builtins.bool]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            vpc_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'InternetGateway':
        """
        Get an existing InternetGateway resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.bool] add_route: Specifies whether to add a default route pointing to the IGW in the default
               route table of the VPC with the destination address 0.0.0.0/0. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] created_at: The create time of the IGW.
        :param pulumi.Input[_builtins.bool] enable_ipv6: Specifies whether to enable IPv6. It's not allow change true to false. Make sure the
               subnet is enable IPv6 before setting to true.
        :param pulumi.Input[_builtins.str] name: Specifies the IGW name.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the IGW.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] subnet_id: Specifies the subnet ID which the IGW associated with.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] updated_at: The update time of the IGW.
        :param pulumi.Input[_builtins.str] vpc_id: Specifies the VPC ID which the IGW associated with. A VPC can only associate
               with one IGW. Changing this creates a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _InternetGatewayState.__new__(_InternetGatewayState)

        __props__.__dict__["add_route"] = add_route
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["enable_ipv6"] = enable_ipv6
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["subnet_id"] = subnet_id
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["vpc_id"] = vpc_id
        return InternetGateway(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="addRoute")
    def add_route(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether to add a default route pointing to the IGW in the default
        route table of the VPC with the destination address 0.0.0.0/0. Changing this creates a new resource.
        """
        return pulumi.get(self, "add_route")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The create time of the IGW.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="enableIpv6")
    def enable_ipv6(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether to enable IPv6. It's not allow change true to false. Make sure the
        subnet is enable IPv6 before setting to true.
        """
        return pulumi.get(self, "enable_ipv6")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the IGW name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the IGW.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the subnet ID which the IGW associated with.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "subnet_id")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The update time of the IGW.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the VPC ID which the IGW associated with. A VPC can only associate
        with one IGW. Changing this creates a new resource.
        """
        return pulumi.get(self, "vpc_id")

