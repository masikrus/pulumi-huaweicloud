# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetEipCommonPoolsResult',
    'AwaitableGetEipCommonPoolsResult',
    'get_eip_common_pools',
    'get_eip_common_pools_output',
]

@pulumi.output_type
class GetEipCommonPoolsResult:
    """
    A collection of values returned by getEipCommonPools.
    """
    def __init__(__self__, common_pools=None, id=None, name=None, public_border_group=None, region=None):
        if common_pools and not isinstance(common_pools, list):
            raise TypeError("Expected argument 'common_pools' to be a list")
        pulumi.set(__self__, "common_pools", common_pools)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if public_border_group and not isinstance(public_border_group, str):
            raise TypeError("Expected argument 'public_border_group' to be a str")
        pulumi.set(__self__, "public_border_group", public_border_group)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="commonPools")
    def common_pools(self) -> Sequence['outputs.GetEipCommonPoolsCommonPoolResult']:
        """
        Indicates the common pools.
        """
        return pulumi.get(self, "common_pools")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        Indicates the common pool nameã€‚
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="publicBorderGroup")
    def public_border_group(self) -> Optional[_builtins.str]:
        """
        Indicates whether the common pool is at the center or at the edge.
        """
        return pulumi.get(self, "public_border_group")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetEipCommonPoolsResult(GetEipCommonPoolsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetEipCommonPoolsResult(
            common_pools=self.common_pools,
            id=self.id,
            name=self.name,
            public_border_group=self.public_border_group,
            region=self.region)


def get_eip_common_pools(name: Optional[_builtins.str] = None,
                         public_border_group: Optional[_builtins.str] = None,
                         region: Optional[_builtins.str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetEipCommonPoolsResult:
    """
    Use this data source to get a list of EIP common pools.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Vpc.get_eip_common_pools()
    ```


    :param _builtins.str name: Specifies the common pool name.
    :param _builtins.str public_border_group: Specifies whether the common pool is at the center or at the edge.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['publicBorderGroup'] = public_border_group
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Vpc/getEipCommonPools:getEipCommonPools', __args__, opts=opts, typ=GetEipCommonPoolsResult).value

    return AwaitableGetEipCommonPoolsResult(
        common_pools=pulumi.get(__ret__, 'common_pools'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        public_border_group=pulumi.get(__ret__, 'public_border_group'),
        region=pulumi.get(__ret__, 'region'))
def get_eip_common_pools_output(name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                public_border_group: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetEipCommonPoolsResult]:
    """
    Use this data source to get a list of EIP common pools.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Vpc.get_eip_common_pools()
    ```


    :param _builtins.str name: Specifies the common pool name.
    :param _builtins.str public_border_group: Specifies whether the common pool is at the center or at the edge.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['publicBorderGroup'] = public_border_group
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Vpc/getEipCommonPools:getEipCommonPools', __args__, opts=opts, typ=GetEipCommonPoolsResult)
    return __ret__.apply(lambda __response__: GetEipCommonPoolsResult(
        common_pools=pulumi.get(__response__, 'common_pools'),
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        public_border_group=pulumi.get(__response__, 'public_border_group'),
        region=pulumi.get(__response__, 'region')))
