# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['BandwidthAssociateArgs', 'BandwidthAssociate']

@pulumi.input_type
class BandwidthAssociateArgs:
    def __init__(__self__, *,
                 bandwidth_id: pulumi.Input[_builtins.str],
                 bandwidth_charge_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth_size: Optional[pulumi.Input[_builtins.int]] = None,
                 eip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 fixed_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 network_id: Optional[pulumi.Input[_builtins.str]] = None,
                 port_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a BandwidthAssociate resource.
        :param pulumi.Input[_builtins.str] bandwidth_id: Specifies the shared bandwidth ID to associate.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] bandwidth_charge_mode: Specifies the billing mode of the dedicated bandwidth used by the EIP that
               has been removed from a shared bandwidth. The value can be **bandwidth** or **traffic**. If not specified, the dedicated
               bandwidth will be billed by bandwidth.
        :param pulumi.Input[_builtins.int] bandwidth_size: Specifies the size (Mbit/s) of the dedicated bandwidth used by the EIP that
               has been removed from a shared bandwidth. The default bandwidth size is 5 Mbit/s.
        :param pulumi.Input[_builtins.str] eip_id: Specifies the ID of the EIP that uses the bandwidth.
               
               > Exactly one of `eip_id`, `port_id` and `fixed_ip` can be specified.
        :param pulumi.Input[_builtins.str] fixed_ip: Specifies a fixed **Ipv6** address to associate with the bandwidth.
        :param pulumi.Input[_builtins.str] network_id: Specifies the ID of the network to which the `fixed_ip` belongs.
               It is mandatory when `fixed_ip` is set.
        :param pulumi.Input[_builtins.str] port_id: Specifies the ID of the **Ipv6** port that uses the bandwidth.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to associate the bandwidth. If omitted,
               the provider-level region will be used. Changing this creates a new resource.
        """
        pulumi.set(__self__, "bandwidth_id", bandwidth_id)
        if bandwidth_charge_mode is not None:
            pulumi.set(__self__, "bandwidth_charge_mode", bandwidth_charge_mode)
        if bandwidth_size is not None:
            pulumi.set(__self__, "bandwidth_size", bandwidth_size)
        if eip_id is not None:
            pulumi.set(__self__, "eip_id", eip_id)
        if fixed_ip is not None:
            pulumi.set(__self__, "fixed_ip", fixed_ip)
        if network_id is not None:
            pulumi.set(__self__, "network_id", network_id)
        if port_id is not None:
            pulumi.set(__self__, "port_id", port_id)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="bandwidthId")
    def bandwidth_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the shared bandwidth ID to associate.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "bandwidth_id")

    @bandwidth_id.setter
    def bandwidth_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "bandwidth_id", value)

    @_builtins.property
    @pulumi.getter(name="bandwidthChargeMode")
    def bandwidth_charge_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the billing mode of the dedicated bandwidth used by the EIP that
        has been removed from a shared bandwidth. The value can be **bandwidth** or **traffic**. If not specified, the dedicated
        bandwidth will be billed by bandwidth.
        """
        return pulumi.get(self, "bandwidth_charge_mode")

    @bandwidth_charge_mode.setter
    def bandwidth_charge_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "bandwidth_charge_mode", value)

    @_builtins.property
    @pulumi.getter(name="bandwidthSize")
    def bandwidth_size(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the size (Mbit/s) of the dedicated bandwidth used by the EIP that
        has been removed from a shared bandwidth. The default bandwidth size is 5 Mbit/s.
        """
        return pulumi.get(self, "bandwidth_size")

    @bandwidth_size.setter
    def bandwidth_size(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "bandwidth_size", value)

    @_builtins.property
    @pulumi.getter(name="eipId")
    def eip_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the EIP that uses the bandwidth.

        > Exactly one of `eip_id`, `port_id` and `fixed_ip` can be specified.
        """
        return pulumi.get(self, "eip_id")

    @eip_id.setter
    def eip_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "eip_id", value)

    @_builtins.property
    @pulumi.getter(name="fixedIp")
    def fixed_ip(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies a fixed **Ipv6** address to associate with the bandwidth.
        """
        return pulumi.get(self, "fixed_ip")

    @fixed_ip.setter
    def fixed_ip(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "fixed_ip", value)

    @_builtins.property
    @pulumi.getter(name="networkId")
    def network_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the network to which the `fixed_ip` belongs.
        It is mandatory when `fixed_ip` is set.
        """
        return pulumi.get(self, "network_id")

    @network_id.setter
    def network_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "network_id", value)

    @_builtins.property
    @pulumi.getter(name="portId")
    def port_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the **Ipv6** port that uses the bandwidth.
        """
        return pulumi.get(self, "port_id")

    @port_id.setter
    def port_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "port_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to associate the bandwidth. If omitted,
        the provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _BandwidthAssociateState:
    def __init__(__self__, *,
                 bandwidth_charge_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth_id: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth_name: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth_size: Optional[pulumi.Input[_builtins.int]] = None,
                 eip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 fixed_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_version: Optional[pulumi.Input[_builtins.int]] = None,
                 network_id: Optional[pulumi.Input[_builtins.str]] = None,
                 port_id: Optional[pulumi.Input[_builtins.str]] = None,
                 public_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 public_ip_type: Optional[pulumi.Input[_builtins.str]] = None,
                 public_ipv6: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering BandwidthAssociate resources.
        :param pulumi.Input[_builtins.str] bandwidth_charge_mode: Specifies the billing mode of the dedicated bandwidth used by the EIP that
               has been removed from a shared bandwidth. The value can be **bandwidth** or **traffic**. If not specified, the dedicated
               bandwidth will be billed by bandwidth.
        :param pulumi.Input[_builtins.str] bandwidth_id: Specifies the shared bandwidth ID to associate.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] bandwidth_name: The shared bandwidth name.
        :param pulumi.Input[_builtins.int] bandwidth_size: Specifies the size (Mbit/s) of the dedicated bandwidth used by the EIP that
               has been removed from a shared bandwidth. The default bandwidth size is 5 Mbit/s.
        :param pulumi.Input[_builtins.str] eip_id: Specifies the ID of the EIP that uses the bandwidth.
               
               > Exactly one of `eip_id`, `port_id` and `fixed_ip` can be specified.
        :param pulumi.Input[_builtins.str] fixed_ip: Specifies a fixed **Ipv6** address to associate with the bandwidth.
        :param pulumi.Input[_builtins.int] ip_version: The IP version.
        :param pulumi.Input[_builtins.str] network_id: Specifies the ID of the network to which the `fixed_ip` belongs.
               It is mandatory when `fixed_ip` is set.
        :param pulumi.Input[_builtins.str] port_id: Specifies the ID of the **Ipv6** port that uses the bandwidth.
        :param pulumi.Input[_builtins.str] public_ip: The public IP address.
        :param pulumi.Input[_builtins.str] public_ip_type: The public IP type.
        :param pulumi.Input[_builtins.str] public_ipv6: The public IPv6 address.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to associate the bandwidth. If omitted,
               the provider-level region will be used. Changing this creates a new resource.
        """
        if bandwidth_charge_mode is not None:
            pulumi.set(__self__, "bandwidth_charge_mode", bandwidth_charge_mode)
        if bandwidth_id is not None:
            pulumi.set(__self__, "bandwidth_id", bandwidth_id)
        if bandwidth_name is not None:
            pulumi.set(__self__, "bandwidth_name", bandwidth_name)
        if bandwidth_size is not None:
            pulumi.set(__self__, "bandwidth_size", bandwidth_size)
        if eip_id is not None:
            pulumi.set(__self__, "eip_id", eip_id)
        if fixed_ip is not None:
            pulumi.set(__self__, "fixed_ip", fixed_ip)
        if ip_version is not None:
            pulumi.set(__self__, "ip_version", ip_version)
        if network_id is not None:
            pulumi.set(__self__, "network_id", network_id)
        if port_id is not None:
            pulumi.set(__self__, "port_id", port_id)
        if public_ip is not None:
            pulumi.set(__self__, "public_ip", public_ip)
        if public_ip_type is not None:
            pulumi.set(__self__, "public_ip_type", public_ip_type)
        if public_ipv6 is not None:
            pulumi.set(__self__, "public_ipv6", public_ipv6)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="bandwidthChargeMode")
    def bandwidth_charge_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the billing mode of the dedicated bandwidth used by the EIP that
        has been removed from a shared bandwidth. The value can be **bandwidth** or **traffic**. If not specified, the dedicated
        bandwidth will be billed by bandwidth.
        """
        return pulumi.get(self, "bandwidth_charge_mode")

    @bandwidth_charge_mode.setter
    def bandwidth_charge_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "bandwidth_charge_mode", value)

    @_builtins.property
    @pulumi.getter(name="bandwidthId")
    def bandwidth_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the shared bandwidth ID to associate.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "bandwidth_id")

    @bandwidth_id.setter
    def bandwidth_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "bandwidth_id", value)

    @_builtins.property
    @pulumi.getter(name="bandwidthName")
    def bandwidth_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The shared bandwidth name.
        """
        return pulumi.get(self, "bandwidth_name")

    @bandwidth_name.setter
    def bandwidth_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "bandwidth_name", value)

    @_builtins.property
    @pulumi.getter(name="bandwidthSize")
    def bandwidth_size(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the size (Mbit/s) of the dedicated bandwidth used by the EIP that
        has been removed from a shared bandwidth. The default bandwidth size is 5 Mbit/s.
        """
        return pulumi.get(self, "bandwidth_size")

    @bandwidth_size.setter
    def bandwidth_size(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "bandwidth_size", value)

    @_builtins.property
    @pulumi.getter(name="eipId")
    def eip_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the EIP that uses the bandwidth.

        > Exactly one of `eip_id`, `port_id` and `fixed_ip` can be specified.
        """
        return pulumi.get(self, "eip_id")

    @eip_id.setter
    def eip_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "eip_id", value)

    @_builtins.property
    @pulumi.getter(name="fixedIp")
    def fixed_ip(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies a fixed **Ipv6** address to associate with the bandwidth.
        """
        return pulumi.get(self, "fixed_ip")

    @fixed_ip.setter
    def fixed_ip(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "fixed_ip", value)

    @_builtins.property
    @pulumi.getter(name="ipVersion")
    def ip_version(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The IP version.
        """
        return pulumi.get(self, "ip_version")

    @ip_version.setter
    def ip_version(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ip_version", value)

    @_builtins.property
    @pulumi.getter(name="networkId")
    def network_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the network to which the `fixed_ip` belongs.
        It is mandatory when `fixed_ip` is set.
        """
        return pulumi.get(self, "network_id")

    @network_id.setter
    def network_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "network_id", value)

    @_builtins.property
    @pulumi.getter(name="portId")
    def port_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the **Ipv6** port that uses the bandwidth.
        """
        return pulumi.get(self, "port_id")

    @port_id.setter
    def port_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "port_id", value)

    @_builtins.property
    @pulumi.getter(name="publicIp")
    def public_ip(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The public IP address.
        """
        return pulumi.get(self, "public_ip")

    @public_ip.setter
    def public_ip(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "public_ip", value)

    @_builtins.property
    @pulumi.getter(name="publicIpType")
    def public_ip_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The public IP type.
        """
        return pulumi.get(self, "public_ip_type")

    @public_ip_type.setter
    def public_ip_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "public_ip_type", value)

    @_builtins.property
    @pulumi.getter(name="publicIpv6")
    def public_ipv6(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The public IPv6 address.
        """
        return pulumi.get(self, "public_ipv6")

    @public_ipv6.setter
    def public_ipv6(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "public_ipv6", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to associate the bandwidth. If omitted,
        the provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.type_token("huaweicloud:Vpc/bandwidthAssociate:BandwidthAssociate")
class BandwidthAssociate(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bandwidth_charge_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth_id: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth_size: Optional[pulumi.Input[_builtins.int]] = None,
                 eip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 fixed_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 network_id: Optional[pulumi.Input[_builtins.str]] = None,
                 port_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        ## Import

        Bandwidth associations can be imported using the `bandwidth_id` and `eip_id` separated by a slash or the `bandwidth_id`

        and `port_id` separated by a slash, or `bandwidth_id`, `network_id` and `fixed_ip` separated by slashes, e.g.:

        bash

        ```sh
        $ pulumi import huaweicloud:Vpc/bandwidthAssociate:BandwidthAssociate eip <bandwidth_id>/<eip_id>
        ```

        bash

        ```sh
        $ pulumi import huaweicloud:Vpc/bandwidthAssociate:BandwidthAssociate port <bandwidth_id>/<port_id>
        ```

        bash

        ```sh
        $ pulumi import huaweicloud:Vpc/bandwidthAssociate:BandwidthAssociate fixed_ip_v6 <bandwidth_id>/<network_id>/<fixed_ip>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] bandwidth_charge_mode: Specifies the billing mode of the dedicated bandwidth used by the EIP that
               has been removed from a shared bandwidth. The value can be **bandwidth** or **traffic**. If not specified, the dedicated
               bandwidth will be billed by bandwidth.
        :param pulumi.Input[_builtins.str] bandwidth_id: Specifies the shared bandwidth ID to associate.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] bandwidth_size: Specifies the size (Mbit/s) of the dedicated bandwidth used by the EIP that
               has been removed from a shared bandwidth. The default bandwidth size is 5 Mbit/s.
        :param pulumi.Input[_builtins.str] eip_id: Specifies the ID of the EIP that uses the bandwidth.
               
               > Exactly one of `eip_id`, `port_id` and `fixed_ip` can be specified.
        :param pulumi.Input[_builtins.str] fixed_ip: Specifies a fixed **Ipv6** address to associate with the bandwidth.
        :param pulumi.Input[_builtins.str] network_id: Specifies the ID of the network to which the `fixed_ip` belongs.
               It is mandatory when `fixed_ip` is set.
        :param pulumi.Input[_builtins.str] port_id: Specifies the ID of the **Ipv6** port that uses the bandwidth.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to associate the bandwidth. If omitted,
               the provider-level region will be used. Changing this creates a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: BandwidthAssociateArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        ## Import

        Bandwidth associations can be imported using the `bandwidth_id` and `eip_id` separated by a slash or the `bandwidth_id`

        and `port_id` separated by a slash, or `bandwidth_id`, `network_id` and `fixed_ip` separated by slashes, e.g.:

        bash

        ```sh
        $ pulumi import huaweicloud:Vpc/bandwidthAssociate:BandwidthAssociate eip <bandwidth_id>/<eip_id>
        ```

        bash

        ```sh
        $ pulumi import huaweicloud:Vpc/bandwidthAssociate:BandwidthAssociate port <bandwidth_id>/<port_id>
        ```

        bash

        ```sh
        $ pulumi import huaweicloud:Vpc/bandwidthAssociate:BandwidthAssociate fixed_ip_v6 <bandwidth_id>/<network_id>/<fixed_ip>
        ```

        :param str resource_name: The name of the resource.
        :param BandwidthAssociateArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(BandwidthAssociateArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bandwidth_charge_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth_id: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth_size: Optional[pulumi.Input[_builtins.int]] = None,
                 eip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 fixed_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 network_id: Optional[pulumi.Input[_builtins.str]] = None,
                 port_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = BandwidthAssociateArgs.__new__(BandwidthAssociateArgs)

            __props__.__dict__["bandwidth_charge_mode"] = bandwidth_charge_mode
            if bandwidth_id is None and not opts.urn:
                raise TypeError("Missing required property 'bandwidth_id'")
            __props__.__dict__["bandwidth_id"] = bandwidth_id
            __props__.__dict__["bandwidth_size"] = bandwidth_size
            __props__.__dict__["eip_id"] = eip_id
            __props__.__dict__["fixed_ip"] = fixed_ip
            __props__.__dict__["network_id"] = network_id
            __props__.__dict__["port_id"] = port_id
            __props__.__dict__["region"] = region
            __props__.__dict__["bandwidth_name"] = None
            __props__.__dict__["ip_version"] = None
            __props__.__dict__["public_ip"] = None
            __props__.__dict__["public_ip_type"] = None
            __props__.__dict__["public_ipv6"] = None
        super(BandwidthAssociate, __self__).__init__(
            'huaweicloud:Vpc/bandwidthAssociate:BandwidthAssociate',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            bandwidth_charge_mode: Optional[pulumi.Input[_builtins.str]] = None,
            bandwidth_id: Optional[pulumi.Input[_builtins.str]] = None,
            bandwidth_name: Optional[pulumi.Input[_builtins.str]] = None,
            bandwidth_size: Optional[pulumi.Input[_builtins.int]] = None,
            eip_id: Optional[pulumi.Input[_builtins.str]] = None,
            fixed_ip: Optional[pulumi.Input[_builtins.str]] = None,
            ip_version: Optional[pulumi.Input[_builtins.int]] = None,
            network_id: Optional[pulumi.Input[_builtins.str]] = None,
            port_id: Optional[pulumi.Input[_builtins.str]] = None,
            public_ip: Optional[pulumi.Input[_builtins.str]] = None,
            public_ip_type: Optional[pulumi.Input[_builtins.str]] = None,
            public_ipv6: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None) -> 'BandwidthAssociate':
        """
        Get an existing BandwidthAssociate resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] bandwidth_charge_mode: Specifies the billing mode of the dedicated bandwidth used by the EIP that
               has been removed from a shared bandwidth. The value can be **bandwidth** or **traffic**. If not specified, the dedicated
               bandwidth will be billed by bandwidth.
        :param pulumi.Input[_builtins.str] bandwidth_id: Specifies the shared bandwidth ID to associate.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] bandwidth_name: The shared bandwidth name.
        :param pulumi.Input[_builtins.int] bandwidth_size: Specifies the size (Mbit/s) of the dedicated bandwidth used by the EIP that
               has been removed from a shared bandwidth. The default bandwidth size is 5 Mbit/s.
        :param pulumi.Input[_builtins.str] eip_id: Specifies the ID of the EIP that uses the bandwidth.
               
               > Exactly one of `eip_id`, `port_id` and `fixed_ip` can be specified.
        :param pulumi.Input[_builtins.str] fixed_ip: Specifies a fixed **Ipv6** address to associate with the bandwidth.
        :param pulumi.Input[_builtins.int] ip_version: The IP version.
        :param pulumi.Input[_builtins.str] network_id: Specifies the ID of the network to which the `fixed_ip` belongs.
               It is mandatory when `fixed_ip` is set.
        :param pulumi.Input[_builtins.str] port_id: Specifies the ID of the **Ipv6** port that uses the bandwidth.
        :param pulumi.Input[_builtins.str] public_ip: The public IP address.
        :param pulumi.Input[_builtins.str] public_ip_type: The public IP type.
        :param pulumi.Input[_builtins.str] public_ipv6: The public IPv6 address.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to associate the bandwidth. If omitted,
               the provider-level region will be used. Changing this creates a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _BandwidthAssociateState.__new__(_BandwidthAssociateState)

        __props__.__dict__["bandwidth_charge_mode"] = bandwidth_charge_mode
        __props__.__dict__["bandwidth_id"] = bandwidth_id
        __props__.__dict__["bandwidth_name"] = bandwidth_name
        __props__.__dict__["bandwidth_size"] = bandwidth_size
        __props__.__dict__["eip_id"] = eip_id
        __props__.__dict__["fixed_ip"] = fixed_ip
        __props__.__dict__["ip_version"] = ip_version
        __props__.__dict__["network_id"] = network_id
        __props__.__dict__["port_id"] = port_id
        __props__.__dict__["public_ip"] = public_ip
        __props__.__dict__["public_ip_type"] = public_ip_type
        __props__.__dict__["public_ipv6"] = public_ipv6
        __props__.__dict__["region"] = region
        return BandwidthAssociate(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="bandwidthChargeMode")
    def bandwidth_charge_mode(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the billing mode of the dedicated bandwidth used by the EIP that
        has been removed from a shared bandwidth. The value can be **bandwidth** or **traffic**. If not specified, the dedicated
        bandwidth will be billed by bandwidth.
        """
        return pulumi.get(self, "bandwidth_charge_mode")

    @_builtins.property
    @pulumi.getter(name="bandwidthId")
    def bandwidth_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the shared bandwidth ID to associate.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "bandwidth_id")

    @_builtins.property
    @pulumi.getter(name="bandwidthName")
    def bandwidth_name(self) -> pulumi.Output[_builtins.str]:
        """
        The shared bandwidth name.
        """
        return pulumi.get(self, "bandwidth_name")

    @_builtins.property
    @pulumi.getter(name="bandwidthSize")
    def bandwidth_size(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        Specifies the size (Mbit/s) of the dedicated bandwidth used by the EIP that
        has been removed from a shared bandwidth. The default bandwidth size is 5 Mbit/s.
        """
        return pulumi.get(self, "bandwidth_size")

    @_builtins.property
    @pulumi.getter(name="eipId")
    def eip_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the ID of the EIP that uses the bandwidth.

        > Exactly one of `eip_id`, `port_id` and `fixed_ip` can be specified.
        """
        return pulumi.get(self, "eip_id")

    @_builtins.property
    @pulumi.getter(name="fixedIp")
    def fixed_ip(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies a fixed **Ipv6** address to associate with the bandwidth.
        """
        return pulumi.get(self, "fixed_ip")

    @_builtins.property
    @pulumi.getter(name="ipVersion")
    def ip_version(self) -> pulumi.Output[_builtins.int]:
        """
        The IP version.
        """
        return pulumi.get(self, "ip_version")

    @_builtins.property
    @pulumi.getter(name="networkId")
    def network_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the network to which the `fixed_ip` belongs.
        It is mandatory when `fixed_ip` is set.
        """
        return pulumi.get(self, "network_id")

    @_builtins.property
    @pulumi.getter(name="portId")
    def port_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the **Ipv6** port that uses the bandwidth.
        """
        return pulumi.get(self, "port_id")

    @_builtins.property
    @pulumi.getter(name="publicIp")
    def public_ip(self) -> pulumi.Output[_builtins.str]:
        """
        The public IP address.
        """
        return pulumi.get(self, "public_ip")

    @_builtins.property
    @pulumi.getter(name="publicIpType")
    def public_ip_type(self) -> pulumi.Output[_builtins.str]:
        """
        The public IP type.
        """
        return pulumi.get(self, "public_ip_type")

    @_builtins.property
    @pulumi.getter(name="publicIpv6")
    def public_ipv6(self) -> pulumi.Output[_builtins.str]:
        """
        The public IPv6 address.
        """
        return pulumi.get(self, "public_ipv6")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to associate the bandwidth. If omitted,
        the provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

