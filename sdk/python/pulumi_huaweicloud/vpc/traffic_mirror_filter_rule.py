# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['TrafficMirrorFilterRuleArgs', 'TrafficMirrorFilterRule']

@pulumi.input_type
class TrafficMirrorFilterRuleArgs:
    def __init__(__self__, *,
                 action: pulumi.Input[_builtins.str],
                 direction: pulumi.Input[_builtins.str],
                 ethertype: pulumi.Input[_builtins.str],
                 priority: pulumi.Input[_builtins.int],
                 protocol: pulumi.Input[_builtins.str],
                 traffic_mirror_filter_id: pulumi.Input[_builtins.str],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 destination_cidr_block: Optional[pulumi.Input[_builtins.str]] = None,
                 destination_port_range: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 source_cidr_block: Optional[pulumi.Input[_builtins.str]] = None,
                 source_port_range: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a TrafficMirrorFilterRule resource.
        :param pulumi.Input[_builtins.str] action: Specifies the policy of in the traffic mirror filter rule.
               Valid values are **accept** or **reject**.
        :param pulumi.Input[_builtins.str] direction: Specifies the direction of the traffic mirror filter rule.
               Valid values are **ingress** or **egress**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] ethertype: Specifies the IP address protocol type of the traffic mirror filter rule.
               Valid values are **IPv4** or **IPv6**.
        :param pulumi.Input[_builtins.int] priority: Specifies the priority number of the traffic mirror filter rule.
               Valid value ranges from `1` to `65,535`.
               The smaller the priority number, the higher the priority.
        :param pulumi.Input[_builtins.str] protocol: Specifies the protocol of the traffic mirror filter rule.
               Valid value are **tcp**, **udp**, **icmp**, **icmpv6**, **all**.
        :param pulumi.Input[_builtins.str] traffic_mirror_filter_id: Specifies an ID of the traffic mirror filter to which
               the rule belongs. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the traffic mirror filter rule.
        :param pulumi.Input[_builtins.str] destination_cidr_block: Specifies the destination IP address of the traffic traffic mirror filter
               rule.
        :param pulumi.Input[_builtins.str] destination_port_range: Specifies the destination port number range of the traffic mirror filter
               rule. The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] source_cidr_block: Specifies the source IP address of the traffic traffic mirror filter rule.
        :param pulumi.Input[_builtins.str] source_port_range: Specifies the source port number range of the traffic mirror filter rule.
               The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "direction", direction)
        pulumi.set(__self__, "ethertype", ethertype)
        pulumi.set(__self__, "priority", priority)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "traffic_mirror_filter_id", traffic_mirror_filter_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if destination_cidr_block is not None:
            pulumi.set(__self__, "destination_cidr_block", destination_cidr_block)
        if destination_port_range is not None:
            pulumi.set(__self__, "destination_port_range", destination_port_range)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if source_cidr_block is not None:
            pulumi.set(__self__, "source_cidr_block", source_cidr_block)
        if source_port_range is not None:
            pulumi.set(__self__, "source_port_range", source_port_range)

    @_builtins.property
    @pulumi.getter
    def action(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the policy of in the traffic mirror filter rule.
        Valid values are **accept** or **reject**.
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "action", value)

    @_builtins.property
    @pulumi.getter
    def direction(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the direction of the traffic mirror filter rule.
        Valid values are **ingress** or **egress**. Changing this creates a new resource.
        """
        return pulumi.get(self, "direction")

    @direction.setter
    def direction(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "direction", value)

    @_builtins.property
    @pulumi.getter
    def ethertype(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the IP address protocol type of the traffic mirror filter rule.
        Valid values are **IPv4** or **IPv6**.
        """
        return pulumi.get(self, "ethertype")

    @ethertype.setter
    def ethertype(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "ethertype", value)

    @_builtins.property
    @pulumi.getter
    def priority(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the priority number of the traffic mirror filter rule.
        Valid value ranges from `1` to `65,535`.
        The smaller the priority number, the higher the priority.
        """
        return pulumi.get(self, "priority")

    @priority.setter
    def priority(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "priority", value)

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the protocol of the traffic mirror filter rule.
        Valid value are **tcp**, **udp**, **icmp**, **icmpv6**, **all**.
        """
        return pulumi.get(self, "protocol")

    @protocol.setter
    def protocol(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "protocol", value)

    @_builtins.property
    @pulumi.getter(name="trafficMirrorFilterId")
    def traffic_mirror_filter_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies an ID of the traffic mirror filter to which
        the rule belongs. Changing this creates a new resource.
        """
        return pulumi.get(self, "traffic_mirror_filter_id")

    @traffic_mirror_filter_id.setter
    def traffic_mirror_filter_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "traffic_mirror_filter_id", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the traffic mirror filter rule.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="destinationCidrBlock")
    def destination_cidr_block(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the destination IP address of the traffic traffic mirror filter
        rule.
        """
        return pulumi.get(self, "destination_cidr_block")

    @destination_cidr_block.setter
    def destination_cidr_block(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "destination_cidr_block", value)

    @_builtins.property
    @pulumi.getter(name="destinationPortRange")
    def destination_port_range(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the destination port number range of the traffic mirror filter
        rule. The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
        """
        return pulumi.get(self, "destination_port_range")

    @destination_port_range.setter
    def destination_port_range(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "destination_port_range", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="sourceCidrBlock")
    def source_cidr_block(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the source IP address of the traffic traffic mirror filter rule.
        """
        return pulumi.get(self, "source_cidr_block")

    @source_cidr_block.setter
    def source_cidr_block(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_cidr_block", value)

    @_builtins.property
    @pulumi.getter(name="sourcePortRange")
    def source_port_range(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the source port number range of the traffic mirror filter rule.
        The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
        """
        return pulumi.get(self, "source_port_range")

    @source_port_range.setter
    def source_port_range(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_port_range", value)


@pulumi.input_type
class _TrafficMirrorFilterRuleState:
    def __init__(__self__, *,
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 destination_cidr_block: Optional[pulumi.Input[_builtins.str]] = None,
                 destination_port_range: Optional[pulumi.Input[_builtins.str]] = None,
                 direction: Optional[pulumi.Input[_builtins.str]] = None,
                 ethertype: Optional[pulumi.Input[_builtins.str]] = None,
                 priority: Optional[pulumi.Input[_builtins.int]] = None,
                 protocol: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 source_cidr_block: Optional[pulumi.Input[_builtins.str]] = None,
                 source_port_range: Optional[pulumi.Input[_builtins.str]] = None,
                 traffic_mirror_filter_id: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering TrafficMirrorFilterRule resources.
        :param pulumi.Input[_builtins.str] action: Specifies the policy of in the traffic mirror filter rule.
               Valid values are **accept** or **reject**.
        :param pulumi.Input[_builtins.str] created_at: The creation time of the traffic mirror filter rule.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the traffic mirror filter rule.
        :param pulumi.Input[_builtins.str] destination_cidr_block: Specifies the destination IP address of the traffic traffic mirror filter
               rule.
        :param pulumi.Input[_builtins.str] destination_port_range: Specifies the destination port number range of the traffic mirror filter
               rule. The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
        :param pulumi.Input[_builtins.str] direction: Specifies the direction of the traffic mirror filter rule.
               Valid values are **ingress** or **egress**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] ethertype: Specifies the IP address protocol type of the traffic mirror filter rule.
               Valid values are **IPv4** or **IPv6**.
        :param pulumi.Input[_builtins.int] priority: Specifies the priority number of the traffic mirror filter rule.
               Valid value ranges from `1` to `65,535`.
               The smaller the priority number, the higher the priority.
        :param pulumi.Input[_builtins.str] protocol: Specifies the protocol of the traffic mirror filter rule.
               Valid value are **tcp**, **udp**, **icmp**, **icmpv6**, **all**.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] source_cidr_block: Specifies the source IP address of the traffic traffic mirror filter rule.
        :param pulumi.Input[_builtins.str] source_port_range: Specifies the source port number range of the traffic mirror filter rule.
               The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
        :param pulumi.Input[_builtins.str] traffic_mirror_filter_id: Specifies an ID of the traffic mirror filter to which
               the rule belongs. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] updated_at: The latest update time of the traffic mirror filter rule.
        """
        if action is not None:
            pulumi.set(__self__, "action", action)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if destination_cidr_block is not None:
            pulumi.set(__self__, "destination_cidr_block", destination_cidr_block)
        if destination_port_range is not None:
            pulumi.set(__self__, "destination_port_range", destination_port_range)
        if direction is not None:
            pulumi.set(__self__, "direction", direction)
        if ethertype is not None:
            pulumi.set(__self__, "ethertype", ethertype)
        if priority is not None:
            pulumi.set(__self__, "priority", priority)
        if protocol is not None:
            pulumi.set(__self__, "protocol", protocol)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if source_cidr_block is not None:
            pulumi.set(__self__, "source_cidr_block", source_cidr_block)
        if source_port_range is not None:
            pulumi.set(__self__, "source_port_range", source_port_range)
        if traffic_mirror_filter_id is not None:
            pulumi.set(__self__, "traffic_mirror_filter_id", traffic_mirror_filter_id)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter
    def action(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the policy of in the traffic mirror filter rule.
        Valid values are **accept** or **reject**.
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "action", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The creation time of the traffic mirror filter rule.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the traffic mirror filter rule.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="destinationCidrBlock")
    def destination_cidr_block(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the destination IP address of the traffic traffic mirror filter
        rule.
        """
        return pulumi.get(self, "destination_cidr_block")

    @destination_cidr_block.setter
    def destination_cidr_block(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "destination_cidr_block", value)

    @_builtins.property
    @pulumi.getter(name="destinationPortRange")
    def destination_port_range(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the destination port number range of the traffic mirror filter
        rule. The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
        """
        return pulumi.get(self, "destination_port_range")

    @destination_port_range.setter
    def destination_port_range(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "destination_port_range", value)

    @_builtins.property
    @pulumi.getter
    def direction(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the direction of the traffic mirror filter rule.
        Valid values are **ingress** or **egress**. Changing this creates a new resource.
        """
        return pulumi.get(self, "direction")

    @direction.setter
    def direction(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "direction", value)

    @_builtins.property
    @pulumi.getter
    def ethertype(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the IP address protocol type of the traffic mirror filter rule.
        Valid values are **IPv4** or **IPv6**.
        """
        return pulumi.get(self, "ethertype")

    @ethertype.setter
    def ethertype(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ethertype", value)

    @_builtins.property
    @pulumi.getter
    def priority(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the priority number of the traffic mirror filter rule.
        Valid value ranges from `1` to `65,535`.
        The smaller the priority number, the higher the priority.
        """
        return pulumi.get(self, "priority")

    @priority.setter
    def priority(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "priority", value)

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the protocol of the traffic mirror filter rule.
        Valid value are **tcp**, **udp**, **icmp**, **icmpv6**, **all**.
        """
        return pulumi.get(self, "protocol")

    @protocol.setter
    def protocol(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "protocol", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="sourceCidrBlock")
    def source_cidr_block(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the source IP address of the traffic traffic mirror filter rule.
        """
        return pulumi.get(self, "source_cidr_block")

    @source_cidr_block.setter
    def source_cidr_block(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_cidr_block", value)

    @_builtins.property
    @pulumi.getter(name="sourcePortRange")
    def source_port_range(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the source port number range of the traffic mirror filter rule.
        The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
        """
        return pulumi.get(self, "source_port_range")

    @source_port_range.setter
    def source_port_range(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_port_range", value)

    @_builtins.property
    @pulumi.getter(name="trafficMirrorFilterId")
    def traffic_mirror_filter_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies an ID of the traffic mirror filter to which
        the rule belongs. Changing this creates a new resource.
        """
        return pulumi.get(self, "traffic_mirror_filter_id")

    @traffic_mirror_filter_id.setter
    def traffic_mirror_filter_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "traffic_mirror_filter_id", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The latest update time of the traffic mirror filter rule.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("huaweicloud:Vpc/trafficMirrorFilterRule:TrafficMirrorFilterRule")
class TrafficMirrorFilterRule(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 destination_cidr_block: Optional[pulumi.Input[_builtins.str]] = None,
                 destination_port_range: Optional[pulumi.Input[_builtins.str]] = None,
                 direction: Optional[pulumi.Input[_builtins.str]] = None,
                 ethertype: Optional[pulumi.Input[_builtins.str]] = None,
                 priority: Optional[pulumi.Input[_builtins.int]] = None,
                 protocol: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 source_cidr_block: Optional[pulumi.Input[_builtins.str]] = None,
                 source_port_range: Optional[pulumi.Input[_builtins.str]] = None,
                 traffic_mirror_filter_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a VPC traffic mirror filter rule resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        traffic_mirror_filter_id = config.require_object("trafficMirrorFilterId")
        test = huaweicloud.vpc.TrafficMirrorFilterRule("test",
            traffic_mirror_filter_id=traffic_mirror_filter_id,
            direction="ingress",
            protocol="tcp",
            ethertype="IPv4",
            action="accept",
            priority=1,
            source_cidr_block="10.0.0.0/8",
            source_port_range="80-90",
            destination_cidr_block="192.168.1.0/24",
            destination_port_range="10-65535")
        ```

        ## Import

        The traffic mirror filter rule can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Vpc/trafficMirrorFilterRule:TrafficMirrorFilterRule test <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] action: Specifies the policy of in the traffic mirror filter rule.
               Valid values are **accept** or **reject**.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the traffic mirror filter rule.
        :param pulumi.Input[_builtins.str] destination_cidr_block: Specifies the destination IP address of the traffic traffic mirror filter
               rule.
        :param pulumi.Input[_builtins.str] destination_port_range: Specifies the destination port number range of the traffic mirror filter
               rule. The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
        :param pulumi.Input[_builtins.str] direction: Specifies the direction of the traffic mirror filter rule.
               Valid values are **ingress** or **egress**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] ethertype: Specifies the IP address protocol type of the traffic mirror filter rule.
               Valid values are **IPv4** or **IPv6**.
        :param pulumi.Input[_builtins.int] priority: Specifies the priority number of the traffic mirror filter rule.
               Valid value ranges from `1` to `65,535`.
               The smaller the priority number, the higher the priority.
        :param pulumi.Input[_builtins.str] protocol: Specifies the protocol of the traffic mirror filter rule.
               Valid value are **tcp**, **udp**, **icmp**, **icmpv6**, **all**.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] source_cidr_block: Specifies the source IP address of the traffic traffic mirror filter rule.
        :param pulumi.Input[_builtins.str] source_port_range: Specifies the source port number range of the traffic mirror filter rule.
               The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
        :param pulumi.Input[_builtins.str] traffic_mirror_filter_id: Specifies an ID of the traffic mirror filter to which
               the rule belongs. Changing this creates a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: TrafficMirrorFilterRuleArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a VPC traffic mirror filter rule resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        traffic_mirror_filter_id = config.require_object("trafficMirrorFilterId")
        test = huaweicloud.vpc.TrafficMirrorFilterRule("test",
            traffic_mirror_filter_id=traffic_mirror_filter_id,
            direction="ingress",
            protocol="tcp",
            ethertype="IPv4",
            action="accept",
            priority=1,
            source_cidr_block="10.0.0.0/8",
            source_port_range="80-90",
            destination_cidr_block="192.168.1.0/24",
            destination_port_range="10-65535")
        ```

        ## Import

        The traffic mirror filter rule can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Vpc/trafficMirrorFilterRule:TrafficMirrorFilterRule test <id>
        ```

        :param str resource_name: The name of the resource.
        :param TrafficMirrorFilterRuleArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(TrafficMirrorFilterRuleArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 destination_cidr_block: Optional[pulumi.Input[_builtins.str]] = None,
                 destination_port_range: Optional[pulumi.Input[_builtins.str]] = None,
                 direction: Optional[pulumi.Input[_builtins.str]] = None,
                 ethertype: Optional[pulumi.Input[_builtins.str]] = None,
                 priority: Optional[pulumi.Input[_builtins.int]] = None,
                 protocol: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 source_cidr_block: Optional[pulumi.Input[_builtins.str]] = None,
                 source_port_range: Optional[pulumi.Input[_builtins.str]] = None,
                 traffic_mirror_filter_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = TrafficMirrorFilterRuleArgs.__new__(TrafficMirrorFilterRuleArgs)

            if action is None and not opts.urn:
                raise TypeError("Missing required property 'action'")
            __props__.__dict__["action"] = action
            __props__.__dict__["description"] = description
            __props__.__dict__["destination_cidr_block"] = destination_cidr_block
            __props__.__dict__["destination_port_range"] = destination_port_range
            if direction is None and not opts.urn:
                raise TypeError("Missing required property 'direction'")
            __props__.__dict__["direction"] = direction
            if ethertype is None and not opts.urn:
                raise TypeError("Missing required property 'ethertype'")
            __props__.__dict__["ethertype"] = ethertype
            if priority is None and not opts.urn:
                raise TypeError("Missing required property 'priority'")
            __props__.__dict__["priority"] = priority
            if protocol is None and not opts.urn:
                raise TypeError("Missing required property 'protocol'")
            __props__.__dict__["protocol"] = protocol
            __props__.__dict__["region"] = region
            __props__.__dict__["source_cidr_block"] = source_cidr_block
            __props__.__dict__["source_port_range"] = source_port_range
            if traffic_mirror_filter_id is None and not opts.urn:
                raise TypeError("Missing required property 'traffic_mirror_filter_id'")
            __props__.__dict__["traffic_mirror_filter_id"] = traffic_mirror_filter_id
            __props__.__dict__["created_at"] = None
            __props__.__dict__["updated_at"] = None
        super(TrafficMirrorFilterRule, __self__).__init__(
            'huaweicloud:Vpc/trafficMirrorFilterRule:TrafficMirrorFilterRule',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            action: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            destination_cidr_block: Optional[pulumi.Input[_builtins.str]] = None,
            destination_port_range: Optional[pulumi.Input[_builtins.str]] = None,
            direction: Optional[pulumi.Input[_builtins.str]] = None,
            ethertype: Optional[pulumi.Input[_builtins.str]] = None,
            priority: Optional[pulumi.Input[_builtins.int]] = None,
            protocol: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            source_cidr_block: Optional[pulumi.Input[_builtins.str]] = None,
            source_port_range: Optional[pulumi.Input[_builtins.str]] = None,
            traffic_mirror_filter_id: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'TrafficMirrorFilterRule':
        """
        Get an existing TrafficMirrorFilterRule resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] action: Specifies the policy of in the traffic mirror filter rule.
               Valid values are **accept** or **reject**.
        :param pulumi.Input[_builtins.str] created_at: The creation time of the traffic mirror filter rule.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the traffic mirror filter rule.
        :param pulumi.Input[_builtins.str] destination_cidr_block: Specifies the destination IP address of the traffic traffic mirror filter
               rule.
        :param pulumi.Input[_builtins.str] destination_port_range: Specifies the destination port number range of the traffic mirror filter
               rule. The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
        :param pulumi.Input[_builtins.str] direction: Specifies the direction of the traffic mirror filter rule.
               Valid values are **ingress** or **egress**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] ethertype: Specifies the IP address protocol type of the traffic mirror filter rule.
               Valid values are **IPv4** or **IPv6**.
        :param pulumi.Input[_builtins.int] priority: Specifies the priority number of the traffic mirror filter rule.
               Valid value ranges from `1` to `65,535`.
               The smaller the priority number, the higher the priority.
        :param pulumi.Input[_builtins.str] protocol: Specifies the protocol of the traffic mirror filter rule.
               Valid value are **tcp**, **udp**, **icmp**, **icmpv6**, **all**.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] source_cidr_block: Specifies the source IP address of the traffic traffic mirror filter rule.
        :param pulumi.Input[_builtins.str] source_port_range: Specifies the source port number range of the traffic mirror filter rule.
               The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
        :param pulumi.Input[_builtins.str] traffic_mirror_filter_id: Specifies an ID of the traffic mirror filter to which
               the rule belongs. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] updated_at: The latest update time of the traffic mirror filter rule.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _TrafficMirrorFilterRuleState.__new__(_TrafficMirrorFilterRuleState)

        __props__.__dict__["action"] = action
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["description"] = description
        __props__.__dict__["destination_cidr_block"] = destination_cidr_block
        __props__.__dict__["destination_port_range"] = destination_port_range
        __props__.__dict__["direction"] = direction
        __props__.__dict__["ethertype"] = ethertype
        __props__.__dict__["priority"] = priority
        __props__.__dict__["protocol"] = protocol
        __props__.__dict__["region"] = region
        __props__.__dict__["source_cidr_block"] = source_cidr_block
        __props__.__dict__["source_port_range"] = source_port_range
        __props__.__dict__["traffic_mirror_filter_id"] = traffic_mirror_filter_id
        __props__.__dict__["updated_at"] = updated_at
        return TrafficMirrorFilterRule(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def action(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the policy of in the traffic mirror filter rule.
        Valid values are **accept** or **reject**.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The creation time of the traffic mirror filter rule.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the description of the traffic mirror filter rule.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="destinationCidrBlock")
    def destination_cidr_block(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the destination IP address of the traffic traffic mirror filter
        rule.
        """
        return pulumi.get(self, "destination_cidr_block")

    @_builtins.property
    @pulumi.getter(name="destinationPortRange")
    def destination_port_range(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the destination port number range of the traffic mirror filter
        rule. The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
        """
        return pulumi.get(self, "destination_port_range")

    @_builtins.property
    @pulumi.getter
    def direction(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the direction of the traffic mirror filter rule.
        Valid values are **ingress** or **egress**. Changing this creates a new resource.
        """
        return pulumi.get(self, "direction")

    @_builtins.property
    @pulumi.getter
    def ethertype(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the IP address protocol type of the traffic mirror filter rule.
        Valid values are **IPv4** or **IPv6**.
        """
        return pulumi.get(self, "ethertype")

    @_builtins.property
    @pulumi.getter
    def priority(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the priority number of the traffic mirror filter rule.
        Valid value ranges from `1` to `65,535`.
        The smaller the priority number, the higher the priority.
        """
        return pulumi.get(self, "priority")

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the protocol of the traffic mirror filter rule.
        Valid value are **tcp**, **udp**, **icmp**, **icmpv6**, **all**.
        """
        return pulumi.get(self, "protocol")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="sourceCidrBlock")
    def source_cidr_block(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the source IP address of the traffic traffic mirror filter rule.
        """
        return pulumi.get(self, "source_cidr_block")

    @_builtins.property
    @pulumi.getter(name="sourcePortRange")
    def source_port_range(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the source port number range of the traffic mirror filter rule.
        The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
        """
        return pulumi.get(self, "source_port_range")

    @_builtins.property
    @pulumi.getter(name="trafficMirrorFilterId")
    def traffic_mirror_filter_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies an ID of the traffic mirror filter to which
        the rule belongs. Changing this creates a new resource.
        """
        return pulumi.get(self, "traffic_mirror_filter_id")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The latest update time of the traffic mirror filter rule.
        """
        return pulumi.get(self, "updated_at")

