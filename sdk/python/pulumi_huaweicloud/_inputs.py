# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'ProviderAssumeRoleArgs',
    'ProviderAssumeRoleArgsDict',
]

MYPY = False

if not MYPY:
    class ProviderAssumeRoleArgsDict(TypedDict):
        agency_name: pulumi.Input[_builtins.str]
        """
        The name of agency for assume role.
        """
        domain_id: NotRequired[pulumi.Input[_builtins.str]]
        """
        The id of domain for v5 assume role.
        """
        domain_name: NotRequired[pulumi.Input[_builtins.str]]
        """
        The name of domain for assume role.
        """
        duration: NotRequired[pulumi.Input[_builtins.int]]
        """
        The duration for v5 assume role.
        """
elif False:
    ProviderAssumeRoleArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class ProviderAssumeRoleArgs:
    def __init__(__self__, *,
                 agency_name: pulumi.Input[_builtins.str],
                 domain_id: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_name: Optional[pulumi.Input[_builtins.str]] = None,
                 duration: Optional[pulumi.Input[_builtins.int]] = None):
        """
        :param pulumi.Input[_builtins.str] agency_name: The name of agency for assume role.
        :param pulumi.Input[_builtins.str] domain_id: The id of domain for v5 assume role.
        :param pulumi.Input[_builtins.str] domain_name: The name of domain for assume role.
        :param pulumi.Input[_builtins.int] duration: The duration for v5 assume role.
        """
        pulumi.set(__self__, "agency_name", agency_name)
        if domain_id is not None:
            pulumi.set(__self__, "domain_id", domain_id)
        if domain_name is not None:
            pulumi.set(__self__, "domain_name", domain_name)
        if duration is not None:
            pulumi.set(__self__, "duration", duration)

    @_builtins.property
    @pulumi.getter(name="agencyName")
    def agency_name(self) -> pulumi.Input[_builtins.str]:
        """
        The name of agency for assume role.
        """
        return pulumi.get(self, "agency_name")

    @agency_name.setter
    def agency_name(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "agency_name", value)

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The id of domain for v5 assume role.
        """
        return pulumi.get(self, "domain_id")

    @domain_id.setter
    def domain_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "domain_id", value)

    @_builtins.property
    @pulumi.getter(name="domainName")
    def domain_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of domain for assume role.
        """
        return pulumi.get(self, "domain_name")

    @domain_name.setter
    def domain_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "domain_name", value)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The duration for v5 assume role.
        """
        return pulumi.get(self, "duration")

    @duration.setter
    def duration(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "duration", value)


