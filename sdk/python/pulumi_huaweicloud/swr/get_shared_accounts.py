# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetSharedAccountsResult',
    'AwaitableGetSharedAccountsResult',
    'get_shared_accounts',
    'get_shared_accounts_output',
]

@pulumi.output_type
class GetSharedAccountsResult:
    """
    A collection of values returned by getSharedAccounts.
    """
    def __init__(__self__, id=None, organization=None, region=None, repository=None, shared_accounts=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if organization and not isinstance(organization, str):
            raise TypeError("Expected argument 'organization' to be a str")
        pulumi.set(__self__, "organization", organization)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if repository and not isinstance(repository, str):
            raise TypeError("Expected argument 'repository' to be a str")
        pulumi.set(__self__, "repository", repository)
        if shared_accounts and not isinstance(shared_accounts, list):
            raise TypeError("Expected argument 'shared_accounts' to be a list")
        pulumi.set(__self__, "shared_accounts", shared_accounts)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def organization(self) -> _builtins.str:
        """
        The name of the organization to which the repository belongs.
        """
        return pulumi.get(self, "organization")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def repository(self) -> _builtins.str:
        """
        The name of the repository.
        """
        return pulumi.get(self, "repository")

    @_builtins.property
    @pulumi.getter(name="sharedAccounts")
    def shared_accounts(self) -> Sequence['outputs.GetSharedAccountsSharedAccountResult']:
        """
        All shared accounts that match the filter parameters.
        The shared_accounts structure is documented below.
        """
        return pulumi.get(self, "shared_accounts")


class AwaitableGetSharedAccountsResult(GetSharedAccountsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSharedAccountsResult(
            id=self.id,
            organization=self.organization,
            region=self.region,
            repository=self.repository,
            shared_accounts=self.shared_accounts)


def get_shared_accounts(organization: Optional[_builtins.str] = None,
                        region: Optional[_builtins.str] = None,
                        repository: Optional[_builtins.str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSharedAccountsResult:
    """
    Use this data source to get the list of shared accounts.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    organization = config.require_object("organization")
    repository = config.require_object("repository")
    test = huaweicloud.Swr.get_shared_accounts(organization=organization,
        repository=repository)
    ```


    :param _builtins.str organization: Specifies the name of the organization to which the repository belongs.
    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    :param _builtins.str repository: Specifies the name of the repository.
    """
    __args__ = dict()
    __args__['organization'] = organization
    __args__['region'] = region
    __args__['repository'] = repository
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Swr/getSharedAccounts:getSharedAccounts', __args__, opts=opts, typ=GetSharedAccountsResult).value

    return AwaitableGetSharedAccountsResult(
        id=pulumi.get(__ret__, 'id'),
        organization=pulumi.get(__ret__, 'organization'),
        region=pulumi.get(__ret__, 'region'),
        repository=pulumi.get(__ret__, 'repository'),
        shared_accounts=pulumi.get(__ret__, 'shared_accounts'))
def get_shared_accounts_output(organization: Optional[pulumi.Input[_builtins.str]] = None,
                               region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               repository: Optional[pulumi.Input[_builtins.str]] = None,
                               opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetSharedAccountsResult]:
    """
    Use this data source to get the list of shared accounts.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    organization = config.require_object("organization")
    repository = config.require_object("repository")
    test = huaweicloud.Swr.get_shared_accounts(organization=organization,
        repository=repository)
    ```


    :param _builtins.str organization: Specifies the name of the organization to which the repository belongs.
    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    :param _builtins.str repository: Specifies the name of the repository.
    """
    __args__ = dict()
    __args__['organization'] = organization
    __args__['region'] = region
    __args__['repository'] = repository
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Swr/getSharedAccounts:getSharedAccounts', __args__, opts=opts, typ=GetSharedAccountsResult)
    return __ret__.apply(lambda __response__: GetSharedAccountsResult(
        id=pulumi.get(__response__, 'id'),
        organization=pulumi.get(__response__, 'organization'),
        region=pulumi.get(__response__, 'region'),
        repository=pulumi.get(__response__, 'repository'),
        shared_accounts=pulumi.get(__response__, 'shared_accounts')))
