# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetDomainOverviewsResult',
    'AwaitableGetDomainOverviewsResult',
    'get_domain_overviews',
    'get_domain_overviews_output',
]

@pulumi.output_type
class GetDomainOverviewsResult:
    """
    A collection of values returned by getDomainOverviews.
    """
    def __init__(__self__, domain_id=None, domain_name=None, downflow_size=None, id=None, image_num=None, namspace_num=None, region=None, repo_num=None, store_space=None):
        if domain_id and not isinstance(domain_id, str):
            raise TypeError("Expected argument 'domain_id' to be a str")
        pulumi.set(__self__, "domain_id", domain_id)
        if domain_name and not isinstance(domain_name, str):
            raise TypeError("Expected argument 'domain_name' to be a str")
        pulumi.set(__self__, "domain_name", domain_name)
        if downflow_size and not isinstance(downflow_size, float):
            raise TypeError("Expected argument 'downflow_size' to be a float")
        pulumi.set(__self__, "downflow_size", downflow_size)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if image_num and not isinstance(image_num, int):
            raise TypeError("Expected argument 'image_num' to be a int")
        pulumi.set(__self__, "image_num", image_num)
        if namspace_num and not isinstance(namspace_num, int):
            raise TypeError("Expected argument 'namspace_num' to be a int")
        pulumi.set(__self__, "namspace_num", namspace_num)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if repo_num and not isinstance(repo_num, int):
            raise TypeError("Expected argument 'repo_num' to be a int")
        pulumi.set(__self__, "repo_num", repo_num)
        if store_space and not isinstance(store_space, float):
            raise TypeError("Expected argument 'store_space' to be a float")
        pulumi.set(__self__, "store_space", store_space)

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> _builtins.str:
        """
        The domain ID.
        """
        return pulumi.get(self, "domain_id")

    @_builtins.property
    @pulumi.getter(name="domainName")
    def domain_name(self) -> _builtins.str:
        """
        The domain name.
        """
        return pulumi.get(self, "domain_name")

    @_builtins.property
    @pulumi.getter(name="downflowSize")
    def downflow_size(self) -> _builtins.float:
        """
        The download traffic of the tenant.
        """
        return pulumi.get(self, "downflow_size")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="imageNum")
    def image_num(self) -> _builtins.int:
        """
        The number of images of the tenant.
        """
        return pulumi.get(self, "image_num")

    @_builtins.property
    @pulumi.getter(name="namspaceNum")
    def namspace_num(self) -> _builtins.int:
        """
        The number of namespaces of the tenant.
        """
        return pulumi.get(self, "namspace_num")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="repoNum")
    def repo_num(self) -> _builtins.int:
        """
        The number of repositories of the tenant.
        """
        return pulumi.get(self, "repo_num")

    @_builtins.property
    @pulumi.getter(name="storeSpace")
    def store_space(self) -> _builtins.float:
        """
        The storage size of the tenant.
        """
        return pulumi.get(self, "store_space")


class AwaitableGetDomainOverviewsResult(GetDomainOverviewsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDomainOverviewsResult(
            domain_id=self.domain_id,
            domain_name=self.domain_name,
            downflow_size=self.downflow_size,
            id=self.id,
            image_num=self.image_num,
            namspace_num=self.namspace_num,
            region=self.region,
            repo_num=self.repo_num,
            store_space=self.store_space)


def get_domain_overviews(region: Optional[_builtins.str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDomainOverviewsResult:
    """
    Use this data source to get the list of SWR domain information.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Swr.get_domain_overviews()
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Swr/getDomainOverviews:getDomainOverviews', __args__, opts=opts, typ=GetDomainOverviewsResult).value

    return AwaitableGetDomainOverviewsResult(
        domain_id=pulumi.get(__ret__, 'domain_id'),
        domain_name=pulumi.get(__ret__, 'domain_name'),
        downflow_size=pulumi.get(__ret__, 'downflow_size'),
        id=pulumi.get(__ret__, 'id'),
        image_num=pulumi.get(__ret__, 'image_num'),
        namspace_num=pulumi.get(__ret__, 'namspace_num'),
        region=pulumi.get(__ret__, 'region'),
        repo_num=pulumi.get(__ret__, 'repo_num'),
        store_space=pulumi.get(__ret__, 'store_space'))
def get_domain_overviews_output(region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetDomainOverviewsResult]:
    """
    Use this data source to get the list of SWR domain information.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Swr.get_domain_overviews()
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Swr/getDomainOverviews:getDomainOverviews', __args__, opts=opts, typ=GetDomainOverviewsResult)
    return __ret__.apply(lambda __response__: GetDomainOverviewsResult(
        domain_id=pulumi.get(__response__, 'domain_id'),
        domain_name=pulumi.get(__response__, 'domain_name'),
        downflow_size=pulumi.get(__response__, 'downflow_size'),
        id=pulumi.get(__response__, 'id'),
        image_num=pulumi.get(__response__, 'image_num'),
        namspace_num=pulumi.get(__response__, 'namspace_num'),
        region=pulumi.get(__response__, 'region'),
        repo_num=pulumi.get(__response__, 'repo_num'),
        store_space=pulumi.get(__response__, 'store_space')))
