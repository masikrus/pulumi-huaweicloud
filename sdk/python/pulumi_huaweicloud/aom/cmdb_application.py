# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['CmdbApplicationArgs', 'CmdbApplication']

@pulumi.input_type
class CmdbApplicationArgs:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 display_name: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a CmdbApplication resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description about the application.
               The description can contain a maximum of 255 characters.
        :param pulumi.Input[_builtins.str] display_name: Specifies the **display** name of the application. The value can contain
               2 to 64 characters. Only letters, digits, underscores (_), hyphens (-), and periods (.) are allowed.
               
               > If not specified, it equals the value of `name` during creation, while it should be explicitly specified during modification.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project id of the application.
        :param pulumi.Input[_builtins.str] name: Specifies the name or *Unique Identifier* of the application. The value can contain
               2 to 64 characters. Only letters, digits, underscores (_), hyphens (-), and periods (.) are allowed.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description about the application.
        The description can contain a maximum of 255 characters.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the **display** name of the application. The value can contain
        2 to 64 characters. Only letters, digits, underscores (_), hyphens (-), and periods (.) are allowed.

        > If not specified, it equals the value of `name` during creation, while it should be explicitly specified during modification.
        """
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "display_name", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project id of the application.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name or *Unique Identifier* of the application. The value can contain
        2 to 64 characters. Only letters, digits, underscores (_), hyphens (-), and periods (.) are allowed.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class _CmdbApplicationState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 display_name: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 register_type: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering CmdbApplication resources.
        :param pulumi.Input[_builtins.str] created_at: The creation time.
        :param pulumi.Input[_builtins.str] description: Specifies the description about the application.
               The description can contain a maximum of 255 characters.
        :param pulumi.Input[_builtins.str] display_name: Specifies the **display** name of the application. The value can contain
               2 to 64 characters. Only letters, digits, underscores (_), hyphens (-), and periods (.) are allowed.
               
               > If not specified, it equals the value of `name` during creation, while it should be explicitly specified during modification.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project id of the application.
        :param pulumi.Input[_builtins.str] name: Specifies the name or *Unique Identifier* of the application. The value can contain
               2 to 64 characters. Only letters, digits, underscores (_), hyphens (-), and periods (.) are allowed.
        :param pulumi.Input[_builtins.str] register_type: The register type of the application.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if register_type is not None:
            pulumi.set(__self__, "register_type", register_type)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The creation time.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description about the application.
        The description can contain a maximum of 255 characters.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the **display** name of the application. The value can contain
        2 to 64 characters. Only letters, digits, underscores (_), hyphens (-), and periods (.) are allowed.

        > If not specified, it equals the value of `name` during creation, while it should be explicitly specified during modification.
        """
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "display_name", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project id of the application.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name or *Unique Identifier* of the application. The value can contain
        2 to 64 characters. Only letters, digits, underscores (_), hyphens (-), and periods (.) are allowed.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="registerType")
    def register_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The register type of the application.
        """
        return pulumi.get(self, "register_type")

    @register_type.setter
    def register_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "register_type", value)


@pulumi.type_token("huaweicloud:Aom/cmdbApplication:CmdbApplication")
class CmdbApplication(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 display_name: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages an AOM application resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        test = huaweicloud.aom.CmdbApplication("test",
            name="app_demo",
            description="application description",
            enterprise_project_id="0")
        ```

        ## Import

        The AOM application can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Aom/cmdbApplication:CmdbApplication test d61ef1ddb07f40e381ee37a000512caa
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description about the application.
               The description can contain a maximum of 255 characters.
        :param pulumi.Input[_builtins.str] display_name: Specifies the **display** name of the application. The value can contain
               2 to 64 characters. Only letters, digits, underscores (_), hyphens (-), and periods (.) are allowed.
               
               > If not specified, it equals the value of `name` during creation, while it should be explicitly specified during modification.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project id of the application.
        :param pulumi.Input[_builtins.str] name: Specifies the name or *Unique Identifier* of the application. The value can contain
               2 to 64 characters. Only letters, digits, underscores (_), hyphens (-), and periods (.) are allowed.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[CmdbApplicationArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an AOM application resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        test = huaweicloud.aom.CmdbApplication("test",
            name="app_demo",
            description="application description",
            enterprise_project_id="0")
        ```

        ## Import

        The AOM application can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Aom/cmdbApplication:CmdbApplication test d61ef1ddb07f40e381ee37a000512caa
        ```

        :param str resource_name: The name of the resource.
        :param CmdbApplicationArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CmdbApplicationArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 display_name: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CmdbApplicationArgs.__new__(CmdbApplicationArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["display_name"] = display_name
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            __props__.__dict__["name"] = name
            __props__.__dict__["created_at"] = None
            __props__.__dict__["register_type"] = None
        super(CmdbApplication, __self__).__init__(
            'huaweicloud:Aom/cmdbApplication:CmdbApplication',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            display_name: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            register_type: Optional[pulumi.Input[_builtins.str]] = None) -> 'CmdbApplication':
        """
        Get an existing CmdbApplication resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: The creation time.
        :param pulumi.Input[_builtins.str] description: Specifies the description about the application.
               The description can contain a maximum of 255 characters.
        :param pulumi.Input[_builtins.str] display_name: Specifies the **display** name of the application. The value can contain
               2 to 64 characters. Only letters, digits, underscores (_), hyphens (-), and periods (.) are allowed.
               
               > If not specified, it equals the value of `name` during creation, while it should be explicitly specified during modification.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project id of the application.
        :param pulumi.Input[_builtins.str] name: Specifies the name or *Unique Identifier* of the application. The value can contain
               2 to 64 characters. Only letters, digits, underscores (_), hyphens (-), and periods (.) are allowed.
        :param pulumi.Input[_builtins.str] register_type: The register type of the application.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CmdbApplicationState.__new__(_CmdbApplicationState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["description"] = description
        __props__.__dict__["display_name"] = display_name
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["name"] = name
        __props__.__dict__["register_type"] = register_type
        return CmdbApplication(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The creation time.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the description about the application.
        The description can contain a maximum of 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the **display** name of the application. The value can contain
        2 to 64 characters. Only letters, digits, underscores (_), hyphens (-), and periods (.) are allowed.

        > If not specified, it equals the value of `name` during creation, while it should be explicitly specified during modification.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the enterprise project id of the application.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name or *Unique Identifier* of the application. The value can contain
        2 to 64 characters. Only letters, digits, underscores (_), hyphens (-), and periods (.) are allowed.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="registerType")
    def register_type(self) -> pulumi.Output[_builtins.str]:
        """
        The register type of the application.
        """
        return pulumi.get(self, "register_type")

