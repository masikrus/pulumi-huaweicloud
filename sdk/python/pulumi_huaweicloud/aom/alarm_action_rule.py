# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['AlarmActionRuleArgs', 'AlarmActionRule']

@pulumi.input_type
class AlarmActionRuleArgs:
    def __init__(__self__, *,
                 notification_template: pulumi.Input[_builtins.str],
                 smn_topics: pulumi.Input[Sequence[pulumi.Input['AlarmActionRuleSmnTopicArgs']]],
                 type: pulumi.Input[_builtins.str],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a AlarmActionRule resource.
        :param pulumi.Input[_builtins.str] notification_template: Specifies the notification template.
        :param pulumi.Input[Sequence[pulumi.Input['AlarmActionRuleSmnTopicArgs']]] smn_topics: Specifies the SMN topic configurations. A maximum of 5 topics are allowed.
               The SmnTopics structure is documented below.
        :param pulumi.Input[_builtins.str] type: Specifies the action rule type. The value can be **1**, which indicates notification.
        :param pulumi.Input[_builtins.str] description: Specifies the action rule description.
               The value can be a string of 0 to 1024 characters.
               
               <a name="AlarmActionRule_SmnTopics"></a>
               The `SmnTopics` block supports:
        :param pulumi.Input[_builtins.str] name: Specifies the SMN topic name.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "notification_template", notification_template)
        pulumi.set(__self__, "smn_topics", smn_topics)
        pulumi.set(__self__, "type", type)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="notificationTemplate")
    def notification_template(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the notification template.
        """
        return pulumi.get(self, "notification_template")

    @notification_template.setter
    def notification_template(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "notification_template", value)

    @_builtins.property
    @pulumi.getter(name="smnTopics")
    def smn_topics(self) -> pulumi.Input[Sequence[pulumi.Input['AlarmActionRuleSmnTopicArgs']]]:
        """
        Specifies the SMN topic configurations. A maximum of 5 topics are allowed.
        The SmnTopics structure is documented below.
        """
        return pulumi.get(self, "smn_topics")

    @smn_topics.setter
    def smn_topics(self, value: pulumi.Input[Sequence[pulumi.Input['AlarmActionRuleSmnTopicArgs']]]):
        pulumi.set(self, "smn_topics", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the action rule type. The value can be **1**, which indicates notification.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the action rule description.
        The value can be a string of 0 to 1024 characters.

        <a name="AlarmActionRule_SmnTopics"></a>
        The `SmnTopics` block supports:
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the SMN topic name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _AlarmActionRuleState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.int]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 notification_template: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 smn_topics: Optional[pulumi.Input[Sequence[pulumi.Input['AlarmActionRuleSmnTopicArgs']]]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.int]] = None):
        """
        Input properties used for looking up and filtering AlarmActionRule resources.
        :param pulumi.Input[_builtins.int] created_at: The creation time.
        :param pulumi.Input[_builtins.str] description: Specifies the action rule description.
               The value can be a string of 0 to 1024 characters.
               
               <a name="AlarmActionRule_SmnTopics"></a>
               The `SmnTopics` block supports:
        :param pulumi.Input[_builtins.str] name: Specifies the SMN topic name.
        :param pulumi.Input[_builtins.str] notification_template: Specifies the notification template.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input['AlarmActionRuleSmnTopicArgs']]] smn_topics: Specifies the SMN topic configurations. A maximum of 5 topics are allowed.
               The SmnTopics structure is documented below.
        :param pulumi.Input[_builtins.str] type: Specifies the action rule type. The value can be **1**, which indicates notification.
        :param pulumi.Input[_builtins.int] updated_at: The last update time.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if notification_template is not None:
            pulumi.set(__self__, "notification_template", notification_template)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if smn_topics is not None:
            pulumi.set(__self__, "smn_topics", smn_topics)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The creation time.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the action rule description.
        The value can be a string of 0 to 1024 characters.

        <a name="AlarmActionRule_SmnTopics"></a>
        The `SmnTopics` block supports:
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the SMN topic name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="notificationTemplate")
    def notification_template(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the notification template.
        """
        return pulumi.get(self, "notification_template")

    @notification_template.setter
    def notification_template(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "notification_template", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="smnTopics")
    def smn_topics(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AlarmActionRuleSmnTopicArgs']]]]:
        """
        Specifies the SMN topic configurations. A maximum of 5 topics are allowed.
        The SmnTopics structure is documented below.
        """
        return pulumi.get(self, "smn_topics")

    @smn_topics.setter
    def smn_topics(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AlarmActionRuleSmnTopicArgs']]]]):
        pulumi.set(self, "smn_topics", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the action rule type. The value can be **1**, which indicates notification.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The last update time.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("huaweicloud:Aom/alarmActionRule:AlarmActionRule")
class AlarmActionRule(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 notification_template: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 smn_topics: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AlarmActionRuleSmnTopicArgs', 'AlarmActionRuleSmnTopicArgsDict']]]]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages an AOM alarm action rule resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        topic_urn = config.require_object("topicUrn")
        test = huaweicloud.aom.AlarmActionRule("test",
            name="test_rule",
            description="terraform test",
            type="1",
            notification_template="aom.built-in.template.zh",
            smn_topics=[{
                "topic_urn": topic_urn,
            }])
        ```

        ## Import

        The application operations management can be imported using the `id` (name), e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Aom/alarmActionRule:AlarmActionRule test test_rule
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: Specifies the action rule description.
               The value can be a string of 0 to 1024 characters.
               
               <a name="AlarmActionRule_SmnTopics"></a>
               The `SmnTopics` block supports:
        :param pulumi.Input[_builtins.str] name: Specifies the SMN topic name.
        :param pulumi.Input[_builtins.str] notification_template: Specifies the notification template.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['AlarmActionRuleSmnTopicArgs', 'AlarmActionRuleSmnTopicArgsDict']]]] smn_topics: Specifies the SMN topic configurations. A maximum of 5 topics are allowed.
               The SmnTopics structure is documented below.
        :param pulumi.Input[_builtins.str] type: Specifies the action rule type. The value can be **1**, which indicates notification.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AlarmActionRuleArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an AOM alarm action rule resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        topic_urn = config.require_object("topicUrn")
        test = huaweicloud.aom.AlarmActionRule("test",
            name="test_rule",
            description="terraform test",
            type="1",
            notification_template="aom.built-in.template.zh",
            smn_topics=[{
                "topic_urn": topic_urn,
            }])
        ```

        ## Import

        The application operations management can be imported using the `id` (name), e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Aom/alarmActionRule:AlarmActionRule test test_rule
        ```

        :param str resource_name: The name of the resource.
        :param AlarmActionRuleArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AlarmActionRuleArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 notification_template: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 smn_topics: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AlarmActionRuleSmnTopicArgs', 'AlarmActionRuleSmnTopicArgsDict']]]]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AlarmActionRuleArgs.__new__(AlarmActionRuleArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["name"] = name
            if notification_template is None and not opts.urn:
                raise TypeError("Missing required property 'notification_template'")
            __props__.__dict__["notification_template"] = notification_template
            __props__.__dict__["region"] = region
            if smn_topics is None and not opts.urn:
                raise TypeError("Missing required property 'smn_topics'")
            __props__.__dict__["smn_topics"] = smn_topics
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
            __props__.__dict__["created_at"] = None
            __props__.__dict__["updated_at"] = None
        super(AlarmActionRule, __self__).__init__(
            'huaweicloud:Aom/alarmActionRule:AlarmActionRule',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.int]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            notification_template: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            smn_topics: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AlarmActionRuleSmnTopicArgs', 'AlarmActionRuleSmnTopicArgsDict']]]]] = None,
            type: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.int]] = None) -> 'AlarmActionRule':
        """
        Get an existing AlarmActionRule resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.int] created_at: The creation time.
        :param pulumi.Input[_builtins.str] description: Specifies the action rule description.
               The value can be a string of 0 to 1024 characters.
               
               <a name="AlarmActionRule_SmnTopics"></a>
               The `SmnTopics` block supports:
        :param pulumi.Input[_builtins.str] name: Specifies the SMN topic name.
        :param pulumi.Input[_builtins.str] notification_template: Specifies the notification template.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['AlarmActionRuleSmnTopicArgs', 'AlarmActionRuleSmnTopicArgsDict']]]] smn_topics: Specifies the SMN topic configurations. A maximum of 5 topics are allowed.
               The SmnTopics structure is documented below.
        :param pulumi.Input[_builtins.str] type: Specifies the action rule type. The value can be **1**, which indicates notification.
        :param pulumi.Input[_builtins.int] updated_at: The last update time.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AlarmActionRuleState.__new__(_AlarmActionRuleState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["description"] = description
        __props__.__dict__["name"] = name
        __props__.__dict__["notification_template"] = notification_template
        __props__.__dict__["region"] = region
        __props__.__dict__["smn_topics"] = smn_topics
        __props__.__dict__["type"] = type
        __props__.__dict__["updated_at"] = updated_at
        return AlarmActionRule(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.int]:
        """
        The creation time.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the action rule description.
        The value can be a string of 0 to 1024 characters.

        <a name="AlarmActionRule_SmnTopics"></a>
        The `SmnTopics` block supports:
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the SMN topic name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="notificationTemplate")
    def notification_template(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the notification template.
        """
        return pulumi.get(self, "notification_template")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="smnTopics")
    def smn_topics(self) -> pulumi.Output[Sequence['outputs.AlarmActionRuleSmnTopic']]:
        """
        Specifies the SMN topic configurations. A maximum of 5 topics are allowed.
        The SmnTopics structure is documented below.
        """
        return pulumi.get(self, "smn_topics")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the action rule type. The value can be **1**, which indicates notification.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.int]:
        """
        The last update time.
        """
        return pulumi.get(self, "updated_at")

