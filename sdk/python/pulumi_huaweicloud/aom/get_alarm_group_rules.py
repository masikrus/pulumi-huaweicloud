# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetAlarmGroupRulesResult',
    'AwaitableGetAlarmGroupRulesResult',
    'get_alarm_group_rules',
    'get_alarm_group_rules_output',
]

@pulumi.output_type
class GetAlarmGroupRulesResult:
    """
    A collection of values returned by getAlarmGroupRules.
    """
    def __init__(__self__, enterprise_project_id=None, id=None, region=None, rules=None):
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if rules and not isinstance(rules, list):
            raise TypeError("Expected argument 'rules' to be a list")
        pulumi.set(__self__, "rules", rules)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        """
        Indicates the enterprise project ID to which the rule belongs.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def rules(self) -> Sequence['outputs.GetAlarmGroupRulesRuleResult']:
        """
        The rules list.
        The rules structure is documented below.
        """
        return pulumi.get(self, "rules")


class AwaitableGetAlarmGroupRulesResult(GetAlarmGroupRulesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAlarmGroupRulesResult(
            enterprise_project_id=self.enterprise_project_id,
            id=self.id,
            region=self.region,
            rules=self.rules)


def get_alarm_group_rules(enterprise_project_id: Optional[_builtins.str] = None,
                          region: Optional[_builtins.str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAlarmGroupRulesResult:
    """
    Use this data source to get the list of AOM alarm group rules.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Aom.get_alarm_group_rules()
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID to which the rules belong.
    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Aom/getAlarmGroupRules:getAlarmGroupRules', __args__, opts=opts, typ=GetAlarmGroupRulesResult).value

    return AwaitableGetAlarmGroupRulesResult(
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'),
        rules=pulumi.get(__ret__, 'rules'))
def get_alarm_group_rules_output(enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                 region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                 opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAlarmGroupRulesResult]:
    """
    Use this data source to get the list of AOM alarm group rules.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Aom.get_alarm_group_rules()
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID to which the rules belong.
    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Aom/getAlarmGroupRules:getAlarmGroupRules', __args__, opts=opts, typ=GetAlarmGroupRulesResult)
    return __ret__.apply(lambda __response__: GetAlarmGroupRulesResult(
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region'),
        rules=pulumi.get(__response__, 'rules')))
