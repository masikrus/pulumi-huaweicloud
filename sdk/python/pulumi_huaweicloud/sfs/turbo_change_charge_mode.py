# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['TurboChangeChargeModeArgs', 'TurboChangeChargeMode']

@pulumi.input_type
class TurboChangeChargeModeArgs:
    def __init__(__self__, *,
                 period_num: pulumi.Input[_builtins.int],
                 period_type: pulumi.Input[_builtins.int],
                 share_id: pulumi.Input[_builtins.str],
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 is_auto_renew: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a TurboChangeChargeMode resource.
        :param pulumi.Input[_builtins.int] period_num: Specifies the charging period of the SFS Turbo.
        :param pulumi.Input[_builtins.int] period_type: Specifies the charging period unit of the SFS Turbo.
               + **2**: paid monthly.
               + **3**: paid annual.
        :param pulumi.Input[_builtins.str] share_id: Specifies the ID of the SFS Turbo.
        :param pulumi.Input[_builtins.int] is_auto_renew: Specifies whether auto renew is enabled. Defaults to **0**.
               + **0**: no automatic renewal.
               + **1**: automatic renewal.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        """
        pulumi.set(__self__, "period_num", period_num)
        pulumi.set(__self__, "period_type", period_type)
        pulumi.set(__self__, "share_id", share_id)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if is_auto_renew is not None:
            pulumi.set(__self__, "is_auto_renew", is_auto_renew)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="periodNum")
    def period_num(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the charging period of the SFS Turbo.
        """
        return pulumi.get(self, "period_num")

    @period_num.setter
    def period_num(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "period_num", value)

    @_builtins.property
    @pulumi.getter(name="periodType")
    def period_type(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the charging period unit of the SFS Turbo.
        + **2**: paid monthly.
        + **3**: paid annual.
        """
        return pulumi.get(self, "period_type")

    @period_type.setter
    def period_type(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "period_type", value)

    @_builtins.property
    @pulumi.getter(name="shareId")
    def share_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the SFS Turbo.
        """
        return pulumi.get(self, "share_id")

    @share_id.setter
    def share_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "share_id", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="isAutoRenew")
    def is_auto_renew(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies whether auto renew is enabled. Defaults to **0**.
        + **0**: no automatic renewal.
        + **1**: automatic renewal.
        """
        return pulumi.get(self, "is_auto_renew")

    @is_auto_renew.setter
    def is_auto_renew(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "is_auto_renew", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _TurboChangeChargeModeState:
    def __init__(__self__, *,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 is_auto_renew: Optional[pulumi.Input[_builtins.int]] = None,
                 period_num: Optional[pulumi.Input[_builtins.int]] = None,
                 period_type: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 share_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering TurboChangeChargeMode resources.
        :param pulumi.Input[_builtins.int] is_auto_renew: Specifies whether auto renew is enabled. Defaults to **0**.
               + **0**: no automatic renewal.
               + **1**: automatic renewal.
        :param pulumi.Input[_builtins.int] period_num: Specifies the charging period of the SFS Turbo.
        :param pulumi.Input[_builtins.int] period_type: Specifies the charging period unit of the SFS Turbo.
               + **2**: paid monthly.
               + **3**: paid annual.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] share_id: Specifies the ID of the SFS Turbo.
        """
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if is_auto_renew is not None:
            pulumi.set(__self__, "is_auto_renew", is_auto_renew)
        if period_num is not None:
            pulumi.set(__self__, "period_num", period_num)
        if period_type is not None:
            pulumi.set(__self__, "period_type", period_type)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if share_id is not None:
            pulumi.set(__self__, "share_id", share_id)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="isAutoRenew")
    def is_auto_renew(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies whether auto renew is enabled. Defaults to **0**.
        + **0**: no automatic renewal.
        + **1**: automatic renewal.
        """
        return pulumi.get(self, "is_auto_renew")

    @is_auto_renew.setter
    def is_auto_renew(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "is_auto_renew", value)

    @_builtins.property
    @pulumi.getter(name="periodNum")
    def period_num(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the charging period of the SFS Turbo.
        """
        return pulumi.get(self, "period_num")

    @period_num.setter
    def period_num(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "period_num", value)

    @_builtins.property
    @pulumi.getter(name="periodType")
    def period_type(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the charging period unit of the SFS Turbo.
        + **2**: paid monthly.
        + **3**: paid annual.
        """
        return pulumi.get(self, "period_type")

    @period_type.setter
    def period_type(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "period_type", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="shareId")
    def share_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the SFS Turbo.
        """
        return pulumi.get(self, "share_id")

    @share_id.setter
    def share_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "share_id", value)


@pulumi.type_token("huaweicloud:Sfs/turboChangeChargeMode:TurboChangeChargeMode")
class TurboChangeChargeMode(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 is_auto_renew: Optional[pulumi.Input[_builtins.int]] = None,
                 period_num: Optional[pulumi.Input[_builtins.int]] = None,
                 period_type: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 share_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Use this resource to change the charge mode of the SFS turbo within HuaweiCloud.

        > The current resource is a one-time action resource using to change SFS Turbo charge mode. Deleting this resource
        will not reset the charge mode, but will only remove the resource information from the tfstate file.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        share_id = config.require_object("shareId")
        period_num = config.require_object("periodNum")
        period_type = config.require_object("periodType")
        is_auto_renew = config.require_object("isAutoRenew")
        test = huaweicloud.sfs.TurboChangeChargeMode("test",
            share_id=share_id,
            period_num=period_num,
            period_type=period_type,
            is_auto_renew=is_auto_renew)
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.int] is_auto_renew: Specifies whether auto renew is enabled. Defaults to **0**.
               + **0**: no automatic renewal.
               + **1**: automatic renewal.
        :param pulumi.Input[_builtins.int] period_num: Specifies the charging period of the SFS Turbo.
        :param pulumi.Input[_builtins.int] period_type: Specifies the charging period unit of the SFS Turbo.
               + **2**: paid monthly.
               + **3**: paid annual.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] share_id: Specifies the ID of the SFS Turbo.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: TurboChangeChargeModeArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Use this resource to change the charge mode of the SFS turbo within HuaweiCloud.

        > The current resource is a one-time action resource using to change SFS Turbo charge mode. Deleting this resource
        will not reset the charge mode, but will only remove the resource information from the tfstate file.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        share_id = config.require_object("shareId")
        period_num = config.require_object("periodNum")
        period_type = config.require_object("periodType")
        is_auto_renew = config.require_object("isAutoRenew")
        test = huaweicloud.sfs.TurboChangeChargeMode("test",
            share_id=share_id,
            period_num=period_num,
            period_type=period_type,
            is_auto_renew=is_auto_renew)
        ```

        :param str resource_name: The name of the resource.
        :param TurboChangeChargeModeArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(TurboChangeChargeModeArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 is_auto_renew: Optional[pulumi.Input[_builtins.int]] = None,
                 period_num: Optional[pulumi.Input[_builtins.int]] = None,
                 period_type: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 share_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = TurboChangeChargeModeArgs.__new__(TurboChangeChargeModeArgs)

            __props__.__dict__["enable_force_new"] = enable_force_new
            __props__.__dict__["is_auto_renew"] = is_auto_renew
            if period_num is None and not opts.urn:
                raise TypeError("Missing required property 'period_num'")
            __props__.__dict__["period_num"] = period_num
            if period_type is None and not opts.urn:
                raise TypeError("Missing required property 'period_type'")
            __props__.__dict__["period_type"] = period_type
            __props__.__dict__["region"] = region
            if share_id is None and not opts.urn:
                raise TypeError("Missing required property 'share_id'")
            __props__.__dict__["share_id"] = share_id
        super(TurboChangeChargeMode, __self__).__init__(
            'huaweicloud:Sfs/turboChangeChargeMode:TurboChangeChargeMode',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            is_auto_renew: Optional[pulumi.Input[_builtins.int]] = None,
            period_num: Optional[pulumi.Input[_builtins.int]] = None,
            period_type: Optional[pulumi.Input[_builtins.int]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            share_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'TurboChangeChargeMode':
        """
        Get an existing TurboChangeChargeMode resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.int] is_auto_renew: Specifies whether auto renew is enabled. Defaults to **0**.
               + **0**: no automatic renewal.
               + **1**: automatic renewal.
        :param pulumi.Input[_builtins.int] period_num: Specifies the charging period of the SFS Turbo.
        :param pulumi.Input[_builtins.int] period_type: Specifies the charging period unit of the SFS Turbo.
               + **2**: paid monthly.
               + **3**: paid annual.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] share_id: Specifies the ID of the SFS Turbo.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _TurboChangeChargeModeState.__new__(_TurboChangeChargeModeState)

        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["is_auto_renew"] = is_auto_renew
        __props__.__dict__["period_num"] = period_num
        __props__.__dict__["period_type"] = period_type
        __props__.__dict__["region"] = region
        __props__.__dict__["share_id"] = share_id
        return TurboChangeChargeMode(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter(name="isAutoRenew")
    def is_auto_renew(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        Specifies whether auto renew is enabled. Defaults to **0**.
        + **0**: no automatic renewal.
        + **1**: automatic renewal.
        """
        return pulumi.get(self, "is_auto_renew")

    @_builtins.property
    @pulumi.getter(name="periodNum")
    def period_num(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the charging period of the SFS Turbo.
        """
        return pulumi.get(self, "period_num")

    @_builtins.property
    @pulumi.getter(name="periodType")
    def period_type(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the charging period unit of the SFS Turbo.
        + **2**: paid monthly.
        + **3**: paid annual.
        """
        return pulumi.get(self, "period_type")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="shareId")
    def share_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the SFS Turbo.
        """
        return pulumi.get(self, "share_id")

