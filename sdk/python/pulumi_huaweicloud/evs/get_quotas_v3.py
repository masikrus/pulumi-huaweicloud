# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetQuotasV3Result',
    'AwaitableGetQuotasV3Result',
    'get_quotas_v3',
    'get_quotas_v3_output',
]

@pulumi.output_type
class GetQuotasV3Result:
    """
    A collection of values returned by getQuotasV3.
    """
    def __init__(__self__, id=None, quota_sets=None, region=None, usage=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if quota_sets and not isinstance(quota_sets, list):
            raise TypeError("Expected argument 'quota_sets' to be a list")
        pulumi.set(__self__, "quota_sets", quota_sets)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if usage and not isinstance(usage, bool):
            raise TypeError("Expected argument 'usage' to be a bool")
        pulumi.set(__self__, "usage", usage)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="quotaSets")
    def quota_sets(self) -> Sequence['outputs.GetQuotasV3QuotaSetResult']:
        """
        The returned quota information.
        The quota_set structure is documented below.
        """
        return pulumi.get(self, "quota_sets")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def usage(self) -> _builtins.bool:
        return pulumi.get(self, "usage")


class AwaitableGetQuotasV3Result(GetQuotasV3Result):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetQuotasV3Result(
            id=self.id,
            quota_sets=self.quota_sets,
            region=self.region,
            usage=self.usage)


def get_quotas_v3(region: Optional[_builtins.str] = None,
                  usage: Optional[_builtins.bool] = None,
                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetQuotasV3Result:
    """
    Use this data source to get EVS v3 quota details within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    usage = config.require_object("usage")
    test = huaweicloud.Evs.get_quotas_v3(usage=usage)
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider - level region will be used.
    :param _builtins.bool usage: Specifies whether to query quota details. Only value **true** is supported currently.
    """
    __args__ = dict()
    __args__['region'] = region
    __args__['usage'] = usage
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Evs/getQuotasV3:getQuotasV3', __args__, opts=opts, typ=GetQuotasV3Result).value

    return AwaitableGetQuotasV3Result(
        id=pulumi.get(__ret__, 'id'),
        quota_sets=pulumi.get(__ret__, 'quota_sets'),
        region=pulumi.get(__ret__, 'region'),
        usage=pulumi.get(__ret__, 'usage'))
def get_quotas_v3_output(region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                         usage: Optional[pulumi.Input[_builtins.bool]] = None,
                         opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetQuotasV3Result]:
    """
    Use this data source to get EVS v3 quota details within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    usage = config.require_object("usage")
    test = huaweicloud.Evs.get_quotas_v3(usage=usage)
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider - level region will be used.
    :param _builtins.bool usage: Specifies whether to query quota details. Only value **true** is supported currently.
    """
    __args__ = dict()
    __args__['region'] = region
    __args__['usage'] = usage
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Evs/getQuotasV3:getQuotasV3', __args__, opts=opts, typ=GetQuotasV3Result)
    return __ret__.apply(lambda __response__: GetQuotasV3Result(
        id=pulumi.get(__response__, 'id'),
        quota_sets=pulumi.get(__response__, 'quota_sets'),
        region=pulumi.get(__response__, 'region'),
        usage=pulumi.get(__response__, 'usage')))
