# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['SnapshotGroupArgs', 'SnapshotGroup']

@pulumi.input_type
class SnapshotGroupArgs:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 incremental: Optional[pulumi.Input[_builtins.bool]] = None,
                 instant_access: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 server_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 volume_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None):
        """
        The set of arguments for constructing a SnapshotGroup resource.
        :param pulumi.Input[_builtins.str] description: Specifies the snapshot group description. The maximum length is `255` bytes.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID for the snapshot
               group.
        :param pulumi.Input[_builtins.bool] incremental: Specifies whether to create an incremental snapshot.
               Default is **false**.
        :param pulumi.Input[_builtins.bool] instant_access: Specifies whether to enable instant access for the snapshot group.
               Possible values are **true** (enable) and **false** (disable). Default is **false**.
        :param pulumi.Input[_builtins.str] name: Specifies the snapshot group name. The maximum length is `255` bytes.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource. If omitted, the
               provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] server_id: Specifies the server ID to which the snapshot group are attached.
               Field server_id and field volume_ids cannot be empty at the same time.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to be associated with the snapshot group.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] volume_ids: Specifies the list of volume IDs to be included in the snapshot group.
               The value is in the **[id1,id2,...,idx]** format. If `server_id` is set, this parameter can only be used to set
               cloud drives mounted within the specified instance. Setting multiple cloud drive IDs across instances is no longer
               supported.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if incremental is not None:
            pulumi.set(__self__, "incremental", incremental)
        if instant_access is not None:
            pulumi.set(__self__, "instant_access", instant_access)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if server_id is not None:
            pulumi.set(__self__, "server_id", server_id)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if volume_ids is not None:
            pulumi.set(__self__, "volume_ids", volume_ids)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the snapshot group description. The maximum length is `255` bytes.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID for the snapshot
        group.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def incremental(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to create an incremental snapshot.
        Default is **false**.
        """
        return pulumi.get(self, "incremental")

    @incremental.setter
    def incremental(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "incremental", value)

    @_builtins.property
    @pulumi.getter(name="instantAccess")
    def instant_access(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to enable instant access for the snapshot group.
        Possible values are **true** (enable) and **false** (disable). Default is **false**.
        """
        return pulumi.get(self, "instant_access")

    @instant_access.setter
    def instant_access(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "instant_access", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the snapshot group name. The maximum length is `255` bytes.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource. If omitted, the
        provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="serverId")
    def server_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the server ID to which the snapshot group are attached.
        Field server_id and field volume_ids cannot be empty at the same time.
        """
        return pulumi.get(self, "server_id")

    @server_id.setter
    def server_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "server_id", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the key/value pairs to be associated with the snapshot group.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter(name="volumeIds")
    def volume_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the list of volume IDs to be included in the snapshot group.
        The value is in the **[id1,id2,...,idx]** format. If `server_id` is set, this parameter can only be used to set
        cloud drives mounted within the specified instance. Setting multiple cloud drive IDs across instances is no longer
        supported.
        """
        return pulumi.get(self, "volume_ids")

    @volume_ids.setter
    def volume_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "volume_ids", value)


@pulumi.input_type
class _SnapshotGroupState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 incremental: Optional[pulumi.Input[_builtins.bool]] = None,
                 instant_access: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 server_id: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 volume_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None):
        """
        Input properties used for looking up and filtering SnapshotGroup resources.
        :param pulumi.Input[_builtins.str] created_at: The time when the snapshot group was created.
        :param pulumi.Input[_builtins.str] description: Specifies the snapshot group description. The maximum length is `255` bytes.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID for the snapshot
               group.
        :param pulumi.Input[_builtins.bool] incremental: Specifies whether to create an incremental snapshot.
               Default is **false**.
        :param pulumi.Input[_builtins.bool] instant_access: Specifies whether to enable instant access for the snapshot group.
               Possible values are **true** (enable) and **false** (disable). Default is **false**.
        :param pulumi.Input[_builtins.str] name: Specifies the snapshot group name. The maximum length is `255` bytes.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource. If omitted, the
               provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] server_id: Specifies the server ID to which the snapshot group are attached.
               Field server_id and field volume_ids cannot be empty at the same time.
        :param pulumi.Input[_builtins.str] status: The snapshot group status.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to be associated with the snapshot group.
        :param pulumi.Input[_builtins.str] updated_at: The time when the snapshot group was updated.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] volume_ids: Specifies the list of volume IDs to be included in the snapshot group.
               The value is in the **[id1,id2,...,idx]** format. If `server_id` is set, this parameter can only be used to set
               cloud drives mounted within the specified instance. Setting multiple cloud drive IDs across instances is no longer
               supported.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if incremental is not None:
            pulumi.set(__self__, "incremental", incremental)
        if instant_access is not None:
            pulumi.set(__self__, "instant_access", instant_access)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if server_id is not None:
            pulumi.set(__self__, "server_id", server_id)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if volume_ids is not None:
            pulumi.set(__self__, "volume_ids", volume_ids)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The time when the snapshot group was created.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the snapshot group description. The maximum length is `255` bytes.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID for the snapshot
        group.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def incremental(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to create an incremental snapshot.
        Default is **false**.
        """
        return pulumi.get(self, "incremental")

    @incremental.setter
    def incremental(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "incremental", value)

    @_builtins.property
    @pulumi.getter(name="instantAccess")
    def instant_access(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to enable instant access for the snapshot group.
        Possible values are **true** (enable) and **false** (disable). Default is **false**.
        """
        return pulumi.get(self, "instant_access")

    @instant_access.setter
    def instant_access(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "instant_access", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the snapshot group name. The maximum length is `255` bytes.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource. If omitted, the
        provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="serverId")
    def server_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the server ID to which the snapshot group are attached.
        Field server_id and field volume_ids cannot be empty at the same time.
        """
        return pulumi.get(self, "server_id")

    @server_id.setter
    def server_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "server_id", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The snapshot group status.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the key/value pairs to be associated with the snapshot group.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The time when the snapshot group was updated.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter(name="volumeIds")
    def volume_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the list of volume IDs to be included in the snapshot group.
        The value is in the **[id1,id2,...,idx]** format. If `server_id` is set, this parameter can only be used to set
        cloud drives mounted within the specified instance. Setting multiple cloud drive IDs across instances is no longer
        supported.
        """
        return pulumi.get(self, "volume_ids")

    @volume_ids.setter
    def volume_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "volume_ids", value)


@pulumi.type_token("huaweicloud:Evs/snapshotGroup:SnapshotGroup")
class SnapshotGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 incremental: Optional[pulumi.Input[_builtins.bool]] = None,
                 instant_access: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 server_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 volume_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        """
        Manages an EVS snapshot group resource within HuaweiCloud.

        > Before using this resource, ensure that there is no snapshot being created under the volume.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        name = config.require_object("name")
        description = config.require_object("description")
        volume_ids = config.require_object("volumeIds")
        enterprise_project_id = config.require_object("enterpriseProjectId")
        server_id = config.require_object("serverId")
        instant_access = config.require_object("instantAccess")
        incremental = config.require_object("incremental")
        example = huaweicloud.evs.SnapshotGroup("example",
            name=name,
            description=description,
            volume_ids=volume_ids,
            enterprise_project_id=enterprise_project_id,
            server_id=server_id,
            instant_access=instant_access,
            incremental=incremental,
            tags={
                "foo": "bar",
            })
        ```

        ## Import

        EVS snapshot group can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Evs/snapshotGroup:SnapshotGroup test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `volume_ids`, `instant_access`,

        `incremental`. It is generally recommended running `pulumi preview` after importing the resource. You can then decide

        if changes should be applied to the resource, or the resource definition should be updated to align with the snapshot

        group. Also, you can ignore changes as below.

        hcl

        resource "huaweicloud_evs_snapshot_group" "test" {

            ...

          lifecycle {

            ignore_changes = [
            
              volume_ids,
            
              instant_access,
            
              incremental,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: Specifies the snapshot group description. The maximum length is `255` bytes.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID for the snapshot
               group.
        :param pulumi.Input[_builtins.bool] incremental: Specifies whether to create an incremental snapshot.
               Default is **false**.
        :param pulumi.Input[_builtins.bool] instant_access: Specifies whether to enable instant access for the snapshot group.
               Possible values are **true** (enable) and **false** (disable). Default is **false**.
        :param pulumi.Input[_builtins.str] name: Specifies the snapshot group name. The maximum length is `255` bytes.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource. If omitted, the
               provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] server_id: Specifies the server ID to which the snapshot group are attached.
               Field server_id and field volume_ids cannot be empty at the same time.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to be associated with the snapshot group.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] volume_ids: Specifies the list of volume IDs to be included in the snapshot group.
               The value is in the **[id1,id2,...,idx]** format. If `server_id` is set, this parameter can only be used to set
               cloud drives mounted within the specified instance. Setting multiple cloud drive IDs across instances is no longer
               supported.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[SnapshotGroupArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an EVS snapshot group resource within HuaweiCloud.

        > Before using this resource, ensure that there is no snapshot being created under the volume.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        name = config.require_object("name")
        description = config.require_object("description")
        volume_ids = config.require_object("volumeIds")
        enterprise_project_id = config.require_object("enterpriseProjectId")
        server_id = config.require_object("serverId")
        instant_access = config.require_object("instantAccess")
        incremental = config.require_object("incremental")
        example = huaweicloud.evs.SnapshotGroup("example",
            name=name,
            description=description,
            volume_ids=volume_ids,
            enterprise_project_id=enterprise_project_id,
            server_id=server_id,
            instant_access=instant_access,
            incremental=incremental,
            tags={
                "foo": "bar",
            })
        ```

        ## Import

        EVS snapshot group can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Evs/snapshotGroup:SnapshotGroup test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `volume_ids`, `instant_access`,

        `incremental`. It is generally recommended running `pulumi preview` after importing the resource. You can then decide

        if changes should be applied to the resource, or the resource definition should be updated to align with the snapshot

        group. Also, you can ignore changes as below.

        hcl

        resource "huaweicloud_evs_snapshot_group" "test" {

            ...

          lifecycle {

            ignore_changes = [
            
              volume_ids,
            
              instant_access,
            
              incremental,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param SnapshotGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SnapshotGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 incremental: Optional[pulumi.Input[_builtins.bool]] = None,
                 instant_access: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 server_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 volume_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SnapshotGroupArgs.__new__(SnapshotGroupArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["enable_force_new"] = enable_force_new
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            __props__.__dict__["incremental"] = incremental
            __props__.__dict__["instant_access"] = instant_access
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            __props__.__dict__["server_id"] = server_id
            __props__.__dict__["tags"] = tags
            __props__.__dict__["volume_ids"] = volume_ids
            __props__.__dict__["created_at"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["updated_at"] = None
        super(SnapshotGroup, __self__).__init__(
            'huaweicloud:Evs/snapshotGroup:SnapshotGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            incremental: Optional[pulumi.Input[_builtins.bool]] = None,
            instant_access: Optional[pulumi.Input[_builtins.bool]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            server_id: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            volume_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None) -> 'SnapshotGroup':
        """
        Get an existing SnapshotGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: The time when the snapshot group was created.
        :param pulumi.Input[_builtins.str] description: Specifies the snapshot group description. The maximum length is `255` bytes.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID for the snapshot
               group.
        :param pulumi.Input[_builtins.bool] incremental: Specifies whether to create an incremental snapshot.
               Default is **false**.
        :param pulumi.Input[_builtins.bool] instant_access: Specifies whether to enable instant access for the snapshot group.
               Possible values are **true** (enable) and **false** (disable). Default is **false**.
        :param pulumi.Input[_builtins.str] name: Specifies the snapshot group name. The maximum length is `255` bytes.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource. If omitted, the
               provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] server_id: Specifies the server ID to which the snapshot group are attached.
               Field server_id and field volume_ids cannot be empty at the same time.
        :param pulumi.Input[_builtins.str] status: The snapshot group status.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to be associated with the snapshot group.
        :param pulumi.Input[_builtins.str] updated_at: The time when the snapshot group was updated.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] volume_ids: Specifies the list of volume IDs to be included in the snapshot group.
               The value is in the **[id1,id2,...,idx]** format. If `server_id` is set, this parameter can only be used to set
               cloud drives mounted within the specified instance. Setting multiple cloud drive IDs across instances is no longer
               supported.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SnapshotGroupState.__new__(_SnapshotGroupState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["description"] = description
        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["incremental"] = incremental
        __props__.__dict__["instant_access"] = instant_access
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["server_id"] = server_id
        __props__.__dict__["status"] = status
        __props__.__dict__["tags"] = tags
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["volume_ids"] = volume_ids
        return SnapshotGroup(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The time when the snapshot group was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the snapshot group description. The maximum length is `255` bytes.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the enterprise project ID for the snapshot
        group.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def incremental(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether to create an incremental snapshot.
        Default is **false**.
        """
        return pulumi.get(self, "incremental")

    @_builtins.property
    @pulumi.getter(name="instantAccess")
    def instant_access(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether to enable instant access for the snapshot group.
        Possible values are **true** (enable) and **false** (disable). Default is **false**.
        """
        return pulumi.get(self, "instant_access")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the snapshot group name. The maximum length is `255` bytes.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource. If omitted, the
        provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="serverId")
    def server_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the server ID to which the snapshot group are attached.
        Field server_id and field volume_ids cannot be empty at the same time.
        """
        return pulumi.get(self, "server_id")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The snapshot group status.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Mapping[str, _builtins.str]]:
        """
        Specifies the key/value pairs to be associated with the snapshot group.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The time when the snapshot group was updated.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter(name="volumeIds")
    def volume_ids(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        Specifies the list of volume IDs to be included in the snapshot group.
        The value is in the **[id1,id2,...,idx]** format. If `server_id` is set, this parameter can only be used to set
        cloud drives mounted within the specified instance. Setting multiple cloud drive IDs across instances is no longer
        supported.
        """
        return pulumi.get(self, "volume_ids")

