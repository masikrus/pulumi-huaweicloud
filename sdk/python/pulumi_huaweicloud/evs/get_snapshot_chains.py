# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetSnapshotChainsResult',
    'AwaitableGetSnapshotChainsResult',
    'get_snapshot_chains',
    'get_snapshot_chains_output',
]

@pulumi.output_type
class GetSnapshotChainsResult:
    """
    A collection of values returned by getSnapshotChains.
    """
    def __init__(__self__, category=None, id=None, region=None, snapshot_chains=None, volume_id=None):
        if category and not isinstance(category, str):
            raise TypeError("Expected argument 'category' to be a str")
        pulumi.set(__self__, "category", category)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if snapshot_chains and not isinstance(snapshot_chains, list):
            raise TypeError("Expected argument 'snapshot_chains' to be a list")
        pulumi.set(__self__, "snapshot_chains", snapshot_chains)
        if volume_id and not isinstance(volume_id, str):
            raise TypeError("Expected argument 'volume_id' to be a str")
        pulumi.set(__self__, "volume_id", volume_id)

    @_builtins.property
    @pulumi.getter
    def category(self) -> Optional[_builtins.str]:
        """
        The category of snapshot chain.
        """
        return pulumi.get(self, "category")

    @_builtins.property
    @pulumi.getter
    def id(self) -> Optional[_builtins.str]:
        """
        The snapshot chain ID.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="snapshotChains")
    def snapshot_chains(self) -> Sequence['outputs.GetSnapshotChainsSnapshotChainResult']:
        """
        The snapshot chain list.
        The snapshot_chains structure is documented below.
        """
        return pulumi.get(self, "snapshot_chains")

    @_builtins.property
    @pulumi.getter(name="volumeId")
    def volume_id(self) -> Optional[_builtins.str]:
        """
        The ID of disk to which the snapshot chain belongs.
        """
        return pulumi.get(self, "volume_id")


class AwaitableGetSnapshotChainsResult(GetSnapshotChainsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSnapshotChainsResult(
            category=self.category,
            id=self.id,
            region=self.region,
            snapshot_chains=self.snapshot_chains,
            volume_id=self.volume_id)


def get_snapshot_chains(category: Optional[_builtins.str] = None,
                        id: Optional[_builtins.str] = None,
                        region: Optional[_builtins.str] = None,
                        volume_id: Optional[_builtins.str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSnapshotChainsResult:
    """
    Use this data source to query the list of EVS snapshot chains within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Evs.get_snapshot_chains()
    ```


    :param _builtins.str category: Specifies the category of snapshot chain.
           The valid values are **standard**, **backup** and **server_backup**.
    :param _builtins.str id: Specifies the snapshot chain ID.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str volume_id: Specifies the disk ID to which the snapshot chains belong.
    """
    __args__ = dict()
    __args__['category'] = category
    __args__['id'] = id
    __args__['region'] = region
    __args__['volumeId'] = volume_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Evs/getSnapshotChains:getSnapshotChains', __args__, opts=opts, typ=GetSnapshotChainsResult).value

    return AwaitableGetSnapshotChainsResult(
        category=pulumi.get(__ret__, 'category'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'),
        snapshot_chains=pulumi.get(__ret__, 'snapshot_chains'),
        volume_id=pulumi.get(__ret__, 'volume_id'))
def get_snapshot_chains_output(category: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               volume_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetSnapshotChainsResult]:
    """
    Use this data source to query the list of EVS snapshot chains within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Evs.get_snapshot_chains()
    ```


    :param _builtins.str category: Specifies the category of snapshot chain.
           The valid values are **standard**, **backup** and **server_backup**.
    :param _builtins.str id: Specifies the snapshot chain ID.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str volume_id: Specifies the disk ID to which the snapshot chains belong.
    """
    __args__ = dict()
    __args__['category'] = category
    __args__['id'] = id
    __args__['region'] = region
    __args__['volumeId'] = volume_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Evs/getSnapshotChains:getSnapshotChains', __args__, opts=opts, typ=GetSnapshotChainsResult)
    return __ret__.apply(lambda __response__: GetSnapshotChainsResult(
        category=pulumi.get(__response__, 'category'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region'),
        snapshot_chains=pulumi.get(__response__, 'snapshot_chains'),
        volume_id=pulumi.get(__response__, 'volume_id')))
