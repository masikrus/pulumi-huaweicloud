# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetSnapshotGroupsResult',
    'AwaitableGetSnapshotGroupsResult',
    'get_snapshot_groups',
    'get_snapshot_groups_output',
]

@pulumi.output_type
class GetSnapshotGroupsResult:
    """
    A collection of values returned by getSnapshotGroups.
    """
    def __init__(__self__, enterprise_project_id=None, id=None, name=None, region=None, server_id=None, snapshot_groups=None, sort_dir=None, sort_key=None, status=None, tag_key=None, tags=None):
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if server_id and not isinstance(server_id, str):
            raise TypeError("Expected argument 'server_id' to be a str")
        pulumi.set(__self__, "server_id", server_id)
        if snapshot_groups and not isinstance(snapshot_groups, list):
            raise TypeError("Expected argument 'snapshot_groups' to be a list")
        pulumi.set(__self__, "snapshot_groups", snapshot_groups)
        if sort_dir and not isinstance(sort_dir, str):
            raise TypeError("Expected argument 'sort_dir' to be a str")
        pulumi.set(__self__, "sort_dir", sort_dir)
        if sort_key and not isinstance(sort_key, str):
            raise TypeError("Expected argument 'sort_key' to be a str")
        pulumi.set(__self__, "sort_key", sort_key)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)
        if tag_key and not isinstance(tag_key, str):
            raise TypeError("Expected argument 'tag_key' to be a str")
        pulumi.set(__self__, "tag_key", tag_key)
        if tags and not isinstance(tags, str):
            raise TypeError("Expected argument 'tags' to be a str")
        pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        """
        The ID of the enterprise project associated with the snapshot.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> Optional[_builtins.str]:
        """
        The snapshot group ID.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The snapshot group name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="serverId")
    def server_id(self) -> Optional[_builtins.str]:
        """
        The server ID to which the snapshot group are attached.
        """
        return pulumi.get(self, "server_id")

    @_builtins.property
    @pulumi.getter(name="snapshotGroups")
    def snapshot_groups(self) -> Sequence['outputs.GetSnapshotGroupsSnapshotGroupResult']:
        """
        The snapshot group list.
        The snapshot_groups structure is documented below.
        """
        return pulumi.get(self, "snapshot_groups")

    @_builtins.property
    @pulumi.getter(name="sortDir")
    def sort_dir(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "sort_dir")

    @_builtins.property
    @pulumi.getter(name="sortKey")
    def sort_key(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "sort_key")

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[_builtins.str]:
        """
        The snapshot group status.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="tagKey")
    def tag_key(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "tag_key")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[_builtins.str]:
        """
        The tags of the snapshot group.
        """
        return pulumi.get(self, "tags")


class AwaitableGetSnapshotGroupsResult(GetSnapshotGroupsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSnapshotGroupsResult(
            enterprise_project_id=self.enterprise_project_id,
            id=self.id,
            name=self.name,
            region=self.region,
            server_id=self.server_id,
            snapshot_groups=self.snapshot_groups,
            sort_dir=self.sort_dir,
            sort_key=self.sort_key,
            status=self.status,
            tag_key=self.tag_key,
            tags=self.tags)


def get_snapshot_groups(enterprise_project_id: Optional[_builtins.str] = None,
                        id: Optional[_builtins.str] = None,
                        name: Optional[_builtins.str] = None,
                        region: Optional[_builtins.str] = None,
                        server_id: Optional[_builtins.str] = None,
                        sort_dir: Optional[_builtins.str] = None,
                        sort_key: Optional[_builtins.str] = None,
                        status: Optional[_builtins.str] = None,
                        tag_key: Optional[_builtins.str] = None,
                        tags: Optional[_builtins.str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSnapshotGroupsResult:
    """
    Use this data source to query the list of EVS snapshot groups within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Evs.get_snapshot_groups()
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID for filtering.
    :param _builtins.str id: Specifies the snapshot group ID.
    :param _builtins.str name: Specifies the snapshot group name.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str server_id: Specifies the server ID to which the snapshot group are attached.
    :param _builtins.str sort_dir: Specifies the result sorting order. The default value is **desc**.
           + **desc**: The descending order.
           + **asc**: The ascending order.
    :param _builtins.str sort_key: Specifies the keyword based on which the returned results are sorted.
           The value can be **id**, **status**, or **created_at**, and the default value is **created_at**.
    :param _builtins.str status: Specifies the snapshot group status.
    :param _builtins.str tag_key: Specifies the tag name used to filter results.
    :param _builtins.str tags: Specifies the key/value pairs used to filter results. The value is in the following
           format: **[{"key":"key1","value":"value1"}]**
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['id'] = id
    __args__['name'] = name
    __args__['region'] = region
    __args__['serverId'] = server_id
    __args__['sortDir'] = sort_dir
    __args__['sortKey'] = sort_key
    __args__['status'] = status
    __args__['tagKey'] = tag_key
    __args__['tags'] = tags
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Evs/getSnapshotGroups:getSnapshotGroups', __args__, opts=opts, typ=GetSnapshotGroupsResult).value

    return AwaitableGetSnapshotGroupsResult(
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        region=pulumi.get(__ret__, 'region'),
        server_id=pulumi.get(__ret__, 'server_id'),
        snapshot_groups=pulumi.get(__ret__, 'snapshot_groups'),
        sort_dir=pulumi.get(__ret__, 'sort_dir'),
        sort_key=pulumi.get(__ret__, 'sort_key'),
        status=pulumi.get(__ret__, 'status'),
        tag_key=pulumi.get(__ret__, 'tag_key'),
        tags=pulumi.get(__ret__, 'tags'))
def get_snapshot_groups_output(enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               server_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               sort_dir: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               sort_key: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               status: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               tag_key: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               tags: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetSnapshotGroupsResult]:
    """
    Use this data source to query the list of EVS snapshot groups within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Evs.get_snapshot_groups()
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID for filtering.
    :param _builtins.str id: Specifies the snapshot group ID.
    :param _builtins.str name: Specifies the snapshot group name.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str server_id: Specifies the server ID to which the snapshot group are attached.
    :param _builtins.str sort_dir: Specifies the result sorting order. The default value is **desc**.
           + **desc**: The descending order.
           + **asc**: The ascending order.
    :param _builtins.str sort_key: Specifies the keyword based on which the returned results are sorted.
           The value can be **id**, **status**, or **created_at**, and the default value is **created_at**.
    :param _builtins.str status: Specifies the snapshot group status.
    :param _builtins.str tag_key: Specifies the tag name used to filter results.
    :param _builtins.str tags: Specifies the key/value pairs used to filter results. The value is in the following
           format: **[{"key":"key1","value":"value1"}]**
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['id'] = id
    __args__['name'] = name
    __args__['region'] = region
    __args__['serverId'] = server_id
    __args__['sortDir'] = sort_dir
    __args__['sortKey'] = sort_key
    __args__['status'] = status
    __args__['tagKey'] = tag_key
    __args__['tags'] = tags
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Evs/getSnapshotGroups:getSnapshotGroups', __args__, opts=opts, typ=GetSnapshotGroupsResult)
    return __ret__.apply(lambda __response__: GetSnapshotGroupsResult(
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        region=pulumi.get(__response__, 'region'),
        server_id=pulumi.get(__response__, 'server_id'),
        snapshot_groups=pulumi.get(__response__, 'snapshot_groups'),
        sort_dir=pulumi.get(__response__, 'sort_dir'),
        sort_key=pulumi.get(__response__, 'sort_key'),
        status=pulumi.get(__response__, 'status'),
        tag_key=pulumi.get(__response__, 'tag_key'),
        tags=pulumi.get(__response__, 'tags')))
