# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetSnapshotMetadataResult',
    'AwaitableGetSnapshotMetadataResult',
    'get_snapshot_metadata',
    'get_snapshot_metadata_output',
]

@pulumi.output_type
class GetSnapshotMetadataResult:
    """
    A collection of values returned by getSnapshotMetadata.
    """
    def __init__(__self__, id=None, metadata=None, region=None, snapshot_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if metadata and not isinstance(metadata, dict):
            raise TypeError("Expected argument 'metadata' to be a dict")
        pulumi.set(__self__, "metadata", metadata)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if snapshot_id and not isinstance(snapshot_id, str):
            raise TypeError("Expected argument 'snapshot_id' to be a str")
        pulumi.set(__self__, "snapshot_id", snapshot_id)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def metadata(self) -> Mapping[str, _builtins.str]:
        """
        The user-defined metadata key-value pair.
        """
        return pulumi.get(self, "metadata")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="snapshotId")
    def snapshot_id(self) -> _builtins.str:
        return pulumi.get(self, "snapshot_id")


class AwaitableGetSnapshotMetadataResult(GetSnapshotMetadataResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSnapshotMetadataResult(
            id=self.id,
            metadata=self.metadata,
            region=self.region,
            snapshot_id=self.snapshot_id)


def get_snapshot_metadata(region: Optional[_builtins.str] = None,
                          snapshot_id: Optional[_builtins.str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSnapshotMetadataResult:
    """
    Use this data source to get the EVS snapshot metadata within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    snapshot_id = config.require_object("snapshotId")
    test = huaweicloud.Evs.get_snapshot_metadata(snapshot_id=snapshot_id)
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str snapshot_id: Specifies the snapshot ID.
    """
    __args__ = dict()
    __args__['region'] = region
    __args__['snapshotId'] = snapshot_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Evs/getSnapshotMetadata:getSnapshotMetadata', __args__, opts=opts, typ=GetSnapshotMetadataResult).value

    return AwaitableGetSnapshotMetadataResult(
        id=pulumi.get(__ret__, 'id'),
        metadata=pulumi.get(__ret__, 'metadata'),
        region=pulumi.get(__ret__, 'region'),
        snapshot_id=pulumi.get(__ret__, 'snapshot_id'))
def get_snapshot_metadata_output(region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                 snapshot_id: Optional[pulumi.Input[_builtins.str]] = None,
                                 opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetSnapshotMetadataResult]:
    """
    Use this data source to get the EVS snapshot metadata within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    snapshot_id = config.require_object("snapshotId")
    test = huaweicloud.Evs.get_snapshot_metadata(snapshot_id=snapshot_id)
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str snapshot_id: Specifies the snapshot ID.
    """
    __args__ = dict()
    __args__['region'] = region
    __args__['snapshotId'] = snapshot_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Evs/getSnapshotMetadata:getSnapshotMetadata', __args__, opts=opts, typ=GetSnapshotMetadataResult)
    return __ret__.apply(lambda __response__: GetSnapshotMetadataResult(
        id=pulumi.get(__response__, 'id'),
        metadata=pulumi.get(__response__, 'metadata'),
        region=pulumi.get(__response__, 'region'),
        snapshot_id=pulumi.get(__response__, 'snapshot_id')))
