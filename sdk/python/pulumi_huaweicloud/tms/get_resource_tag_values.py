# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetResourceTagValuesResult',
    'AwaitableGetResourceTagValuesResult',
    'get_resource_tag_values',
    'get_resource_tag_values_output',
]

@pulumi.output_type
class GetResourceTagValuesResult:
    """
    A collection of values returned by getResourceTagValues.
    """
    def __init__(__self__, id=None, key=None, region_id=None, values=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if key and not isinstance(key, str):
            raise TypeError("Expected argument 'key' to be a str")
        pulumi.set(__self__, "key", key)
        if region_id and not isinstance(region_id, str):
            raise TypeError("Expected argument 'region_id' to be a str")
        pulumi.set(__self__, "region_id", region_id)
        if values and not isinstance(values, list):
            raise TypeError("Expected argument 'values' to be a list")
        pulumi.set(__self__, "values", values)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def key(self) -> _builtins.str:
        return pulumi.get(self, "key")

    @_builtins.property
    @pulumi.getter(name="regionId")
    def region_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "region_id")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        """
        Indicates the tag values.
        """
        return pulumi.get(self, "values")


class AwaitableGetResourceTagValuesResult(GetResourceTagValuesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetResourceTagValuesResult(
            id=self.id,
            key=self.key,
            region_id=self.region_id,
            values=self.values)


def get_resource_tag_values(key: Optional[_builtins.str] = None,
                            region_id: Optional[_builtins.str] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetResourceTagValuesResult:
    """
    Use this data source to get the list of tag values by tag key.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Tms.get_resource_tag_values(key="tag_key")
    ```


    :param _builtins.str key: Specifies the tag key.
    :param _builtins.str region_id: Specifies the region ID.
    """
    __args__ = dict()
    __args__['key'] = key
    __args__['regionId'] = region_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Tms/getResourceTagValues:getResourceTagValues', __args__, opts=opts, typ=GetResourceTagValuesResult).value

    return AwaitableGetResourceTagValuesResult(
        id=pulumi.get(__ret__, 'id'),
        key=pulumi.get(__ret__, 'key'),
        region_id=pulumi.get(__ret__, 'region_id'),
        values=pulumi.get(__ret__, 'values'))
def get_resource_tag_values_output(key: Optional[pulumi.Input[_builtins.str]] = None,
                                   region_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                   opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetResourceTagValuesResult]:
    """
    Use this data source to get the list of tag values by tag key.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Tms.get_resource_tag_values(key="tag_key")
    ```


    :param _builtins.str key: Specifies the tag key.
    :param _builtins.str region_id: Specifies the region ID.
    """
    __args__ = dict()
    __args__['key'] = key
    __args__['regionId'] = region_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Tms/getResourceTagValues:getResourceTagValues', __args__, opts=opts, typ=GetResourceTagValuesResult)
    return __ret__.apply(lambda __response__: GetResourceTagValuesResult(
        id=pulumi.get(__response__, 'id'),
        key=pulumi.get(__response__, 'key'),
        region_id=pulumi.get(__response__, 'region_id'),
        values=pulumi.get(__response__, 'values')))
