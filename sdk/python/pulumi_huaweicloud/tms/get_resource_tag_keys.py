# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetResourceTagKeysResult',
    'AwaitableGetResourceTagKeysResult',
    'get_resource_tag_keys',
    'get_resource_tag_keys_output',
]

@pulumi.output_type
class GetResourceTagKeysResult:
    """
    A collection of values returned by getResourceTagKeys.
    """
    def __init__(__self__, id=None, keys=None, region_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if keys and not isinstance(keys, list):
            raise TypeError("Expected argument 'keys' to be a list")
        pulumi.set(__self__, "keys", keys)
        if region_id and not isinstance(region_id, str):
            raise TypeError("Expected argument 'region_id' to be a str")
        pulumi.set(__self__, "region_id", region_id)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def keys(self) -> Sequence[_builtins.str]:
        """
        Indicates the tag keys.
        """
        return pulumi.get(self, "keys")

    @_builtins.property
    @pulumi.getter(name="regionId")
    def region_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "region_id")


class AwaitableGetResourceTagKeysResult(GetResourceTagKeysResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetResourceTagKeysResult(
            id=self.id,
            keys=self.keys,
            region_id=self.region_id)


def get_resource_tag_keys(region_id: Optional[_builtins.str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetResourceTagKeysResult:
    """
    Use this data source to get the list of tag keys.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Tms.get_resource_tag_keys()
    ```


    :param _builtins.str region_id: Specifies the region ID.
    """
    __args__ = dict()
    __args__['regionId'] = region_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Tms/getResourceTagKeys:getResourceTagKeys', __args__, opts=opts, typ=GetResourceTagKeysResult).value

    return AwaitableGetResourceTagKeysResult(
        id=pulumi.get(__ret__, 'id'),
        keys=pulumi.get(__ret__, 'keys'),
        region_id=pulumi.get(__ret__, 'region_id'))
def get_resource_tag_keys_output(region_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                 opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetResourceTagKeysResult]:
    """
    Use this data source to get the list of tag keys.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Tms.get_resource_tag_keys()
    ```


    :param _builtins.str region_id: Specifies the region ID.
    """
    __args__ = dict()
    __args__['regionId'] = region_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Tms/getResourceTagKeys:getResourceTagKeys', __args__, opts=opts, typ=GetResourceTagKeysResult)
    return __ret__.apply(lambda __response__: GetResourceTagKeysResult(
        id=pulumi.get(__response__, 'id'),
        keys=pulumi.get(__response__, 'keys'),
        region_id=pulumi.get(__response__, 'region_id')))
