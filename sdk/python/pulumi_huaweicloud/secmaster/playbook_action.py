# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['PlaybookActionArgs', 'PlaybookAction']

@pulumi.input_type
class PlaybookActionArgs:
    def __init__(__self__, *,
                 action_id: pulumi.Input[_builtins.str],
                 version_id: pulumi.Input[_builtins.str],
                 workspace_id: pulumi.Input[_builtins.str],
                 action_type: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 sort_order: Optional[pulumi.Input[_builtins.float]] = None):
        """
        The set of arguments for constructing a PlaybookAction resource.
        :param pulumi.Input[_builtins.str] action_id: Specifies the workflow ID.
        :param pulumi.Input[_builtins.str] version_id: Specifies playbook version ID of the action.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the ID of the workspace to which the playbook action belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] action_type: Specifies the playbook action type.
               The value can be **AOP_WORKFLOW**.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the playbook action.
        :param pulumi.Input[_builtins.str] name: Specifies playbook action name.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.float] sort_order: Specifies the sort order of the playbook action.
        """
        pulumi.set(__self__, "action_id", action_id)
        pulumi.set(__self__, "version_id", version_id)
        pulumi.set(__self__, "workspace_id", workspace_id)
        if action_type is not None:
            pulumi.set(__self__, "action_type", action_type)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if sort_order is not None:
            pulumi.set(__self__, "sort_order", sort_order)

    @_builtins.property
    @pulumi.getter(name="actionId")
    def action_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the workflow ID.
        """
        return pulumi.get(self, "action_id")

    @action_id.setter
    def action_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "action_id", value)

    @_builtins.property
    @pulumi.getter(name="versionId")
    def version_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies playbook version ID of the action.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "version_id")

    @version_id.setter
    def version_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "version_id", value)

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the workspace to which the playbook action belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "workspace_id")

    @workspace_id.setter
    def workspace_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "workspace_id", value)

    @_builtins.property
    @pulumi.getter(name="actionType")
    def action_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the playbook action type.
        The value can be **AOP_WORKFLOW**.
        """
        return pulumi.get(self, "action_type")

    @action_type.setter
    def action_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "action_type", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the playbook action.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies playbook action name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="sortOrder")
    def sort_order(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Specifies the sort order of the playbook action.
        """
        return pulumi.get(self, "sort_order")

    @sort_order.setter
    def sort_order(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "sort_order", value)


@pulumi.input_type
class _PlaybookActionState:
    def __init__(__self__, *,
                 action_id: Optional[pulumi.Input[_builtins.str]] = None,
                 action_type: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 playbook_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 sort_order: Optional[pulumi.Input[_builtins.float]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 version_id: Optional[pulumi.Input[_builtins.str]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering PlaybookAction resources.
        :param pulumi.Input[_builtins.str] action_id: Specifies the workflow ID.
        :param pulumi.Input[_builtins.str] action_type: Specifies the playbook action type.
               The value can be **AOP_WORKFLOW**.
        :param pulumi.Input[_builtins.str] created_at: Indicates the created time of the playbook action.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the playbook action.
        :param pulumi.Input[_builtins.str] name: Specifies playbook action name.
        :param pulumi.Input[_builtins.str] playbook_id: Indicates the playbook ID of the action.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.float] sort_order: Specifies the sort order of the playbook action.
        :param pulumi.Input[_builtins.str] updated_at: Indicates the updated time of the playbook action.
        :param pulumi.Input[_builtins.str] version_id: Specifies playbook version ID of the action.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the ID of the workspace to which the playbook action belongs.
               
               Changing this parameter will create a new resource.
        """
        if action_id is not None:
            pulumi.set(__self__, "action_id", action_id)
        if action_type is not None:
            pulumi.set(__self__, "action_type", action_type)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if playbook_id is not None:
            pulumi.set(__self__, "playbook_id", playbook_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if sort_order is not None:
            pulumi.set(__self__, "sort_order", sort_order)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if version_id is not None:
            pulumi.set(__self__, "version_id", version_id)
        if workspace_id is not None:
            pulumi.set(__self__, "workspace_id", workspace_id)

    @_builtins.property
    @pulumi.getter(name="actionId")
    def action_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the workflow ID.
        """
        return pulumi.get(self, "action_id")

    @action_id.setter
    def action_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "action_id", value)

    @_builtins.property
    @pulumi.getter(name="actionType")
    def action_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the playbook action type.
        The value can be **AOP_WORKFLOW**.
        """
        return pulumi.get(self, "action_type")

    @action_type.setter
    def action_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "action_type", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the created time of the playbook action.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the playbook action.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies playbook action name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="playbookId")
    def playbook_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the playbook ID of the action.
        """
        return pulumi.get(self, "playbook_id")

    @playbook_id.setter
    def playbook_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "playbook_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="sortOrder")
    def sort_order(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Specifies the sort order of the playbook action.
        """
        return pulumi.get(self, "sort_order")

    @sort_order.setter
    def sort_order(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "sort_order", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the updated time of the playbook action.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter(name="versionId")
    def version_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies playbook version ID of the action.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "version_id")

    @version_id.setter
    def version_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "version_id", value)

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the workspace to which the playbook action belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "workspace_id")

    @workspace_id.setter
    def workspace_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "workspace_id", value)


@pulumi.type_token("huaweicloud:secmaster/playbookAction:PlaybookAction")
class PlaybookAction(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action_id: Optional[pulumi.Input[_builtins.str]] = None,
                 action_type: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 sort_order: Optional[pulumi.Input[_builtins.float]] = None,
                 version_id: Optional[pulumi.Input[_builtins.str]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a SecMaster playbook action resource within HuaweiCloud.

        ## Example Usage

        ### Basic Example

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        workspace_id = config.require_object("workspaceId")
        version_id = config.require_object("versionId")
        action_id = config.require_object("actionId")
        name = huaweicloud.secmaster.PlaybookAction("name",
            workspace_id=workspace_id,
            version_id=version_id,
            action_id=action_id,
            name="test",
            description="created by terraform")
        ```

        ### More Examples

        For more detailed associated usage see [playbook instructions](https://www.terraform.io/examples/secmaster/playbook/README.md)

        ## Import

        The playbookaction can be imported using the workspace ID, the playbook version ID and the playbook action ID,

        separated by slashes, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:secmaster/playbookAction:PlaybookAction test <workspace_id>/<playbook_version_id>/<playbook_action_id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] action_id: Specifies the workflow ID.
        :param pulumi.Input[_builtins.str] action_type: Specifies the playbook action type.
               The value can be **AOP_WORKFLOW**.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the playbook action.
        :param pulumi.Input[_builtins.str] name: Specifies playbook action name.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.float] sort_order: Specifies the sort order of the playbook action.
        :param pulumi.Input[_builtins.str] version_id: Specifies playbook version ID of the action.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the ID of the workspace to which the playbook action belongs.
               
               Changing this parameter will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PlaybookActionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a SecMaster playbook action resource within HuaweiCloud.

        ## Example Usage

        ### Basic Example

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        workspace_id = config.require_object("workspaceId")
        version_id = config.require_object("versionId")
        action_id = config.require_object("actionId")
        name = huaweicloud.secmaster.PlaybookAction("name",
            workspace_id=workspace_id,
            version_id=version_id,
            action_id=action_id,
            name="test",
            description="created by terraform")
        ```

        ### More Examples

        For more detailed associated usage see [playbook instructions](https://www.terraform.io/examples/secmaster/playbook/README.md)

        ## Import

        The playbookaction can be imported using the workspace ID, the playbook version ID and the playbook action ID,

        separated by slashes, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:secmaster/playbookAction:PlaybookAction test <workspace_id>/<playbook_version_id>/<playbook_action_id>
        ```

        :param str resource_name: The name of the resource.
        :param PlaybookActionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PlaybookActionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action_id: Optional[pulumi.Input[_builtins.str]] = None,
                 action_type: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 sort_order: Optional[pulumi.Input[_builtins.float]] = None,
                 version_id: Optional[pulumi.Input[_builtins.str]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PlaybookActionArgs.__new__(PlaybookActionArgs)

            if action_id is None and not opts.urn:
                raise TypeError("Missing required property 'action_id'")
            __props__.__dict__["action_id"] = action_id
            __props__.__dict__["action_type"] = action_type
            __props__.__dict__["description"] = description
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            __props__.__dict__["sort_order"] = sort_order
            if version_id is None and not opts.urn:
                raise TypeError("Missing required property 'version_id'")
            __props__.__dict__["version_id"] = version_id
            if workspace_id is None and not opts.urn:
                raise TypeError("Missing required property 'workspace_id'")
            __props__.__dict__["workspace_id"] = workspace_id
            __props__.__dict__["created_at"] = None
            __props__.__dict__["playbook_id"] = None
            __props__.__dict__["updated_at"] = None
        super(PlaybookAction, __self__).__init__(
            'huaweicloud:secmaster/playbookAction:PlaybookAction',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            action_id: Optional[pulumi.Input[_builtins.str]] = None,
            action_type: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            playbook_id: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            sort_order: Optional[pulumi.Input[_builtins.float]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            version_id: Optional[pulumi.Input[_builtins.str]] = None,
            workspace_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'PlaybookAction':
        """
        Get an existing PlaybookAction resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] action_id: Specifies the workflow ID.
        :param pulumi.Input[_builtins.str] action_type: Specifies the playbook action type.
               The value can be **AOP_WORKFLOW**.
        :param pulumi.Input[_builtins.str] created_at: Indicates the created time of the playbook action.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the playbook action.
        :param pulumi.Input[_builtins.str] name: Specifies playbook action name.
        :param pulumi.Input[_builtins.str] playbook_id: Indicates the playbook ID of the action.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.float] sort_order: Specifies the sort order of the playbook action.
        :param pulumi.Input[_builtins.str] updated_at: Indicates the updated time of the playbook action.
        :param pulumi.Input[_builtins.str] version_id: Specifies playbook version ID of the action.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the ID of the workspace to which the playbook action belongs.
               
               Changing this parameter will create a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PlaybookActionState.__new__(_PlaybookActionState)

        __props__.__dict__["action_id"] = action_id
        __props__.__dict__["action_type"] = action_type
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["description"] = description
        __props__.__dict__["name"] = name
        __props__.__dict__["playbook_id"] = playbook_id
        __props__.__dict__["region"] = region
        __props__.__dict__["sort_order"] = sort_order
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["version_id"] = version_id
        __props__.__dict__["workspace_id"] = workspace_id
        return PlaybookAction(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="actionId")
    def action_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the workflow ID.
        """
        return pulumi.get(self, "action_id")

    @_builtins.property
    @pulumi.getter(name="actionType")
    def action_type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the playbook action type.
        The value can be **AOP_WORKFLOW**.
        """
        return pulumi.get(self, "action_type")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the created time of the playbook action.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the description of the playbook action.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies playbook action name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="playbookId")
    def playbook_id(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the playbook ID of the action.
        """
        return pulumi.get(self, "playbook_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="sortOrder")
    def sort_order(self) -> pulumi.Output[_builtins.float]:
        """
        Specifies the sort order of the playbook action.
        """
        return pulumi.get(self, "sort_order")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the updated time of the playbook action.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter(name="versionId")
    def version_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies playbook version ID of the action.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "version_id")

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the workspace to which the playbook action belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "workspace_id")

