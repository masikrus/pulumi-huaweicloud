# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetAlertRuleTemplatesV2Result',
    'AwaitableGetAlertRuleTemplatesV2Result',
    'get_alert_rule_templates_v2',
    'get_alert_rule_templates_v2_output',
]

@pulumi.output_type
class GetAlertRuleTemplatesV2Result:
    """
    A collection of values returned by getAlertRuleTemplatesV2.
    """
    def __init__(__self__, id=None, records=None, region=None, severity=None, template_name=None, workspace_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if records and not isinstance(records, list):
            raise TypeError("Expected argument 'records' to be a list")
        pulumi.set(__self__, "records", records)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if severity and not isinstance(severity, str):
            raise TypeError("Expected argument 'severity' to be a str")
        pulumi.set(__self__, "severity", severity)
        if template_name and not isinstance(template_name, str):
            raise TypeError("Expected argument 'template_name' to be a str")
        pulumi.set(__self__, "template_name", template_name)
        if workspace_id and not isinstance(workspace_id, str):
            raise TypeError("Expected argument 'workspace_id' to be a str")
        pulumi.set(__self__, "workspace_id", workspace_id)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def records(self) -> Sequence['outputs.GetAlertRuleTemplatesV2RecordResult']:
        """
        The list of alert rule templates.
        """
        return pulumi.get(self, "records")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def severity(self) -> Optional[_builtins.str]:
        """
        The alert level.
        """
        return pulumi.get(self, "severity")

    @_builtins.property
    @pulumi.getter(name="templateName")
    def template_name(self) -> Optional[_builtins.str]:
        """
        The alert rule template name.
        """
        return pulumi.get(self, "template_name")

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> _builtins.str:
        return pulumi.get(self, "workspace_id")


class AwaitableGetAlertRuleTemplatesV2Result(GetAlertRuleTemplatesV2Result):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAlertRuleTemplatesV2Result(
            id=self.id,
            records=self.records,
            region=self.region,
            severity=self.severity,
            template_name=self.template_name,
            workspace_id=self.workspace_id)


def get_alert_rule_templates_v2(region: Optional[_builtins.str] = None,
                                severity: Optional[_builtins.str] = None,
                                template_name: Optional[_builtins.str] = None,
                                workspace_id: Optional[_builtins.str] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAlertRuleTemplatesV2Result:
    """
    Use this data source to get the list of alert rule templates (V2).

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    workspace_id = config.require_object("workspaceId")
    test = huaweicloud.secmaster.get_alert_rule_templates_v2(workspace_id=workspace_id)
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str severity: Specifies the alert level.
           The value can be **TIPS**, **LOW**, **MEDIUM**, **HIGH** or **FATAL**.
    :param _builtins.str template_name: Specifies the alert rule template name.
    :param _builtins.str workspace_id: Specifies the workspace ID.
    """
    __args__ = dict()
    __args__['region'] = region
    __args__['severity'] = severity
    __args__['templateName'] = template_name
    __args__['workspaceId'] = workspace_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:secmaster/getAlertRuleTemplatesV2:getAlertRuleTemplatesV2', __args__, opts=opts, typ=GetAlertRuleTemplatesV2Result).value

    return AwaitableGetAlertRuleTemplatesV2Result(
        id=pulumi.get(__ret__, 'id'),
        records=pulumi.get(__ret__, 'records'),
        region=pulumi.get(__ret__, 'region'),
        severity=pulumi.get(__ret__, 'severity'),
        template_name=pulumi.get(__ret__, 'template_name'),
        workspace_id=pulumi.get(__ret__, 'workspace_id'))
def get_alert_rule_templates_v2_output(region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                       severity: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                       template_name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                       workspace_id: Optional[pulumi.Input[_builtins.str]] = None,
                                       opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAlertRuleTemplatesV2Result]:
    """
    Use this data source to get the list of alert rule templates (V2).

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    workspace_id = config.require_object("workspaceId")
    test = huaweicloud.secmaster.get_alert_rule_templates_v2(workspace_id=workspace_id)
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str severity: Specifies the alert level.
           The value can be **TIPS**, **LOW**, **MEDIUM**, **HIGH** or **FATAL**.
    :param _builtins.str template_name: Specifies the alert rule template name.
    :param _builtins.str workspace_id: Specifies the workspace ID.
    """
    __args__ = dict()
    __args__['region'] = region
    __args__['severity'] = severity
    __args__['templateName'] = template_name
    __args__['workspaceId'] = workspace_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:secmaster/getAlertRuleTemplatesV2:getAlertRuleTemplatesV2', __args__, opts=opts, typ=GetAlertRuleTemplatesV2Result)
    return __ret__.apply(lambda __response__: GetAlertRuleTemplatesV2Result(
        id=pulumi.get(__response__, 'id'),
        records=pulumi.get(__response__, 'records'),
        region=pulumi.get(__response__, 'region'),
        severity=pulumi.get(__response__, 'severity'),
        template_name=pulumi.get(__response__, 'template_name'),
        workspace_id=pulumi.get(__response__, 'workspace_id')))
