# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetPlaybookActionInstancesResult',
    'AwaitableGetPlaybookActionInstancesResult',
    'get_playbook_action_instances',
    'get_playbook_action_instances_output',
]

@pulumi.output_type
class GetPlaybookActionInstancesResult:
    """
    A collection of values returned by getPlaybookActionInstances.
    """
    def __init__(__self__, action_instances=None, id=None, playbook_instance_id=None, region=None, workspace_id=None):
        if action_instances and not isinstance(action_instances, list):
            raise TypeError("Expected argument 'action_instances' to be a list")
        pulumi.set(__self__, "action_instances", action_instances)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if playbook_instance_id and not isinstance(playbook_instance_id, str):
            raise TypeError("Expected argument 'playbook_instance_id' to be a str")
        pulumi.set(__self__, "playbook_instance_id", playbook_instance_id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if workspace_id and not isinstance(workspace_id, str):
            raise TypeError("Expected argument 'workspace_id' to be a str")
        pulumi.set(__self__, "workspace_id", workspace_id)

    @_builtins.property
    @pulumi.getter(name="actionInstances")
    def action_instances(self) -> Sequence['outputs.GetPlaybookActionInstancesActionInstanceResult']:
        """
        The playbook action instance list.
        """
        return pulumi.get(self, "action_instances")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="playbookInstanceId")
    def playbook_instance_id(self) -> _builtins.str:
        return pulumi.get(self, "playbook_instance_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> _builtins.str:
        return pulumi.get(self, "workspace_id")


class AwaitableGetPlaybookActionInstancesResult(GetPlaybookActionInstancesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPlaybookActionInstancesResult(
            action_instances=self.action_instances,
            id=self.id,
            playbook_instance_id=self.playbook_instance_id,
            region=self.region,
            workspace_id=self.workspace_id)


def get_playbook_action_instances(playbook_instance_id: Optional[_builtins.str] = None,
                                  region: Optional[_builtins.str] = None,
                                  workspace_id: Optional[_builtins.str] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPlaybookActionInstancesResult:
    """
    Use this data source to get the list of SecMaster playbook action instances.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    workspace_id = config.require_object("workspaceId")
    playbook_instance_id = config.require_object("playbookInstanceId")
    test = huaweicloud.secmaster.get_playbook_action_instances(workspace_id=workspace_id,
        playbook_instance_id=playbook_instance_id)
    ```


    :param _builtins.str playbook_instance_id: Specifies the playbook instance ID.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str workspace_id: Specifies the workspace ID to which the playbook instance belongs.
    """
    __args__ = dict()
    __args__['playbookInstanceId'] = playbook_instance_id
    __args__['region'] = region
    __args__['workspaceId'] = workspace_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:secmaster/getPlaybookActionInstances:getPlaybookActionInstances', __args__, opts=opts, typ=GetPlaybookActionInstancesResult).value

    return AwaitableGetPlaybookActionInstancesResult(
        action_instances=pulumi.get(__ret__, 'action_instances'),
        id=pulumi.get(__ret__, 'id'),
        playbook_instance_id=pulumi.get(__ret__, 'playbook_instance_id'),
        region=pulumi.get(__ret__, 'region'),
        workspace_id=pulumi.get(__ret__, 'workspace_id'))
def get_playbook_action_instances_output(playbook_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                                         region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                         workspace_id: Optional[pulumi.Input[_builtins.str]] = None,
                                         opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetPlaybookActionInstancesResult]:
    """
    Use this data source to get the list of SecMaster playbook action instances.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    workspace_id = config.require_object("workspaceId")
    playbook_instance_id = config.require_object("playbookInstanceId")
    test = huaweicloud.secmaster.get_playbook_action_instances(workspace_id=workspace_id,
        playbook_instance_id=playbook_instance_id)
    ```


    :param _builtins.str playbook_instance_id: Specifies the playbook instance ID.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str workspace_id: Specifies the workspace ID to which the playbook instance belongs.
    """
    __args__ = dict()
    __args__['playbookInstanceId'] = playbook_instance_id
    __args__['region'] = region
    __args__['workspaceId'] = workspace_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:secmaster/getPlaybookActionInstances:getPlaybookActionInstances', __args__, opts=opts, typ=GetPlaybookActionInstancesResult)
    return __ret__.apply(lambda __response__: GetPlaybookActionInstancesResult(
        action_instances=pulumi.get(__response__, 'action_instances'),
        id=pulumi.get(__response__, 'id'),
        playbook_instance_id=pulumi.get(__response__, 'playbook_instance_id'),
        region=pulumi.get(__response__, 'region'),
        workspace_id=pulumi.get(__response__, 'workspace_id')))
