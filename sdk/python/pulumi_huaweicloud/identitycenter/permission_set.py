# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['PermissionSetArgs', 'PermissionSet']

@pulumi.input_type
class PermissionSetArgs:
    def __init__(__self__, *,
                 instance_id: pulumi.Input[_builtins.str],
                 session_duration: pulumi.Input[_builtins.str],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 relay_state: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None):
        """
        The set of arguments for constructing a PermissionSet resource.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the IAM Identity Center instance.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] session_duration: Specifies the length of time that the user sessions are valid in the
               ISO-8601 standard, e.g. **PT4H**.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the permission set.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the permission set.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] relay_state: Specifies the relay state URL used to redirect users within the application during
               the federation authentication process.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: (Optional, Map) Specifies the key/value pairs to associate with the permission set.
        """
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "session_duration", session_duration)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if relay_state is not None:
            pulumi.set(__self__, "relay_state", relay_state)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the IAM Identity Center instance.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="sessionDuration")
    def session_duration(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the length of time that the user sessions are valid in the
        ISO-8601 standard, e.g. **PT4H**.
        """
        return pulumi.get(self, "session_duration")

    @session_duration.setter
    def session_duration(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "session_duration", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the permission set.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the permission set.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="relayState")
    def relay_state(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the relay state URL used to redirect users within the application during
        the federation authentication process.
        """
        return pulumi.get(self, "relay_state")

    @relay_state.setter
    def relay_state(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "relay_state", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        (Optional, Map) Specifies the key/value pairs to associate with the permission set.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _PermissionSetState:
    def __init__(__self__, *,
                 account_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 relay_state: Optional[pulumi.Input[_builtins.str]] = None,
                 session_duration: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 urn: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering PermissionSet resources.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] account_ids: The array of one or more account IDs bound to the permission set.
        :param pulumi.Input[_builtins.str] created_at: The date the permission set was created in RFC3339 format.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the permission set.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the IAM Identity Center instance.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the permission set.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] relay_state: Specifies the relay state URL used to redirect users within the application during
               the federation authentication process.
        :param pulumi.Input[_builtins.str] session_duration: Specifies the length of time that the user sessions are valid in the
               ISO-8601 standard, e.g. **PT4H**.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: (Optional, Map) Specifies the key/value pairs to associate with the permission set.
        :param pulumi.Input[_builtins.str] urn: The Uniform Resource Name of the permission set.
        """
        if account_ids is not None:
            pulumi.set(__self__, "account_ids", account_ids)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if relay_state is not None:
            pulumi.set(__self__, "relay_state", relay_state)
        if session_duration is not None:
            pulumi.set(__self__, "session_duration", session_duration)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if urn is not None:
            pulumi.set(__self__, "urn", urn)

    @_builtins.property
    @pulumi.getter(name="accountIds")
    def account_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        The array of one or more account IDs bound to the permission set.
        """
        return pulumi.get(self, "account_ids")

    @account_ids.setter
    def account_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "account_ids", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The date the permission set was created in RFC3339 format.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the permission set.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the IAM Identity Center instance.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the permission set.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="relayState")
    def relay_state(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the relay state URL used to redirect users within the application during
        the federation authentication process.
        """
        return pulumi.get(self, "relay_state")

    @relay_state.setter
    def relay_state(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "relay_state", value)

    @_builtins.property
    @pulumi.getter(name="sessionDuration")
    def session_duration(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the length of time that the user sessions are valid in the
        ISO-8601 standard, e.g. **PT4H**.
        """
        return pulumi.get(self, "session_duration")

    @session_duration.setter
    def session_duration(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "session_duration", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        (Optional, Map) Specifies the key/value pairs to associate with the permission set.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter
    def urn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The Uniform Resource Name of the permission set.
        """
        return pulumi.get(self, "urn")

    @urn.setter
    def urn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "urn", value)


@pulumi.type_token("huaweicloud:identitycenter/permissionSet:PermissionSet")
class PermissionSet(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 relay_state: Optional[pulumi.Input[_builtins.str]] = None,
                 session_duration: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        """
        Manages an Identity Center permission set resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        system = huaweicloud.identitycenter.get_instance()
        demo = huaweicloud.identitycenter.PermissionSet("demo",
            instance_id=system.id,
            name="demo",
            session_duration="PT8H")
        ```

        ## Import

        The Identity Center permission set can be imported using the `instance_id` and `id` separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:identitycenter/permissionSet:PermissionSet demo <instance_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the permission set.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the IAM Identity Center instance.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the permission set.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] relay_state: Specifies the relay state URL used to redirect users within the application during
               the federation authentication process.
        :param pulumi.Input[_builtins.str] session_duration: Specifies the length of time that the user sessions are valid in the
               ISO-8601 standard, e.g. **PT4H**.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: (Optional, Map) Specifies the key/value pairs to associate with the permission set.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PermissionSetArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an Identity Center permission set resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        system = huaweicloud.identitycenter.get_instance()
        demo = huaweicloud.identitycenter.PermissionSet("demo",
            instance_id=system.id,
            name="demo",
            session_duration="PT8H")
        ```

        ## Import

        The Identity Center permission set can be imported using the `instance_id` and `id` separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:identitycenter/permissionSet:PermissionSet demo <instance_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param PermissionSetArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PermissionSetArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 relay_state: Optional[pulumi.Input[_builtins.str]] = None,
                 session_duration: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PermissionSetArgs.__new__(PermissionSetArgs)

            __props__.__dict__["description"] = description
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["name"] = name
            __props__.__dict__["relay_state"] = relay_state
            if session_duration is None and not opts.urn:
                raise TypeError("Missing required property 'session_duration'")
            __props__.__dict__["session_duration"] = session_duration
            __props__.__dict__["tags"] = tags
            __props__.__dict__["account_ids"] = None
            __props__.__dict__["created_at"] = None
            __props__.__dict__["urn"] = None
        super(PermissionSet, __self__).__init__(
            'huaweicloud:identitycenter/permissionSet:PermissionSet',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            account_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            relay_state: Optional[pulumi.Input[_builtins.str]] = None,
            session_duration: Optional[pulumi.Input[_builtins.str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            urn: Optional[pulumi.Input[_builtins.str]] = None) -> 'PermissionSet':
        """
        Get an existing PermissionSet resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] account_ids: The array of one or more account IDs bound to the permission set.
        :param pulumi.Input[_builtins.str] created_at: The date the permission set was created in RFC3339 format.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the permission set.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the IAM Identity Center instance.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the permission set.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] relay_state: Specifies the relay state URL used to redirect users within the application during
               the federation authentication process.
        :param pulumi.Input[_builtins.str] session_duration: Specifies the length of time that the user sessions are valid in the
               ISO-8601 standard, e.g. **PT4H**.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: (Optional, Map) Specifies the key/value pairs to associate with the permission set.
        :param pulumi.Input[_builtins.str] urn: The Uniform Resource Name of the permission set.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PermissionSetState.__new__(_PermissionSetState)

        __props__.__dict__["account_ids"] = account_ids
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["description"] = description
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["name"] = name
        __props__.__dict__["relay_state"] = relay_state
        __props__.__dict__["session_duration"] = session_duration
        __props__.__dict__["tags"] = tags
        __props__.__dict__["urn"] = urn
        return PermissionSet(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="accountIds")
    def account_ids(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        The array of one or more account IDs bound to the permission set.
        """
        return pulumi.get(self, "account_ids")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The date the permission set was created in RFC3339 format.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the description of the permission set.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the IAM Identity Center instance.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of the permission set.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="relayState")
    def relay_state(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the relay state URL used to redirect users within the application during
        the federation authentication process.
        """
        return pulumi.get(self, "relay_state")

    @_builtins.property
    @pulumi.getter(name="sessionDuration")
    def session_duration(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the length of time that the user sessions are valid in the
        ISO-8601 standard, e.g. **PT4H**.
        """
        return pulumi.get(self, "session_duration")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Mapping[str, _builtins.str]]:
        """
        (Optional, Map) Specifies the key/value pairs to associate with the permission set.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def urn(self) -> pulumi.Output[_builtins.str]:
        """
        The Uniform Resource Name of the permission set.
        """
        return pulumi.get(self, "urn")

