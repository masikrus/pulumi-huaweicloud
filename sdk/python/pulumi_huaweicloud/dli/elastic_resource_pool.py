# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['ElasticResourcePoolArgs', 'ElasticResourcePool']

@pulumi.input_type
class ElasticResourcePoolArgs:
    def __init__(__self__, *,
                 max_cu: pulumi.Input[_builtins.int],
                 min_cu: pulumi.Input[_builtins.int],
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 cidr: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 label: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None):
        """
        The set of arguments for constructing a ElasticResourcePool resource.
        :param pulumi.Input[_builtins.int] max_cu: Specifies the maximum number of CUs for elastic resource pool scaling.
               The interval is `16`.
               + For standard edition, the valid value ranges from `64` to `32,000`.
               + For basic edition, the valid value ranges from `16` to `64`.
        :param pulumi.Input[_builtins.int] min_cu: Specifies the minimum number of CUs for elastic resource pool scaling.
               The interval is `16`.
               + For standard edition, the valid value ranges from `64` to `32,000`.
               + For basic edition, the valid value ranges from `16` to `64`.
               
               > If the value needs to be updated, the `min_cu` value cannot be greater than the `current_cu` value.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether to enable auto-renew for the elastic resource pool.  
               Defaults to **false**.
               The valid values are **true** and **false**.
               This parameter is available only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode of the elastic resource pool.  
               Defaults to **postPaid**.
               The valid values are **postPaid** and **prePaid**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] cidr: Specifies the CIDR block of network to associate with the elastic resource pool.
               Defaults to `172.16.0.0/12`. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the elastic resource pool.  
               The valid length is limited from `1` to `128`.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project to which the elastic resource
               pool belongs.
               This parameter is only valid for enterprise users, if omitted, default enterprise project will be used.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] label: Specifies the attribute fields of the elastic resource pool.  
               Changing this will create a new resource.
               If not specified, the default is the standard edition. The key/value corresponding to the basic edition is `spec = "basic"`.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the elastic resource pool.  
               The valid length is limited from `1` to `128`, only lowercase letters, digits and underscores (_) are allowed.
               The name cannot contain only numbers or start with a number or an underscore.
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.int] period: Specifies the period of the elastic resource pool.  
               This parameter is **required** and available only when `charging_mode` is set to **prePaid**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the period unit of the elastic resource pool.  
               The valid values are **month** and **year**.
               This parameter is **required** and available only when `charging_mode` is set to **prePaid**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the elastic resource pool is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the elastic resource pool.  
               Changing this will create a new resource.
        """
        pulumi.set(__self__, "max_cu", max_cu)
        pulumi.set(__self__, "min_cu", min_cu)
        if auto_renew is not None:
            pulumi.set(__self__, "auto_renew", auto_renew)
        if charging_mode is not None:
            pulumi.set(__self__, "charging_mode", charging_mode)
        if cidr is not None:
            pulumi.set(__self__, "cidr", cidr)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if label is not None:
            pulumi.set(__self__, "label", label)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if period is not None:
            pulumi.set(__self__, "period", period)
        if period_unit is not None:
            pulumi.set(__self__, "period_unit", period_unit)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="maxCu")
    def max_cu(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the maximum number of CUs for elastic resource pool scaling.
        The interval is `16`.
        + For standard edition, the valid value ranges from `64` to `32,000`.
        + For basic edition, the valid value ranges from `16` to `64`.
        """
        return pulumi.get(self, "max_cu")

    @max_cu.setter
    def max_cu(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "max_cu", value)

    @_builtins.property
    @pulumi.getter(name="minCu")
    def min_cu(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the minimum number of CUs for elastic resource pool scaling.
        The interval is `16`.
        + For standard edition, the valid value ranges from `64` to `32,000`.
        + For basic edition, the valid value ranges from `16` to `64`.

        > If the value needs to be updated, the `min_cu` value cannot be greater than the `current_cu` value.
        """
        return pulumi.get(self, "min_cu")

    @min_cu.setter
    def min_cu(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "min_cu", value)

    @_builtins.property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies whether to enable auto-renew for the elastic resource pool.  
        Defaults to **false**.
        The valid values are **true** and **false**.
        This parameter is available only when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "auto_renew")

    @auto_renew.setter
    def auto_renew(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "auto_renew", value)

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the charging mode of the elastic resource pool.  
        Defaults to **postPaid**.
        The valid values are **postPaid** and **prePaid**.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "charging_mode")

    @charging_mode.setter
    def charging_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "charging_mode", value)

    @_builtins.property
    @pulumi.getter
    def cidr(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the CIDR block of network to associate with the elastic resource pool.
        Defaults to `172.16.0.0/12`. Changing this will create a new resource.
        """
        return pulumi.get(self, "cidr")

    @cidr.setter
    def cidr(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cidr", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the elastic resource pool.  
        The valid length is limited from `1` to `128`.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the enterprise project to which the elastic resource
        pool belongs.
        This parameter is only valid for enterprise users, if omitted, default enterprise project will be used.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def label(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the attribute fields of the elastic resource pool.  
        Changing this will create a new resource.
        If not specified, the default is the standard edition. The key/value corresponding to the basic edition is `spec = "basic"`.
        """
        return pulumi.get(self, "label")

    @label.setter
    def label(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "label", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the elastic resource pool.  
        The valid length is limited from `1` to `128`, only lowercase letters, digits and underscores (_) are allowed.
        The name cannot contain only numbers or start with a number or an underscore.
        Changing this will create a new resource.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the period of the elastic resource pool.  
        This parameter is **required** and available only when `charging_mode` is set to **prePaid**.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "period", value)

    @_builtins.property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the period unit of the elastic resource pool.  
        The valid values are **month** and **year**.
        This parameter is **required** and available only when `charging_mode` is set to **prePaid**.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "period_unit")

    @period_unit.setter
    def period_unit(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "period_unit", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the elastic resource pool is located.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the key/value pairs to associate with the elastic resource pool.  
        Changing this will create a new resource.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _ElasticResourcePoolState:
    def __init__(__self__, *,
                 actual_cu: Optional[pulumi.Input[_builtins.int]] = None,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 cidr: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 current_cu: Optional[pulumi.Input[_builtins.int]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 label: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 max_cu: Optional[pulumi.Input[_builtins.int]] = None,
                 min_cu: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 prepay_cu: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None):
        """
        Input properties used for looking up and filtering ElasticResourcePool resources.
        :param pulumi.Input[_builtins.int] actual_cu: The current CU number of the elastic resource pool.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether to enable auto-renew for the elastic resource pool.  
               Defaults to **false**.
               The valid values are **true** and **false**.
               This parameter is available only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode of the elastic resource pool.  
               Defaults to **postPaid**.
               The valid values are **postPaid** and **prePaid**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] cidr: Specifies the CIDR block of network to associate with the elastic resource pool.
               Defaults to `172.16.0.0/12`. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] created_at: The creation time of the elastic resource pool.  
               The format is `YYYY-MM-DDThh:mm:ss{timezone}`, e.g. `2024-01-01T08:00:00+08:00`.
        :param pulumi.Input[_builtins.int] current_cu: The current CU number of the elastic resource pool.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the elastic resource pool.  
               The valid length is limited from `1` to `128`.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project to which the elastic resource
               pool belongs.
               This parameter is only valid for enterprise users, if omitted, default enterprise project will be used.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] label: Specifies the attribute fields of the elastic resource pool.  
               Changing this will create a new resource.
               If not specified, the default is the standard edition. The key/value corresponding to the basic edition is `spec = "basic"`.
        :param pulumi.Input[_builtins.int] max_cu: Specifies the maximum number of CUs for elastic resource pool scaling.
               The interval is `16`.
               + For standard edition, the valid value ranges from `64` to `32,000`.
               + For basic edition, the valid value ranges from `16` to `64`.
        :param pulumi.Input[_builtins.int] min_cu: Specifies the minimum number of CUs for elastic resource pool scaling.
               The interval is `16`.
               + For standard edition, the valid value ranges from `64` to `32,000`.
               + For basic edition, the valid value ranges from `16` to `64`.
               
               > If the value needs to be updated, the `min_cu` value cannot be greater than the `current_cu` value.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the elastic resource pool.  
               The valid length is limited from `1` to `128`, only lowercase letters, digits and underscores (_) are allowed.
               The name cannot contain only numbers or start with a number or an underscore.
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.int] period: Specifies the period of the elastic resource pool.  
               This parameter is **required** and available only when `charging_mode` is set to **prePaid**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the period unit of the elastic resource pool.  
               The valid values are **month** and **year**.
               This parameter is **required** and available only when `charging_mode` is set to **prePaid**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] prepay_cu: The number of prepaid CUs of the elastic resource pool.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the elastic resource pool is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] status: The current status of the elastic resource pool.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the elastic resource pool.  
               Changing this will create a new resource.
        """
        if actual_cu is not None:
            pulumi.set(__self__, "actual_cu", actual_cu)
        if auto_renew is not None:
            pulumi.set(__self__, "auto_renew", auto_renew)
        if charging_mode is not None:
            pulumi.set(__self__, "charging_mode", charging_mode)
        if cidr is not None:
            pulumi.set(__self__, "cidr", cidr)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if current_cu is not None:
            pulumi.set(__self__, "current_cu", current_cu)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if label is not None:
            pulumi.set(__self__, "label", label)
        if max_cu is not None:
            pulumi.set(__self__, "max_cu", max_cu)
        if min_cu is not None:
            pulumi.set(__self__, "min_cu", min_cu)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if period is not None:
            pulumi.set(__self__, "period", period)
        if period_unit is not None:
            pulumi.set(__self__, "period_unit", period_unit)
        if prepay_cu is not None:
            pulumi.set(__self__, "prepay_cu", prepay_cu)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="actualCu")
    def actual_cu(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The current CU number of the elastic resource pool.
        """
        return pulumi.get(self, "actual_cu")

    @actual_cu.setter
    def actual_cu(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "actual_cu", value)

    @_builtins.property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies whether to enable auto-renew for the elastic resource pool.  
        Defaults to **false**.
        The valid values are **true** and **false**.
        This parameter is available only when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "auto_renew")

    @auto_renew.setter
    def auto_renew(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "auto_renew", value)

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the charging mode of the elastic resource pool.  
        Defaults to **postPaid**.
        The valid values are **postPaid** and **prePaid**.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "charging_mode")

    @charging_mode.setter
    def charging_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "charging_mode", value)

    @_builtins.property
    @pulumi.getter
    def cidr(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the CIDR block of network to associate with the elastic resource pool.
        Defaults to `172.16.0.0/12`. Changing this will create a new resource.
        """
        return pulumi.get(self, "cidr")

    @cidr.setter
    def cidr(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cidr", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The creation time of the elastic resource pool.  
        The format is `YYYY-MM-DDThh:mm:ss{timezone}`, e.g. `2024-01-01T08:00:00+08:00`.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="currentCu")
    def current_cu(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The current CU number of the elastic resource pool.
        """
        return pulumi.get(self, "current_cu")

    @current_cu.setter
    def current_cu(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "current_cu", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the elastic resource pool.  
        The valid length is limited from `1` to `128`.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the enterprise project to which the elastic resource
        pool belongs.
        This parameter is only valid for enterprise users, if omitted, default enterprise project will be used.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def label(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the attribute fields of the elastic resource pool.  
        Changing this will create a new resource.
        If not specified, the default is the standard edition. The key/value corresponding to the basic edition is `spec = "basic"`.
        """
        return pulumi.get(self, "label")

    @label.setter
    def label(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "label", value)

    @_builtins.property
    @pulumi.getter(name="maxCu")
    def max_cu(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the maximum number of CUs for elastic resource pool scaling.
        The interval is `16`.
        + For standard edition, the valid value ranges from `64` to `32,000`.
        + For basic edition, the valid value ranges from `16` to `64`.
        """
        return pulumi.get(self, "max_cu")

    @max_cu.setter
    def max_cu(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "max_cu", value)

    @_builtins.property
    @pulumi.getter(name="minCu")
    def min_cu(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the minimum number of CUs for elastic resource pool scaling.
        The interval is `16`.
        + For standard edition, the valid value ranges from `64` to `32,000`.
        + For basic edition, the valid value ranges from `16` to `64`.

        > If the value needs to be updated, the `min_cu` value cannot be greater than the `current_cu` value.
        """
        return pulumi.get(self, "min_cu")

    @min_cu.setter
    def min_cu(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "min_cu", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the elastic resource pool.  
        The valid length is limited from `1` to `128`, only lowercase letters, digits and underscores (_) are allowed.
        The name cannot contain only numbers or start with a number or an underscore.
        Changing this will create a new resource.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the period of the elastic resource pool.  
        This parameter is **required** and available only when `charging_mode` is set to **prePaid**.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "period", value)

    @_builtins.property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the period unit of the elastic resource pool.  
        The valid values are **month** and **year**.
        This parameter is **required** and available only when `charging_mode` is set to **prePaid**.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "period_unit")

    @period_unit.setter
    def period_unit(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "period_unit", value)

    @_builtins.property
    @pulumi.getter(name="prepayCu")
    def prepay_cu(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The number of prepaid CUs of the elastic resource pool.
        """
        return pulumi.get(self, "prepay_cu")

    @prepay_cu.setter
    def prepay_cu(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "prepay_cu", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the elastic resource pool is located.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The current status of the elastic resource pool.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the key/value pairs to associate with the elastic resource pool.  
        Changing this will create a new resource.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.type_token("huaweicloud:Dli/elasticResourcePool:ElasticResourcePool")
class ElasticResourcePool(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 cidr: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 label: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 max_cu: Optional[pulumi.Input[_builtins.int]] = None,
                 min_cu: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        """
        Manages an elastic resource pool within HuaweiCloud.

        > The elastic resource pool will regularly change the current number of CUs.
           The resource pool in the expansion status cannot be changed or deleted.
           Please refer to the status parameter.

        ## Example Usage

        ### Create a standard edition elastic resource pool under the default enterprise project

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        resoure_pool_name = config.require_object("resourePoolName")
        test = huaweicloud.dli.ElasticResourcePool("test",
            name=resoure_pool_name,
            description="Created by terraform script",
            min_cu=64,
            max_cu=80,
            cidr="192.168.128.0/18",
            enterprise_project_id="0")
        ```

        ### Create a basic elastic resource pool

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        resoure_pool_name = config.require_object("resourePoolName")
        test = huaweicloud.dli.ElasticResourcePool("test",
            name=resoure_pool_name,
            min_cu=16,
            max_cu=64,
            label={
                "spec": "basic",
            })
        ```

        ### Create a basic elastic resource pool with prePaid mode

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        resoure_pool_name = config.require_object("resourePoolName")
        test = huaweicloud.dli.ElasticResourcePool("test",
            name=resoure_pool_name,
            min_cu=32,
            max_cu=64,
            charging_mode="prePaid",
            period_unit="month",
            period=1,
            label={
                "spec": "basic",
            })
        ```

        ## Import

        Elastic resource pools can be imported by their `name`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Dli/elasticResourcePool:ElasticResourcePool test <name>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `tags`, `period`, `period_unit`

        and `auto_renew`. It is generally recommended running `pulumi preview` after importing a resource.

        You can then decide if changes should be applied to the resource, or the resource definition should be updated to

        align with the resource. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_dli_elastic_resource_pool" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              tags, period, period_unit, auto_renew,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether to enable auto-renew for the elastic resource pool.  
               Defaults to **false**.
               The valid values are **true** and **false**.
               This parameter is available only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode of the elastic resource pool.  
               Defaults to **postPaid**.
               The valid values are **postPaid** and **prePaid**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] cidr: Specifies the CIDR block of network to associate with the elastic resource pool.
               Defaults to `172.16.0.0/12`. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the elastic resource pool.  
               The valid length is limited from `1` to `128`.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project to which the elastic resource
               pool belongs.
               This parameter is only valid for enterprise users, if omitted, default enterprise project will be used.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] label: Specifies the attribute fields of the elastic resource pool.  
               Changing this will create a new resource.
               If not specified, the default is the standard edition. The key/value corresponding to the basic edition is `spec = "basic"`.
        :param pulumi.Input[_builtins.int] max_cu: Specifies the maximum number of CUs for elastic resource pool scaling.
               The interval is `16`.
               + For standard edition, the valid value ranges from `64` to `32,000`.
               + For basic edition, the valid value ranges from `16` to `64`.
        :param pulumi.Input[_builtins.int] min_cu: Specifies the minimum number of CUs for elastic resource pool scaling.
               The interval is `16`.
               + For standard edition, the valid value ranges from `64` to `32,000`.
               + For basic edition, the valid value ranges from `16` to `64`.
               
               > If the value needs to be updated, the `min_cu` value cannot be greater than the `current_cu` value.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the elastic resource pool.  
               The valid length is limited from `1` to `128`, only lowercase letters, digits and underscores (_) are allowed.
               The name cannot contain only numbers or start with a number or an underscore.
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.int] period: Specifies the period of the elastic resource pool.  
               This parameter is **required** and available only when `charging_mode` is set to **prePaid**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the period unit of the elastic resource pool.  
               The valid values are **month** and **year**.
               This parameter is **required** and available only when `charging_mode` is set to **prePaid**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the elastic resource pool is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the elastic resource pool.  
               Changing this will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ElasticResourcePoolArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an elastic resource pool within HuaweiCloud.

        > The elastic resource pool will regularly change the current number of CUs.
           The resource pool in the expansion status cannot be changed or deleted.
           Please refer to the status parameter.

        ## Example Usage

        ### Create a standard edition elastic resource pool under the default enterprise project

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        resoure_pool_name = config.require_object("resourePoolName")
        test = huaweicloud.dli.ElasticResourcePool("test",
            name=resoure_pool_name,
            description="Created by terraform script",
            min_cu=64,
            max_cu=80,
            cidr="192.168.128.0/18",
            enterprise_project_id="0")
        ```

        ### Create a basic elastic resource pool

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        resoure_pool_name = config.require_object("resourePoolName")
        test = huaweicloud.dli.ElasticResourcePool("test",
            name=resoure_pool_name,
            min_cu=16,
            max_cu=64,
            label={
                "spec": "basic",
            })
        ```

        ### Create a basic elastic resource pool with prePaid mode

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        resoure_pool_name = config.require_object("resourePoolName")
        test = huaweicloud.dli.ElasticResourcePool("test",
            name=resoure_pool_name,
            min_cu=32,
            max_cu=64,
            charging_mode="prePaid",
            period_unit="month",
            period=1,
            label={
                "spec": "basic",
            })
        ```

        ## Import

        Elastic resource pools can be imported by their `name`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Dli/elasticResourcePool:ElasticResourcePool test <name>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `tags`, `period`, `period_unit`

        and `auto_renew`. It is generally recommended running `pulumi preview` after importing a resource.

        You can then decide if changes should be applied to the resource, or the resource definition should be updated to

        align with the resource. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_dli_elastic_resource_pool" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              tags, period, period_unit, auto_renew,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param ElasticResourcePoolArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ElasticResourcePoolArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 cidr: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 label: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 max_cu: Optional[pulumi.Input[_builtins.int]] = None,
                 min_cu: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ElasticResourcePoolArgs.__new__(ElasticResourcePoolArgs)

            __props__.__dict__["auto_renew"] = auto_renew
            __props__.__dict__["charging_mode"] = charging_mode
            __props__.__dict__["cidr"] = cidr
            __props__.__dict__["description"] = description
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            __props__.__dict__["label"] = label
            if max_cu is None and not opts.urn:
                raise TypeError("Missing required property 'max_cu'")
            __props__.__dict__["max_cu"] = max_cu
            if min_cu is None and not opts.urn:
                raise TypeError("Missing required property 'min_cu'")
            __props__.__dict__["min_cu"] = min_cu
            __props__.__dict__["name"] = name
            __props__.__dict__["period"] = period
            __props__.__dict__["period_unit"] = period_unit
            __props__.__dict__["region"] = region
            __props__.__dict__["tags"] = tags
            __props__.__dict__["actual_cu"] = None
            __props__.__dict__["created_at"] = None
            __props__.__dict__["current_cu"] = None
            __props__.__dict__["prepay_cu"] = None
            __props__.__dict__["status"] = None
        super(ElasticResourcePool, __self__).__init__(
            'huaweicloud:Dli/elasticResourcePool:ElasticResourcePool',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            actual_cu: Optional[pulumi.Input[_builtins.int]] = None,
            auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
            charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
            cidr: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            current_cu: Optional[pulumi.Input[_builtins.int]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            label: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            max_cu: Optional[pulumi.Input[_builtins.int]] = None,
            min_cu: Optional[pulumi.Input[_builtins.int]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            period: Optional[pulumi.Input[_builtins.int]] = None,
            period_unit: Optional[pulumi.Input[_builtins.str]] = None,
            prepay_cu: Optional[pulumi.Input[_builtins.int]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None) -> 'ElasticResourcePool':
        """
        Get an existing ElasticResourcePool resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.int] actual_cu: The current CU number of the elastic resource pool.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether to enable auto-renew for the elastic resource pool.  
               Defaults to **false**.
               The valid values are **true** and **false**.
               This parameter is available only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode of the elastic resource pool.  
               Defaults to **postPaid**.
               The valid values are **postPaid** and **prePaid**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] cidr: Specifies the CIDR block of network to associate with the elastic resource pool.
               Defaults to `172.16.0.0/12`. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] created_at: The creation time of the elastic resource pool.  
               The format is `YYYY-MM-DDThh:mm:ss{timezone}`, e.g. `2024-01-01T08:00:00+08:00`.
        :param pulumi.Input[_builtins.int] current_cu: The current CU number of the elastic resource pool.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the elastic resource pool.  
               The valid length is limited from `1` to `128`.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project to which the elastic resource
               pool belongs.
               This parameter is only valid for enterprise users, if omitted, default enterprise project will be used.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] label: Specifies the attribute fields of the elastic resource pool.  
               Changing this will create a new resource.
               If not specified, the default is the standard edition. The key/value corresponding to the basic edition is `spec = "basic"`.
        :param pulumi.Input[_builtins.int] max_cu: Specifies the maximum number of CUs for elastic resource pool scaling.
               The interval is `16`.
               + For standard edition, the valid value ranges from `64` to `32,000`.
               + For basic edition, the valid value ranges from `16` to `64`.
        :param pulumi.Input[_builtins.int] min_cu: Specifies the minimum number of CUs for elastic resource pool scaling.
               The interval is `16`.
               + For standard edition, the valid value ranges from `64` to `32,000`.
               + For basic edition, the valid value ranges from `16` to `64`.
               
               > If the value needs to be updated, the `min_cu` value cannot be greater than the `current_cu` value.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the elastic resource pool.  
               The valid length is limited from `1` to `128`, only lowercase letters, digits and underscores (_) are allowed.
               The name cannot contain only numbers or start with a number or an underscore.
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.int] period: Specifies the period of the elastic resource pool.  
               This parameter is **required** and available only when `charging_mode` is set to **prePaid**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the period unit of the elastic resource pool.  
               The valid values are **month** and **year**.
               This parameter is **required** and available only when `charging_mode` is set to **prePaid**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] prepay_cu: The number of prepaid CUs of the elastic resource pool.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the elastic resource pool is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] status: The current status of the elastic resource pool.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the elastic resource pool.  
               Changing this will create a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ElasticResourcePoolState.__new__(_ElasticResourcePoolState)

        __props__.__dict__["actual_cu"] = actual_cu
        __props__.__dict__["auto_renew"] = auto_renew
        __props__.__dict__["charging_mode"] = charging_mode
        __props__.__dict__["cidr"] = cidr
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["current_cu"] = current_cu
        __props__.__dict__["description"] = description
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["label"] = label
        __props__.__dict__["max_cu"] = max_cu
        __props__.__dict__["min_cu"] = min_cu
        __props__.__dict__["name"] = name
        __props__.__dict__["period"] = period
        __props__.__dict__["period_unit"] = period_unit
        __props__.__dict__["prepay_cu"] = prepay_cu
        __props__.__dict__["region"] = region
        __props__.__dict__["status"] = status
        __props__.__dict__["tags"] = tags
        return ElasticResourcePool(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="actualCu")
    def actual_cu(self) -> pulumi.Output[_builtins.int]:
        """
        The current CU number of the elastic resource pool.
        """
        return pulumi.get(self, "actual_cu")

    @_builtins.property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies whether to enable auto-renew for the elastic resource pool.  
        Defaults to **false**.
        The valid values are **true** and **false**.
        This parameter is available only when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "auto_renew")

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the charging mode of the elastic resource pool.  
        Defaults to **postPaid**.
        The valid values are **postPaid** and **prePaid**.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "charging_mode")

    @_builtins.property
    @pulumi.getter
    def cidr(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the CIDR block of network to associate with the elastic resource pool.
        Defaults to `172.16.0.0/12`. Changing this will create a new resource.
        """
        return pulumi.get(self, "cidr")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The creation time of the elastic resource pool.  
        The format is `YYYY-MM-DDThh:mm:ss{timezone}`, e.g. `2024-01-01T08:00:00+08:00`.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="currentCu")
    def current_cu(self) -> pulumi.Output[_builtins.int]:
        """
        The current CU number of the elastic resource pool.
        """
        return pulumi.get(self, "current_cu")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the description of the elastic resource pool.  
        The valid length is limited from `1` to `128`.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the enterprise project to which the elastic resource
        pool belongs.
        This parameter is only valid for enterprise users, if omitted, default enterprise project will be used.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def label(self) -> pulumi.Output[Optional[Mapping[str, _builtins.str]]]:
        """
        Specifies the attribute fields of the elastic resource pool.  
        Changing this will create a new resource.
        If not specified, the default is the standard edition. The key/value corresponding to the basic edition is `spec = "basic"`.
        """
        return pulumi.get(self, "label")

    @_builtins.property
    @pulumi.getter(name="maxCu")
    def max_cu(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the maximum number of CUs for elastic resource pool scaling.
        The interval is `16`.
        + For standard edition, the valid value ranges from `64` to `32,000`.
        + For basic edition, the valid value ranges from `16` to `64`.
        """
        return pulumi.get(self, "max_cu")

    @_builtins.property
    @pulumi.getter(name="minCu")
    def min_cu(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the minimum number of CUs for elastic resource pool scaling.
        The interval is `16`.
        + For standard edition, the valid value ranges from `64` to `32,000`.
        + For basic edition, the valid value ranges from `16` to `64`.

        > If the value needs to be updated, the `min_cu` value cannot be greater than the `current_cu` value.
        """
        return pulumi.get(self, "min_cu")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of the elastic resource pool.  
        The valid length is limited from `1` to `128`, only lowercase letters, digits and underscores (_) are allowed.
        The name cannot contain only numbers or start with a number or an underscore.
        Changing this will create a new resource.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def period(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        Specifies the period of the elastic resource pool.  
        This parameter is **required** and available only when `charging_mode` is set to **prePaid**.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "period")

    @_builtins.property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the period unit of the elastic resource pool.  
        The valid values are **month** and **year**.
        This parameter is **required** and available only when `charging_mode` is set to **prePaid**.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "period_unit")

    @_builtins.property
    @pulumi.getter(name="prepayCu")
    def prepay_cu(self) -> pulumi.Output[_builtins.int]:
        """
        The number of prepaid CUs of the elastic resource pool.
        """
        return pulumi.get(self, "prepay_cu")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region where the elastic resource pool is located.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The current status of the elastic resource pool.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Mapping[str, _builtins.str]]:
        """
        Specifies the key/value pairs to associate with the elastic resource pool.  
        Changing this will create a new resource.
        """
        return pulumi.get(self, "tags")

