# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['AddressGroupArgs', 'AddressGroup']

@pulumi.input_type
class AddressGroupArgs:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_addresses: Optional[pulumi.Input[Sequence[pulumi.Input['AddressGroupIpAddressArgs']]]] = None,
                 listeners: Optional[pulumi.Input[Sequence[pulumi.Input['AddressGroupListenerArgs']]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a AddressGroup resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the associated CIDR block.
               
               <a name="address_group_associated_listeners"></a>
               The `listeners` block supports:
        :param pulumi.Input[Sequence[pulumi.Input['AddressGroupIpAddressArgs']]] ip_addresses: Specifies the list of CIDR block configurations of the IP address group.
               The ip_addresses structure is documented below.
        :param pulumi.Input[Sequence[pulumi.Input['AddressGroupListenerArgs']]] listeners: Specifies the listener associated with the IP address group.
               The listeners structure is documented below.
               
               <a name="address_group_ip_addresses"></a>
               The `ip_addresses` block supports:
        :param pulumi.Input[_builtins.str] name: Specifies the IP address group name.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if ip_addresses is not None:
            pulumi.set(__self__, "ip_addresses", ip_addresses)
        if listeners is not None:
            pulumi.set(__self__, "listeners", listeners)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the associated CIDR block.

        <a name="address_group_associated_listeners"></a>
        The `listeners` block supports:
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="ipAddresses")
    def ip_addresses(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AddressGroupIpAddressArgs']]]]:
        """
        Specifies the list of CIDR block configurations of the IP address group.
        The ip_addresses structure is documented below.
        """
        return pulumi.get(self, "ip_addresses")

    @ip_addresses.setter
    def ip_addresses(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AddressGroupIpAddressArgs']]]]):
        pulumi.set(self, "ip_addresses", value)

    @_builtins.property
    @pulumi.getter
    def listeners(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AddressGroupListenerArgs']]]]:
        """
        Specifies the listener associated with the IP address group.
        The listeners structure is documented below.

        <a name="address_group_ip_addresses"></a>
        The `ip_addresses` block supports:
        """
        return pulumi.get(self, "listeners")

    @listeners.setter
    def listeners(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AddressGroupListenerArgs']]]]):
        pulumi.set(self, "listeners", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the IP address group name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class _AddressGroupState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_addresses: Optional[pulumi.Input[Sequence[pulumi.Input['AddressGroupIpAddressArgs']]]] = None,
                 listeners: Optional[pulumi.Input[Sequence[pulumi.Input['AddressGroupListenerArgs']]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering AddressGroup resources.
        :param pulumi.Input[_builtins.str] created_at: The creation time of the CIDR block associated with the IP address group.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the associated CIDR block.
               
               <a name="address_group_associated_listeners"></a>
               The `listeners` block supports:
        :param pulumi.Input[Sequence[pulumi.Input['AddressGroupIpAddressArgs']]] ip_addresses: Specifies the list of CIDR block configurations of the IP address group.
               The ip_addresses structure is documented below.
        :param pulumi.Input[Sequence[pulumi.Input['AddressGroupListenerArgs']]] listeners: Specifies the listener associated with the IP address group.
               The listeners structure is documented below.
               
               <a name="address_group_ip_addresses"></a>
               The `ip_addresses` block supports:
        :param pulumi.Input[_builtins.str] name: Specifies the IP address group name.
        :param pulumi.Input[_builtins.str] status: The status of the IP address group.
               + **ACTIVE**: The resource is running.
        :param pulumi.Input[_builtins.str] updated_at: The lasted update time of the IP address group.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if ip_addresses is not None:
            pulumi.set(__self__, "ip_addresses", ip_addresses)
        if listeners is not None:
            pulumi.set(__self__, "listeners", listeners)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The creation time of the CIDR block associated with the IP address group.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the associated CIDR block.

        <a name="address_group_associated_listeners"></a>
        The `listeners` block supports:
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="ipAddresses")
    def ip_addresses(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AddressGroupIpAddressArgs']]]]:
        """
        Specifies the list of CIDR block configurations of the IP address group.
        The ip_addresses structure is documented below.
        """
        return pulumi.get(self, "ip_addresses")

    @ip_addresses.setter
    def ip_addresses(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AddressGroupIpAddressArgs']]]]):
        pulumi.set(self, "ip_addresses", value)

    @_builtins.property
    @pulumi.getter
    def listeners(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AddressGroupListenerArgs']]]]:
        """
        Specifies the listener associated with the IP address group.
        The listeners structure is documented below.

        <a name="address_group_ip_addresses"></a>
        The `ip_addresses` block supports:
        """
        return pulumi.get(self, "listeners")

    @listeners.setter
    def listeners(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AddressGroupListenerArgs']]]]):
        pulumi.set(self, "listeners", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the IP address group name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The status of the IP address group.
        + **ACTIVE**: The resource is running.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The lasted update time of the IP address group.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("huaweicloud:ga/addressGroup:AddressGroup")
class AddressGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_addresses: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AddressGroupIpAddressArgs', 'AddressGroupIpAddressArgsDict']]]]] = None,
                 listeners: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AddressGroupListenerArgs', 'AddressGroupListenerArgsDict']]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a GA IP address group resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        name = config.require_object("name")
        listener_id = config.require_object("listenerId")
        access_type = config.require_object("accessType")
        test = huaweicloud.ga.AddressGroup("test",
            name=name,
            description="Created by terraform",
            ip_addresses=[{
                "cidr": "192.168.1.0/24",
                "description": "The IP addresses included in the address group",
            }],
            listeners=[{
                "id": listener_id,
                "type": access_type,
            }])
        ```

        ## Import

        The IP address group can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:ga/addressGroup:AddressGroup test <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the associated CIDR block.
               
               <a name="address_group_associated_listeners"></a>
               The `listeners` block supports:
        :param pulumi.Input[Sequence[pulumi.Input[Union['AddressGroupIpAddressArgs', 'AddressGroupIpAddressArgsDict']]]] ip_addresses: Specifies the list of CIDR block configurations of the IP address group.
               The ip_addresses structure is documented below.
        :param pulumi.Input[Sequence[pulumi.Input[Union['AddressGroupListenerArgs', 'AddressGroupListenerArgsDict']]]] listeners: Specifies the listener associated with the IP address group.
               The listeners structure is documented below.
               
               <a name="address_group_ip_addresses"></a>
               The `ip_addresses` block supports:
        :param pulumi.Input[_builtins.str] name: Specifies the IP address group name.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[AddressGroupArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a GA IP address group resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        name = config.require_object("name")
        listener_id = config.require_object("listenerId")
        access_type = config.require_object("accessType")
        test = huaweicloud.ga.AddressGroup("test",
            name=name,
            description="Created by terraform",
            ip_addresses=[{
                "cidr": "192.168.1.0/24",
                "description": "The IP addresses included in the address group",
            }],
            listeners=[{
                "id": listener_id,
                "type": access_type,
            }])
        ```

        ## Import

        The IP address group can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:ga/addressGroup:AddressGroup test <id>
        ```

        :param str resource_name: The name of the resource.
        :param AddressGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AddressGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_addresses: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AddressGroupIpAddressArgs', 'AddressGroupIpAddressArgsDict']]]]] = None,
                 listeners: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AddressGroupListenerArgs', 'AddressGroupListenerArgsDict']]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AddressGroupArgs.__new__(AddressGroupArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["ip_addresses"] = ip_addresses
            __props__.__dict__["listeners"] = listeners
            __props__.__dict__["name"] = name
            __props__.__dict__["created_at"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["updated_at"] = None
        super(AddressGroup, __self__).__init__(
            'huaweicloud:ga/addressGroup:AddressGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            ip_addresses: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AddressGroupIpAddressArgs', 'AddressGroupIpAddressArgsDict']]]]] = None,
            listeners: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AddressGroupListenerArgs', 'AddressGroupListenerArgsDict']]]]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'AddressGroup':
        """
        Get an existing AddressGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: The creation time of the CIDR block associated with the IP address group.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the associated CIDR block.
               
               <a name="address_group_associated_listeners"></a>
               The `listeners` block supports:
        :param pulumi.Input[Sequence[pulumi.Input[Union['AddressGroupIpAddressArgs', 'AddressGroupIpAddressArgsDict']]]] ip_addresses: Specifies the list of CIDR block configurations of the IP address group.
               The ip_addresses structure is documented below.
        :param pulumi.Input[Sequence[pulumi.Input[Union['AddressGroupListenerArgs', 'AddressGroupListenerArgsDict']]]] listeners: Specifies the listener associated with the IP address group.
               The listeners structure is documented below.
               
               <a name="address_group_ip_addresses"></a>
               The `ip_addresses` block supports:
        :param pulumi.Input[_builtins.str] name: Specifies the IP address group name.
        :param pulumi.Input[_builtins.str] status: The status of the IP address group.
               + **ACTIVE**: The resource is running.
        :param pulumi.Input[_builtins.str] updated_at: The lasted update time of the IP address group.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AddressGroupState.__new__(_AddressGroupState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["description"] = description
        __props__.__dict__["ip_addresses"] = ip_addresses
        __props__.__dict__["listeners"] = listeners
        __props__.__dict__["name"] = name
        __props__.__dict__["status"] = status
        __props__.__dict__["updated_at"] = updated_at
        return AddressGroup(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The creation time of the CIDR block associated with the IP address group.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the description of the associated CIDR block.

        <a name="address_group_associated_listeners"></a>
        The `listeners` block supports:
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="ipAddresses")
    def ip_addresses(self) -> pulumi.Output[Optional[Sequence['outputs.AddressGroupIpAddress']]]:
        """
        Specifies the list of CIDR block configurations of the IP address group.
        The ip_addresses structure is documented below.
        """
        return pulumi.get(self, "ip_addresses")

    @_builtins.property
    @pulumi.getter
    def listeners(self) -> pulumi.Output[Optional[Sequence['outputs.AddressGroupListener']]]:
        """
        Specifies the listener associated with the IP address group.
        The listeners structure is documented below.

        <a name="address_group_ip_addresses"></a>
        The `ip_addresses` block supports:
        """
        return pulumi.get(self, "listeners")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the IP address group name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The status of the IP address group.
        + **ACTIVE**: The resource is running.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The lasted update time of the IP address group.
        """
        return pulumi.get(self, "updated_at")

