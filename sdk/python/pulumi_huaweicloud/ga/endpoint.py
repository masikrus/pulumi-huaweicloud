# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['EndpointArgs', 'Endpoint']

@pulumi.input_type
class EndpointArgs:
    def __init__(__self__, *,
                 endpoint_group_id: pulumi.Input[_builtins.str],
                 ip_address: pulumi.Input[_builtins.str],
                 resource_id: pulumi.Input[_builtins.str],
                 resource_type: Optional[pulumi.Input[_builtins.str]] = None,
                 weight: Optional[pulumi.Input[_builtins.int]] = None):
        """
        The set of arguments for constructing a Endpoint resource.
        :param pulumi.Input[_builtins.str] endpoint_group_id: Specifies the ID of the endpoint group
               to which the endpoint belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] ip_address: Specifies the IP address of the endpoint.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_id: Specifies the endpoint ID, for example, EIP ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_type: Specifies the endpoint type.
               The value can be **EIP**. Defaults to **EIP**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] weight: Specifies the weight of the endpoint based on which the listener distributes traffic.
               The value ranges from `0` to `100`. Defaults to `1`.
        """
        pulumi.set(__self__, "endpoint_group_id", endpoint_group_id)
        pulumi.set(__self__, "ip_address", ip_address)
        pulumi.set(__self__, "resource_id", resource_id)
        if resource_type is not None:
            pulumi.set(__self__, "resource_type", resource_type)
        if weight is not None:
            pulumi.set(__self__, "weight", weight)

    @_builtins.property
    @pulumi.getter(name="endpointGroupId")
    def endpoint_group_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the endpoint group
        to which the endpoint belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "endpoint_group_id")

    @endpoint_group_id.setter
    def endpoint_group_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "endpoint_group_id", value)

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the IP address of the endpoint.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "ip_address")

    @ip_address.setter
    def ip_address(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "ip_address", value)

    @_builtins.property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the endpoint ID, for example, EIP ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "resource_id")

    @resource_id.setter
    def resource_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "resource_id", value)

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the endpoint type.
        The value can be **EIP**. Defaults to **EIP**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_type", value)

    @_builtins.property
    @pulumi.getter
    def weight(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the weight of the endpoint based on which the listener distributes traffic.
        The value ranges from `0` to `100`. Defaults to `1`.
        """
        return pulumi.get(self, "weight")

    @weight.setter
    def weight(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "weight", value)


@pulumi.input_type
class _EndpointState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 endpoint_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 frozen_infos: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointFrozenInfoArgs']]]] = None,
                 health_state: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_id: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_type: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 weight: Optional[pulumi.Input[_builtins.int]] = None):
        """
        Input properties used for looking up and filtering Endpoint resources.
        :param pulumi.Input[_builtins.str] created_at: Indicates when the endpoint was created.
        :param pulumi.Input[_builtins.str] endpoint_group_id: Specifies the ID of the endpoint group
               to which the endpoint belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input['EndpointFrozenInfoArgs']]] frozen_infos: The frozen details of cloud services or resources.
               The frozen_info structure is documented below.
        :param pulumi.Input[_builtins.str] health_state: Indicates the health check result of the endpoint. The value can be one of the following:
               + **INITIAL**: Initial.
               + **HEALTHY**: Healthy.
               + **UNHEALTHY**: Unhealthy.
               + **NO_MONITOR**: Not monitored.
        :param pulumi.Input[_builtins.str] ip_address: Specifies the IP address of the endpoint.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_id: Specifies the endpoint ID, for example, EIP ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_type: Specifies the endpoint type.
               The value can be **EIP**. Defaults to **EIP**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: The status of a cloud service or resource.
               The valid values are as follows:
        :param pulumi.Input[_builtins.str] updated_at: Indicates when the endpoint was updated.
        :param pulumi.Input[_builtins.int] weight: Specifies the weight of the endpoint based on which the listener distributes traffic.
               The value ranges from `0` to `100`. Defaults to `1`.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if endpoint_group_id is not None:
            pulumi.set(__self__, "endpoint_group_id", endpoint_group_id)
        if frozen_infos is not None:
            pulumi.set(__self__, "frozen_infos", frozen_infos)
        if health_state is not None:
            pulumi.set(__self__, "health_state", health_state)
        if ip_address is not None:
            pulumi.set(__self__, "ip_address", ip_address)
        if resource_id is not None:
            pulumi.set(__self__, "resource_id", resource_id)
        if resource_type is not None:
            pulumi.set(__self__, "resource_type", resource_type)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if weight is not None:
            pulumi.set(__self__, "weight", weight)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates when the endpoint was created.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="endpointGroupId")
    def endpoint_group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the endpoint group
        to which the endpoint belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "endpoint_group_id")

    @endpoint_group_id.setter
    def endpoint_group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "endpoint_group_id", value)

    @_builtins.property
    @pulumi.getter(name="frozenInfos")
    def frozen_infos(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EndpointFrozenInfoArgs']]]]:
        """
        The frozen details of cloud services or resources.
        The frozen_info structure is documented below.
        """
        return pulumi.get(self, "frozen_infos")

    @frozen_infos.setter
    def frozen_infos(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointFrozenInfoArgs']]]]):
        pulumi.set(self, "frozen_infos", value)

    @_builtins.property
    @pulumi.getter(name="healthState")
    def health_state(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the health check result of the endpoint. The value can be one of the following:
        + **INITIAL**: Initial.
        + **HEALTHY**: Healthy.
        + **UNHEALTHY**: Unhealthy.
        + **NO_MONITOR**: Not monitored.
        """
        return pulumi.get(self, "health_state")

    @health_state.setter
    def health_state(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "health_state", value)

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the IP address of the endpoint.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "ip_address")

    @ip_address.setter
    def ip_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ip_address", value)

    @_builtins.property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the endpoint ID, for example, EIP ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "resource_id")

    @resource_id.setter
    def resource_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_id", value)

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the endpoint type.
        The value can be **EIP**. Defaults to **EIP**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_type", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The status of a cloud service or resource.
        The valid values are as follows:
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates when the endpoint was updated.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter
    def weight(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the weight of the endpoint based on which the listener distributes traffic.
        The value ranges from `0` to `100`. Defaults to `1`.
        """
        return pulumi.get(self, "weight")

    @weight.setter
    def weight(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "weight", value)


@pulumi.type_token("huaweicloud:ga/endpoint:Endpoint")
class Endpoint(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 endpoint_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_id: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_type: Optional[pulumi.Input[_builtins.str]] = None,
                 weight: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        """
        Manages a GA endpoint resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        endpoint_group_id = config.require_object("endpointGroupId")
        resource_id = config.require_object("resourceId")
        ip_address = config.require_object("ipAddress")
        test = huaweicloud.ga.Endpoint("test",
            endpoint_group_id=endpoint_group_id,
            resource_id=resource_id,
            ip_address=ip_address)
        ```

        ## Import

        The endpoint can be imported using `endpoint_group_id`, `id`, separated by slashes, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:ga/endpoint:Endpoint test <endpoint_group_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] endpoint_group_id: Specifies the ID of the endpoint group
               to which the endpoint belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] ip_address: Specifies the IP address of the endpoint.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_id: Specifies the endpoint ID, for example, EIP ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_type: Specifies the endpoint type.
               The value can be **EIP**. Defaults to **EIP**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] weight: Specifies the weight of the endpoint based on which the listener distributes traffic.
               The value ranges from `0` to `100`. Defaults to `1`.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: EndpointArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a GA endpoint resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        endpoint_group_id = config.require_object("endpointGroupId")
        resource_id = config.require_object("resourceId")
        ip_address = config.require_object("ipAddress")
        test = huaweicloud.ga.Endpoint("test",
            endpoint_group_id=endpoint_group_id,
            resource_id=resource_id,
            ip_address=ip_address)
        ```

        ## Import

        The endpoint can be imported using `endpoint_group_id`, `id`, separated by slashes, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:ga/endpoint:Endpoint test <endpoint_group_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param EndpointArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(EndpointArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 endpoint_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_id: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_type: Optional[pulumi.Input[_builtins.str]] = None,
                 weight: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = EndpointArgs.__new__(EndpointArgs)

            if endpoint_group_id is None and not opts.urn:
                raise TypeError("Missing required property 'endpoint_group_id'")
            __props__.__dict__["endpoint_group_id"] = endpoint_group_id
            if ip_address is None and not opts.urn:
                raise TypeError("Missing required property 'ip_address'")
            __props__.__dict__["ip_address"] = ip_address
            if resource_id is None and not opts.urn:
                raise TypeError("Missing required property 'resource_id'")
            __props__.__dict__["resource_id"] = resource_id
            __props__.__dict__["resource_type"] = resource_type
            __props__.__dict__["weight"] = weight
            __props__.__dict__["created_at"] = None
            __props__.__dict__["frozen_infos"] = None
            __props__.__dict__["health_state"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["updated_at"] = None
        super(Endpoint, __self__).__init__(
            'huaweicloud:ga/endpoint:Endpoint',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            endpoint_group_id: Optional[pulumi.Input[_builtins.str]] = None,
            frozen_infos: Optional[pulumi.Input[Sequence[pulumi.Input[Union['EndpointFrozenInfoArgs', 'EndpointFrozenInfoArgsDict']]]]] = None,
            health_state: Optional[pulumi.Input[_builtins.str]] = None,
            ip_address: Optional[pulumi.Input[_builtins.str]] = None,
            resource_id: Optional[pulumi.Input[_builtins.str]] = None,
            resource_type: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            weight: Optional[pulumi.Input[_builtins.int]] = None) -> 'Endpoint':
        """
        Get an existing Endpoint resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: Indicates when the endpoint was created.
        :param pulumi.Input[_builtins.str] endpoint_group_id: Specifies the ID of the endpoint group
               to which the endpoint belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['EndpointFrozenInfoArgs', 'EndpointFrozenInfoArgsDict']]]] frozen_infos: The frozen details of cloud services or resources.
               The frozen_info structure is documented below.
        :param pulumi.Input[_builtins.str] health_state: Indicates the health check result of the endpoint. The value can be one of the following:
               + **INITIAL**: Initial.
               + **HEALTHY**: Healthy.
               + **UNHEALTHY**: Unhealthy.
               + **NO_MONITOR**: Not monitored.
        :param pulumi.Input[_builtins.str] ip_address: Specifies the IP address of the endpoint.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_id: Specifies the endpoint ID, for example, EIP ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_type: Specifies the endpoint type.
               The value can be **EIP**. Defaults to **EIP**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: The status of a cloud service or resource.
               The valid values are as follows:
        :param pulumi.Input[_builtins.str] updated_at: Indicates when the endpoint was updated.
        :param pulumi.Input[_builtins.int] weight: Specifies the weight of the endpoint based on which the listener distributes traffic.
               The value ranges from `0` to `100`. Defaults to `1`.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _EndpointState.__new__(_EndpointState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["endpoint_group_id"] = endpoint_group_id
        __props__.__dict__["frozen_infos"] = frozen_infos
        __props__.__dict__["health_state"] = health_state
        __props__.__dict__["ip_address"] = ip_address
        __props__.__dict__["resource_id"] = resource_id
        __props__.__dict__["resource_type"] = resource_type
        __props__.__dict__["status"] = status
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["weight"] = weight
        return Endpoint(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates when the endpoint was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="endpointGroupId")
    def endpoint_group_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the endpoint group
        to which the endpoint belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "endpoint_group_id")

    @_builtins.property
    @pulumi.getter(name="frozenInfos")
    def frozen_infos(self) -> pulumi.Output[Sequence['outputs.EndpointFrozenInfo']]:
        """
        The frozen details of cloud services or resources.
        The frozen_info structure is documented below.
        """
        return pulumi.get(self, "frozen_infos")

    @_builtins.property
    @pulumi.getter(name="healthState")
    def health_state(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the health check result of the endpoint. The value can be one of the following:
        + **INITIAL**: Initial.
        + **HEALTHY**: Healthy.
        + **UNHEALTHY**: Unhealthy.
        + **NO_MONITOR**: Not monitored.
        """
        return pulumi.get(self, "health_state")

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the IP address of the endpoint.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "ip_address")

    @_builtins.property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the endpoint ID, for example, EIP ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "resource_id")

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the endpoint type.
        The value can be **EIP**. Defaults to **EIP**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "resource_type")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The status of a cloud service or resource.
        The valid values are as follows:
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates when the endpoint was updated.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter
    def weight(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the weight of the endpoint based on which the listener distributes traffic.
        The value ranges from `0` to `100`. Defaults to `1`.
        """
        return pulumi.get(self, "weight")

