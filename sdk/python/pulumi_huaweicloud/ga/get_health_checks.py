# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetHealthChecksResult',
    'AwaitableGetHealthChecksResult',
    'get_health_checks',
    'get_health_checks_output',
]

@pulumi.output_type
class GetHealthChecksResult:
    """
    A collection of values returned by getHealthChecks.
    """
    def __init__(__self__, enabled=None, endpoint_group_id=None, health_check_id=None, health_checks=None, id=None, protocol=None, status=None):
        if enabled and not isinstance(enabled, str):
            raise TypeError("Expected argument 'enabled' to be a str")
        pulumi.set(__self__, "enabled", enabled)
        if endpoint_group_id and not isinstance(endpoint_group_id, str):
            raise TypeError("Expected argument 'endpoint_group_id' to be a str")
        pulumi.set(__self__, "endpoint_group_id", endpoint_group_id)
        if health_check_id and not isinstance(health_check_id, str):
            raise TypeError("Expected argument 'health_check_id' to be a str")
        pulumi.set(__self__, "health_check_id", health_check_id)
        if health_checks and not isinstance(health_checks, list):
            raise TypeError("Expected argument 'health_checks' to be a list")
        pulumi.set(__self__, "health_checks", health_checks)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if protocol and not isinstance(protocol, str):
            raise TypeError("Expected argument 'protocol' to be a str")
        pulumi.set(__self__, "protocol", protocol)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter
    def enabled(self) -> Optional[_builtins.str]:
        """
        Whether health check is enabled.
        """
        return pulumi.get(self, "enabled")

    @_builtins.property
    @pulumi.getter(name="endpointGroupId")
    def endpoint_group_id(self) -> Optional[_builtins.str]:
        """
        The ID of the endpoint group to which the health check belongs.
        """
        return pulumi.get(self, "endpoint_group_id")

    @_builtins.property
    @pulumi.getter(name="healthCheckId")
    def health_check_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "health_check_id")

    @_builtins.property
    @pulumi.getter(name="healthChecks")
    def health_checks(self) -> Sequence['outputs.GetHealthChecksHealthCheckResult']:
        """
        The list of the health checks.
        The health_checks structure is documented below.
        """
        return pulumi.get(self, "health_checks")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> Optional[_builtins.str]:
        """
        The front end protocol of the health check used.
        """
        return pulumi.get(self, "protocol")

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[_builtins.str]:
        """
        The status of a cloud service or resource.
        """
        return pulumi.get(self, "status")


class AwaitableGetHealthChecksResult(GetHealthChecksResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetHealthChecksResult(
            enabled=self.enabled,
            endpoint_group_id=self.endpoint_group_id,
            health_check_id=self.health_check_id,
            health_checks=self.health_checks,
            id=self.id,
            protocol=self.protocol,
            status=self.status)


def get_health_checks(enabled: Optional[_builtins.str] = None,
                      endpoint_group_id: Optional[_builtins.str] = None,
                      health_check_id: Optional[_builtins.str] = None,
                      protocol: Optional[_builtins.str] = None,
                      status: Optional[_builtins.str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetHealthChecksResult:
    """
    Use this data source to get the list of health checks.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    health_check_id = config.require_object("healthCheckId")
    test = huaweicloud.ga.get_health_checks(health_check_id=health_check_id)
    ```


    :param _builtins.str enabled: Specifies whether health check is enabled.
           The value can be **true** and **false**.
    :param _builtins.str endpoint_group_id: Specifies the ID of the endpoint group to which the health check belongs.
    :param _builtins.str health_check_id: Specifies the ID of the health check.
    :param _builtins.str protocol: Specifies the front end protocol of the health check used.
           Currently only supported **TCP**.
    :param _builtins.str status: Specifies the status of the health check.
           The valid values are as follows:
           + **ACTIVE**: The status of the health check is normal operation.
           + **ERROR**: The status of the health check is error.
    """
    __args__ = dict()
    __args__['enabled'] = enabled
    __args__['endpointGroupId'] = endpoint_group_id
    __args__['healthCheckId'] = health_check_id
    __args__['protocol'] = protocol
    __args__['status'] = status
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:ga/getHealthChecks:getHealthChecks', __args__, opts=opts, typ=GetHealthChecksResult).value

    return AwaitableGetHealthChecksResult(
        enabled=pulumi.get(__ret__, 'enabled'),
        endpoint_group_id=pulumi.get(__ret__, 'endpoint_group_id'),
        health_check_id=pulumi.get(__ret__, 'health_check_id'),
        health_checks=pulumi.get(__ret__, 'health_checks'),
        id=pulumi.get(__ret__, 'id'),
        protocol=pulumi.get(__ret__, 'protocol'),
        status=pulumi.get(__ret__, 'status'))
def get_health_checks_output(enabled: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                             endpoint_group_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                             health_check_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                             protocol: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                             status: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                             opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetHealthChecksResult]:
    """
    Use this data source to get the list of health checks.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    health_check_id = config.require_object("healthCheckId")
    test = huaweicloud.ga.get_health_checks(health_check_id=health_check_id)
    ```


    :param _builtins.str enabled: Specifies whether health check is enabled.
           The value can be **true** and **false**.
    :param _builtins.str endpoint_group_id: Specifies the ID of the endpoint group to which the health check belongs.
    :param _builtins.str health_check_id: Specifies the ID of the health check.
    :param _builtins.str protocol: Specifies the front end protocol of the health check used.
           Currently only supported **TCP**.
    :param _builtins.str status: Specifies the status of the health check.
           The valid values are as follows:
           + **ACTIVE**: The status of the health check is normal operation.
           + **ERROR**: The status of the health check is error.
    """
    __args__ = dict()
    __args__['enabled'] = enabled
    __args__['endpointGroupId'] = endpoint_group_id
    __args__['healthCheckId'] = health_check_id
    __args__['protocol'] = protocol
    __args__['status'] = status
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:ga/getHealthChecks:getHealthChecks', __args__, opts=opts, typ=GetHealthChecksResult)
    return __ret__.apply(lambda __response__: GetHealthChecksResult(
        enabled=pulumi.get(__response__, 'enabled'),
        endpoint_group_id=pulumi.get(__response__, 'endpoint_group_id'),
        health_check_id=pulumi.get(__response__, 'health_check_id'),
        health_checks=pulumi.get(__response__, 'health_checks'),
        id=pulumi.get(__response__, 'id'),
        protocol=pulumi.get(__response__, 'protocol'),
        status=pulumi.get(__response__, 'status')))
