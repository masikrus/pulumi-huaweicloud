# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['EndpointGroupArgs', 'EndpointGroup']

@pulumi.input_type
class EndpointGroupArgs:
    def __init__(__self__, *,
                 listeners: pulumi.Input['EndpointGroupListenersArgs'],
                 region_id: pulumi.Input[_builtins.str],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 traffic_dial_percentage: Optional[pulumi.Input[_builtins.int]] = None):
        """
        The set of arguments for constructing a EndpointGroup resource.
        :param pulumi.Input['EndpointGroupListenersArgs'] listeners: Specifies the listeners associated with the endpoint group.
               The Id structure is documented below.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region_id: Specifies the region where the endpoint group belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the information about the endpoint group.  
               The description contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
        :param pulumi.Input[_builtins.str] name: Specifies the endpoint group name.  
               The name can contain `1` to `64` characters, only letters, digits, and hyphens (-) are allowed.
        :param pulumi.Input[_builtins.int] traffic_dial_percentage: Specifies the percentage of traffic distributed to the endpoint group.
               The value ranges from `0` to `100`. Defaults to `100`.
               
               <a name="EndpointGroup_Id"></a>
               The `Id` block supports:
        """
        pulumi.set(__self__, "listeners", listeners)
        pulumi.set(__self__, "region_id", region_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if traffic_dial_percentage is not None:
            pulumi.set(__self__, "traffic_dial_percentage", traffic_dial_percentage)

    @_builtins.property
    @pulumi.getter
    def listeners(self) -> pulumi.Input['EndpointGroupListenersArgs']:
        """
        Specifies the listeners associated with the endpoint group.
        The Id structure is documented below.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "listeners")

    @listeners.setter
    def listeners(self, value: pulumi.Input['EndpointGroupListenersArgs']):
        pulumi.set(self, "listeners", value)

    @_builtins.property
    @pulumi.getter(name="regionId")
    def region_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the region where the endpoint group belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region_id")

    @region_id.setter
    def region_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "region_id", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the information about the endpoint group.  
        The description contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the endpoint group name.  
        The name can contain `1` to `64` characters, only letters, digits, and hyphens (-) are allowed.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="trafficDialPercentage")
    def traffic_dial_percentage(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the percentage of traffic distributed to the endpoint group.
        The value ranges from `0` to `100`. Defaults to `100`.

        <a name="EndpointGroup_Id"></a>
        The `Id` block supports:
        """
        return pulumi.get(self, "traffic_dial_percentage")

    @traffic_dial_percentage.setter
    def traffic_dial_percentage(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "traffic_dial_percentage", value)


@pulumi.input_type
class _EndpointGroupState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 frozen_infos: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointGroupFrozenInfoArgs']]]] = None,
                 listeners: Optional[pulumi.Input['EndpointGroupListenersArgs']] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region_id: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 traffic_dial_percentage: Optional[pulumi.Input[_builtins.int]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering EndpointGroup resources.
        :param pulumi.Input[_builtins.str] created_at: Indicates when the endpoint group was created.
        :param pulumi.Input[_builtins.str] description: Specifies the information about the endpoint group.  
               The description contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
        :param pulumi.Input[Sequence[pulumi.Input['EndpointGroupFrozenInfoArgs']]] frozen_infos: The frozen details of cloud services or resources.
               The frozen_info structure is documented below.
        :param pulumi.Input['EndpointGroupListenersArgs'] listeners: Specifies the listeners associated with the endpoint group.
               The Id structure is documented below.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the endpoint group name.  
               The name can contain `1` to `64` characters, only letters, digits, and hyphens (-) are allowed.
        :param pulumi.Input[_builtins.str] region_id: Specifies the region where the endpoint group belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: The status of a cloud service or resource.
               The valid values are as follows:
        :param pulumi.Input[_builtins.int] traffic_dial_percentage: Specifies the percentage of traffic distributed to the endpoint group.
               The value ranges from `0` to `100`. Defaults to `100`.
               
               <a name="EndpointGroup_Id"></a>
               The `Id` block supports:
        :param pulumi.Input[_builtins.str] updated_at: Indicates when the endpoint group was updated.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if frozen_infos is not None:
            pulumi.set(__self__, "frozen_infos", frozen_infos)
        if listeners is not None:
            pulumi.set(__self__, "listeners", listeners)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region_id is not None:
            pulumi.set(__self__, "region_id", region_id)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if traffic_dial_percentage is not None:
            pulumi.set(__self__, "traffic_dial_percentage", traffic_dial_percentage)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates when the endpoint group was created.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the information about the endpoint group.  
        The description contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="frozenInfos")
    def frozen_infos(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EndpointGroupFrozenInfoArgs']]]]:
        """
        The frozen details of cloud services or resources.
        The frozen_info structure is documented below.
        """
        return pulumi.get(self, "frozen_infos")

    @frozen_infos.setter
    def frozen_infos(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EndpointGroupFrozenInfoArgs']]]]):
        pulumi.set(self, "frozen_infos", value)

    @_builtins.property
    @pulumi.getter
    def listeners(self) -> Optional[pulumi.Input['EndpointGroupListenersArgs']]:
        """
        Specifies the listeners associated with the endpoint group.
        The Id structure is documented below.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "listeners")

    @listeners.setter
    def listeners(self, value: Optional[pulumi.Input['EndpointGroupListenersArgs']]):
        pulumi.set(self, "listeners", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the endpoint group name.  
        The name can contain `1` to `64` characters, only letters, digits, and hyphens (-) are allowed.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="regionId")
    def region_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the endpoint group belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region_id")

    @region_id.setter
    def region_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region_id", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The status of a cloud service or resource.
        The valid values are as follows:
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="trafficDialPercentage")
    def traffic_dial_percentage(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the percentage of traffic distributed to the endpoint group.
        The value ranges from `0` to `100`. Defaults to `100`.

        <a name="EndpointGroup_Id"></a>
        The `Id` block supports:
        """
        return pulumi.get(self, "traffic_dial_percentage")

    @traffic_dial_percentage.setter
    def traffic_dial_percentage(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "traffic_dial_percentage", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates when the endpoint group was updated.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("huaweicloud:ga/endpointGroup:EndpointGroup")
class EndpointGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 listeners: Optional[pulumi.Input[Union['EndpointGroupListenersArgs', 'EndpointGroupListenersArgsDict']]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region_id: Optional[pulumi.Input[_builtins.str]] = None,
                 traffic_dial_percentage: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        """
        Manages a GA endpoint group resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        name = config.require_object("name")
        description = config.require_object("description")
        listener_id = config.require_object("listenerId")
        test = huaweicloud.ga.EndpointGroup("test",
            name=name,
            description=description,
            region_id="cn-south-1",
            listeners={
                "id": listener_id,
            })
        ```

        ## Import

        The endpoint group can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:ga/endpointGroup:EndpointGroup test <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: Specifies the information about the endpoint group.  
               The description contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
        :param pulumi.Input[Union['EndpointGroupListenersArgs', 'EndpointGroupListenersArgsDict']] listeners: Specifies the listeners associated with the endpoint group.
               The Id structure is documented below.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the endpoint group name.  
               The name can contain `1` to `64` characters, only letters, digits, and hyphens (-) are allowed.
        :param pulumi.Input[_builtins.str] region_id: Specifies the region where the endpoint group belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] traffic_dial_percentage: Specifies the percentage of traffic distributed to the endpoint group.
               The value ranges from `0` to `100`. Defaults to `100`.
               
               <a name="EndpointGroup_Id"></a>
               The `Id` block supports:
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: EndpointGroupArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a GA endpoint group resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        name = config.require_object("name")
        description = config.require_object("description")
        listener_id = config.require_object("listenerId")
        test = huaweicloud.ga.EndpointGroup("test",
            name=name,
            description=description,
            region_id="cn-south-1",
            listeners={
                "id": listener_id,
            })
        ```

        ## Import

        The endpoint group can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:ga/endpointGroup:EndpointGroup test <id>
        ```

        :param str resource_name: The name of the resource.
        :param EndpointGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(EndpointGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 listeners: Optional[pulumi.Input[Union['EndpointGroupListenersArgs', 'EndpointGroupListenersArgsDict']]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region_id: Optional[pulumi.Input[_builtins.str]] = None,
                 traffic_dial_percentage: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = EndpointGroupArgs.__new__(EndpointGroupArgs)

            __props__.__dict__["description"] = description
            if listeners is None and not opts.urn:
                raise TypeError("Missing required property 'listeners'")
            __props__.__dict__["listeners"] = listeners
            __props__.__dict__["name"] = name
            if region_id is None and not opts.urn:
                raise TypeError("Missing required property 'region_id'")
            __props__.__dict__["region_id"] = region_id
            __props__.__dict__["traffic_dial_percentage"] = traffic_dial_percentage
            __props__.__dict__["created_at"] = None
            __props__.__dict__["frozen_infos"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["updated_at"] = None
        super(EndpointGroup, __self__).__init__(
            'huaweicloud:ga/endpointGroup:EndpointGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            frozen_infos: Optional[pulumi.Input[Sequence[pulumi.Input[Union['EndpointGroupFrozenInfoArgs', 'EndpointGroupFrozenInfoArgsDict']]]]] = None,
            listeners: Optional[pulumi.Input[Union['EndpointGroupListenersArgs', 'EndpointGroupListenersArgsDict']]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region_id: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            traffic_dial_percentage: Optional[pulumi.Input[_builtins.int]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'EndpointGroup':
        """
        Get an existing EndpointGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: Indicates when the endpoint group was created.
        :param pulumi.Input[_builtins.str] description: Specifies the information about the endpoint group.  
               The description contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
        :param pulumi.Input[Sequence[pulumi.Input[Union['EndpointGroupFrozenInfoArgs', 'EndpointGroupFrozenInfoArgsDict']]]] frozen_infos: The frozen details of cloud services or resources.
               The frozen_info structure is documented below.
        :param pulumi.Input[Union['EndpointGroupListenersArgs', 'EndpointGroupListenersArgsDict']] listeners: Specifies the listeners associated with the endpoint group.
               The Id structure is documented below.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the endpoint group name.  
               The name can contain `1` to `64` characters, only letters, digits, and hyphens (-) are allowed.
        :param pulumi.Input[_builtins.str] region_id: Specifies the region where the endpoint group belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: The status of a cloud service or resource.
               The valid values are as follows:
        :param pulumi.Input[_builtins.int] traffic_dial_percentage: Specifies the percentage of traffic distributed to the endpoint group.
               The value ranges from `0` to `100`. Defaults to `100`.
               
               <a name="EndpointGroup_Id"></a>
               The `Id` block supports:
        :param pulumi.Input[_builtins.str] updated_at: Indicates when the endpoint group was updated.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _EndpointGroupState.__new__(_EndpointGroupState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["description"] = description
        __props__.__dict__["frozen_infos"] = frozen_infos
        __props__.__dict__["listeners"] = listeners
        __props__.__dict__["name"] = name
        __props__.__dict__["region_id"] = region_id
        __props__.__dict__["status"] = status
        __props__.__dict__["traffic_dial_percentage"] = traffic_dial_percentage
        __props__.__dict__["updated_at"] = updated_at
        return EndpointGroup(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates when the endpoint group was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the information about the endpoint group.  
        The description contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="frozenInfos")
    def frozen_infos(self) -> pulumi.Output[Sequence['outputs.EndpointGroupFrozenInfo']]:
        """
        The frozen details of cloud services or resources.
        The frozen_info structure is documented below.
        """
        return pulumi.get(self, "frozen_infos")

    @_builtins.property
    @pulumi.getter
    def listeners(self) -> pulumi.Output['outputs.EndpointGroupListeners']:
        """
        Specifies the listeners associated with the endpoint group.
        The Id structure is documented below.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "listeners")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the endpoint group name.  
        The name can contain `1` to `64` characters, only letters, digits, and hyphens (-) are allowed.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="regionId")
    def region_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region where the endpoint group belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region_id")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The status of a cloud service or resource.
        The valid values are as follows:
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="trafficDialPercentage")
    def traffic_dial_percentage(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the percentage of traffic distributed to the endpoint group.
        The value ranges from `0` to `100`. Defaults to `100`.

        <a name="EndpointGroup_Id"></a>
        The `Id` block supports:
        """
        return pulumi.get(self, "traffic_dial_percentage")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates when the endpoint group was updated.
        """
        return pulumi.get(self, "updated_at")

