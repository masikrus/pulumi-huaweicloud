# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ProtectionRuleArgs', 'ProtectionRule']

@pulumi.input_type
class ProtectionRuleArgs:
    def __init__(__self__, *,
                 action_type: pulumi.Input[_builtins.int],
                 address_type: pulumi.Input[_builtins.int],
                 destination: pulumi.Input['ProtectionRuleDestinationArgs'],
                 long_connect_enable: pulumi.Input[_builtins.int],
                 object_id: pulumi.Input[_builtins.str],
                 sequence: pulumi.Input['ProtectionRuleSequenceArgs'],
                 service: pulumi.Input['ProtectionRuleServiceArgs'],
                 source: pulumi.Input['ProtectionRuleSourceArgs'],
                 status: pulumi.Input[_builtins.int],
                 type: pulumi.Input[_builtins.int],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 direction: Optional[pulumi.Input[_builtins.int]] = None,
                 long_connect_time_hour: Optional[pulumi.Input[_builtins.int]] = None,
                 long_connect_time_minute: Optional[pulumi.Input[_builtins.int]] = None,
                 long_connect_time_second: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 rule_hit_count: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None):
        """
        The set of arguments for constructing a ProtectionRule resource.
        :param pulumi.Input[_builtins.int] action_type: The action type.
        :param pulumi.Input[_builtins.int] address_type: The address type.
        :param pulumi.Input['ProtectionRuleDestinationArgs'] destination: The destination configuration.
        :param pulumi.Input[_builtins.int] long_connect_enable: Whether to support persistent connections.
        :param pulumi.Input[_builtins.str] object_id: The protected object ID
        :param pulumi.Input['ProtectionRuleSequenceArgs'] sequence: The sequence configuration.
        :param pulumi.Input['ProtectionRuleServiceArgs'] service: The service configuration.
        :param pulumi.Input['ProtectionRuleSourceArgs'] source: The source configuration.
        :param pulumi.Input[_builtins.int] status: The rule status.
        :param pulumi.Input[_builtins.int] type: The rule type.
        :param pulumi.Input[_builtins.str] description: The description.
        :param pulumi.Input[_builtins.int] direction: The direction.
        :param pulumi.Input[_builtins.int] long_connect_time_hour: The persistent connection duration (hour).
        :param pulumi.Input[_builtins.int] long_connect_time_minute: The persistent connection duration (minute).
        :param pulumi.Input[_builtins.int] long_connect_time_second: The persistent Connection Duration (second).
        :param pulumi.Input[_builtins.str] name: The rule name.
        :param pulumi.Input[_builtins.str] rule_hit_count: The number of times the protection rule is hit.
        """
        pulumi.set(__self__, "action_type", action_type)
        pulumi.set(__self__, "address_type", address_type)
        pulumi.set(__self__, "destination", destination)
        pulumi.set(__self__, "long_connect_enable", long_connect_enable)
        pulumi.set(__self__, "object_id", object_id)
        pulumi.set(__self__, "sequence", sequence)
        pulumi.set(__self__, "service", service)
        pulumi.set(__self__, "source", source)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "type", type)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if direction is not None:
            pulumi.set(__self__, "direction", direction)
        if long_connect_time_hour is not None:
            pulumi.set(__self__, "long_connect_time_hour", long_connect_time_hour)
        if long_connect_time_minute is not None:
            pulumi.set(__self__, "long_connect_time_minute", long_connect_time_minute)
        if long_connect_time_second is not None:
            pulumi.set(__self__, "long_connect_time_second", long_connect_time_second)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if rule_hit_count is not None:
            pulumi.set(__self__, "rule_hit_count", rule_hit_count)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="actionType")
    def action_type(self) -> pulumi.Input[_builtins.int]:
        """
        The action type.
        """
        return pulumi.get(self, "action_type")

    @action_type.setter
    def action_type(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "action_type", value)

    @_builtins.property
    @pulumi.getter(name="addressType")
    def address_type(self) -> pulumi.Input[_builtins.int]:
        """
        The address type.
        """
        return pulumi.get(self, "address_type")

    @address_type.setter
    def address_type(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "address_type", value)

    @_builtins.property
    @pulumi.getter
    def destination(self) -> pulumi.Input['ProtectionRuleDestinationArgs']:
        """
        The destination configuration.
        """
        return pulumi.get(self, "destination")

    @destination.setter
    def destination(self, value: pulumi.Input['ProtectionRuleDestinationArgs']):
        pulumi.set(self, "destination", value)

    @_builtins.property
    @pulumi.getter(name="longConnectEnable")
    def long_connect_enable(self) -> pulumi.Input[_builtins.int]:
        """
        Whether to support persistent connections.
        """
        return pulumi.get(self, "long_connect_enable")

    @long_connect_enable.setter
    def long_connect_enable(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "long_connect_enable", value)

    @_builtins.property
    @pulumi.getter(name="objectId")
    def object_id(self) -> pulumi.Input[_builtins.str]:
        """
        The protected object ID
        """
        return pulumi.get(self, "object_id")

    @object_id.setter
    def object_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "object_id", value)

    @_builtins.property
    @pulumi.getter
    def sequence(self) -> pulumi.Input['ProtectionRuleSequenceArgs']:
        """
        The sequence configuration.
        """
        return pulumi.get(self, "sequence")

    @sequence.setter
    def sequence(self, value: pulumi.Input['ProtectionRuleSequenceArgs']):
        pulumi.set(self, "sequence", value)

    @_builtins.property
    @pulumi.getter
    def service(self) -> pulumi.Input['ProtectionRuleServiceArgs']:
        """
        The service configuration.
        """
        return pulumi.get(self, "service")

    @service.setter
    def service(self, value: pulumi.Input['ProtectionRuleServiceArgs']):
        pulumi.set(self, "service", value)

    @_builtins.property
    @pulumi.getter
    def source(self) -> pulumi.Input['ProtectionRuleSourceArgs']:
        """
        The source configuration.
        """
        return pulumi.get(self, "source")

    @source.setter
    def source(self, value: pulumi.Input['ProtectionRuleSourceArgs']):
        pulumi.set(self, "source", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Input[_builtins.int]:
        """
        The rule status.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Input[_builtins.int]:
        """
        The rule type.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def direction(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The direction.
        """
        return pulumi.get(self, "direction")

    @direction.setter
    def direction(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "direction", value)

    @_builtins.property
    @pulumi.getter(name="longConnectTimeHour")
    def long_connect_time_hour(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The persistent connection duration (hour).
        """
        return pulumi.get(self, "long_connect_time_hour")

    @long_connect_time_hour.setter
    def long_connect_time_hour(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "long_connect_time_hour", value)

    @_builtins.property
    @pulumi.getter(name="longConnectTimeMinute")
    def long_connect_time_minute(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The persistent connection duration (minute).
        """
        return pulumi.get(self, "long_connect_time_minute")

    @long_connect_time_minute.setter
    def long_connect_time_minute(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "long_connect_time_minute", value)

    @_builtins.property
    @pulumi.getter(name="longConnectTimeSecond")
    def long_connect_time_second(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The persistent Connection Duration (second).
        """
        return pulumi.get(self, "long_connect_time_second")

    @long_connect_time_second.setter
    def long_connect_time_second(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "long_connect_time_second", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The rule name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="ruleHitCount")
    def rule_hit_count(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The number of times the protection rule is hit.
        """
        return pulumi.get(self, "rule_hit_count")

    @rule_hit_count.setter
    def rule_hit_count(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "rule_hit_count", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _ProtectionRuleState:
    def __init__(__self__, *,
                 action_type: Optional[pulumi.Input[_builtins.int]] = None,
                 address_type: Optional[pulumi.Input[_builtins.int]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 destination: Optional[pulumi.Input['ProtectionRuleDestinationArgs']] = None,
                 direction: Optional[pulumi.Input[_builtins.int]] = None,
                 long_connect_enable: Optional[pulumi.Input[_builtins.int]] = None,
                 long_connect_time_hour: Optional[pulumi.Input[_builtins.int]] = None,
                 long_connect_time_minute: Optional[pulumi.Input[_builtins.int]] = None,
                 long_connect_time_second: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 object_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 rule_hit_count: Optional[pulumi.Input[_builtins.str]] = None,
                 sequence: Optional[pulumi.Input['ProtectionRuleSequenceArgs']] = None,
                 service: Optional[pulumi.Input['ProtectionRuleServiceArgs']] = None,
                 source: Optional[pulumi.Input['ProtectionRuleSourceArgs']] = None,
                 status: Optional[pulumi.Input[_builtins.int]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 type: Optional[pulumi.Input[_builtins.int]] = None):
        """
        Input properties used for looking up and filtering ProtectionRule resources.
        :param pulumi.Input[_builtins.int] action_type: The action type.
        :param pulumi.Input[_builtins.int] address_type: The address type.
        :param pulumi.Input[_builtins.str] description: The description.
        :param pulumi.Input['ProtectionRuleDestinationArgs'] destination: The destination configuration.
        :param pulumi.Input[_builtins.int] direction: The direction.
        :param pulumi.Input[_builtins.int] long_connect_enable: Whether to support persistent connections.
        :param pulumi.Input[_builtins.int] long_connect_time_hour: The persistent connection duration (hour).
        :param pulumi.Input[_builtins.int] long_connect_time_minute: The persistent connection duration (minute).
        :param pulumi.Input[_builtins.int] long_connect_time_second: The persistent Connection Duration (second).
        :param pulumi.Input[_builtins.str] name: The rule name.
        :param pulumi.Input[_builtins.str] object_id: The protected object ID
        :param pulumi.Input[_builtins.str] rule_hit_count: The number of times the protection rule is hit.
        :param pulumi.Input['ProtectionRuleSequenceArgs'] sequence: The sequence configuration.
        :param pulumi.Input['ProtectionRuleServiceArgs'] service: The service configuration.
        :param pulumi.Input['ProtectionRuleSourceArgs'] source: The source configuration.
        :param pulumi.Input[_builtins.int] status: The rule status.
        :param pulumi.Input[_builtins.int] type: The rule type.
        """
        if action_type is not None:
            pulumi.set(__self__, "action_type", action_type)
        if address_type is not None:
            pulumi.set(__self__, "address_type", address_type)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if destination is not None:
            pulumi.set(__self__, "destination", destination)
        if direction is not None:
            pulumi.set(__self__, "direction", direction)
        if long_connect_enable is not None:
            pulumi.set(__self__, "long_connect_enable", long_connect_enable)
        if long_connect_time_hour is not None:
            pulumi.set(__self__, "long_connect_time_hour", long_connect_time_hour)
        if long_connect_time_minute is not None:
            pulumi.set(__self__, "long_connect_time_minute", long_connect_time_minute)
        if long_connect_time_second is not None:
            pulumi.set(__self__, "long_connect_time_second", long_connect_time_second)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if object_id is not None:
            pulumi.set(__self__, "object_id", object_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if rule_hit_count is not None:
            pulumi.set(__self__, "rule_hit_count", rule_hit_count)
        if sequence is not None:
            pulumi.set(__self__, "sequence", sequence)
        if service is not None:
            pulumi.set(__self__, "service", service)
        if source is not None:
            pulumi.set(__self__, "source", source)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter(name="actionType")
    def action_type(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The action type.
        """
        return pulumi.get(self, "action_type")

    @action_type.setter
    def action_type(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "action_type", value)

    @_builtins.property
    @pulumi.getter(name="addressType")
    def address_type(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The address type.
        """
        return pulumi.get(self, "address_type")

    @address_type.setter
    def address_type(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "address_type", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def destination(self) -> Optional[pulumi.Input['ProtectionRuleDestinationArgs']]:
        """
        The destination configuration.
        """
        return pulumi.get(self, "destination")

    @destination.setter
    def destination(self, value: Optional[pulumi.Input['ProtectionRuleDestinationArgs']]):
        pulumi.set(self, "destination", value)

    @_builtins.property
    @pulumi.getter
    def direction(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The direction.
        """
        return pulumi.get(self, "direction")

    @direction.setter
    def direction(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "direction", value)

    @_builtins.property
    @pulumi.getter(name="longConnectEnable")
    def long_connect_enable(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Whether to support persistent connections.
        """
        return pulumi.get(self, "long_connect_enable")

    @long_connect_enable.setter
    def long_connect_enable(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "long_connect_enable", value)

    @_builtins.property
    @pulumi.getter(name="longConnectTimeHour")
    def long_connect_time_hour(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The persistent connection duration (hour).
        """
        return pulumi.get(self, "long_connect_time_hour")

    @long_connect_time_hour.setter
    def long_connect_time_hour(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "long_connect_time_hour", value)

    @_builtins.property
    @pulumi.getter(name="longConnectTimeMinute")
    def long_connect_time_minute(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The persistent connection duration (minute).
        """
        return pulumi.get(self, "long_connect_time_minute")

    @long_connect_time_minute.setter
    def long_connect_time_minute(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "long_connect_time_minute", value)

    @_builtins.property
    @pulumi.getter(name="longConnectTimeSecond")
    def long_connect_time_second(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The persistent Connection Duration (second).
        """
        return pulumi.get(self, "long_connect_time_second")

    @long_connect_time_second.setter
    def long_connect_time_second(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "long_connect_time_second", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The rule name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="objectId")
    def object_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The protected object ID
        """
        return pulumi.get(self, "object_id")

    @object_id.setter
    def object_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "object_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="ruleHitCount")
    def rule_hit_count(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The number of times the protection rule is hit.
        """
        return pulumi.get(self, "rule_hit_count")

    @rule_hit_count.setter
    def rule_hit_count(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "rule_hit_count", value)

    @_builtins.property
    @pulumi.getter
    def sequence(self) -> Optional[pulumi.Input['ProtectionRuleSequenceArgs']]:
        """
        The sequence configuration.
        """
        return pulumi.get(self, "sequence")

    @sequence.setter
    def sequence(self, value: Optional[pulumi.Input['ProtectionRuleSequenceArgs']]):
        pulumi.set(self, "sequence", value)

    @_builtins.property
    @pulumi.getter
    def service(self) -> Optional[pulumi.Input['ProtectionRuleServiceArgs']]:
        """
        The service configuration.
        """
        return pulumi.get(self, "service")

    @service.setter
    def service(self, value: Optional[pulumi.Input['ProtectionRuleServiceArgs']]):
        pulumi.set(self, "service", value)

    @_builtins.property
    @pulumi.getter
    def source(self) -> Optional[pulumi.Input['ProtectionRuleSourceArgs']]:
        """
        The source configuration.
        """
        return pulumi.get(self, "source")

    @source.setter
    def source(self, value: Optional[pulumi.Input['ProtectionRuleSourceArgs']]):
        pulumi.set(self, "source", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The rule status.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The rule type.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "type", value)


@pulumi.type_token("huaweicloud:Cfw/protectionRule:ProtectionRule")
class ProtectionRule(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action_type: Optional[pulumi.Input[_builtins.int]] = None,
                 address_type: Optional[pulumi.Input[_builtins.int]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 destination: Optional[pulumi.Input[Union['ProtectionRuleDestinationArgs', 'ProtectionRuleDestinationArgsDict']]] = None,
                 direction: Optional[pulumi.Input[_builtins.int]] = None,
                 long_connect_enable: Optional[pulumi.Input[_builtins.int]] = None,
                 long_connect_time_hour: Optional[pulumi.Input[_builtins.int]] = None,
                 long_connect_time_minute: Optional[pulumi.Input[_builtins.int]] = None,
                 long_connect_time_second: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 object_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 rule_hit_count: Optional[pulumi.Input[_builtins.str]] = None,
                 sequence: Optional[pulumi.Input[Union['ProtectionRuleSequenceArgs', 'ProtectionRuleSequenceArgsDict']]] = None,
                 service: Optional[pulumi.Input[Union['ProtectionRuleServiceArgs', 'ProtectionRuleServiceArgsDict']]] = None,
                 source: Optional[pulumi.Input[Union['ProtectionRuleSourceArgs', 'ProtectionRuleSourceArgsDict']]] = None,
                 status: Optional[pulumi.Input[_builtins.int]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 type: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        """
        !> **WARNING:** It has been deprecated, use `Cfw.AclRule` instead.

        Manages a CFW protection rule resource within HuaweiCloud.

        ## Example Usage

        ### Create a basic rule

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        name = config.require_object("name")
        description = config.require_object("description")
        object_id = config.require_object("objectId")
        test = huaweicloud.cfw.ProtectionRule("test",
            name=name,
            object_id=object_id,
            description=description,
            type=0,
            address_type=0,
            action_type=0,
            long_connect_enable=0,
            status=1,
            source={
                "type": 0,
                "address": "192.168.0.1",
            },
            destination={
                "type": 0,
                "address": "192.168.0.2",
            },
            service={
                "type": 0,
                "protocol": 6,
                "source_port": "8001",
                "dest_port": "8002",
            },
            sequence={
                "top": 1,
            })
        ```

        ### Create a rule with the source address using the region list

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        name = config.require_object("name")
        description = config.require_object("description")
        object_id = config.require_object("objectId")
        test = huaweicloud.cfw.ProtectionRule("test",
            name=name,
            object_id=object_id,
            description=description,
            type=0,
            address_type=0,
            action_type=0,
            long_connect_enable=0,
            status=1,
            source={
                "type": 3,
                "region_lists": [
                    {
                        "region_id": "GR",
                        "description_cn": "希腊",
                        "description_en": "Greece",
                        "region_type": 0,
                    },
                    {
                        "region_id": "ZJ",
                        "description_cn": "浙江",
                        "description_en": "ZHEJIANG",
                        "region_type": 1,
                    },
                ],
            },
            destination={
                "type": 0,
                "address": "192.168.0.2",
            },
            service={
                "type": 0,
                "protocol": 6,
                "source_port": "8001",
                "dest_port": "8002",
            },
            sequence={
                "top": 1,
            })
        ```

        ### Create a rule with the custom service

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        test = huaweicloud.cfw.ProtectionRule("test",
            name=name,
            object_id=object_id,
            description=description,
            type=0,
            address_type=0,
            action_type=0,
            long_connect_enable=0,
            status=1,
            source={
                "type": 0,
                "address": "1.1.1.1",
            },
            destination={
                "type": 0,
                "address": "1.1.1.2",
            },
            service={
                "type": 2,
                "custom_services": [
                    {
                        "protocol": 6,
                        "source_port": "80",
                        "dest_port": "80",
                    },
                    {
                        "protocol": 6,
                        "source_port": "8080",
                        "dest_port": "8080",
                    },
                ],
            },
            sequence={
                "top": 1,
            })
        ```

        The following arguments are supported:

        * `region` - (Optional, String, ForceNew) Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.

        * `name` - (Required, String) The rule name.

        * `object_id` - (Required, String, ForceNew) The protected object ID.
          
          Changing this parameter will create a new resource.

        * `type` - (Required, Int) The rule type.
        The value can be `0` (Internet rule), `1` (VPC rule), or `2` (NAT rule).

        * `action_type` - (Required, Int) The action type.
        The value can be `0` (allow) or `1` (deny).

        * `address_type` - (Required, Int) The address type.
        The value can be `0` (IPv4) or `1` (IPv6).

        * `sequence` - (Required, List) The sequence configuration.
        The Order Rule structure is documented below.

        * `service` - (Required, List) The service configuration.
        The Rule Service structure is documented below.

        * `source` - (Required, List) The source configuration.
        The Rule Source Address structure is documented below.

        * `destination` - (Required, List) The destination configuration.
        The Rule Destination Address structure is documented below.

        * `status` - (Required, Int) The rule status. The options are as follows:
          + **0**: disabled;
          + **1**: enabled;

        * `long_connect_enable` - (Required, Int) Whether to support persistent connections.
        The options are as follows:
          + **0**: supported;
          + **1**: not supported;

        * `long_connect_time_hour` - (Optional, Int) The persistent connection duration (hour).

        * `long_connect_time_minute` - (Optional, Int) The persistent connection duration (minute).

        * `long_connect_time_second` - (Optional, Int) The persistent Connection Duration (second).

        * `description` - (Optional, String) The description.

        * `direction` - (Optional, Int) The direction. The options are as follows:
          + **0**: inbound;
          + **1**: outbound;

        * `rule_hit_count` - (Optional, String) The number of times the protection rule is hit.
        Setting the value to **0** will clear the hit count. Value options: **0**.

        * `tags` - (Optional, Map) Specifies the key/value pairs to associate with the protection rule.
        Tags should have only one key/value pair.

        <a name="ProtectionRule_OrderRuleAcl"></a>
        The `sequence` block supports:

        * `dest_rule_id` - (Optional, String) The ID of the rule that the added rule will follow.
        This parameter cannot be left blank if the rule is not pinned on top, and is empty when the added rule is pinned on top.

        * `top` - (Optional, Int) Whether to pin on top.
        The options are as follows:
          + **0**: no;
          + **1**: yes;

        <a name="ProtectionRule_RuleService"></a>
        The `service` block supports:

        * `type` - (Required, Int) The service input type.
        The options are as follows:
          + **0**: manual input;
          + **1**: automatic input;
          + **2**: multiple objects;

        * `dest_port` - (Optional, String) The destination port.

        * `protocol` - (Optional, Int) The protocol type. The options are as follows:
          + **6**: TCP;
          + **17**: UDP;
          + **1**: ICMP;
          + **58**: ICMPv6;
          + **-1**: any protocol;
          
          Regarding the addition type, a null value indicates it is automatically added.

        * `service_set_id` - (Optional, String) The service group ID.
        This parameter is left blank for the manual type and cannot be left blank for the automatic type.

        * `service_set_name` - (Optional, String) The service group name.
        This parameter is left blank for the manual type and cannot be left blank for the automatic type.

        * `source_port` - (Optional, String) The source port.

        * `custom_service` - (Optional, List) The custom service list.
        When using this parameter, the `type` must be set to **2** (multiple objects).
          
          The custom_service structure is documented below.

        * `service_group` - (Optional, List) The list of service group IDs.
        When using this parameter, the `type` must be set to **2** (multiple objects).

        <a name="ProtectionRule_RuleSourceAddress"></a>
        The `source` block supports:

        * `type` - (Required, Int) The source type. The options are as follows:
          + **0**: manual input;
          + **1**: associated IP address group;
          + **2**: domain name;
          + **3**: region;
          + **4**: application domain name group;
          + **5**: multiple objects;
          + **6**: network domain name group;
          + **7**: application domain name;

        * `address` - (Optional, String) The IP address.
        The value cannot be empty for the manual type, and cannot be empty for the automatic or domain type.

        * `address_set_id` - (Optional, String) The ID of the associated IP address group.
        This parameter cannot be left blank when `type` is set to **1** (associated IP address group).

        * `address_set_name` - (Optional, String) The IP address group name.
        This parameter cannot be left blank when `type` is set to **1** (associated IP address group).

        * `address_type` - (Optional, Int) The address type. The options are as follows:
          + **0**: IPv4;
          + **1**: IPv6;

        * `domain_address_name` - (Optional, String) The name of the domain name address.
        This parameter cannot be left empty for the domain name type, and is empty for the manual or automatic type.

        * `region_list` - (Optional, List) The region list.
        The region_list structure is documented below.

        * `ip_address` - (Optional, List) The IP address list.
        When using this parameter, the `type` must be set to **5** (multiple objects).

        * `address_group` - (Optional, List) The list of address group IDs.
        When using this parameter, the `type` must be set to **5** (multiple objects).

        <a name="ProtectionRule_RuleDestinationAddress"></a>
        The `destination` block supports:

        * `type` - (Required, Int) The destination type. The options are as follows:
          + **0**: manual input;
          + **1**: associated IP address group;
          + **2**: domain name;
          + **3**: region;
          + **4**: application domain name group;
          + **5**: multiple objects;
          + **6**: network domain name group;
          + **7**: application domain name;

        * `address` - (Optional, String) The IP address.
        The value cannot be empty for the manual type, and cannot be empty for the automatic or domain type.

        * `address_set_id` - (Optional, String) The ID of the associated IP address group.
        This parameter cannot be left blank when `type` is set to **1** (associated IP address group).

        * `address_set_name` - (Optional, String) The IP address group name.
        This parameter cannot be left blank when `type` is set to **1** (associated IP address group).

        * `address_type` - (Optional, Int) The address type. The options are as follows:
          + **0**: IPv4;
          + **1**: IPv6;

        * `domain_address_name` - (Optional, String) The name of the domain name address.
        This parameter is valid when `type` is set to **2** (domain name) or **7** (application domain name).

        * `region_list` - (Optional, List) The region list.
        The region_list structure is documented below.

        * `ip_address` - (Optional, List) The IP address list.
        When using this parameter, the `type` must be set to **5** (multiple objects).

        * `domain_set_id` - (Optional, String) The ID of the domain group.
        The value cannot be left blank when `type` is set to **4** (application domain name group) or **6** (network domain
        name group).

        * `domain_set_name` - (Optional, String) The name of domain group.
        The value cannot be left blank when `type` is set to **4** (application domain name group) or **6** (network domain
        name group).

        * `address_group` - (Optional, List) The list of address group IDs.
        When using this parameter, the `type` must be set to **5** (multiple objects).

        <a name="ProtectionRule_RuleCustomService"></a>
        The `custom_service` block supports:

        * `protocol` - (Required, Int) The protocol type. The options are as follows:
          + **6**: TCP;
          + **17**: UDP;
          + **1**: ICMP;
          + **58**: ICMPv6;
          + **-1**: any protocol;

        * `source_port` - (Required, String) The source port.

        * `dest_port` - (Required, String) The destination port.

        <a name="ProtectionRule_RuleRegionList"></a>
        The `region_list` block supports:

        * `region_id` - (Required, String) The region ID.

        * `region_type` - (Required, Int) The region type. The options are as follows:
          + **0**: country;
          + **1**: province;
          + **2**：continent;

        * `description_cn` - (Optional, String) The Chinese description of the region.

        * `description_en` - (Optional, String) The English description of the region.

        ## Import

        The protection rule can be imported using `object_id`, `id`, separated by a slash, e.g.

        ```sh
        $ pulumi import huaweicloud:Cfw/protectionRule:ProtectionRule test <object_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.int] action_type: The action type.
        :param pulumi.Input[_builtins.int] address_type: The address type.
        :param pulumi.Input[_builtins.str] description: The description.
        :param pulumi.Input[Union['ProtectionRuleDestinationArgs', 'ProtectionRuleDestinationArgsDict']] destination: The destination configuration.
        :param pulumi.Input[_builtins.int] direction: The direction.
        :param pulumi.Input[_builtins.int] long_connect_enable: Whether to support persistent connections.
        :param pulumi.Input[_builtins.int] long_connect_time_hour: The persistent connection duration (hour).
        :param pulumi.Input[_builtins.int] long_connect_time_minute: The persistent connection duration (minute).
        :param pulumi.Input[_builtins.int] long_connect_time_second: The persistent Connection Duration (second).
        :param pulumi.Input[_builtins.str] name: The rule name.
        :param pulumi.Input[_builtins.str] object_id: The protected object ID
        :param pulumi.Input[_builtins.str] rule_hit_count: The number of times the protection rule is hit.
        :param pulumi.Input[Union['ProtectionRuleSequenceArgs', 'ProtectionRuleSequenceArgsDict']] sequence: The sequence configuration.
        :param pulumi.Input[Union['ProtectionRuleServiceArgs', 'ProtectionRuleServiceArgsDict']] service: The service configuration.
        :param pulumi.Input[Union['ProtectionRuleSourceArgs', 'ProtectionRuleSourceArgsDict']] source: The source configuration.
        :param pulumi.Input[_builtins.int] status: The rule status.
        :param pulumi.Input[_builtins.int] type: The rule type.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ProtectionRuleArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        !> **WARNING:** It has been deprecated, use `Cfw.AclRule` instead.

        Manages a CFW protection rule resource within HuaweiCloud.

        ## Example Usage

        ### Create a basic rule

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        name = config.require_object("name")
        description = config.require_object("description")
        object_id = config.require_object("objectId")
        test = huaweicloud.cfw.ProtectionRule("test",
            name=name,
            object_id=object_id,
            description=description,
            type=0,
            address_type=0,
            action_type=0,
            long_connect_enable=0,
            status=1,
            source={
                "type": 0,
                "address": "192.168.0.1",
            },
            destination={
                "type": 0,
                "address": "192.168.0.2",
            },
            service={
                "type": 0,
                "protocol": 6,
                "source_port": "8001",
                "dest_port": "8002",
            },
            sequence={
                "top": 1,
            })
        ```

        ### Create a rule with the source address using the region list

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        name = config.require_object("name")
        description = config.require_object("description")
        object_id = config.require_object("objectId")
        test = huaweicloud.cfw.ProtectionRule("test",
            name=name,
            object_id=object_id,
            description=description,
            type=0,
            address_type=0,
            action_type=0,
            long_connect_enable=0,
            status=1,
            source={
                "type": 3,
                "region_lists": [
                    {
                        "region_id": "GR",
                        "description_cn": "希腊",
                        "description_en": "Greece",
                        "region_type": 0,
                    },
                    {
                        "region_id": "ZJ",
                        "description_cn": "浙江",
                        "description_en": "ZHEJIANG",
                        "region_type": 1,
                    },
                ],
            },
            destination={
                "type": 0,
                "address": "192.168.0.2",
            },
            service={
                "type": 0,
                "protocol": 6,
                "source_port": "8001",
                "dest_port": "8002",
            },
            sequence={
                "top": 1,
            })
        ```

        ### Create a rule with the custom service

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        test = huaweicloud.cfw.ProtectionRule("test",
            name=name,
            object_id=object_id,
            description=description,
            type=0,
            address_type=0,
            action_type=0,
            long_connect_enable=0,
            status=1,
            source={
                "type": 0,
                "address": "1.1.1.1",
            },
            destination={
                "type": 0,
                "address": "1.1.1.2",
            },
            service={
                "type": 2,
                "custom_services": [
                    {
                        "protocol": 6,
                        "source_port": "80",
                        "dest_port": "80",
                    },
                    {
                        "protocol": 6,
                        "source_port": "8080",
                        "dest_port": "8080",
                    },
                ],
            },
            sequence={
                "top": 1,
            })
        ```

        The following arguments are supported:

        * `region` - (Optional, String, ForceNew) Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.

        * `name` - (Required, String) The rule name.

        * `object_id` - (Required, String, ForceNew) The protected object ID.
          
          Changing this parameter will create a new resource.

        * `type` - (Required, Int) The rule type.
        The value can be `0` (Internet rule), `1` (VPC rule), or `2` (NAT rule).

        * `action_type` - (Required, Int) The action type.
        The value can be `0` (allow) or `1` (deny).

        * `address_type` - (Required, Int) The address type.
        The value can be `0` (IPv4) or `1` (IPv6).

        * `sequence` - (Required, List) The sequence configuration.
        The Order Rule structure is documented below.

        * `service` - (Required, List) The service configuration.
        The Rule Service structure is documented below.

        * `source` - (Required, List) The source configuration.
        The Rule Source Address structure is documented below.

        * `destination` - (Required, List) The destination configuration.
        The Rule Destination Address structure is documented below.

        * `status` - (Required, Int) The rule status. The options are as follows:
          + **0**: disabled;
          + **1**: enabled;

        * `long_connect_enable` - (Required, Int) Whether to support persistent connections.
        The options are as follows:
          + **0**: supported;
          + **1**: not supported;

        * `long_connect_time_hour` - (Optional, Int) The persistent connection duration (hour).

        * `long_connect_time_minute` - (Optional, Int) The persistent connection duration (minute).

        * `long_connect_time_second` - (Optional, Int) The persistent Connection Duration (second).

        * `description` - (Optional, String) The description.

        * `direction` - (Optional, Int) The direction. The options are as follows:
          + **0**: inbound;
          + **1**: outbound;

        * `rule_hit_count` - (Optional, String) The number of times the protection rule is hit.
        Setting the value to **0** will clear the hit count. Value options: **0**.

        * `tags` - (Optional, Map) Specifies the key/value pairs to associate with the protection rule.
        Tags should have only one key/value pair.

        <a name="ProtectionRule_OrderRuleAcl"></a>
        The `sequence` block supports:

        * `dest_rule_id` - (Optional, String) The ID of the rule that the added rule will follow.
        This parameter cannot be left blank if the rule is not pinned on top, and is empty when the added rule is pinned on top.

        * `top` - (Optional, Int) Whether to pin on top.
        The options are as follows:
          + **0**: no;
          + **1**: yes;

        <a name="ProtectionRule_RuleService"></a>
        The `service` block supports:

        * `type` - (Required, Int) The service input type.
        The options are as follows:
          + **0**: manual input;
          + **1**: automatic input;
          + **2**: multiple objects;

        * `dest_port` - (Optional, String) The destination port.

        * `protocol` - (Optional, Int) The protocol type. The options are as follows:
          + **6**: TCP;
          + **17**: UDP;
          + **1**: ICMP;
          + **58**: ICMPv6;
          + **-1**: any protocol;
          
          Regarding the addition type, a null value indicates it is automatically added.

        * `service_set_id` - (Optional, String) The service group ID.
        This parameter is left blank for the manual type and cannot be left blank for the automatic type.

        * `service_set_name` - (Optional, String) The service group name.
        This parameter is left blank for the manual type and cannot be left blank for the automatic type.

        * `source_port` - (Optional, String) The source port.

        * `custom_service` - (Optional, List) The custom service list.
        When using this parameter, the `type` must be set to **2** (multiple objects).
          
          The custom_service structure is documented below.

        * `service_group` - (Optional, List) The list of service group IDs.
        When using this parameter, the `type` must be set to **2** (multiple objects).

        <a name="ProtectionRule_RuleSourceAddress"></a>
        The `source` block supports:

        * `type` - (Required, Int) The source type. The options are as follows:
          + **0**: manual input;
          + **1**: associated IP address group;
          + **2**: domain name;
          + **3**: region;
          + **4**: application domain name group;
          + **5**: multiple objects;
          + **6**: network domain name group;
          + **7**: application domain name;

        * `address` - (Optional, String) The IP address.
        The value cannot be empty for the manual type, and cannot be empty for the automatic or domain type.

        * `address_set_id` - (Optional, String) The ID of the associated IP address group.
        This parameter cannot be left blank when `type` is set to **1** (associated IP address group).

        * `address_set_name` - (Optional, String) The IP address group name.
        This parameter cannot be left blank when `type` is set to **1** (associated IP address group).

        * `address_type` - (Optional, Int) The address type. The options are as follows:
          + **0**: IPv4;
          + **1**: IPv6;

        * `domain_address_name` - (Optional, String) The name of the domain name address.
        This parameter cannot be left empty for the domain name type, and is empty for the manual or automatic type.

        * `region_list` - (Optional, List) The region list.
        The region_list structure is documented below.

        * `ip_address` - (Optional, List) The IP address list.
        When using this parameter, the `type` must be set to **5** (multiple objects).

        * `address_group` - (Optional, List) The list of address group IDs.
        When using this parameter, the `type` must be set to **5** (multiple objects).

        <a name="ProtectionRule_RuleDestinationAddress"></a>
        The `destination` block supports:

        * `type` - (Required, Int) The destination type. The options are as follows:
          + **0**: manual input;
          + **1**: associated IP address group;
          + **2**: domain name;
          + **3**: region;
          + **4**: application domain name group;
          + **5**: multiple objects;
          + **6**: network domain name group;
          + **7**: application domain name;

        * `address` - (Optional, String) The IP address.
        The value cannot be empty for the manual type, and cannot be empty for the automatic or domain type.

        * `address_set_id` - (Optional, String) The ID of the associated IP address group.
        This parameter cannot be left blank when `type` is set to **1** (associated IP address group).

        * `address_set_name` - (Optional, String) The IP address group name.
        This parameter cannot be left blank when `type` is set to **1** (associated IP address group).

        * `address_type` - (Optional, Int) The address type. The options are as follows:
          + **0**: IPv4;
          + **1**: IPv6;

        * `domain_address_name` - (Optional, String) The name of the domain name address.
        This parameter is valid when `type` is set to **2** (domain name) or **7** (application domain name).

        * `region_list` - (Optional, List) The region list.
        The region_list structure is documented below.

        * `ip_address` - (Optional, List) The IP address list.
        When using this parameter, the `type` must be set to **5** (multiple objects).

        * `domain_set_id` - (Optional, String) The ID of the domain group.
        The value cannot be left blank when `type` is set to **4** (application domain name group) or **6** (network domain
        name group).

        * `domain_set_name` - (Optional, String) The name of domain group.
        The value cannot be left blank when `type` is set to **4** (application domain name group) or **6** (network domain
        name group).

        * `address_group` - (Optional, List) The list of address group IDs.
        When using this parameter, the `type` must be set to **5** (multiple objects).

        <a name="ProtectionRule_RuleCustomService"></a>
        The `custom_service` block supports:

        * `protocol` - (Required, Int) The protocol type. The options are as follows:
          + **6**: TCP;
          + **17**: UDP;
          + **1**: ICMP;
          + **58**: ICMPv6;
          + **-1**: any protocol;

        * `source_port` - (Required, String) The source port.

        * `dest_port` - (Required, String) The destination port.

        <a name="ProtectionRule_RuleRegionList"></a>
        The `region_list` block supports:

        * `region_id` - (Required, String) The region ID.

        * `region_type` - (Required, Int) The region type. The options are as follows:
          + **0**: country;
          + **1**: province;
          + **2**：continent;

        * `description_cn` - (Optional, String) The Chinese description of the region.

        * `description_en` - (Optional, String) The English description of the region.

        ## Import

        The protection rule can be imported using `object_id`, `id`, separated by a slash, e.g.

        ```sh
        $ pulumi import huaweicloud:Cfw/protectionRule:ProtectionRule test <object_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param ProtectionRuleArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ProtectionRuleArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action_type: Optional[pulumi.Input[_builtins.int]] = None,
                 address_type: Optional[pulumi.Input[_builtins.int]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 destination: Optional[pulumi.Input[Union['ProtectionRuleDestinationArgs', 'ProtectionRuleDestinationArgsDict']]] = None,
                 direction: Optional[pulumi.Input[_builtins.int]] = None,
                 long_connect_enable: Optional[pulumi.Input[_builtins.int]] = None,
                 long_connect_time_hour: Optional[pulumi.Input[_builtins.int]] = None,
                 long_connect_time_minute: Optional[pulumi.Input[_builtins.int]] = None,
                 long_connect_time_second: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 object_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 rule_hit_count: Optional[pulumi.Input[_builtins.str]] = None,
                 sequence: Optional[pulumi.Input[Union['ProtectionRuleSequenceArgs', 'ProtectionRuleSequenceArgsDict']]] = None,
                 service: Optional[pulumi.Input[Union['ProtectionRuleServiceArgs', 'ProtectionRuleServiceArgsDict']]] = None,
                 source: Optional[pulumi.Input[Union['ProtectionRuleSourceArgs', 'ProtectionRuleSourceArgsDict']]] = None,
                 status: Optional[pulumi.Input[_builtins.int]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 type: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ProtectionRuleArgs.__new__(ProtectionRuleArgs)

            if action_type is None and not opts.urn:
                raise TypeError("Missing required property 'action_type'")
            __props__.__dict__["action_type"] = action_type
            if address_type is None and not opts.urn:
                raise TypeError("Missing required property 'address_type'")
            __props__.__dict__["address_type"] = address_type
            __props__.__dict__["description"] = description
            if destination is None and not opts.urn:
                raise TypeError("Missing required property 'destination'")
            __props__.__dict__["destination"] = destination
            __props__.__dict__["direction"] = direction
            if long_connect_enable is None and not opts.urn:
                raise TypeError("Missing required property 'long_connect_enable'")
            __props__.__dict__["long_connect_enable"] = long_connect_enable
            __props__.__dict__["long_connect_time_hour"] = long_connect_time_hour
            __props__.__dict__["long_connect_time_minute"] = long_connect_time_minute
            __props__.__dict__["long_connect_time_second"] = long_connect_time_second
            __props__.__dict__["name"] = name
            if object_id is None and not opts.urn:
                raise TypeError("Missing required property 'object_id'")
            __props__.__dict__["object_id"] = object_id
            __props__.__dict__["region"] = region
            __props__.__dict__["rule_hit_count"] = rule_hit_count
            if sequence is None and not opts.urn:
                raise TypeError("Missing required property 'sequence'")
            __props__.__dict__["sequence"] = sequence
            if service is None and not opts.urn:
                raise TypeError("Missing required property 'service'")
            __props__.__dict__["service"] = service
            if source is None and not opts.urn:
                raise TypeError("Missing required property 'source'")
            __props__.__dict__["source"] = source
            if status is None and not opts.urn:
                raise TypeError("Missing required property 'status'")
            __props__.__dict__["status"] = status
            __props__.__dict__["tags"] = tags
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
        super(ProtectionRule, __self__).__init__(
            'huaweicloud:Cfw/protectionRule:ProtectionRule',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            action_type: Optional[pulumi.Input[_builtins.int]] = None,
            address_type: Optional[pulumi.Input[_builtins.int]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            destination: Optional[pulumi.Input[Union['ProtectionRuleDestinationArgs', 'ProtectionRuleDestinationArgsDict']]] = None,
            direction: Optional[pulumi.Input[_builtins.int]] = None,
            long_connect_enable: Optional[pulumi.Input[_builtins.int]] = None,
            long_connect_time_hour: Optional[pulumi.Input[_builtins.int]] = None,
            long_connect_time_minute: Optional[pulumi.Input[_builtins.int]] = None,
            long_connect_time_second: Optional[pulumi.Input[_builtins.int]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            object_id: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            rule_hit_count: Optional[pulumi.Input[_builtins.str]] = None,
            sequence: Optional[pulumi.Input[Union['ProtectionRuleSequenceArgs', 'ProtectionRuleSequenceArgsDict']]] = None,
            service: Optional[pulumi.Input[Union['ProtectionRuleServiceArgs', 'ProtectionRuleServiceArgsDict']]] = None,
            source: Optional[pulumi.Input[Union['ProtectionRuleSourceArgs', 'ProtectionRuleSourceArgsDict']]] = None,
            status: Optional[pulumi.Input[_builtins.int]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            type: Optional[pulumi.Input[_builtins.int]] = None) -> 'ProtectionRule':
        """
        Get an existing ProtectionRule resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.int] action_type: The action type.
        :param pulumi.Input[_builtins.int] address_type: The address type.
        :param pulumi.Input[_builtins.str] description: The description.
        :param pulumi.Input[Union['ProtectionRuleDestinationArgs', 'ProtectionRuleDestinationArgsDict']] destination: The destination configuration.
        :param pulumi.Input[_builtins.int] direction: The direction.
        :param pulumi.Input[_builtins.int] long_connect_enable: Whether to support persistent connections.
        :param pulumi.Input[_builtins.int] long_connect_time_hour: The persistent connection duration (hour).
        :param pulumi.Input[_builtins.int] long_connect_time_minute: The persistent connection duration (minute).
        :param pulumi.Input[_builtins.int] long_connect_time_second: The persistent Connection Duration (second).
        :param pulumi.Input[_builtins.str] name: The rule name.
        :param pulumi.Input[_builtins.str] object_id: The protected object ID
        :param pulumi.Input[_builtins.str] rule_hit_count: The number of times the protection rule is hit.
        :param pulumi.Input[Union['ProtectionRuleSequenceArgs', 'ProtectionRuleSequenceArgsDict']] sequence: The sequence configuration.
        :param pulumi.Input[Union['ProtectionRuleServiceArgs', 'ProtectionRuleServiceArgsDict']] service: The service configuration.
        :param pulumi.Input[Union['ProtectionRuleSourceArgs', 'ProtectionRuleSourceArgsDict']] source: The source configuration.
        :param pulumi.Input[_builtins.int] status: The rule status.
        :param pulumi.Input[_builtins.int] type: The rule type.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ProtectionRuleState.__new__(_ProtectionRuleState)

        __props__.__dict__["action_type"] = action_type
        __props__.__dict__["address_type"] = address_type
        __props__.__dict__["description"] = description
        __props__.__dict__["destination"] = destination
        __props__.__dict__["direction"] = direction
        __props__.__dict__["long_connect_enable"] = long_connect_enable
        __props__.__dict__["long_connect_time_hour"] = long_connect_time_hour
        __props__.__dict__["long_connect_time_minute"] = long_connect_time_minute
        __props__.__dict__["long_connect_time_second"] = long_connect_time_second
        __props__.__dict__["name"] = name
        __props__.__dict__["object_id"] = object_id
        __props__.__dict__["region"] = region
        __props__.__dict__["rule_hit_count"] = rule_hit_count
        __props__.__dict__["sequence"] = sequence
        __props__.__dict__["service"] = service
        __props__.__dict__["source"] = source
        __props__.__dict__["status"] = status
        __props__.__dict__["tags"] = tags
        __props__.__dict__["type"] = type
        return ProtectionRule(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="actionType")
    def action_type(self) -> pulumi.Output[_builtins.int]:
        """
        The action type.
        """
        return pulumi.get(self, "action_type")

    @_builtins.property
    @pulumi.getter(name="addressType")
    def address_type(self) -> pulumi.Output[_builtins.int]:
        """
        The address type.
        """
        return pulumi.get(self, "address_type")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[_builtins.str]:
        """
        The description.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def destination(self) -> pulumi.Output['outputs.ProtectionRuleDestination']:
        """
        The destination configuration.
        """
        return pulumi.get(self, "destination")

    @_builtins.property
    @pulumi.getter
    def direction(self) -> pulumi.Output[_builtins.int]:
        """
        The direction.
        """
        return pulumi.get(self, "direction")

    @_builtins.property
    @pulumi.getter(name="longConnectEnable")
    def long_connect_enable(self) -> pulumi.Output[_builtins.int]:
        """
        Whether to support persistent connections.
        """
        return pulumi.get(self, "long_connect_enable")

    @_builtins.property
    @pulumi.getter(name="longConnectTimeHour")
    def long_connect_time_hour(self) -> pulumi.Output[_builtins.int]:
        """
        The persistent connection duration (hour).
        """
        return pulumi.get(self, "long_connect_time_hour")

    @_builtins.property
    @pulumi.getter(name="longConnectTimeMinute")
    def long_connect_time_minute(self) -> pulumi.Output[_builtins.int]:
        """
        The persistent connection duration (minute).
        """
        return pulumi.get(self, "long_connect_time_minute")

    @_builtins.property
    @pulumi.getter(name="longConnectTimeSecond")
    def long_connect_time_second(self) -> pulumi.Output[_builtins.int]:
        """
        The persistent Connection Duration (second).
        """
        return pulumi.get(self, "long_connect_time_second")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The rule name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="objectId")
    def object_id(self) -> pulumi.Output[_builtins.str]:
        """
        The protected object ID
        """
        return pulumi.get(self, "object_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="ruleHitCount")
    def rule_hit_count(self) -> pulumi.Output[_builtins.str]:
        """
        The number of times the protection rule is hit.
        """
        return pulumi.get(self, "rule_hit_count")

    @_builtins.property
    @pulumi.getter
    def sequence(self) -> pulumi.Output['outputs.ProtectionRuleSequence']:
        """
        The sequence configuration.
        """
        return pulumi.get(self, "sequence")

    @_builtins.property
    @pulumi.getter
    def service(self) -> pulumi.Output['outputs.ProtectionRuleService']:
        """
        The service configuration.
        """
        return pulumi.get(self, "service")

    @_builtins.property
    @pulumi.getter
    def source(self) -> pulumi.Output['outputs.ProtectionRuleSource']:
        """
        The source configuration.
        """
        return pulumi.get(self, "source")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.int]:
        """
        The rule status.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Mapping[str, _builtins.str]]:
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[_builtins.int]:
        """
        The rule type.
        """
        return pulumi.get(self, "type")

