# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetTypesResult',
    'AwaitableGetTypesResult',
    'get_types',
    'get_types_output',
]

@pulumi.output_type
class GetTypesResult:
    """
    A collection of values returned by getTypes.
    """
    def __init__(__self__, availability_zone=None, dedicated_host_types=None, id=None, region=None):
        if availability_zone and not isinstance(availability_zone, str):
            raise TypeError("Expected argument 'availability_zone' to be a str")
        pulumi.set(__self__, "availability_zone", availability_zone)
        if dedicated_host_types and not isinstance(dedicated_host_types, list):
            raise TypeError("Expected argument 'dedicated_host_types' to be a list")
        pulumi.set(__self__, "dedicated_host_types", dedicated_host_types)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="availabilityZone")
    def availability_zone(self) -> _builtins.str:
        return pulumi.get(self, "availability_zone")

    @_builtins.property
    @pulumi.getter(name="dedicatedHostTypes")
    def dedicated_host_types(self) -> Sequence['outputs.GetTypesDedicatedHostTypeResult']:
        """
        Indicates the available DeH types.
        """
        return pulumi.get(self, "dedicated_host_types")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetTypesResult(GetTypesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetTypesResult(
            availability_zone=self.availability_zone,
            dedicated_host_types=self.dedicated_host_types,
            id=self.id,
            region=self.region)


def get_types(availability_zone: Optional[_builtins.str] = None,
              region: Optional[_builtins.str] = None,
              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetTypesResult:
    """
    Use this data source to get the list of available DeH types in an AZ.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.deh.get_types()
    ```


    :param _builtins.str availability_zone: Specifies the availability zone.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['availabilityZone'] = availability_zone
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:deh/getTypes:getTypes', __args__, opts=opts, typ=GetTypesResult).value

    return AwaitableGetTypesResult(
        availability_zone=pulumi.get(__ret__, 'availability_zone'),
        dedicated_host_types=pulumi.get(__ret__, 'dedicated_host_types'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'))
def get_types_output(availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                     region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetTypesResult]:
    """
    Use this data source to get the list of available DeH types in an AZ.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.deh.get_types()
    ```


    :param _builtins.str availability_zone: Specifies the availability zone.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['availabilityZone'] = availability_zone
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:deh/getTypes:getTypes', __args__, opts=opts, typ=GetTypesResult)
    return __ret__.apply(lambda __response__: GetTypesResult(
        availability_zone=pulumi.get(__response__, 'availability_zone'),
        dedicated_host_types=pulumi.get(__response__, 'dedicated_host_types'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region')))
