# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['GlobalGatewayArgs', 'GlobalGateway']

@pulumi.input_type
class GlobalGatewayArgs:
    def __init__(__self__, *,
                 address_family: Optional[pulumi.Input[_builtins.str]] = None,
                 bgp_asn: Optional[pulumi.Input[_builtins.int]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None):
        """
        The set of arguments for constructing a GlobalGateway resource.
        :param pulumi.Input[_builtins.str] address_family: Specifies the IP address family of the global DC gateway. Valid values are:
               + **ipv4**: Only IPv4 is supported.
               + **dual**: Both IPv4 and IPv6 are supported.
               
               Defaults to **ipv4**.
        :param pulumi.Input[_builtins.int] bgp_asn: Specifies the BGP ASN of the global DC gateway. Valid value is limited from `1`
               to `4,294,967,295`. Defaults to `64,512`.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the global DC gateway.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID that the global DC gateway
               belongs to. For enterprise users, if omitted, default enterprise project will be used.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the global DC gateway.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this will create new resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the DC global gateway.
        """
        if address_family is not None:
            pulumi.set(__self__, "address_family", address_family)
        if bgp_asn is not None:
            pulumi.set(__self__, "bgp_asn", bgp_asn)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="addressFamily")
    def address_family(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the IP address family of the global DC gateway. Valid values are:
        + **ipv4**: Only IPv4 is supported.
        + **dual**: Both IPv4 and IPv6 are supported.

        Defaults to **ipv4**.
        """
        return pulumi.get(self, "address_family")

    @address_family.setter
    def address_family(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "address_family", value)

    @_builtins.property
    @pulumi.getter(name="bgpAsn")
    def bgp_asn(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the BGP ASN of the global DC gateway. Valid value is limited from `1`
        to `4,294,967,295`. Defaults to `64,512`.
        """
        return pulumi.get(self, "bgp_asn")

    @bgp_asn.setter
    def bgp_asn(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "bgp_asn", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the global DC gateway.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID that the global DC gateway
        belongs to. For enterprise users, if omitted, default enterprise project will be used.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the global DC gateway.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this will create new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the key/value pairs to associate with the DC global gateway.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _GlobalGatewayState:
    def __init__(__self__, *,
                 address_family: Optional[pulumi.Input[_builtins.str]] = None,
                 all_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 available_peer_link_count: Optional[pulumi.Input[_builtins.int]] = None,
                 bgp_asn: Optional[pulumi.Input[_builtins.int]] = None,
                 created_time: Optional[pulumi.Input[_builtins.str]] = None,
                 current_peer_link_count: Optional[pulumi.Input[_builtins.int]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 global_center_network_id: Optional[pulumi.Input[_builtins.str]] = None,
                 locales: Optional[pulumi.Input[Sequence[pulumi.Input['GlobalGatewayLocaleArgs']]]] = None,
                 location_name: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 reason: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 updated_time: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering GlobalGateway resources.
        :param pulumi.Input[_builtins.str] address_family: Specifies the IP address family of the global DC gateway. Valid values are:
               + **ipv4**: Only IPv4 is supported.
               + **dual**: Both IPv4 and IPv6 are supported.
               
               Defaults to **ipv4**.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] all_tags: The all key/value pairs to associate with the DC global gateway.
        :param pulumi.Input[_builtins.int] available_peer_link_count: The number of peer links that can be created for a global DC gateway.
        :param pulumi.Input[_builtins.int] bgp_asn: Specifies the BGP ASN of the global DC gateway. Valid value is limited from `1`
               to `4,294,967,295`. Defaults to `64,512`.
        :param pulumi.Input[_builtins.str] created_time: The time when the global DC gateway was created.
        :param pulumi.Input[_builtins.int] current_peer_link_count: The number of peer links allowed on a global DC gateway, indicating the number of
               enterprise routers that the global DC gateway can be attached to.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the global DC gateway.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID that the global DC gateway
               belongs to. For enterprise users, if omitted, default enterprise project will be used.
        :param pulumi.Input[_builtins.str] global_center_network_id: The ID of the central network that the global DC gateway is added to.
        :param pulumi.Input[Sequence[pulumi.Input['GlobalGatewayLocaleArgs']]] locales: The locale address description information.
               The locales structure is documented below.
        :param pulumi.Input[_builtins.str] location_name: The location where the underlying device of the global DC gateway is deployed.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the global DC gateway.
        :param pulumi.Input[_builtins.str] reason: The cause of the failure to create the global DC gateway.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this will create new resource.
        :param pulumi.Input[_builtins.str] status: The status of the global DC gateway.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the DC global gateway.
        :param pulumi.Input[_builtins.str] updated_time: The time when the global DC gateway was updated.
        """
        if address_family is not None:
            pulumi.set(__self__, "address_family", address_family)
        if all_tags is not None:
            pulumi.set(__self__, "all_tags", all_tags)
        if available_peer_link_count is not None:
            pulumi.set(__self__, "available_peer_link_count", available_peer_link_count)
        if bgp_asn is not None:
            pulumi.set(__self__, "bgp_asn", bgp_asn)
        if created_time is not None:
            pulumi.set(__self__, "created_time", created_time)
        if current_peer_link_count is not None:
            pulumi.set(__self__, "current_peer_link_count", current_peer_link_count)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if global_center_network_id is not None:
            pulumi.set(__self__, "global_center_network_id", global_center_network_id)
        if locales is not None:
            pulumi.set(__self__, "locales", locales)
        if location_name is not None:
            pulumi.set(__self__, "location_name", location_name)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if reason is not None:
            pulumi.set(__self__, "reason", reason)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if updated_time is not None:
            pulumi.set(__self__, "updated_time", updated_time)

    @_builtins.property
    @pulumi.getter(name="addressFamily")
    def address_family(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the IP address family of the global DC gateway. Valid values are:
        + **ipv4**: Only IPv4 is supported.
        + **dual**: Both IPv4 and IPv6 are supported.

        Defaults to **ipv4**.
        """
        return pulumi.get(self, "address_family")

    @address_family.setter
    def address_family(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "address_family", value)

    @_builtins.property
    @pulumi.getter(name="allTags")
    def all_tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        The all key/value pairs to associate with the DC global gateway.
        """
        return pulumi.get(self, "all_tags")

    @all_tags.setter
    def all_tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "all_tags", value)

    @_builtins.property
    @pulumi.getter(name="availablePeerLinkCount")
    def available_peer_link_count(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The number of peer links that can be created for a global DC gateway.
        """
        return pulumi.get(self, "available_peer_link_count")

    @available_peer_link_count.setter
    def available_peer_link_count(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "available_peer_link_count", value)

    @_builtins.property
    @pulumi.getter(name="bgpAsn")
    def bgp_asn(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the BGP ASN of the global DC gateway. Valid value is limited from `1`
        to `4,294,967,295`. Defaults to `64,512`.
        """
        return pulumi.get(self, "bgp_asn")

    @bgp_asn.setter
    def bgp_asn(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "bgp_asn", value)

    @_builtins.property
    @pulumi.getter(name="createdTime")
    def created_time(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The time when the global DC gateway was created.
        """
        return pulumi.get(self, "created_time")

    @created_time.setter
    def created_time(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_time", value)

    @_builtins.property
    @pulumi.getter(name="currentPeerLinkCount")
    def current_peer_link_count(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The number of peer links allowed on a global DC gateway, indicating the number of
        enterprise routers that the global DC gateway can be attached to.
        """
        return pulumi.get(self, "current_peer_link_count")

    @current_peer_link_count.setter
    def current_peer_link_count(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "current_peer_link_count", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the global DC gateway.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID that the global DC gateway
        belongs to. For enterprise users, if omitted, default enterprise project will be used.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="globalCenterNetworkId")
    def global_center_network_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the central network that the global DC gateway is added to.
        """
        return pulumi.get(self, "global_center_network_id")

    @global_center_network_id.setter
    def global_center_network_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "global_center_network_id", value)

    @_builtins.property
    @pulumi.getter
    def locales(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['GlobalGatewayLocaleArgs']]]]:
        """
        The locale address description information.
        The locales structure is documented below.
        """
        return pulumi.get(self, "locales")

    @locales.setter
    def locales(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['GlobalGatewayLocaleArgs']]]]):
        pulumi.set(self, "locales", value)

    @_builtins.property
    @pulumi.getter(name="locationName")
    def location_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The location where the underlying device of the global DC gateway is deployed.
        """
        return pulumi.get(self, "location_name")

    @location_name.setter
    def location_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "location_name", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the global DC gateway.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def reason(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The cause of the failure to create the global DC gateway.
        """
        return pulumi.get(self, "reason")

    @reason.setter
    def reason(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "reason", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this will create new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The status of the global DC gateway.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the key/value pairs to associate with the DC global gateway.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter(name="updatedTime")
    def updated_time(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The time when the global DC gateway was updated.
        """
        return pulumi.get(self, "updated_time")

    @updated_time.setter
    def updated_time(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_time", value)


@pulumi.type_token("huaweicloud:dc/globalGateway:GlobalGateway")
class GlobalGateway(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 address_family: Optional[pulumi.Input[_builtins.str]] = None,
                 bgp_asn: Optional[pulumi.Input[_builtins.int]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        """
        Manages a DC global gateway resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        name = config.require_object("name")
        test = huaweicloud.dc.GlobalGateway("test",
            name=name,
            description="test description",
            bgp_asn=10,
            address_family="ipv4",
            tags={
                "foo": "bar",
                "key": "value",
            })
        ```

        ## Import

        The DC global gateway resource can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:dc/globalGateway:GlobalGateway test <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] address_family: Specifies the IP address family of the global DC gateway. Valid values are:
               + **ipv4**: Only IPv4 is supported.
               + **dual**: Both IPv4 and IPv6 are supported.
               
               Defaults to **ipv4**.
        :param pulumi.Input[_builtins.int] bgp_asn: Specifies the BGP ASN of the global DC gateway. Valid value is limited from `1`
               to `4,294,967,295`. Defaults to `64,512`.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the global DC gateway.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID that the global DC gateway
               belongs to. For enterprise users, if omitted, default enterprise project will be used.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the global DC gateway.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this will create new resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the DC global gateway.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[GlobalGatewayArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a DC global gateway resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        name = config.require_object("name")
        test = huaweicloud.dc.GlobalGateway("test",
            name=name,
            description="test description",
            bgp_asn=10,
            address_family="ipv4",
            tags={
                "foo": "bar",
                "key": "value",
            })
        ```

        ## Import

        The DC global gateway resource can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:dc/globalGateway:GlobalGateway test <id>
        ```

        :param str resource_name: The name of the resource.
        :param GlobalGatewayArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(GlobalGatewayArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 address_family: Optional[pulumi.Input[_builtins.str]] = None,
                 bgp_asn: Optional[pulumi.Input[_builtins.int]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = GlobalGatewayArgs.__new__(GlobalGatewayArgs)

            __props__.__dict__["address_family"] = address_family
            __props__.__dict__["bgp_asn"] = bgp_asn
            __props__.__dict__["description"] = description
            __props__.__dict__["enable_force_new"] = enable_force_new
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            __props__.__dict__["tags"] = tags
            __props__.__dict__["all_tags"] = None
            __props__.__dict__["available_peer_link_count"] = None
            __props__.__dict__["created_time"] = None
            __props__.__dict__["current_peer_link_count"] = None
            __props__.__dict__["global_center_network_id"] = None
            __props__.__dict__["locales"] = None
            __props__.__dict__["location_name"] = None
            __props__.__dict__["reason"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["updated_time"] = None
        super(GlobalGateway, __self__).__init__(
            'huaweicloud:dc/globalGateway:GlobalGateway',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            address_family: Optional[pulumi.Input[_builtins.str]] = None,
            all_tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            available_peer_link_count: Optional[pulumi.Input[_builtins.int]] = None,
            bgp_asn: Optional[pulumi.Input[_builtins.int]] = None,
            created_time: Optional[pulumi.Input[_builtins.str]] = None,
            current_peer_link_count: Optional[pulumi.Input[_builtins.int]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            global_center_network_id: Optional[pulumi.Input[_builtins.str]] = None,
            locales: Optional[pulumi.Input[Sequence[pulumi.Input[Union['GlobalGatewayLocaleArgs', 'GlobalGatewayLocaleArgsDict']]]]] = None,
            location_name: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            reason: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            updated_time: Optional[pulumi.Input[_builtins.str]] = None) -> 'GlobalGateway':
        """
        Get an existing GlobalGateway resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] address_family: Specifies the IP address family of the global DC gateway. Valid values are:
               + **ipv4**: Only IPv4 is supported.
               + **dual**: Both IPv4 and IPv6 are supported.
               
               Defaults to **ipv4**.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] all_tags: The all key/value pairs to associate with the DC global gateway.
        :param pulumi.Input[_builtins.int] available_peer_link_count: The number of peer links that can be created for a global DC gateway.
        :param pulumi.Input[_builtins.int] bgp_asn: Specifies the BGP ASN of the global DC gateway. Valid value is limited from `1`
               to `4,294,967,295`. Defaults to `64,512`.
        :param pulumi.Input[_builtins.str] created_time: The time when the global DC gateway was created.
        :param pulumi.Input[_builtins.int] current_peer_link_count: The number of peer links allowed on a global DC gateway, indicating the number of
               enterprise routers that the global DC gateway can be attached to.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the global DC gateway.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID that the global DC gateway
               belongs to. For enterprise users, if omitted, default enterprise project will be used.
        :param pulumi.Input[_builtins.str] global_center_network_id: The ID of the central network that the global DC gateway is added to.
        :param pulumi.Input[Sequence[pulumi.Input[Union['GlobalGatewayLocaleArgs', 'GlobalGatewayLocaleArgsDict']]]] locales: The locale address description information.
               The locales structure is documented below.
        :param pulumi.Input[_builtins.str] location_name: The location where the underlying device of the global DC gateway is deployed.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the global DC gateway.
        :param pulumi.Input[_builtins.str] reason: The cause of the failure to create the global DC gateway.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this will create new resource.
        :param pulumi.Input[_builtins.str] status: The status of the global DC gateway.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the DC global gateway.
        :param pulumi.Input[_builtins.str] updated_time: The time when the global DC gateway was updated.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _GlobalGatewayState.__new__(_GlobalGatewayState)

        __props__.__dict__["address_family"] = address_family
        __props__.__dict__["all_tags"] = all_tags
        __props__.__dict__["available_peer_link_count"] = available_peer_link_count
        __props__.__dict__["bgp_asn"] = bgp_asn
        __props__.__dict__["created_time"] = created_time
        __props__.__dict__["current_peer_link_count"] = current_peer_link_count
        __props__.__dict__["description"] = description
        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["global_center_network_id"] = global_center_network_id
        __props__.__dict__["locales"] = locales
        __props__.__dict__["location_name"] = location_name
        __props__.__dict__["name"] = name
        __props__.__dict__["reason"] = reason
        __props__.__dict__["region"] = region
        __props__.__dict__["status"] = status
        __props__.__dict__["tags"] = tags
        __props__.__dict__["updated_time"] = updated_time
        return GlobalGateway(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="addressFamily")
    def address_family(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the IP address family of the global DC gateway. Valid values are:
        + **ipv4**: Only IPv4 is supported.
        + **dual**: Both IPv4 and IPv6 are supported.

        Defaults to **ipv4**.
        """
        return pulumi.get(self, "address_family")

    @_builtins.property
    @pulumi.getter(name="allTags")
    def all_tags(self) -> pulumi.Output[Mapping[str, _builtins.str]]:
        """
        The all key/value pairs to associate with the DC global gateway.
        """
        return pulumi.get(self, "all_tags")

    @_builtins.property
    @pulumi.getter(name="availablePeerLinkCount")
    def available_peer_link_count(self) -> pulumi.Output[_builtins.int]:
        """
        The number of peer links that can be created for a global DC gateway.
        """
        return pulumi.get(self, "available_peer_link_count")

    @_builtins.property
    @pulumi.getter(name="bgpAsn")
    def bgp_asn(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the BGP ASN of the global DC gateway. Valid value is limited from `1`
        to `4,294,967,295`. Defaults to `64,512`.
        """
        return pulumi.get(self, "bgp_asn")

    @_builtins.property
    @pulumi.getter(name="createdTime")
    def created_time(self) -> pulumi.Output[_builtins.str]:
        """
        The time when the global DC gateway was created.
        """
        return pulumi.get(self, "created_time")

    @_builtins.property
    @pulumi.getter(name="currentPeerLinkCount")
    def current_peer_link_count(self) -> pulumi.Output[_builtins.int]:
        """
        The number of peer links allowed on a global DC gateway, indicating the number of
        enterprise routers that the global DC gateway can be attached to.
        """
        return pulumi.get(self, "current_peer_link_count")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the description of the global DC gateway.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the enterprise project ID that the global DC gateway
        belongs to. For enterprise users, if omitted, default enterprise project will be used.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="globalCenterNetworkId")
    def global_center_network_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the central network that the global DC gateway is added to.
        """
        return pulumi.get(self, "global_center_network_id")

    @_builtins.property
    @pulumi.getter
    def locales(self) -> pulumi.Output[Sequence['outputs.GlobalGatewayLocale']]:
        """
        The locale address description information.
        The locales structure is documented below.
        """
        return pulumi.get(self, "locales")

    @_builtins.property
    @pulumi.getter(name="locationName")
    def location_name(self) -> pulumi.Output[_builtins.str]:
        """
        The location where the underlying device of the global DC gateway is deployed.
        """
        return pulumi.get(self, "location_name")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of the global DC gateway.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def reason(self) -> pulumi.Output[_builtins.str]:
        """
        The cause of the failure to create the global DC gateway.
        """
        return pulumi.get(self, "reason")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this will create new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The status of the global DC gateway.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Mapping[str, _builtins.str]]:
        """
        Specifies the key/value pairs to associate with the DC global gateway.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter(name="updatedTime")
    def updated_time(self) -> pulumi.Output[_builtins.str]:
        """
        The time when the global DC gateway was updated.
        """
        return pulumi.get(self, "updated_time")

