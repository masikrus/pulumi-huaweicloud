# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['StackArgs', 'Stack']

@pulumi.input_type
class StackArgs:
    def __init__(__self__, *,
                 agencies: Optional[pulumi.Input[Sequence[pulumi.Input['StackAgencyArgs']]]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_auto_rollback: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_deletion_protection: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 retain_all_resources: Optional[pulumi.Input[_builtins.bool]] = None,
                 template_body: Optional[pulumi.Input[_builtins.str]] = None,
                 template_uri: Optional[pulumi.Input[_builtins.str]] = None,
                 vars_body: Optional[pulumi.Input[_builtins.str]] = None,
                 vars_uri: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a Stack resource.
        :param pulumi.Input[Sequence[pulumi.Input['StackAgencyArgs']]] agencies: The configuration of the agencies authorized to IAC.
        :param pulumi.Input[_builtins.str] description: The description of the resource stack.
        :param pulumi.Input[_builtins.bool] enable_auto_rollback: Whether to enable automatic rollback.
        :param pulumi.Input[_builtins.bool] enable_deletion_protection: Whether to enable delete protection.
        :param pulumi.Input[_builtins.str] name: The name of the resource stack.
        :param pulumi.Input[_builtins.str] region: The region where the RFS resource stack is located.
        :param pulumi.Input[_builtins.bool] retain_all_resources: Whether to reserve resources when deleting the resource stack.
        :param pulumi.Input[_builtins.str] template_body: The HCL/JSON template content for deployment resources.
        :param pulumi.Input[_builtins.str] template_uri: The OBS address where the HCL/JSON template archive (**.zip** file, which contains all resource **.tf.json** script
               files to be deployed) or **.tf.json** file is located, which describes the target status of the deployment resources.
        :param pulumi.Input[_builtins.str] vars_body: The variable content for deployment resources.
        :param pulumi.Input[_builtins.str] vars_uri: The OBS address where the variable (**.tfvars**) file corresponding to the HCL/JSON template located, which describes
               the target status of the deployment resources.
        """
        if agencies is not None:
            pulumi.set(__self__, "agencies", agencies)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enable_auto_rollback is not None:
            pulumi.set(__self__, "enable_auto_rollback", enable_auto_rollback)
        if enable_deletion_protection is not None:
            pulumi.set(__self__, "enable_deletion_protection", enable_deletion_protection)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if retain_all_resources is not None:
            pulumi.set(__self__, "retain_all_resources", retain_all_resources)
        if template_body is not None:
            pulumi.set(__self__, "template_body", template_body)
        if template_uri is not None:
            pulumi.set(__self__, "template_uri", template_uri)
        if vars_body is not None:
            pulumi.set(__self__, "vars_body", vars_body)
        if vars_uri is not None:
            pulumi.set(__self__, "vars_uri", vars_uri)

    @_builtins.property
    @pulumi.getter
    def agencies(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['StackAgencyArgs']]]]:
        """
        The configuration of the agencies authorized to IAC.
        """
        return pulumi.get(self, "agencies")

    @agencies.setter
    def agencies(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['StackAgencyArgs']]]]):
        pulumi.set(self, "agencies", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description of the resource stack.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enableAutoRollback")
    def enable_auto_rollback(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Whether to enable automatic rollback.
        """
        return pulumi.get(self, "enable_auto_rollback")

    @enable_auto_rollback.setter
    def enable_auto_rollback(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_auto_rollback", value)

    @_builtins.property
    @pulumi.getter(name="enableDeletionProtection")
    def enable_deletion_protection(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Whether to enable delete protection.
        """
        return pulumi.get(self, "enable_deletion_protection")

    @enable_deletion_protection.setter
    def enable_deletion_protection(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_deletion_protection", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the resource stack.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The region where the RFS resource stack is located.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="retainAllResources")
    def retain_all_resources(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Whether to reserve resources when deleting the resource stack.
        """
        return pulumi.get(self, "retain_all_resources")

    @retain_all_resources.setter
    def retain_all_resources(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "retain_all_resources", value)

    @_builtins.property
    @pulumi.getter(name="templateBody")
    def template_body(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The HCL/JSON template content for deployment resources.
        """
        return pulumi.get(self, "template_body")

    @template_body.setter
    def template_body(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "template_body", value)

    @_builtins.property
    @pulumi.getter(name="templateUri")
    def template_uri(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The OBS address where the HCL/JSON template archive (**.zip** file, which contains all resource **.tf.json** script
        files to be deployed) or **.tf.json** file is located, which describes the target status of the deployment resources.
        """
        return pulumi.get(self, "template_uri")

    @template_uri.setter
    def template_uri(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "template_uri", value)

    @_builtins.property
    @pulumi.getter(name="varsBody")
    def vars_body(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The variable content for deployment resources.
        """
        return pulumi.get(self, "vars_body")

    @vars_body.setter
    def vars_body(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "vars_body", value)

    @_builtins.property
    @pulumi.getter(name="varsUri")
    def vars_uri(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The OBS address where the variable (**.tfvars**) file corresponding to the HCL/JSON template located, which describes
        the target status of the deployment resources.
        """
        return pulumi.get(self, "vars_uri")

    @vars_uri.setter
    def vars_uri(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "vars_uri", value)


@pulumi.input_type
class _StackState:
    def __init__(__self__, *,
                 agencies: Optional[pulumi.Input[Sequence[pulumi.Input['StackAgencyArgs']]]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_auto_rollback: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_deletion_protection: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 retain_all_resources: Optional[pulumi.Input[_builtins.bool]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 template_body: Optional[pulumi.Input[_builtins.str]] = None,
                 template_uri: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 vars_body: Optional[pulumi.Input[_builtins.str]] = None,
                 vars_uri: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering Stack resources.
        :param pulumi.Input[Sequence[pulumi.Input['StackAgencyArgs']]] agencies: The configuration of the agencies authorized to IAC.
        :param pulumi.Input[_builtins.str] created_at: The creation time.
        :param pulumi.Input[_builtins.str] description: The description of the resource stack.
        :param pulumi.Input[_builtins.bool] enable_auto_rollback: Whether to enable automatic rollback.
        :param pulumi.Input[_builtins.bool] enable_deletion_protection: Whether to enable delete protection.
        :param pulumi.Input[_builtins.str] name: The name of the resource stack.
        :param pulumi.Input[_builtins.str] region: The region where the RFS resource stack is located.
        :param pulumi.Input[_builtins.bool] retain_all_resources: Whether to reserve resources when deleting the resource stack.
        :param pulumi.Input[_builtins.str] status: The current status of the resource stack.
        :param pulumi.Input[_builtins.str] template_body: The HCL/JSON template content for deployment resources.
        :param pulumi.Input[_builtins.str] template_uri: The OBS address where the HCL/JSON template archive (**.zip** file, which contains all resource **.tf.json** script
               files to be deployed) or **.tf.json** file is located, which describes the target status of the deployment resources.
        :param pulumi.Input[_builtins.str] updated_at: The latest update time.
        :param pulumi.Input[_builtins.str] vars_body: The variable content for deployment resources.
        :param pulumi.Input[_builtins.str] vars_uri: The OBS address where the variable (**.tfvars**) file corresponding to the HCL/JSON template located, which describes
               the target status of the deployment resources.
        """
        if agencies is not None:
            pulumi.set(__self__, "agencies", agencies)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enable_auto_rollback is not None:
            pulumi.set(__self__, "enable_auto_rollback", enable_auto_rollback)
        if enable_deletion_protection is not None:
            pulumi.set(__self__, "enable_deletion_protection", enable_deletion_protection)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if retain_all_resources is not None:
            pulumi.set(__self__, "retain_all_resources", retain_all_resources)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if template_body is not None:
            pulumi.set(__self__, "template_body", template_body)
        if template_uri is not None:
            pulumi.set(__self__, "template_uri", template_uri)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if vars_body is not None:
            pulumi.set(__self__, "vars_body", vars_body)
        if vars_uri is not None:
            pulumi.set(__self__, "vars_uri", vars_uri)

    @_builtins.property
    @pulumi.getter
    def agencies(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['StackAgencyArgs']]]]:
        """
        The configuration of the agencies authorized to IAC.
        """
        return pulumi.get(self, "agencies")

    @agencies.setter
    def agencies(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['StackAgencyArgs']]]]):
        pulumi.set(self, "agencies", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The creation time.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description of the resource stack.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enableAutoRollback")
    def enable_auto_rollback(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Whether to enable automatic rollback.
        """
        return pulumi.get(self, "enable_auto_rollback")

    @enable_auto_rollback.setter
    def enable_auto_rollback(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_auto_rollback", value)

    @_builtins.property
    @pulumi.getter(name="enableDeletionProtection")
    def enable_deletion_protection(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Whether to enable delete protection.
        """
        return pulumi.get(self, "enable_deletion_protection")

    @enable_deletion_protection.setter
    def enable_deletion_protection(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_deletion_protection", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the resource stack.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The region where the RFS resource stack is located.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="retainAllResources")
    def retain_all_resources(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Whether to reserve resources when deleting the resource stack.
        """
        return pulumi.get(self, "retain_all_resources")

    @retain_all_resources.setter
    def retain_all_resources(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "retain_all_resources", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The current status of the resource stack.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="templateBody")
    def template_body(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The HCL/JSON template content for deployment resources.
        """
        return pulumi.get(self, "template_body")

    @template_body.setter
    def template_body(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "template_body", value)

    @_builtins.property
    @pulumi.getter(name="templateUri")
    def template_uri(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The OBS address where the HCL/JSON template archive (**.zip** file, which contains all resource **.tf.json** script
        files to be deployed) or **.tf.json** file is located, which describes the target status of the deployment resources.
        """
        return pulumi.get(self, "template_uri")

    @template_uri.setter
    def template_uri(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "template_uri", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The latest update time.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter(name="varsBody")
    def vars_body(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The variable content for deployment resources.
        """
        return pulumi.get(self, "vars_body")

    @vars_body.setter
    def vars_body(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "vars_body", value)

    @_builtins.property
    @pulumi.getter(name="varsUri")
    def vars_uri(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The OBS address where the variable (**.tfvars**) file corresponding to the HCL/JSON template located, which describes
        the target status of the deployment resources.
        """
        return pulumi.get(self, "vars_uri")

    @vars_uri.setter
    def vars_uri(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "vars_uri", value)


@pulumi.type_token("huaweicloud:rf/stack:Stack")
class Stack(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 agencies: Optional[pulumi.Input[Sequence[pulumi.Input[Union['StackAgencyArgs', 'StackAgencyArgsDict']]]]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_auto_rollback: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_deletion_protection: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 retain_all_resources: Optional[pulumi.Input[_builtins.bool]] = None,
                 template_body: Optional[pulumi.Input[_builtins.str]] = None,
                 template_uri: Optional[pulumi.Input[_builtins.str]] = None,
                 vars_body: Optional[pulumi.Input[_builtins.str]] = None,
                 vars_uri: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a Stack resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['StackAgencyArgs', 'StackAgencyArgsDict']]]] agencies: The configuration of the agencies authorized to IAC.
        :param pulumi.Input[_builtins.str] description: The description of the resource stack.
        :param pulumi.Input[_builtins.bool] enable_auto_rollback: Whether to enable automatic rollback.
        :param pulumi.Input[_builtins.bool] enable_deletion_protection: Whether to enable delete protection.
        :param pulumi.Input[_builtins.str] name: The name of the resource stack.
        :param pulumi.Input[_builtins.str] region: The region where the RFS resource stack is located.
        :param pulumi.Input[_builtins.bool] retain_all_resources: Whether to reserve resources when deleting the resource stack.
        :param pulumi.Input[_builtins.str] template_body: The HCL/JSON template content for deployment resources.
        :param pulumi.Input[_builtins.str] template_uri: The OBS address where the HCL/JSON template archive (**.zip** file, which contains all resource **.tf.json** script
               files to be deployed) or **.tf.json** file is located, which describes the target status of the deployment resources.
        :param pulumi.Input[_builtins.str] vars_body: The variable content for deployment resources.
        :param pulumi.Input[_builtins.str] vars_uri: The OBS address where the variable (**.tfvars**) file corresponding to the HCL/JSON template located, which describes
               the target status of the deployment resources.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[StackArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a Stack resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param StackArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(StackArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 agencies: Optional[pulumi.Input[Sequence[pulumi.Input[Union['StackAgencyArgs', 'StackAgencyArgsDict']]]]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_auto_rollback: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_deletion_protection: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 retain_all_resources: Optional[pulumi.Input[_builtins.bool]] = None,
                 template_body: Optional[pulumi.Input[_builtins.str]] = None,
                 template_uri: Optional[pulumi.Input[_builtins.str]] = None,
                 vars_body: Optional[pulumi.Input[_builtins.str]] = None,
                 vars_uri: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = StackArgs.__new__(StackArgs)

            __props__.__dict__["agencies"] = agencies
            __props__.__dict__["description"] = description
            __props__.__dict__["enable_auto_rollback"] = enable_auto_rollback
            __props__.__dict__["enable_deletion_protection"] = enable_deletion_protection
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            __props__.__dict__["retain_all_resources"] = retain_all_resources
            __props__.__dict__["template_body"] = template_body
            __props__.__dict__["template_uri"] = template_uri
            __props__.__dict__["vars_body"] = vars_body
            __props__.__dict__["vars_uri"] = vars_uri
            __props__.__dict__["created_at"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["updated_at"] = None
        super(Stack, __self__).__init__(
            'huaweicloud:rf/stack:Stack',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            agencies: Optional[pulumi.Input[Sequence[pulumi.Input[Union['StackAgencyArgs', 'StackAgencyArgsDict']]]]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            enable_auto_rollback: Optional[pulumi.Input[_builtins.bool]] = None,
            enable_deletion_protection: Optional[pulumi.Input[_builtins.bool]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            retain_all_resources: Optional[pulumi.Input[_builtins.bool]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            template_body: Optional[pulumi.Input[_builtins.str]] = None,
            template_uri: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            vars_body: Optional[pulumi.Input[_builtins.str]] = None,
            vars_uri: Optional[pulumi.Input[_builtins.str]] = None) -> 'Stack':
        """
        Get an existing Stack resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['StackAgencyArgs', 'StackAgencyArgsDict']]]] agencies: The configuration of the agencies authorized to IAC.
        :param pulumi.Input[_builtins.str] created_at: The creation time.
        :param pulumi.Input[_builtins.str] description: The description of the resource stack.
        :param pulumi.Input[_builtins.bool] enable_auto_rollback: Whether to enable automatic rollback.
        :param pulumi.Input[_builtins.bool] enable_deletion_protection: Whether to enable delete protection.
        :param pulumi.Input[_builtins.str] name: The name of the resource stack.
        :param pulumi.Input[_builtins.str] region: The region where the RFS resource stack is located.
        :param pulumi.Input[_builtins.bool] retain_all_resources: Whether to reserve resources when deleting the resource stack.
        :param pulumi.Input[_builtins.str] status: The current status of the resource stack.
        :param pulumi.Input[_builtins.str] template_body: The HCL/JSON template content for deployment resources.
        :param pulumi.Input[_builtins.str] template_uri: The OBS address where the HCL/JSON template archive (**.zip** file, which contains all resource **.tf.json** script
               files to be deployed) or **.tf.json** file is located, which describes the target status of the deployment resources.
        :param pulumi.Input[_builtins.str] updated_at: The latest update time.
        :param pulumi.Input[_builtins.str] vars_body: The variable content for deployment resources.
        :param pulumi.Input[_builtins.str] vars_uri: The OBS address where the variable (**.tfvars**) file corresponding to the HCL/JSON template located, which describes
               the target status of the deployment resources.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _StackState.__new__(_StackState)

        __props__.__dict__["agencies"] = agencies
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["description"] = description
        __props__.__dict__["enable_auto_rollback"] = enable_auto_rollback
        __props__.__dict__["enable_deletion_protection"] = enable_deletion_protection
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["retain_all_resources"] = retain_all_resources
        __props__.__dict__["status"] = status
        __props__.__dict__["template_body"] = template_body
        __props__.__dict__["template_uri"] = template_uri
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["vars_body"] = vars_body
        __props__.__dict__["vars_uri"] = vars_uri
        return Stack(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def agencies(self) -> pulumi.Output[Optional[Sequence['outputs.StackAgency']]]:
        """
        The configuration of the agencies authorized to IAC.
        """
        return pulumi.get(self, "agencies")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The creation time.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The description of the resource stack.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="enableAutoRollback")
    def enable_auto_rollback(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Whether to enable automatic rollback.
        """
        return pulumi.get(self, "enable_auto_rollback")

    @_builtins.property
    @pulumi.getter(name="enableDeletionProtection")
    def enable_deletion_protection(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Whether to enable delete protection.
        """
        return pulumi.get(self, "enable_deletion_protection")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the resource stack.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        The region where the RFS resource stack is located.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="retainAllResources")
    def retain_all_resources(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Whether to reserve resources when deleting the resource stack.
        """
        return pulumi.get(self, "retain_all_resources")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The current status of the resource stack.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="templateBody")
    def template_body(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The HCL/JSON template content for deployment resources.
        """
        return pulumi.get(self, "template_body")

    @_builtins.property
    @pulumi.getter(name="templateUri")
    def template_uri(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The OBS address where the HCL/JSON template archive (**.zip** file, which contains all resource **.tf.json** script
        files to be deployed) or **.tf.json** file is located, which describes the target status of the deployment resources.
        """
        return pulumi.get(self, "template_uri")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The latest update time.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter(name="varsBody")
    def vars_body(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The variable content for deployment resources.
        """
        return pulumi.get(self, "vars_body")

    @_builtins.property
    @pulumi.getter(name="varsUri")
    def vars_uri(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The OBS address where the variable (**.tfvars**) file corresponding to the HCL/JSON template located, which describes
        the target status of the deployment resources.
        """
        return pulumi.get(self, "vars_uri")

