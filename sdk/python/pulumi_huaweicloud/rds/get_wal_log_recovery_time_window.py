# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetWalLogRecoveryTimeWindowResult',
    'AwaitableGetWalLogRecoveryTimeWindowResult',
    'get_wal_log_recovery_time_window',
    'get_wal_log_recovery_time_window_output',
]

@pulumi.output_type
class GetWalLogRecoveryTimeWindowResult:
    """
    A collection of values returned by getWalLogRecoveryTimeWindow.
    """
    def __init__(__self__, id=None, instance_id=None, recovery_max_time=None, recovery_min_time=None, region=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if recovery_max_time and not isinstance(recovery_max_time, str):
            raise TypeError("Expected argument 'recovery_max_time' to be a str")
        pulumi.set(__self__, "recovery_max_time", recovery_max_time)
        if recovery_min_time and not isinstance(recovery_min_time, str):
            raise TypeError("Expected argument 'recovery_min_time' to be a str")
        pulumi.set(__self__, "recovery_min_time", recovery_min_time)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> _builtins.str:
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter(name="recoveryMaxTime")
    def recovery_max_time(self) -> _builtins.str:
        """
        Indicates the end of the WAL log recovery window (inclusive), formatted as a timestamp string.
        """
        return pulumi.get(self, "recovery_max_time")

    @_builtins.property
    @pulumi.getter(name="recoveryMinTime")
    def recovery_min_time(self) -> _builtins.str:
        """
        Indicates the start of the WAL log recovery window (exclusive), formatted as a timestamp string.
        """
        return pulumi.get(self, "recovery_min_time")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetWalLogRecoveryTimeWindowResult(GetWalLogRecoveryTimeWindowResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetWalLogRecoveryTimeWindowResult(
            id=self.id,
            instance_id=self.instance_id,
            recovery_max_time=self.recovery_max_time,
            recovery_min_time=self.recovery_min_time,
            region=self.region)


def get_wal_log_recovery_time_window(instance_id: Optional[_builtins.str] = None,
                                     region: Optional[_builtins.str] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetWalLogRecoveryTimeWindowResult:
    """
    Use this data source to query the WAL log recovery time window of a specified RDS read-replica instance.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    test = huaweicloud.Rds.get_wal_log_recovery_time_window(instance_id=instance_id)
    ```


    :param _builtins.str instance_id: Specifies the ID of the RDS instance.
    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['instanceId'] = instance_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Rds/getWalLogRecoveryTimeWindow:getWalLogRecoveryTimeWindow', __args__, opts=opts, typ=GetWalLogRecoveryTimeWindowResult).value

    return AwaitableGetWalLogRecoveryTimeWindowResult(
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        recovery_max_time=pulumi.get(__ret__, 'recovery_max_time'),
        recovery_min_time=pulumi.get(__ret__, 'recovery_min_time'),
        region=pulumi.get(__ret__, 'region'))
def get_wal_log_recovery_time_window_output(instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                                            region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                            opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetWalLogRecoveryTimeWindowResult]:
    """
    Use this data source to query the WAL log recovery time window of a specified RDS read-replica instance.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    test = huaweicloud.Rds.get_wal_log_recovery_time_window(instance_id=instance_id)
    ```


    :param _builtins.str instance_id: Specifies the ID of the RDS instance.
    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['instanceId'] = instance_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Rds/getWalLogRecoveryTimeWindow:getWalLogRecoveryTimeWindow', __args__, opts=opts, typ=GetWalLogRecoveryTimeWindowResult)
    return __ret__.apply(lambda __response__: GetWalLogRecoveryTimeWindowResult(
        id=pulumi.get(__response__, 'id'),
        instance_id=pulumi.get(__response__, 'instance_id'),
        recovery_max_time=pulumi.get(__response__, 'recovery_max_time'),
        recovery_min_time=pulumi.get(__response__, 'recovery_min_time'),
        region=pulumi.get(__response__, 'region')))
