# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['PgSchemaArgs', 'PgSchema']

@pulumi.input_type
class PgSchemaArgs:
    def __init__(__self__, *,
                 db_name: pulumi.Input[_builtins.str],
                 instance_id: pulumi.Input[_builtins.str],
                 owner: pulumi.Input[_builtins.str],
                 schema_name: pulumi.Input[_builtins.str],
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a PgSchema resource.
        :param pulumi.Input[_builtins.str] db_name: Specifies the database name. The value contains 1 to 63 characters,
               including letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
               PostgreSQL template library names. RDS for PostgreSQL template libraries include **postgres**, **template0**, and
               **template1**.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the RDS PostgreSQL instance.
        :param pulumi.Input[_builtins.str] owner: Specifies the database owner. The value contains 1 to 63 characters. It
               cannot start with pg or a digit, and must be different from system usernames. System users include **rdsAdmin**,
               **rdsMetric**, **rdsBackup**, **rdsRepl**, **rdsProxy** and **rdsDdm**.
        :param pulumi.Input[_builtins.str] schema_name: Specifies the schema name. The value contains 1 to 63 characters,
               including letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
               PostgreSQL template database names and existing schema names.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "db_name", db_name)
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "owner", owner)
        pulumi.set(__self__, "schema_name", schema_name)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="dbName")
    def db_name(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the database name. The value contains 1 to 63 characters,
        including letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
        PostgreSQL template library names. RDS for PostgreSQL template libraries include **postgres**, **template0**, and
        **template1**.
        """
        return pulumi.get(self, "db_name")

    @db_name.setter
    def db_name(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "db_name", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the RDS PostgreSQL instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter
    def owner(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the database owner. The value contains 1 to 63 characters. It
        cannot start with pg or a digit, and must be different from system usernames. System users include **rdsAdmin**,
        **rdsMetric**, **rdsBackup**, **rdsRepl**, **rdsProxy** and **rdsDdm**.
        """
        return pulumi.get(self, "owner")

    @owner.setter
    def owner(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "owner", value)

    @_builtins.property
    @pulumi.getter(name="schemaName")
    def schema_name(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the schema name. The value contains 1 to 63 characters,
        including letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
        PostgreSQL template database names and existing schema names.
        """
        return pulumi.get(self, "schema_name")

    @schema_name.setter
    def schema_name(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "schema_name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _PgSchemaState:
    def __init__(__self__, *,
                 db_name: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 owner: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 schema_name: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering PgSchema resources.
        :param pulumi.Input[_builtins.str] db_name: Specifies the database name. The value contains 1 to 63 characters,
               including letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
               PostgreSQL template library names. RDS for PostgreSQL template libraries include **postgres**, **template0**, and
               **template1**.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the RDS PostgreSQL instance.
        :param pulumi.Input[_builtins.str] owner: Specifies the database owner. The value contains 1 to 63 characters. It
               cannot start with pg or a digit, and must be different from system usernames. System users include **rdsAdmin**,
               **rdsMetric**, **rdsBackup**, **rdsRepl**, **rdsProxy** and **rdsDdm**.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] schema_name: Specifies the schema name. The value contains 1 to 63 characters,
               including letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
               PostgreSQL template database names and existing schema names.
        """
        if db_name is not None:
            pulumi.set(__self__, "db_name", db_name)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if owner is not None:
            pulumi.set(__self__, "owner", owner)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if schema_name is not None:
            pulumi.set(__self__, "schema_name", schema_name)

    @_builtins.property
    @pulumi.getter(name="dbName")
    def db_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the database name. The value contains 1 to 63 characters,
        including letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
        PostgreSQL template library names. RDS for PostgreSQL template libraries include **postgres**, **template0**, and
        **template1**.
        """
        return pulumi.get(self, "db_name")

    @db_name.setter
    def db_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "db_name", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the RDS PostgreSQL instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter
    def owner(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the database owner. The value contains 1 to 63 characters. It
        cannot start with pg or a digit, and must be different from system usernames. System users include **rdsAdmin**,
        **rdsMetric**, **rdsBackup**, **rdsRepl**, **rdsProxy** and **rdsDdm**.
        """
        return pulumi.get(self, "owner")

    @owner.setter
    def owner(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "owner", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="schemaName")
    def schema_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the schema name. The value contains 1 to 63 characters,
        including letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
        PostgreSQL template database names and existing schema names.
        """
        return pulumi.get(self, "schema_name")

    @schema_name.setter
    def schema_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "schema_name", value)


@pulumi.type_token("huaweicloud:Rds/pgSchema:PgSchema")
class PgSchema(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 db_name: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 owner: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 schema_name: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages an RDS PostgreSQL schema resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        test = huaweicloud.rds.PgSchema("test",
            instance_id=instance_id,
            db_name="test_db",
            schema_name="test_schema",
            owner="test_account")
        ```

        > Deleting RDS PostgreSQL schema resource is not supported, it will only be removed from the state.

        ## Import

        The RDS postgresql schema can be imported using the `instance_id`,  `db_name` and `schema_name` separated by slashes, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Rds/pgSchema:PgSchema test <instance_id>/<db_name>/<schema_name>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] db_name: Specifies the database name. The value contains 1 to 63 characters,
               including letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
               PostgreSQL template library names. RDS for PostgreSQL template libraries include **postgres**, **template0**, and
               **template1**.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the RDS PostgreSQL instance.
        :param pulumi.Input[_builtins.str] owner: Specifies the database owner. The value contains 1 to 63 characters. It
               cannot start with pg or a digit, and must be different from system usernames. System users include **rdsAdmin**,
               **rdsMetric**, **rdsBackup**, **rdsRepl**, **rdsProxy** and **rdsDdm**.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] schema_name: Specifies the schema name. The value contains 1 to 63 characters,
               including letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
               PostgreSQL template database names and existing schema names.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PgSchemaArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an RDS PostgreSQL schema resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        test = huaweicloud.rds.PgSchema("test",
            instance_id=instance_id,
            db_name="test_db",
            schema_name="test_schema",
            owner="test_account")
        ```

        > Deleting RDS PostgreSQL schema resource is not supported, it will only be removed from the state.

        ## Import

        The RDS postgresql schema can be imported using the `instance_id`,  `db_name` and `schema_name` separated by slashes, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Rds/pgSchema:PgSchema test <instance_id>/<db_name>/<schema_name>
        ```

        :param str resource_name: The name of the resource.
        :param PgSchemaArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PgSchemaArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 db_name: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 owner: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 schema_name: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PgSchemaArgs.__new__(PgSchemaArgs)

            if db_name is None and not opts.urn:
                raise TypeError("Missing required property 'db_name'")
            __props__.__dict__["db_name"] = db_name
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            if owner is None and not opts.urn:
                raise TypeError("Missing required property 'owner'")
            __props__.__dict__["owner"] = owner
            __props__.__dict__["region"] = region
            if schema_name is None and not opts.urn:
                raise TypeError("Missing required property 'schema_name'")
            __props__.__dict__["schema_name"] = schema_name
        super(PgSchema, __self__).__init__(
            'huaweicloud:Rds/pgSchema:PgSchema',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            db_name: Optional[pulumi.Input[_builtins.str]] = None,
            instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            owner: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            schema_name: Optional[pulumi.Input[_builtins.str]] = None) -> 'PgSchema':
        """
        Get an existing PgSchema resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] db_name: Specifies the database name. The value contains 1 to 63 characters,
               including letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
               PostgreSQL template library names. RDS for PostgreSQL template libraries include **postgres**, **template0**, and
               **template1**.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the RDS PostgreSQL instance.
        :param pulumi.Input[_builtins.str] owner: Specifies the database owner. The value contains 1 to 63 characters. It
               cannot start with pg or a digit, and must be different from system usernames. System users include **rdsAdmin**,
               **rdsMetric**, **rdsBackup**, **rdsRepl**, **rdsProxy** and **rdsDdm**.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] schema_name: Specifies the schema name. The value contains 1 to 63 characters,
               including letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
               PostgreSQL template database names and existing schema names.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PgSchemaState.__new__(_PgSchemaState)

        __props__.__dict__["db_name"] = db_name
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["owner"] = owner
        __props__.__dict__["region"] = region
        __props__.__dict__["schema_name"] = schema_name
        return PgSchema(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="dbName")
    def db_name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the database name. The value contains 1 to 63 characters,
        including letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
        PostgreSQL template library names. RDS for PostgreSQL template libraries include **postgres**, **template0**, and
        **template1**.
        """
        return pulumi.get(self, "db_name")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the RDS PostgreSQL instance.
        """
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter
    def owner(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the database owner. The value contains 1 to 63 characters. It
        cannot start with pg or a digit, and must be different from system usernames. System users include **rdsAdmin**,
        **rdsMetric**, **rdsBackup**, **rdsRepl**, **rdsProxy** and **rdsDdm**.
        """
        return pulumi.get(self, "owner")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="schemaName")
    def schema_name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the schema name. The value contains 1 to 63 characters,
        including letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
        PostgreSQL template database names and existing schema names.
        """
        return pulumi.get(self, "schema_name")

