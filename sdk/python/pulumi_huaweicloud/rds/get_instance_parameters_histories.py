# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetInstanceParametersHistoriesResult',
    'AwaitableGetInstanceParametersHistoriesResult',
    'get_instance_parameters_histories',
    'get_instance_parameters_histories_output',
]

@pulumi.output_type
class GetInstanceParametersHistoriesResult:
    """
    A collection of values returned by getInstanceParametersHistories.
    """
    def __init__(__self__, end_time=None, histories=None, id=None, instance_id=None, param_name=None, region=None, start_time=None):
        if end_time and not isinstance(end_time, str):
            raise TypeError("Expected argument 'end_time' to be a str")
        pulumi.set(__self__, "end_time", end_time)
        if histories and not isinstance(histories, list):
            raise TypeError("Expected argument 'histories' to be a list")
        pulumi.set(__self__, "histories", histories)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if param_name and not isinstance(param_name, str):
            raise TypeError("Expected argument 'param_name' to be a str")
        pulumi.set(__self__, "param_name", param_name)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if start_time and not isinstance(start_time, str):
            raise TypeError("Expected argument 'start_time' to be a str")
        pulumi.set(__self__, "start_time", start_time)

    @_builtins.property
    @pulumi.getter(name="endTime")
    def end_time(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "end_time")

    @_builtins.property
    @pulumi.getter
    def histories(self) -> Sequence['outputs.GetInstanceParametersHistoriesHistoryResult']:
        """
        Indicates the list of parameter change history objects.
        """
        return pulumi.get(self, "histories")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> _builtins.str:
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter(name="paramName")
    def param_name(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "param_name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="startTime")
    def start_time(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "start_time")


class AwaitableGetInstanceParametersHistoriesResult(GetInstanceParametersHistoriesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInstanceParametersHistoriesResult(
            end_time=self.end_time,
            histories=self.histories,
            id=self.id,
            instance_id=self.instance_id,
            param_name=self.param_name,
            region=self.region,
            start_time=self.start_time)


def get_instance_parameters_histories(end_time: Optional[_builtins.str] = None,
                                      instance_id: Optional[_builtins.str] = None,
                                      param_name: Optional[_builtins.str] = None,
                                      region: Optional[_builtins.str] = None,
                                      start_time: Optional[_builtins.str] = None,
                                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInstanceParametersHistoriesResult:
    """
    Use this data source to query the instance parameters change histories of an RDS instance.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    test = huaweicloud.Rds.get_instance_parameters_histories(instance_id=instance_id)
    ```


    :param _builtins.str end_time: Specifies the end time in the **yyyy-mm-ddThh:mm:ssZ** format.
           The default value is the current time.
    :param _builtins.str instance_id: Specifies the ID of the RDS instance.
    :param _builtins.str param_name: Specifies the parameter name.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str start_time: Specifies the start time in the **yyyy-mm-ddThh:mm:ssZ** format.
           The default value is seven days before the current time.
    """
    __args__ = dict()
    __args__['endTime'] = end_time
    __args__['instanceId'] = instance_id
    __args__['paramName'] = param_name
    __args__['region'] = region
    __args__['startTime'] = start_time
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Rds/getInstanceParametersHistories:getInstanceParametersHistories', __args__, opts=opts, typ=GetInstanceParametersHistoriesResult).value

    return AwaitableGetInstanceParametersHistoriesResult(
        end_time=pulumi.get(__ret__, 'end_time'),
        histories=pulumi.get(__ret__, 'histories'),
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        param_name=pulumi.get(__ret__, 'param_name'),
        region=pulumi.get(__ret__, 'region'),
        start_time=pulumi.get(__ret__, 'start_time'))
def get_instance_parameters_histories_output(end_time: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                             instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                                             param_name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                             region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                             start_time: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                             opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetInstanceParametersHistoriesResult]:
    """
    Use this data source to query the instance parameters change histories of an RDS instance.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    test = huaweicloud.Rds.get_instance_parameters_histories(instance_id=instance_id)
    ```


    :param _builtins.str end_time: Specifies the end time in the **yyyy-mm-ddThh:mm:ssZ** format.
           The default value is the current time.
    :param _builtins.str instance_id: Specifies the ID of the RDS instance.
    :param _builtins.str param_name: Specifies the parameter name.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str start_time: Specifies the start time in the **yyyy-mm-ddThh:mm:ssZ** format.
           The default value is seven days before the current time.
    """
    __args__ = dict()
    __args__['endTime'] = end_time
    __args__['instanceId'] = instance_id
    __args__['paramName'] = param_name
    __args__['region'] = region
    __args__['startTime'] = start_time
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Rds/getInstanceParametersHistories:getInstanceParametersHistories', __args__, opts=opts, typ=GetInstanceParametersHistoriesResult)
    return __ret__.apply(lambda __response__: GetInstanceParametersHistoriesResult(
        end_time=pulumi.get(__response__, 'end_time'),
        histories=pulumi.get(__response__, 'histories'),
        id=pulumi.get(__response__, 'id'),
        instance_id=pulumi.get(__response__, 'instance_id'),
        param_name=pulumi.get(__response__, 'param_name'),
        region=pulumi.get(__response__, 'region'),
        start_time=pulumi.get(__response__, 'start_time')))
