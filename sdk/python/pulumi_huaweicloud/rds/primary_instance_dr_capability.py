# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['PrimaryInstanceDrCapabilityArgs', 'PrimaryInstanceDrCapability']

@pulumi.input_type
class PrimaryInstanceDrCapabilityArgs:
    def __init__(__self__, *,
                 instance_id: pulumi.Input[_builtins.str],
                 target_instance_id: pulumi.Input[_builtins.str],
                 target_ip: pulumi.Input[_builtins.str],
                 target_project_id: pulumi.Input[_builtins.str],
                 target_region: pulumi.Input[_builtins.str],
                 target_subnet: pulumi.Input[_builtins.str],
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a PrimaryInstanceDrCapability resource.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the RDS instance.
        :param pulumi.Input[_builtins.str] target_instance_id: Specifies the ID of the DR instance.
        :param pulumi.Input[_builtins.str] target_ip: Specifies the data virtual IP address (VIP) of the DR instance.
        :param pulumi.Input[_builtins.str] target_project_id: Specifies the project ID of the tenant to which the DR instance
               belongs.
        :param pulumi.Input[_builtins.str] target_region: Specifies the ID of the region where the DR instance resides.
        :param pulumi.Input[_builtins.str] target_subnet: Specifies the subnet IP address of the DR instance.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "target_instance_id", target_instance_id)
        pulumi.set(__self__, "target_ip", target_ip)
        pulumi.set(__self__, "target_project_id", target_project_id)
        pulumi.set(__self__, "target_region", target_region)
        pulumi.set(__self__, "target_subnet", target_subnet)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the RDS instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="targetInstanceId")
    def target_instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the DR instance.
        """
        return pulumi.get(self, "target_instance_id")

    @target_instance_id.setter
    def target_instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "target_instance_id", value)

    @_builtins.property
    @pulumi.getter(name="targetIp")
    def target_ip(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the data virtual IP address (VIP) of the DR instance.
        """
        return pulumi.get(self, "target_ip")

    @target_ip.setter
    def target_ip(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "target_ip", value)

    @_builtins.property
    @pulumi.getter(name="targetProjectId")
    def target_project_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the project ID of the tenant to which the DR instance
        belongs.
        """
        return pulumi.get(self, "target_project_id")

    @target_project_id.setter
    def target_project_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "target_project_id", value)

    @_builtins.property
    @pulumi.getter(name="targetRegion")
    def target_region(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the region where the DR instance resides.
        """
        return pulumi.get(self, "target_region")

    @target_region.setter
    def target_region(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "target_region", value)

    @_builtins.property
    @pulumi.getter(name="targetSubnet")
    def target_subnet(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the subnet IP address of the DR instance.
        """
        return pulumi.get(self, "target_subnet")

    @target_subnet.setter
    def target_subnet(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "target_subnet", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _PrimaryInstanceDrCapabilityState:
    def __init__(__self__, *,
                 build_process: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 target_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 target_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_region: Optional[pulumi.Input[_builtins.str]] = None,
                 target_subnet: Optional[pulumi.Input[_builtins.str]] = None,
                 time: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering PrimaryInstanceDrCapability resources.
        :param pulumi.Input[_builtins.str] build_process: Indicates the process for configuring disaster recovery (DR). The value can be:
               + **master**: process of configuring DR capability for the primary instance
               + **slave**: process of configuring DR for the DR instance
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the RDS instance.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: Indicates the DR configuration status.
        :param pulumi.Input[_builtins.str] target_instance_id: Specifies the ID of the DR instance.
        :param pulumi.Input[_builtins.str] target_ip: Specifies the data virtual IP address (VIP) of the DR instance.
        :param pulumi.Input[_builtins.str] target_project_id: Specifies the project ID of the tenant to which the DR instance
               belongs.
        :param pulumi.Input[_builtins.str] target_region: Specifies the ID of the region where the DR instance resides.
        :param pulumi.Input[_builtins.str] target_subnet: Specifies the subnet IP address of the DR instance.
        :param pulumi.Input[_builtins.str] time: Indicates the DR configuration time.
        """
        if build_process is not None:
            pulumi.set(__self__, "build_process", build_process)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if target_instance_id is not None:
            pulumi.set(__self__, "target_instance_id", target_instance_id)
        if target_ip is not None:
            pulumi.set(__self__, "target_ip", target_ip)
        if target_project_id is not None:
            pulumi.set(__self__, "target_project_id", target_project_id)
        if target_region is not None:
            pulumi.set(__self__, "target_region", target_region)
        if target_subnet is not None:
            pulumi.set(__self__, "target_subnet", target_subnet)
        if time is not None:
            pulumi.set(__self__, "time", time)

    @_builtins.property
    @pulumi.getter(name="buildProcess")
    def build_process(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the process for configuring disaster recovery (DR). The value can be:
        + **master**: process of configuring DR capability for the primary instance
        + **slave**: process of configuring DR for the DR instance
        """
        return pulumi.get(self, "build_process")

    @build_process.setter
    def build_process(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "build_process", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the RDS instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the DR configuration status.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="targetInstanceId")
    def target_instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the DR instance.
        """
        return pulumi.get(self, "target_instance_id")

    @target_instance_id.setter
    def target_instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_instance_id", value)

    @_builtins.property
    @pulumi.getter(name="targetIp")
    def target_ip(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the data virtual IP address (VIP) of the DR instance.
        """
        return pulumi.get(self, "target_ip")

    @target_ip.setter
    def target_ip(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_ip", value)

    @_builtins.property
    @pulumi.getter(name="targetProjectId")
    def target_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the project ID of the tenant to which the DR instance
        belongs.
        """
        return pulumi.get(self, "target_project_id")

    @target_project_id.setter
    def target_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_project_id", value)

    @_builtins.property
    @pulumi.getter(name="targetRegion")
    def target_region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the region where the DR instance resides.
        """
        return pulumi.get(self, "target_region")

    @target_region.setter
    def target_region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_region", value)

    @_builtins.property
    @pulumi.getter(name="targetSubnet")
    def target_subnet(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the subnet IP address of the DR instance.
        """
        return pulumi.get(self, "target_subnet")

    @target_subnet.setter
    def target_subnet(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_subnet", value)

    @_builtins.property
    @pulumi.getter
    def time(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the DR configuration time.
        """
        return pulumi.get(self, "time")

    @time.setter
    def time(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "time", value)


@pulumi.type_token("huaweicloud:Rds/primaryInstanceDrCapability:PrimaryInstanceDrCapability")
class PrimaryInstanceDrCapability(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 target_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 target_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_region: Optional[pulumi.Input[_builtins.str]] = None,
                 target_subnet: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages RDS primary instance DR capability resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        target_instance_id = config.require_object("targetInstanceId")
        target_project_id = config.require_object("targetProjectId")
        target_region = config.require_object("targetRegion")
        target_ip = config.require_object("targetIp")
        target_subnet = config.require_object("targetSubnet")
        test = huaweicloud.rds.PrimaryInstanceDrCapability("test",
            instance_id=instance_id,
            target_instance_id=target_instance_id,
            target_project_id=target_project_id,
            target_region=target_region,
            target_ip=target_ip,
            target_subnet=target_subnet)
        ```

        ## Import

        The RDS primary instance dr capability can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Rds/primaryInstanceDrCapability:PrimaryInstanceDrCapability test <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the RDS instance.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] target_instance_id: Specifies the ID of the DR instance.
        :param pulumi.Input[_builtins.str] target_ip: Specifies the data virtual IP address (VIP) of the DR instance.
        :param pulumi.Input[_builtins.str] target_project_id: Specifies the project ID of the tenant to which the DR instance
               belongs.
        :param pulumi.Input[_builtins.str] target_region: Specifies the ID of the region where the DR instance resides.
        :param pulumi.Input[_builtins.str] target_subnet: Specifies the subnet IP address of the DR instance.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PrimaryInstanceDrCapabilityArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages RDS primary instance DR capability resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        target_instance_id = config.require_object("targetInstanceId")
        target_project_id = config.require_object("targetProjectId")
        target_region = config.require_object("targetRegion")
        target_ip = config.require_object("targetIp")
        target_subnet = config.require_object("targetSubnet")
        test = huaweicloud.rds.PrimaryInstanceDrCapability("test",
            instance_id=instance_id,
            target_instance_id=target_instance_id,
            target_project_id=target_project_id,
            target_region=target_region,
            target_ip=target_ip,
            target_subnet=target_subnet)
        ```

        ## Import

        The RDS primary instance dr capability can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Rds/primaryInstanceDrCapability:PrimaryInstanceDrCapability test <id>
        ```

        :param str resource_name: The name of the resource.
        :param PrimaryInstanceDrCapabilityArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PrimaryInstanceDrCapabilityArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 target_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 target_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_region: Optional[pulumi.Input[_builtins.str]] = None,
                 target_subnet: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PrimaryInstanceDrCapabilityArgs.__new__(PrimaryInstanceDrCapabilityArgs)

            __props__.__dict__["enable_force_new"] = enable_force_new
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["region"] = region
            if target_instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'target_instance_id'")
            __props__.__dict__["target_instance_id"] = target_instance_id
            if target_ip is None and not opts.urn:
                raise TypeError("Missing required property 'target_ip'")
            __props__.__dict__["target_ip"] = target_ip
            if target_project_id is None and not opts.urn:
                raise TypeError("Missing required property 'target_project_id'")
            __props__.__dict__["target_project_id"] = target_project_id
            if target_region is None and not opts.urn:
                raise TypeError("Missing required property 'target_region'")
            __props__.__dict__["target_region"] = target_region
            if target_subnet is None and not opts.urn:
                raise TypeError("Missing required property 'target_subnet'")
            __props__.__dict__["target_subnet"] = target_subnet
            __props__.__dict__["build_process"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["time"] = None
        super(PrimaryInstanceDrCapability, __self__).__init__(
            'huaweicloud:Rds/primaryInstanceDrCapability:PrimaryInstanceDrCapability',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            build_process: Optional[pulumi.Input[_builtins.str]] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            target_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            target_ip: Optional[pulumi.Input[_builtins.str]] = None,
            target_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            target_region: Optional[pulumi.Input[_builtins.str]] = None,
            target_subnet: Optional[pulumi.Input[_builtins.str]] = None,
            time: Optional[pulumi.Input[_builtins.str]] = None) -> 'PrimaryInstanceDrCapability':
        """
        Get an existing PrimaryInstanceDrCapability resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] build_process: Indicates the process for configuring disaster recovery (DR). The value can be:
               + **master**: process of configuring DR capability for the primary instance
               + **slave**: process of configuring DR for the DR instance
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the RDS instance.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: Indicates the DR configuration status.
        :param pulumi.Input[_builtins.str] target_instance_id: Specifies the ID of the DR instance.
        :param pulumi.Input[_builtins.str] target_ip: Specifies the data virtual IP address (VIP) of the DR instance.
        :param pulumi.Input[_builtins.str] target_project_id: Specifies the project ID of the tenant to which the DR instance
               belongs.
        :param pulumi.Input[_builtins.str] target_region: Specifies the ID of the region where the DR instance resides.
        :param pulumi.Input[_builtins.str] target_subnet: Specifies the subnet IP address of the DR instance.
        :param pulumi.Input[_builtins.str] time: Indicates the DR configuration time.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PrimaryInstanceDrCapabilityState.__new__(_PrimaryInstanceDrCapabilityState)

        __props__.__dict__["build_process"] = build_process
        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["region"] = region
        __props__.__dict__["status"] = status
        __props__.__dict__["target_instance_id"] = target_instance_id
        __props__.__dict__["target_ip"] = target_ip
        __props__.__dict__["target_project_id"] = target_project_id
        __props__.__dict__["target_region"] = target_region
        __props__.__dict__["target_subnet"] = target_subnet
        __props__.__dict__["time"] = time
        return PrimaryInstanceDrCapability(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="buildProcess")
    def build_process(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the process for configuring disaster recovery (DR). The value can be:
        + **master**: process of configuring DR capability for the primary instance
        + **slave**: process of configuring DR for the DR instance
        """
        return pulumi.get(self, "build_process")

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the RDS instance.
        """
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the DR configuration status.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="targetInstanceId")
    def target_instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the DR instance.
        """
        return pulumi.get(self, "target_instance_id")

    @_builtins.property
    @pulumi.getter(name="targetIp")
    def target_ip(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the data virtual IP address (VIP) of the DR instance.
        """
        return pulumi.get(self, "target_ip")

    @_builtins.property
    @pulumi.getter(name="targetProjectId")
    def target_project_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the project ID of the tenant to which the DR instance
        belongs.
        """
        return pulumi.get(self, "target_project_id")

    @_builtins.property
    @pulumi.getter(name="targetRegion")
    def target_region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the region where the DR instance resides.
        """
        return pulumi.get(self, "target_region")

    @_builtins.property
    @pulumi.getter(name="targetSubnet")
    def target_subnet(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the subnet IP address of the DR instance.
        """
        return pulumi.get(self, "target_subnet")

    @_builtins.property
    @pulumi.getter
    def time(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the DR configuration time.
        """
        return pulumi.get(self, "time")

