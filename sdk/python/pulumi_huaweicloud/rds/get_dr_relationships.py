# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetDrRelationshipsResult',
    'AwaitableGetDrRelationshipsResult',
    'get_dr_relationships',
    'get_dr_relationships_output',
]

@pulumi.output_type
class GetDrRelationshipsResult:
    """
    A collection of values returned by getDrRelationships.
    """
    def __init__(__self__, create_at_end=None, create_at_start=None, id=None, instance_dr_infos=None, master_instance_id=None, master_region=None, order=None, region=None, relationship_id=None, slave_instance_id=None, slave_region=None, sort_field=None, status=None):
        if create_at_end and not isinstance(create_at_end, int):
            raise TypeError("Expected argument 'create_at_end' to be a int")
        pulumi.set(__self__, "create_at_end", create_at_end)
        if create_at_start and not isinstance(create_at_start, int):
            raise TypeError("Expected argument 'create_at_start' to be a int")
        pulumi.set(__self__, "create_at_start", create_at_start)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_dr_infos and not isinstance(instance_dr_infos, list):
            raise TypeError("Expected argument 'instance_dr_infos' to be a list")
        pulumi.set(__self__, "instance_dr_infos", instance_dr_infos)
        if master_instance_id and not isinstance(master_instance_id, str):
            raise TypeError("Expected argument 'master_instance_id' to be a str")
        pulumi.set(__self__, "master_instance_id", master_instance_id)
        if master_region and not isinstance(master_region, str):
            raise TypeError("Expected argument 'master_region' to be a str")
        pulumi.set(__self__, "master_region", master_region)
        if order and not isinstance(order, str):
            raise TypeError("Expected argument 'order' to be a str")
        pulumi.set(__self__, "order", order)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if relationship_id and not isinstance(relationship_id, str):
            raise TypeError("Expected argument 'relationship_id' to be a str")
        pulumi.set(__self__, "relationship_id", relationship_id)
        if slave_instance_id and not isinstance(slave_instance_id, str):
            raise TypeError("Expected argument 'slave_instance_id' to be a str")
        pulumi.set(__self__, "slave_instance_id", slave_instance_id)
        if slave_region and not isinstance(slave_region, str):
            raise TypeError("Expected argument 'slave_region' to be a str")
        pulumi.set(__self__, "slave_region", slave_region)
        if sort_field and not isinstance(sort_field, str):
            raise TypeError("Expected argument 'sort_field' to be a str")
        pulumi.set(__self__, "sort_field", sort_field)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter(name="createAtEnd")
    def create_at_end(self) -> Optional[_builtins.int]:
        return pulumi.get(self, "create_at_end")

    @_builtins.property
    @pulumi.getter(name="createAtStart")
    def create_at_start(self) -> Optional[_builtins.int]:
        return pulumi.get(self, "create_at_start")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="instanceDrInfos")
    def instance_dr_infos(self) -> Sequence['outputs.GetDrRelationshipsInstanceDrInfoResult']:
        """
        Indicates the list of DR relationships.
        The instance_dr_infos structure is documented below.
        """
        return pulumi.get(self, "instance_dr_infos")

    @_builtins.property
    @pulumi.getter(name="masterInstanceId")
    def master_instance_id(self) -> Optional[_builtins.str]:
        """
        Indicates the primary instance ID.
        """
        return pulumi.get(self, "master_instance_id")

    @_builtins.property
    @pulumi.getter(name="masterRegion")
    def master_region(self) -> Optional[_builtins.str]:
        """
        Indicates the region where the primary instance is located.
        """
        return pulumi.get(self, "master_region")

    @_builtins.property
    @pulumi.getter
    def order(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "order")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="relationshipId")
    def relationship_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "relationship_id")

    @_builtins.property
    @pulumi.getter(name="slaveInstanceId")
    def slave_instance_id(self) -> Optional[_builtins.str]:
        """
        Indicates the DR instance ID.
        """
        return pulumi.get(self, "slave_instance_id")

    @_builtins.property
    @pulumi.getter(name="slaveRegion")
    def slave_region(self) -> Optional[_builtins.str]:
        """
        Indicates the region where the standby instance is located.
        """
        return pulumi.get(self, "slave_region")

    @_builtins.property
    @pulumi.getter(name="sortField")
    def sort_field(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "sort_field")

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[_builtins.str]:
        """
        Indicates the DR configuration status.
        """
        return pulumi.get(self, "status")


class AwaitableGetDrRelationshipsResult(GetDrRelationshipsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDrRelationshipsResult(
            create_at_end=self.create_at_end,
            create_at_start=self.create_at_start,
            id=self.id,
            instance_dr_infos=self.instance_dr_infos,
            master_instance_id=self.master_instance_id,
            master_region=self.master_region,
            order=self.order,
            region=self.region,
            relationship_id=self.relationship_id,
            slave_instance_id=self.slave_instance_id,
            slave_region=self.slave_region,
            sort_field=self.sort_field,
            status=self.status)


def get_dr_relationships(create_at_end: Optional[_builtins.int] = None,
                         create_at_start: Optional[_builtins.int] = None,
                         master_instance_id: Optional[_builtins.str] = None,
                         master_region: Optional[_builtins.str] = None,
                         order: Optional[_builtins.str] = None,
                         region: Optional[_builtins.str] = None,
                         relationship_id: Optional[_builtins.str] = None,
                         slave_instance_id: Optional[_builtins.str] = None,
                         slave_region: Optional[_builtins.str] = None,
                         sort_field: Optional[_builtins.str] = None,
                         status: Optional[_builtins.str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDrRelationshipsResult:
    """
    Use this data source to get the list of DR relationships.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Rds.get_dr_relationships()
    ```


    :param _builtins.int create_at_end: Specifies the creation end time.
    :param _builtins.int create_at_start: Specifies the creation start time.
    :param _builtins.str master_instance_id: Specifies the primary instance ID.
    :param _builtins.str master_region: Specifies the region where the primary instance is located.
    :param _builtins.str order: Specifies the sorting order. Value options:
           + **DESC**: descending order.
           + **ASC**: ascending order.
           
           Defaults to **DESC**.
    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    :param _builtins.str relationship_id: Specifies the DR relationship ID.
    :param _builtins.str slave_instance_id: Specifies the DR instance ID.
    :param _builtins.str slave_region: Specifies the region where the DR instance is located.
    :param _builtins.str sort_field: Specifies the sorting field.
           + **status**: Data is sorted by DR configuration status.
           + **time**: Data is sorted by DR configuration time.
           + **master_region**: Data is sorted by region where the primary instance is located.
           + **slave_region**: Data is sorted by region where the DR instance is located.
           
           Defaults to **time**.
    :param _builtins.str status: Specifies the DR configuration status.
    """
    __args__ = dict()
    __args__['createAtEnd'] = create_at_end
    __args__['createAtStart'] = create_at_start
    __args__['masterInstanceId'] = master_instance_id
    __args__['masterRegion'] = master_region
    __args__['order'] = order
    __args__['region'] = region
    __args__['relationshipId'] = relationship_id
    __args__['slaveInstanceId'] = slave_instance_id
    __args__['slaveRegion'] = slave_region
    __args__['sortField'] = sort_field
    __args__['status'] = status
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Rds/getDrRelationships:getDrRelationships', __args__, opts=opts, typ=GetDrRelationshipsResult).value

    return AwaitableGetDrRelationshipsResult(
        create_at_end=pulumi.get(__ret__, 'create_at_end'),
        create_at_start=pulumi.get(__ret__, 'create_at_start'),
        id=pulumi.get(__ret__, 'id'),
        instance_dr_infos=pulumi.get(__ret__, 'instance_dr_infos'),
        master_instance_id=pulumi.get(__ret__, 'master_instance_id'),
        master_region=pulumi.get(__ret__, 'master_region'),
        order=pulumi.get(__ret__, 'order'),
        region=pulumi.get(__ret__, 'region'),
        relationship_id=pulumi.get(__ret__, 'relationship_id'),
        slave_instance_id=pulumi.get(__ret__, 'slave_instance_id'),
        slave_region=pulumi.get(__ret__, 'slave_region'),
        sort_field=pulumi.get(__ret__, 'sort_field'),
        status=pulumi.get(__ret__, 'status'))
def get_dr_relationships_output(create_at_end: Optional[pulumi.Input[Optional[_builtins.int]]] = None,
                                create_at_start: Optional[pulumi.Input[Optional[_builtins.int]]] = None,
                                master_instance_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                master_region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                order: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                relationship_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                slave_instance_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                slave_region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                sort_field: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                status: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetDrRelationshipsResult]:
    """
    Use this data source to get the list of DR relationships.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Rds.get_dr_relationships()
    ```


    :param _builtins.int create_at_end: Specifies the creation end time.
    :param _builtins.int create_at_start: Specifies the creation start time.
    :param _builtins.str master_instance_id: Specifies the primary instance ID.
    :param _builtins.str master_region: Specifies the region where the primary instance is located.
    :param _builtins.str order: Specifies the sorting order. Value options:
           + **DESC**: descending order.
           + **ASC**: ascending order.
           
           Defaults to **DESC**.
    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    :param _builtins.str relationship_id: Specifies the DR relationship ID.
    :param _builtins.str slave_instance_id: Specifies the DR instance ID.
    :param _builtins.str slave_region: Specifies the region where the DR instance is located.
    :param _builtins.str sort_field: Specifies the sorting field.
           + **status**: Data is sorted by DR configuration status.
           + **time**: Data is sorted by DR configuration time.
           + **master_region**: Data is sorted by region where the primary instance is located.
           + **slave_region**: Data is sorted by region where the DR instance is located.
           
           Defaults to **time**.
    :param _builtins.str status: Specifies the DR configuration status.
    """
    __args__ = dict()
    __args__['createAtEnd'] = create_at_end
    __args__['createAtStart'] = create_at_start
    __args__['masterInstanceId'] = master_instance_id
    __args__['masterRegion'] = master_region
    __args__['order'] = order
    __args__['region'] = region
    __args__['relationshipId'] = relationship_id
    __args__['slaveInstanceId'] = slave_instance_id
    __args__['slaveRegion'] = slave_region
    __args__['sortField'] = sort_field
    __args__['status'] = status
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Rds/getDrRelationships:getDrRelationships', __args__, opts=opts, typ=GetDrRelationshipsResult)
    return __ret__.apply(lambda __response__: GetDrRelationshipsResult(
        create_at_end=pulumi.get(__response__, 'create_at_end'),
        create_at_start=pulumi.get(__response__, 'create_at_start'),
        id=pulumi.get(__response__, 'id'),
        instance_dr_infos=pulumi.get(__response__, 'instance_dr_infos'),
        master_instance_id=pulumi.get(__response__, 'master_instance_id'),
        master_region=pulumi.get(__response__, 'master_region'),
        order=pulumi.get(__response__, 'order'),
        region=pulumi.get(__response__, 'region'),
        relationship_id=pulumi.get(__response__, 'relationship_id'),
        slave_instance_id=pulumi.get(__response__, 'slave_instance_id'),
        slave_region=pulumi.get(__response__, 'slave_region'),
        sort_field=pulumi.get(__response__, 'sort_field'),
        status=pulumi.get(__response__, 'status')))
