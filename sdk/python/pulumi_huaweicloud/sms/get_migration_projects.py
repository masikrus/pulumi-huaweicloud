# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetMigrationProjectsResult',
    'AwaitableGetMigrationProjectsResult',
    'get_migration_projects',
    'get_migration_projects_output',
]

@pulumi.output_type
class GetMigrationProjectsResult:
    """
    A collection of values returned by getMigrationProjects.
    """
    def __init__(__self__, id=None, migprojects=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if migprojects and not isinstance(migprojects, list):
            raise TypeError("Expected argument 'migprojects' to be a list")
        pulumi.set(__self__, "migprojects", migprojects)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def migprojects(self) -> Sequence['outputs.GetMigrationProjectsMigprojectResult']:
        """
        Indicates the details of the queried migration projects.
        """
        return pulumi.get(self, "migprojects")


class AwaitableGetMigrationProjectsResult(GetMigrationProjectsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetMigrationProjectsResult(
            id=self.id,
            migprojects=self.migprojects)


def get_migration_projects(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetMigrationProjectsResult:
    """
    Use this data source to get the list of SMS migration projects.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Sms.get_migration_projects()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Sms/getMigrationProjects:getMigrationProjects', __args__, opts=opts, typ=GetMigrationProjectsResult).value

    return AwaitableGetMigrationProjectsResult(
        id=pulumi.get(__ret__, 'id'),
        migprojects=pulumi.get(__ret__, 'migprojects'))
def get_migration_projects_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetMigrationProjectsResult]:
    """
    Use this data source to get the list of SMS migration projects.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Sms.get_migration_projects()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Sms/getMigrationProjects:getMigrationProjects', __args__, opts=opts, typ=GetMigrationProjectsResult)
    return __ret__.apply(lambda __response__: GetMigrationProjectsResult(
        id=pulumi.get(__response__, 'id'),
        migprojects=pulumi.get(__response__, 'migprojects')))
