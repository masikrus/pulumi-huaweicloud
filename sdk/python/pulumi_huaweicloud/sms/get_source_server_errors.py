# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetSourceServerErrorsResult',
    'AwaitableGetSourceServerErrorsResult',
    'get_source_server_errors',
    'get_source_server_errors_output',
]

@pulumi.output_type
class GetSourceServerErrorsResult:
    """
    A collection of values returned by getSourceServerErrors.
    """
    def __init__(__self__, enterprise_project_id=None, id=None, migproject=None, migration_errors=None):
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if migproject and not isinstance(migproject, str):
            raise TypeError("Expected argument 'migproject' to be a str")
        pulumi.set(__self__, "migproject", migproject)
        if migration_errors and not isinstance(migration_errors, list):
            raise TypeError("Expected argument 'migration_errors' to be a list")
        pulumi.set(__self__, "migration_errors", migration_errors)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def migproject(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "migproject")

    @_builtins.property
    @pulumi.getter(name="migrationErrors")
    def migration_errors(self) -> Sequence['outputs.GetSourceServerErrorsMigrationErrorResult']:
        """
        Indicates the details of failed source servers.
        """
        return pulumi.get(self, "migration_errors")


class AwaitableGetSourceServerErrorsResult(GetSourceServerErrorsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSourceServerErrorsResult(
            enterprise_project_id=self.enterprise_project_id,
            id=self.id,
            migproject=self.migproject,
            migration_errors=self.migration_errors)


def get_source_server_errors(enterprise_project_id: Optional[_builtins.str] = None,
                             migproject: Optional[_builtins.str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSourceServerErrorsResult:
    """
    Use this data source to query the list of source servers that failed to be migrated and the reported error messages.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Sms.get_source_server_errors()
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.
    :param _builtins.str migproject: Specifies the migration project ID.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['migproject'] = migproject
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Sms/getSourceServerErrors:getSourceServerErrors', __args__, opts=opts, typ=GetSourceServerErrorsResult).value

    return AwaitableGetSourceServerErrorsResult(
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        id=pulumi.get(__ret__, 'id'),
        migproject=pulumi.get(__ret__, 'migproject'),
        migration_errors=pulumi.get(__ret__, 'migration_errors'))
def get_source_server_errors_output(enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    migproject: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetSourceServerErrorsResult]:
    """
    Use this data source to query the list of source servers that failed to be migrated and the reported error messages.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Sms.get_source_server_errors()
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.
    :param _builtins.str migproject: Specifies the migration project ID.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['migproject'] = migproject
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Sms/getSourceServerErrors:getSourceServerErrors', __args__, opts=opts, typ=GetSourceServerErrorsResult)
    return __ret__.apply(lambda __response__: GetSourceServerErrorsResult(
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        id=pulumi.get(__response__, 'id'),
        migproject=pulumi.get(__response__, 'migproject'),
        migration_errors=pulumi.get(__response__, 'migration_errors')))
