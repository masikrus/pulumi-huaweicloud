# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['BucketReplicationArgs', 'BucketReplication']

@pulumi.input_type
class BucketReplicationArgs:
    def __init__(__self__, *,
                 agency: pulumi.Input[_builtins.str],
                 bucket: pulumi.Input[_builtins.str],
                 destination_bucket: pulumi.Input[_builtins.str],
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 rules: Optional[pulumi.Input[Sequence[pulumi.Input['BucketReplicationRuleArgs']]]] = None):
        """
        The set of arguments for constructing a BucketReplication resource.
        :param pulumi.Input[_builtins.str] agency: Specifies the IAM agency applied to the cross-region replication.
               
               > **NOTE:** The IAM agency is a cloud service agency of OBS. Which must has the **OBS Administrator** permission.
        :param pulumi.Input[_builtins.str] bucket: Specifies the name of the source bucket.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] destination_bucket: Specifies the name of the destination bucket.
               
               > **NOTE:** The destination bucket cannot be in the region where the source bucket resides.
               Some regions do not support cross regional replication. More constraints information see:
               [Cross-Region replication](https://support.huaweicloud.com/intl/en-us/ugobs-obs/obs_41_0034.html)
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input['BucketReplicationRuleArgs']]] rules: Specifies the configurations of object cross-region replication management.
               The rule_struct structure is documented below.
               
               <a name="OBSBucketReplication_rule_struct"></a>
               The `rule_struct` block supports:
        """
        pulumi.set(__self__, "agency", agency)
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "destination_bucket", destination_bucket)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if rules is not None:
            pulumi.set(__self__, "rules", rules)

    @_builtins.property
    @pulumi.getter
    def agency(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the IAM agency applied to the cross-region replication.

        > **NOTE:** The IAM agency is a cloud service agency of OBS. Which must has the **OBS Administrator** permission.
        """
        return pulumi.get(self, "agency")

    @agency.setter
    def agency(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "agency", value)

    @_builtins.property
    @pulumi.getter
    def bucket(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the name of the source bucket.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "bucket")

    @bucket.setter
    def bucket(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "bucket", value)

    @_builtins.property
    @pulumi.getter(name="destinationBucket")
    def destination_bucket(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the name of the destination bucket.

        > **NOTE:** The destination bucket cannot be in the region where the source bucket resides.
        Some regions do not support cross regional replication. More constraints information see:
        [Cross-Region replication](https://support.huaweicloud.com/intl/en-us/ugobs-obs/obs_41_0034.html)
        """
        return pulumi.get(self, "destination_bucket")

    @destination_bucket.setter
    def destination_bucket(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "destination_bucket", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def rules(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BucketReplicationRuleArgs']]]]:
        """
        Specifies the configurations of object cross-region replication management.
        The rule_struct structure is documented below.

        <a name="OBSBucketReplication_rule_struct"></a>
        The `rule_struct` block supports:
        """
        return pulumi.get(self, "rules")

    @rules.setter
    def rules(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BucketReplicationRuleArgs']]]]):
        pulumi.set(self, "rules", value)


@pulumi.input_type
class _BucketReplicationState:
    def __init__(__self__, *,
                 agency: Optional[pulumi.Input[_builtins.str]] = None,
                 bucket: Optional[pulumi.Input[_builtins.str]] = None,
                 destination_bucket: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 rules: Optional[pulumi.Input[Sequence[pulumi.Input['BucketReplicationRuleArgs']]]] = None):
        """
        Input properties used for looking up and filtering BucketReplication resources.
        :param pulumi.Input[_builtins.str] agency: Specifies the IAM agency applied to the cross-region replication.
               
               > **NOTE:** The IAM agency is a cloud service agency of OBS. Which must has the **OBS Administrator** permission.
        :param pulumi.Input[_builtins.str] bucket: Specifies the name of the source bucket.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] destination_bucket: Specifies the name of the destination bucket.
               
               > **NOTE:** The destination bucket cannot be in the region where the source bucket resides.
               Some regions do not support cross regional replication. More constraints information see:
               [Cross-Region replication](https://support.huaweicloud.com/intl/en-us/ugobs-obs/obs_41_0034.html)
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input['BucketReplicationRuleArgs']]] rules: Specifies the configurations of object cross-region replication management.
               The rule_struct structure is documented below.
               
               <a name="OBSBucketReplication_rule_struct"></a>
               The `rule_struct` block supports:
        """
        if agency is not None:
            pulumi.set(__self__, "agency", agency)
        if bucket is not None:
            pulumi.set(__self__, "bucket", bucket)
        if destination_bucket is not None:
            pulumi.set(__self__, "destination_bucket", destination_bucket)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if rules is not None:
            pulumi.set(__self__, "rules", rules)

    @_builtins.property
    @pulumi.getter
    def agency(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the IAM agency applied to the cross-region replication.

        > **NOTE:** The IAM agency is a cloud service agency of OBS. Which must has the **OBS Administrator** permission.
        """
        return pulumi.get(self, "agency")

    @agency.setter
    def agency(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "agency", value)

    @_builtins.property
    @pulumi.getter
    def bucket(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the source bucket.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "bucket")

    @bucket.setter
    def bucket(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "bucket", value)

    @_builtins.property
    @pulumi.getter(name="destinationBucket")
    def destination_bucket(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the destination bucket.

        > **NOTE:** The destination bucket cannot be in the region where the source bucket resides.
        Some regions do not support cross regional replication. More constraints information see:
        [Cross-Region replication](https://support.huaweicloud.com/intl/en-us/ugobs-obs/obs_41_0034.html)
        """
        return pulumi.get(self, "destination_bucket")

    @destination_bucket.setter
    def destination_bucket(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "destination_bucket", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def rules(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BucketReplicationRuleArgs']]]]:
        """
        Specifies the configurations of object cross-region replication management.
        The rule_struct structure is documented below.

        <a name="OBSBucketReplication_rule_struct"></a>
        The `rule_struct` block supports:
        """
        return pulumi.get(self, "rules")

    @rules.setter
    def rules(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BucketReplicationRuleArgs']]]]):
        pulumi.set(self, "rules", value)


@pulumi.type_token("huaweicloud:Obs/bucketReplication:BucketReplication")
class BucketReplication(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 agency: Optional[pulumi.Input[_builtins.str]] = None,
                 bucket: Optional[pulumi.Input[_builtins.str]] = None,
                 destination_bucket: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 rules: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BucketReplicationRuleArgs', 'BucketReplicationRuleArgsDict']]]]] = None,
                 __props__=None):
        """
        Manages an OBS bucket **Cross-Region Replication** resource within HuaweiCloud.

        > **NOTE:** When creating or updating the OBS bucket replication, the original bucket replication rules will be
        overwritten. The source bucket and destination bucket must belong to the same account. More cross-Region replication
        constraints see [Cross-Region replication](https://support.huaweicloud.com/intl/en-us/ugobs-obs/obs_41_0034.html).

        ## Example Usage

        ### Replicate all objects

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        bucket = config.require_object("bucket")
        destination_bucket = config.require_object("destinationBucket")
        agency = config.require_object("agency")
        test = huaweicloud.obs.BucketReplication("test",
            bucket=bucket,
            destination_bucket=destination_bucket,
            agency=agency)
        ```

        ### Replicate objects matched by prefix

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        bucket = config.require_object("bucket")
        destination_bucket = config.require_object("destinationBucket")
        agency = config.require_object("agency")
        test = huaweicloud.obs.BucketReplication("test",
            bucket=bucket,
            destination_bucket=destination_bucket,
            agency=agency,
            rules=[
                {
                    "prefix": "log",
                },
                {
                    "prefix": "imgs/",
                    "storage_class": "COLD",
                    "enabled": True,
                    "history_enabled": False,
                },
            ])
        ```

        ## Import

        The obs bucket cross-region replication can be imported using the `bucket`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Obs/bucketReplication:BucketReplication test <bucket-name>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] agency: Specifies the IAM agency applied to the cross-region replication.
               
               > **NOTE:** The IAM agency is a cloud service agency of OBS. Which must has the **OBS Administrator** permission.
        :param pulumi.Input[_builtins.str] bucket: Specifies the name of the source bucket.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] destination_bucket: Specifies the name of the destination bucket.
               
               > **NOTE:** The destination bucket cannot be in the region where the source bucket resides.
               Some regions do not support cross regional replication. More constraints information see:
               [Cross-Region replication](https://support.huaweicloud.com/intl/en-us/ugobs-obs/obs_41_0034.html)
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['BucketReplicationRuleArgs', 'BucketReplicationRuleArgsDict']]]] rules: Specifies the configurations of object cross-region replication management.
               The rule_struct structure is documented below.
               
               <a name="OBSBucketReplication_rule_struct"></a>
               The `rule_struct` block supports:
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: BucketReplicationArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an OBS bucket **Cross-Region Replication** resource within HuaweiCloud.

        > **NOTE:** When creating or updating the OBS bucket replication, the original bucket replication rules will be
        overwritten. The source bucket and destination bucket must belong to the same account. More cross-Region replication
        constraints see [Cross-Region replication](https://support.huaweicloud.com/intl/en-us/ugobs-obs/obs_41_0034.html).

        ## Example Usage

        ### Replicate all objects

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        bucket = config.require_object("bucket")
        destination_bucket = config.require_object("destinationBucket")
        agency = config.require_object("agency")
        test = huaweicloud.obs.BucketReplication("test",
            bucket=bucket,
            destination_bucket=destination_bucket,
            agency=agency)
        ```

        ### Replicate objects matched by prefix

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        bucket = config.require_object("bucket")
        destination_bucket = config.require_object("destinationBucket")
        agency = config.require_object("agency")
        test = huaweicloud.obs.BucketReplication("test",
            bucket=bucket,
            destination_bucket=destination_bucket,
            agency=agency,
            rules=[
                {
                    "prefix": "log",
                },
                {
                    "prefix": "imgs/",
                    "storage_class": "COLD",
                    "enabled": True,
                    "history_enabled": False,
                },
            ])
        ```

        ## Import

        The obs bucket cross-region replication can be imported using the `bucket`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Obs/bucketReplication:BucketReplication test <bucket-name>
        ```

        :param str resource_name: The name of the resource.
        :param BucketReplicationArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(BucketReplicationArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 agency: Optional[pulumi.Input[_builtins.str]] = None,
                 bucket: Optional[pulumi.Input[_builtins.str]] = None,
                 destination_bucket: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 rules: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BucketReplicationRuleArgs', 'BucketReplicationRuleArgsDict']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = BucketReplicationArgs.__new__(BucketReplicationArgs)

            if agency is None and not opts.urn:
                raise TypeError("Missing required property 'agency'")
            __props__.__dict__["agency"] = agency
            if bucket is None and not opts.urn:
                raise TypeError("Missing required property 'bucket'")
            __props__.__dict__["bucket"] = bucket
            if destination_bucket is None and not opts.urn:
                raise TypeError("Missing required property 'destination_bucket'")
            __props__.__dict__["destination_bucket"] = destination_bucket
            __props__.__dict__["region"] = region
            __props__.__dict__["rules"] = rules
        super(BucketReplication, __self__).__init__(
            'huaweicloud:Obs/bucketReplication:BucketReplication',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            agency: Optional[pulumi.Input[_builtins.str]] = None,
            bucket: Optional[pulumi.Input[_builtins.str]] = None,
            destination_bucket: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            rules: Optional[pulumi.Input[Sequence[pulumi.Input[Union['BucketReplicationRuleArgs', 'BucketReplicationRuleArgsDict']]]]] = None) -> 'BucketReplication':
        """
        Get an existing BucketReplication resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] agency: Specifies the IAM agency applied to the cross-region replication.
               
               > **NOTE:** The IAM agency is a cloud service agency of OBS. Which must has the **OBS Administrator** permission.
        :param pulumi.Input[_builtins.str] bucket: Specifies the name of the source bucket.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] destination_bucket: Specifies the name of the destination bucket.
               
               > **NOTE:** The destination bucket cannot be in the region where the source bucket resides.
               Some regions do not support cross regional replication. More constraints information see:
               [Cross-Region replication](https://support.huaweicloud.com/intl/en-us/ugobs-obs/obs_41_0034.html)
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['BucketReplicationRuleArgs', 'BucketReplicationRuleArgsDict']]]] rules: Specifies the configurations of object cross-region replication management.
               The rule_struct structure is documented below.
               
               <a name="OBSBucketReplication_rule_struct"></a>
               The `rule_struct` block supports:
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _BucketReplicationState.__new__(_BucketReplicationState)

        __props__.__dict__["agency"] = agency
        __props__.__dict__["bucket"] = bucket
        __props__.__dict__["destination_bucket"] = destination_bucket
        __props__.__dict__["region"] = region
        __props__.__dict__["rules"] = rules
        return BucketReplication(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def agency(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the IAM agency applied to the cross-region replication.

        > **NOTE:** The IAM agency is a cloud service agency of OBS. Which must has the **OBS Administrator** permission.
        """
        return pulumi.get(self, "agency")

    @_builtins.property
    @pulumi.getter
    def bucket(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of the source bucket.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "bucket")

    @_builtins.property
    @pulumi.getter(name="destinationBucket")
    def destination_bucket(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of the destination bucket.

        > **NOTE:** The destination bucket cannot be in the region where the source bucket resides.
        Some regions do not support cross regional replication. More constraints information see:
        [Cross-Region replication](https://support.huaweicloud.com/intl/en-us/ugobs-obs/obs_41_0034.html)
        """
        return pulumi.get(self, "destination_bucket")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def rules(self) -> pulumi.Output[Sequence['outputs.BucketReplicationRule']]:
        """
        Specifies the configurations of object cross-region replication management.
        The rule_struct structure is documented below.

        <a name="OBSBucketReplication_rule_struct"></a>
        The `rule_struct` block supports:
        """
        return pulumi.get(self, "rules")

