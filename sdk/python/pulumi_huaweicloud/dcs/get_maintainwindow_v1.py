# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetMaintainwindowV1Result',
    'AwaitableGetMaintainwindowV1Result',
    'get_maintainwindow_v1',
    'get_maintainwindow_v1_output',
]

@pulumi.output_type
class GetMaintainwindowV1Result:
    """
    A collection of values returned by getMaintainwindowV1.
    """
    def __init__(__self__, begin=None, default=None, end=None, id=None, region=None, seq=None):
        if begin and not isinstance(begin, str):
            raise TypeError("Expected argument 'begin' to be a str")
        pulumi.set(__self__, "begin", begin)
        if default and not isinstance(default, bool):
            raise TypeError("Expected argument 'default' to be a bool")
        pulumi.set(__self__, "default", default)
        if end and not isinstance(end, str):
            raise TypeError("Expected argument 'end' to be a str")
        pulumi.set(__self__, "end", end)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if seq and not isinstance(seq, int):
            raise TypeError("Expected argument 'seq' to be a int")
        pulumi.set(__self__, "seq", seq)

    @_builtins.property
    @pulumi.getter
    def begin(self) -> _builtins.str:
        return pulumi.get(self, "begin")

    @_builtins.property
    @pulumi.getter
    def default(self) -> _builtins.bool:
        return pulumi.get(self, "default")

    @_builtins.property
    @pulumi.getter
    def end(self) -> _builtins.str:
        return pulumi.get(self, "end")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def seq(self) -> _builtins.int:
        return pulumi.get(self, "seq")


class AwaitableGetMaintainwindowV1Result(GetMaintainwindowV1Result):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetMaintainwindowV1Result(
            begin=self.begin,
            default=self.default,
            end=self.end,
            id=self.id,
            region=self.region,
            seq=self.seq)


def get_maintainwindow_v1(begin: Optional[_builtins.str] = None,
                          default: Optional[_builtins.bool] = None,
                          end: Optional[_builtins.str] = None,
                          region: Optional[_builtins.str] = None,
                          seq: Optional[_builtins.int] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetMaintainwindowV1Result:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['begin'] = begin
    __args__['default'] = default
    __args__['end'] = end
    __args__['region'] = region
    __args__['seq'] = seq
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Dcs/getMaintainwindowV1:getMaintainwindowV1', __args__, opts=opts, typ=GetMaintainwindowV1Result).value

    return AwaitableGetMaintainwindowV1Result(
        begin=pulumi.get(__ret__, 'begin'),
        default=pulumi.get(__ret__, 'default'),
        end=pulumi.get(__ret__, 'end'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'),
        seq=pulumi.get(__ret__, 'seq'))
def get_maintainwindow_v1_output(begin: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                 default: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                 end: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                 region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                 seq: Optional[pulumi.Input[Optional[_builtins.int]]] = None,
                                 opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetMaintainwindowV1Result]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['begin'] = begin
    __args__['default'] = default
    __args__['end'] = end
    __args__['region'] = region
    __args__['seq'] = seq
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Dcs/getMaintainwindowV1:getMaintainwindowV1', __args__, opts=opts, typ=GetMaintainwindowV1Result)
    return __ret__.apply(lambda __response__: GetMaintainwindowV1Result(
        begin=pulumi.get(__response__, 'begin'),
        default=pulumi.get(__response__, 'default'),
        end=pulumi.get(__response__, 'end'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region'),
        seq=pulumi.get(__response__, 'seq')))
