# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ArchitectureBatchUnpublishArgs', 'ArchitectureBatchUnpublish']

@pulumi.input_type
class ArchitectureBatchUnpublishArgs:
    def __init__(__self__, *,
                 approver_user_id: pulumi.Input[_builtins.str],
                 approver_user_name: pulumi.Input[_builtins.str],
                 biz_infos: pulumi.Input[Sequence[pulumi.Input['ArchitectureBatchUnpublishBizInfoArgs']]],
                 workspace_id: pulumi.Input[_builtins.str],
                 fast_approval: Optional[pulumi.Input[_builtins.bool]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a ArchitectureBatchUnpublish resource.
        :param pulumi.Input[_builtins.str] approver_user_id: Specifies the user ID of the architecture reviewer.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] approver_user_name: Specifies the user name of the architecture reviewer.
               Changing this creates a new resource.
        :param pulumi.Input[Sequence[pulumi.Input['ArchitectureBatchUnpublishBizInfoArgs']]] biz_infos: Specifies the list of objects to be unpublished.
               Changing this creates a new resource.
               The biz_infos structure is documented below.
               
               > If the parameter contains objects that have been taken offline, the resource creation will fail, but will
               not affect the remaining objects to be taken offline.
        :param pulumi.Input[_builtins.str] workspace_id: The ID of DataArts Studio workspace.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] fast_approval: Specifies whether to automatically review.
               Changing this creates a new resource.
               
               > This parameter is available only when the current user has approval permission.
               
               <a name="offline_biz_infos"></a>
               The `biz_infos` block supports:
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        """
        pulumi.set(__self__, "approver_user_id", approver_user_id)
        pulumi.set(__self__, "approver_user_name", approver_user_name)
        pulumi.set(__self__, "biz_infos", biz_infos)
        pulumi.set(__self__, "workspace_id", workspace_id)
        if fast_approval is not None:
            pulumi.set(__self__, "fast_approval", fast_approval)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="approverUserId")
    def approver_user_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the user ID of the architecture reviewer.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "approver_user_id")

    @approver_user_id.setter
    def approver_user_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "approver_user_id", value)

    @_builtins.property
    @pulumi.getter(name="approverUserName")
    def approver_user_name(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the user name of the architecture reviewer.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "approver_user_name")

    @approver_user_name.setter
    def approver_user_name(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "approver_user_name", value)

    @_builtins.property
    @pulumi.getter(name="bizInfos")
    def biz_infos(self) -> pulumi.Input[Sequence[pulumi.Input['ArchitectureBatchUnpublishBizInfoArgs']]]:
        """
        Specifies the list of objects to be unpublished.
        Changing this creates a new resource.
        The biz_infos structure is documented below.

        > If the parameter contains objects that have been taken offline, the resource creation will fail, but will
        not affect the remaining objects to be taken offline.
        """
        return pulumi.get(self, "biz_infos")

    @biz_infos.setter
    def biz_infos(self, value: pulumi.Input[Sequence[pulumi.Input['ArchitectureBatchUnpublishBizInfoArgs']]]):
        pulumi.set(self, "biz_infos", value)

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> pulumi.Input[_builtins.str]:
        """
        The ID of DataArts Studio workspace.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "workspace_id")

    @workspace_id.setter
    def workspace_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "workspace_id", value)

    @_builtins.property
    @pulumi.getter(name="fastApproval")
    def fast_approval(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to automatically review.
        Changing this creates a new resource.

        > This parameter is available only when the current user has approval permission.

        <a name="offline_biz_infos"></a>
        The `biz_infos` block supports:
        """
        return pulumi.get(self, "fast_approval")

    @fast_approval.setter
    def fast_approval(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "fast_approval", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _ArchitectureBatchUnpublishState:
    def __init__(__self__, *,
                 approver_user_id: Optional[pulumi.Input[_builtins.str]] = None,
                 approver_user_name: Optional[pulumi.Input[_builtins.str]] = None,
                 biz_infos: Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureBatchUnpublishBizInfoArgs']]]] = None,
                 fast_approval: Optional[pulumi.Input[_builtins.bool]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering ArchitectureBatchUnpublish resources.
        :param pulumi.Input[_builtins.str] approver_user_id: Specifies the user ID of the architecture reviewer.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] approver_user_name: Specifies the user name of the architecture reviewer.
               Changing this creates a new resource.
        :param pulumi.Input[Sequence[pulumi.Input['ArchitectureBatchUnpublishBizInfoArgs']]] biz_infos: Specifies the list of objects to be unpublished.
               Changing this creates a new resource.
               The biz_infos structure is documented below.
               
               > If the parameter contains objects that have been taken offline, the resource creation will fail, but will
               not affect the remaining objects to be taken offline.
        :param pulumi.Input[_builtins.bool] fast_approval: Specifies whether to automatically review.
               Changing this creates a new resource.
               
               > This parameter is available only when the current user has approval permission.
               
               <a name="offline_biz_infos"></a>
               The `biz_infos` block supports:
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] workspace_id: The ID of DataArts Studio workspace.
               Changing this creates a new resource.
        """
        if approver_user_id is not None:
            pulumi.set(__self__, "approver_user_id", approver_user_id)
        if approver_user_name is not None:
            pulumi.set(__self__, "approver_user_name", approver_user_name)
        if biz_infos is not None:
            pulumi.set(__self__, "biz_infos", biz_infos)
        if fast_approval is not None:
            pulumi.set(__self__, "fast_approval", fast_approval)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if workspace_id is not None:
            pulumi.set(__self__, "workspace_id", workspace_id)

    @_builtins.property
    @pulumi.getter(name="approverUserId")
    def approver_user_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the user ID of the architecture reviewer.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "approver_user_id")

    @approver_user_id.setter
    def approver_user_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "approver_user_id", value)

    @_builtins.property
    @pulumi.getter(name="approverUserName")
    def approver_user_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the user name of the architecture reviewer.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "approver_user_name")

    @approver_user_name.setter
    def approver_user_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "approver_user_name", value)

    @_builtins.property
    @pulumi.getter(name="bizInfos")
    def biz_infos(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureBatchUnpublishBizInfoArgs']]]]:
        """
        Specifies the list of objects to be unpublished.
        Changing this creates a new resource.
        The biz_infos structure is documented below.

        > If the parameter contains objects that have been taken offline, the resource creation will fail, but will
        not affect the remaining objects to be taken offline.
        """
        return pulumi.get(self, "biz_infos")

    @biz_infos.setter
    def biz_infos(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureBatchUnpublishBizInfoArgs']]]]):
        pulumi.set(self, "biz_infos", value)

    @_builtins.property
    @pulumi.getter(name="fastApproval")
    def fast_approval(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to automatically review.
        Changing this creates a new resource.

        > This parameter is available only when the current user has approval permission.

        <a name="offline_biz_infos"></a>
        The `biz_infos` block supports:
        """
        return pulumi.get(self, "fast_approval")

    @fast_approval.setter
    def fast_approval(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "fast_approval", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of DataArts Studio workspace.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "workspace_id")

    @workspace_id.setter
    def workspace_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "workspace_id", value)


@pulumi.type_token("huaweicloud:DataArtsStudio/architectureBatchUnpublish:ArchitectureBatchUnpublish")
class ArchitectureBatchUnpublish(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 approver_user_id: Optional[pulumi.Input[_builtins.str]] = None,
                 approver_user_name: Optional[pulumi.Input[_builtins.str]] = None,
                 biz_infos: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureBatchUnpublishBizInfoArgs', 'ArchitectureBatchUnpublishBizInfoArgsDict']]]]] = None,
                 fast_approval: Optional[pulumi.Input[_builtins.bool]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a DataArts Architecture batch unpublish resource within HuaweiCloud.

        > 1. Only published objects can be unpublished.
        >       <br>2. Repeated unpublishing is not supported when the objects has been unpublished or in the pending approval status.
        >       <br>3. This resource is only a one-time action resource for unpublishing objects. Deleting this resource will not clear
        >       the corresponding request record, but will only remove the resource information from the tfstate file.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] approver_user_id: Specifies the user ID of the architecture reviewer.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] approver_user_name: Specifies the user name of the architecture reviewer.
               Changing this creates a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureBatchUnpublishBizInfoArgs', 'ArchitectureBatchUnpublishBizInfoArgsDict']]]] biz_infos: Specifies the list of objects to be unpublished.
               Changing this creates a new resource.
               The biz_infos structure is documented below.
               
               > If the parameter contains objects that have been taken offline, the resource creation will fail, but will
               not affect the remaining objects to be taken offline.
        :param pulumi.Input[_builtins.bool] fast_approval: Specifies whether to automatically review.
               Changing this creates a new resource.
               
               > This parameter is available only when the current user has approval permission.
               
               <a name="offline_biz_infos"></a>
               The `biz_infos` block supports:
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] workspace_id: The ID of DataArts Studio workspace.
               Changing this creates a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ArchitectureBatchUnpublishArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a DataArts Architecture batch unpublish resource within HuaweiCloud.

        > 1. Only published objects can be unpublished.
        >       <br>2. Repeated unpublishing is not supported when the objects has been unpublished or in the pending approval status.
        >       <br>3. This resource is only a one-time action resource for unpublishing objects. Deleting this resource will not clear
        >       the corresponding request record, but will only remove the resource information from the tfstate file.

        :param str resource_name: The name of the resource.
        :param ArchitectureBatchUnpublishArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ArchitectureBatchUnpublishArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 approver_user_id: Optional[pulumi.Input[_builtins.str]] = None,
                 approver_user_name: Optional[pulumi.Input[_builtins.str]] = None,
                 biz_infos: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureBatchUnpublishBizInfoArgs', 'ArchitectureBatchUnpublishBizInfoArgsDict']]]]] = None,
                 fast_approval: Optional[pulumi.Input[_builtins.bool]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ArchitectureBatchUnpublishArgs.__new__(ArchitectureBatchUnpublishArgs)

            if approver_user_id is None and not opts.urn:
                raise TypeError("Missing required property 'approver_user_id'")
            __props__.__dict__["approver_user_id"] = approver_user_id
            if approver_user_name is None and not opts.urn:
                raise TypeError("Missing required property 'approver_user_name'")
            __props__.__dict__["approver_user_name"] = approver_user_name
            if biz_infos is None and not opts.urn:
                raise TypeError("Missing required property 'biz_infos'")
            __props__.__dict__["biz_infos"] = biz_infos
            __props__.__dict__["fast_approval"] = fast_approval
            __props__.__dict__["region"] = region
            if workspace_id is None and not opts.urn:
                raise TypeError("Missing required property 'workspace_id'")
            __props__.__dict__["workspace_id"] = workspace_id
        super(ArchitectureBatchUnpublish, __self__).__init__(
            'huaweicloud:DataArtsStudio/architectureBatchUnpublish:ArchitectureBatchUnpublish',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            approver_user_id: Optional[pulumi.Input[_builtins.str]] = None,
            approver_user_name: Optional[pulumi.Input[_builtins.str]] = None,
            biz_infos: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureBatchUnpublishBizInfoArgs', 'ArchitectureBatchUnpublishBizInfoArgsDict']]]]] = None,
            fast_approval: Optional[pulumi.Input[_builtins.bool]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            workspace_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'ArchitectureBatchUnpublish':
        """
        Get an existing ArchitectureBatchUnpublish resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] approver_user_id: Specifies the user ID of the architecture reviewer.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] approver_user_name: Specifies the user name of the architecture reviewer.
               Changing this creates a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureBatchUnpublishBizInfoArgs', 'ArchitectureBatchUnpublishBizInfoArgsDict']]]] biz_infos: Specifies the list of objects to be unpublished.
               Changing this creates a new resource.
               The biz_infos structure is documented below.
               
               > If the parameter contains objects that have been taken offline, the resource creation will fail, but will
               not affect the remaining objects to be taken offline.
        :param pulumi.Input[_builtins.bool] fast_approval: Specifies whether to automatically review.
               Changing this creates a new resource.
               
               > This parameter is available only when the current user has approval permission.
               
               <a name="offline_biz_infos"></a>
               The `biz_infos` block supports:
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] workspace_id: The ID of DataArts Studio workspace.
               Changing this creates a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ArchitectureBatchUnpublishState.__new__(_ArchitectureBatchUnpublishState)

        __props__.__dict__["approver_user_id"] = approver_user_id
        __props__.__dict__["approver_user_name"] = approver_user_name
        __props__.__dict__["biz_infos"] = biz_infos
        __props__.__dict__["fast_approval"] = fast_approval
        __props__.__dict__["region"] = region
        __props__.__dict__["workspace_id"] = workspace_id
        return ArchitectureBatchUnpublish(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="approverUserId")
    def approver_user_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the user ID of the architecture reviewer.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "approver_user_id")

    @_builtins.property
    @pulumi.getter(name="approverUserName")
    def approver_user_name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the user name of the architecture reviewer.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "approver_user_name")

    @_builtins.property
    @pulumi.getter(name="bizInfos")
    def biz_infos(self) -> pulumi.Output[Sequence['outputs.ArchitectureBatchUnpublishBizInfo']]:
        """
        Specifies the list of objects to be unpublished.
        Changing this creates a new resource.
        The biz_infos structure is documented below.

        > If the parameter contains objects that have been taken offline, the resource creation will fail, but will
        not affect the remaining objects to be taken offline.
        """
        return pulumi.get(self, "biz_infos")

    @_builtins.property
    @pulumi.getter(name="fastApproval")
    def fast_approval(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether to automatically review.
        Changing this creates a new resource.

        > This parameter is available only when the current user has approval permission.

        <a name="offline_biz_infos"></a>
        The `biz_infos` block supports:
        """
        return pulumi.get(self, "fast_approval")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of DataArts Studio workspace.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "workspace_id")

