# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['SecurityDataSecrecyLevelArgs', 'SecurityDataSecrecyLevel']

@pulumi.input_type
class SecurityDataSecrecyLevelArgs:
    def __init__(__self__, *,
                 workspace_id: pulumi.Input[_builtins.str],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a SecurityDataSecrecyLevel resource.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the ID of the workspace to which the data secrecy level belongs.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the data secrecy level.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the data secrecy level.
               The valid length is limited from `1` to `128`, only Chinese and English characters, digits and underscores (_) are
               allowed. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        """
        pulumi.set(__self__, "workspace_id", workspace_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the workspace to which the data secrecy level belongs.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "workspace_id")

    @workspace_id.setter
    def workspace_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "workspace_id", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the data secrecy level.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the data secrecy level.
        The valid length is limited from `1` to `128`, only Chinese and English characters, digits and underscores (_) are
        allowed. Changing this creates a new resource.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _SecurityDataSecrecyLevelState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 created_by: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 level_number: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_by: Optional[pulumi.Input[_builtins.str]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering SecurityDataSecrecyLevel resources.
        :param pulumi.Input[_builtins.str] created_at: The creation time of the data secrecy level.
        :param pulumi.Input[_builtins.str] created_by: The creator of the data secrecy level.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the data secrecy level.
        :param pulumi.Input[_builtins.int] level_number: The security level of the data secrecy level. The larger value means the higher security level.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the data secrecy level.
               The valid length is limited from `1` to `128`, only Chinese and English characters, digits and underscores (_) are
               allowed. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] updated_at: The latest update time of the data secrecy level.
        :param pulumi.Input[_builtins.str] updated_by: The user who latest updated the data secrecy level.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the ID of the workspace to which the data secrecy level belongs.
               Changing this creates a new resource.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by is not None:
            pulumi.set(__self__, "created_by", created_by)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if level_number is not None:
            pulumi.set(__self__, "level_number", level_number)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if updated_by is not None:
            pulumi.set(__self__, "updated_by", updated_by)
        if workspace_id is not None:
            pulumi.set(__self__, "workspace_id", workspace_id)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The creation time of the data secrecy level.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The creator of the data secrecy level.
        """
        return pulumi.get(self, "created_by")

    @created_by.setter
    def created_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_by", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the data secrecy level.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="levelNumber")
    def level_number(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The security level of the data secrecy level. The larger value means the higher security level.
        """
        return pulumi.get(self, "level_number")

    @level_number.setter
    def level_number(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "level_number", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the data secrecy level.
        The valid length is limited from `1` to `128`, only Chinese and English characters, digits and underscores (_) are
        allowed. Changing this creates a new resource.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The latest update time of the data secrecy level.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The user who latest updated the data secrecy level.
        """
        return pulumi.get(self, "updated_by")

    @updated_by.setter
    def updated_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_by", value)

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the workspace to which the data secrecy level belongs.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "workspace_id")

    @workspace_id.setter
    def workspace_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "workspace_id", value)


@pulumi.type_token("huaweicloud:DataArtsStudio/securityDataSecrecyLevel:SecurityDataSecrecyLevel")
class SecurityDataSecrecyLevel(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages DataArts Security data secrecy level resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        workspace_id = config.require_object("workspaceId")
        secrecy_level_name = config.require_object("secrecyLevelName")
        test = huaweicloud.dataartsstudio.SecurityDataSecrecyLevel("test",
            workspace_id=workspace_id,
            name=secrecy_level_name)
        ```

        ## Import

        The resource can be imported using `workspace_id` and `id`, separated by a slash (/), e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:DataArtsStudio/securityDataSecrecyLevel:SecurityDataSecrecyLevel test <workspace_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the data secrecy level.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the data secrecy level.
               The valid length is limited from `1` to `128`, only Chinese and English characters, digits and underscores (_) are
               allowed. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the ID of the workspace to which the data secrecy level belongs.
               Changing this creates a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SecurityDataSecrecyLevelArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages DataArts Security data secrecy level resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        workspace_id = config.require_object("workspaceId")
        secrecy_level_name = config.require_object("secrecyLevelName")
        test = huaweicloud.dataartsstudio.SecurityDataSecrecyLevel("test",
            workspace_id=workspace_id,
            name=secrecy_level_name)
        ```

        ## Import

        The resource can be imported using `workspace_id` and `id`, separated by a slash (/), e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:DataArtsStudio/securityDataSecrecyLevel:SecurityDataSecrecyLevel test <workspace_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param SecurityDataSecrecyLevelArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SecurityDataSecrecyLevelArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SecurityDataSecrecyLevelArgs.__new__(SecurityDataSecrecyLevelArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            if workspace_id is None and not opts.urn:
                raise TypeError("Missing required property 'workspace_id'")
            __props__.__dict__["workspace_id"] = workspace_id
            __props__.__dict__["created_at"] = None
            __props__.__dict__["created_by"] = None
            __props__.__dict__["level_number"] = None
            __props__.__dict__["updated_at"] = None
            __props__.__dict__["updated_by"] = None
        super(SecurityDataSecrecyLevel, __self__).__init__(
            'huaweicloud:DataArtsStudio/securityDataSecrecyLevel:SecurityDataSecrecyLevel',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            created_by: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            level_number: Optional[pulumi.Input[_builtins.int]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            updated_by: Optional[pulumi.Input[_builtins.str]] = None,
            workspace_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'SecurityDataSecrecyLevel':
        """
        Get an existing SecurityDataSecrecyLevel resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: The creation time of the data secrecy level.
        :param pulumi.Input[_builtins.str] created_by: The creator of the data secrecy level.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the data secrecy level.
        :param pulumi.Input[_builtins.int] level_number: The security level of the data secrecy level. The larger value means the higher security level.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the data secrecy level.
               The valid length is limited from `1` to `128`, only Chinese and English characters, digits and underscores (_) are
               allowed. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] updated_at: The latest update time of the data secrecy level.
        :param pulumi.Input[_builtins.str] updated_by: The user who latest updated the data secrecy level.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the ID of the workspace to which the data secrecy level belongs.
               Changing this creates a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SecurityDataSecrecyLevelState.__new__(_SecurityDataSecrecyLevelState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["created_by"] = created_by
        __props__.__dict__["description"] = description
        __props__.__dict__["level_number"] = level_number
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["updated_by"] = updated_by
        __props__.__dict__["workspace_id"] = workspace_id
        return SecurityDataSecrecyLevel(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The creation time of the data secrecy level.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> pulumi.Output[_builtins.str]:
        """
        The creator of the data secrecy level.
        """
        return pulumi.get(self, "created_by")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the description of the data secrecy level.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="levelNumber")
    def level_number(self) -> pulumi.Output[_builtins.int]:
        """
        The security level of the data secrecy level. The larger value means the higher security level.
        """
        return pulumi.get(self, "level_number")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of the data secrecy level.
        The valid length is limited from `1` to `128`, only Chinese and English characters, digits and underscores (_) are
        allowed. Changing this creates a new resource.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The latest update time of the data secrecy level.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> pulumi.Output[_builtins.str]:
        """
        The user who latest updated the data secrecy level.
        """
        return pulumi.get(self, "updated_by")

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the workspace to which the data secrecy level belongs.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "workspace_id")

