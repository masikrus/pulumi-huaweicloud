# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ArchitectureDataStandardTemplateArgs', 'ArchitectureDataStandardTemplate']

@pulumi.input_type
class ArchitectureDataStandardTemplateArgs:
    def __init__(__self__, *,
                 workspace_id: pulumi.Input[_builtins.str],
                 custom_fields: Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardTemplateCustomFieldArgs']]]] = None,
                 optional_fields: Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardTemplateOptionalFieldArgs']]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a ArchitectureDataStandardTemplate resource.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the workspace ID of DataArts Architecture. Changing this
               parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardTemplateCustomFieldArgs']]] custom_fields: Specifies the custom fields of the data standard template to be added.
               The custom_fields structure is documented below.
               
               <a name="DataStandardTemplate_OptionalField"></a>
               The `optional_fields` block supports:
        :param pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardTemplateOptionalFieldArgs']]] optional_fields: Specifies the optional fields of the data standard template to be activated.
               The optional_fields structure is documented below.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "workspace_id", workspace_id)
        if custom_fields is not None:
            pulumi.set(__self__, "custom_fields", custom_fields)
        if optional_fields is not None:
            pulumi.set(__self__, "optional_fields", optional_fields)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the workspace ID of DataArts Architecture. Changing this
        parameter will create a new resource.
        """
        return pulumi.get(self, "workspace_id")

    @workspace_id.setter
    def workspace_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "workspace_id", value)

    @_builtins.property
    @pulumi.getter(name="customFields")
    def custom_fields(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardTemplateCustomFieldArgs']]]]:
        """
        Specifies the custom fields of the data standard template to be added.
        The custom_fields structure is documented below.

        <a name="DataStandardTemplate_OptionalField"></a>
        The `optional_fields` block supports:
        """
        return pulumi.get(self, "custom_fields")

    @custom_fields.setter
    def custom_fields(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardTemplateCustomFieldArgs']]]]):
        pulumi.set(self, "custom_fields", value)

    @_builtins.property
    @pulumi.getter(name="optionalFields")
    def optional_fields(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardTemplateOptionalFieldArgs']]]]:
        """
        Specifies the optional fields of the data standard template to be activated.
        The optional_fields structure is documented below.
        """
        return pulumi.get(self, "optional_fields")

    @optional_fields.setter
    def optional_fields(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardTemplateOptionalFieldArgs']]]]):
        pulumi.set(self, "optional_fields", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _ArchitectureDataStandardTemplateState:
    def __init__(__self__, *,
                 custom_fields: Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardTemplateCustomFieldArgs']]]] = None,
                 optional_fields: Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardTemplateOptionalFieldArgs']]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering ArchitectureDataStandardTemplate resources.
        :param pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardTemplateCustomFieldArgs']]] custom_fields: Specifies the custom fields of the data standard template to be added.
               The custom_fields structure is documented below.
               
               <a name="DataStandardTemplate_OptionalField"></a>
               The `optional_fields` block supports:
        :param pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardTemplateOptionalFieldArgs']]] optional_fields: Specifies the optional fields of the data standard template to be activated.
               The optional_fields structure is documented below.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the workspace ID of DataArts Architecture. Changing this
               parameter will create a new resource.
        """
        if custom_fields is not None:
            pulumi.set(__self__, "custom_fields", custom_fields)
        if optional_fields is not None:
            pulumi.set(__self__, "optional_fields", optional_fields)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if workspace_id is not None:
            pulumi.set(__self__, "workspace_id", workspace_id)

    @_builtins.property
    @pulumi.getter(name="customFields")
    def custom_fields(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardTemplateCustomFieldArgs']]]]:
        """
        Specifies the custom fields of the data standard template to be added.
        The custom_fields structure is documented below.

        <a name="DataStandardTemplate_OptionalField"></a>
        The `optional_fields` block supports:
        """
        return pulumi.get(self, "custom_fields")

    @custom_fields.setter
    def custom_fields(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardTemplateCustomFieldArgs']]]]):
        pulumi.set(self, "custom_fields", value)

    @_builtins.property
    @pulumi.getter(name="optionalFields")
    def optional_fields(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardTemplateOptionalFieldArgs']]]]:
        """
        Specifies the optional fields of the data standard template to be activated.
        The optional_fields structure is documented below.
        """
        return pulumi.get(self, "optional_fields")

    @optional_fields.setter
    def optional_fields(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardTemplateOptionalFieldArgs']]]]):
        pulumi.set(self, "optional_fields", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the workspace ID of DataArts Architecture. Changing this
        parameter will create a new resource.
        """
        return pulumi.get(self, "workspace_id")

    @workspace_id.setter
    def workspace_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "workspace_id", value)


@pulumi.type_token("huaweicloud:DataArtsStudio/architectureDataStandardTemplate:ArchitectureDataStandardTemplate")
class ArchitectureDataStandardTemplate(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 custom_fields: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureDataStandardTemplateCustomFieldArgs', 'ArchitectureDataStandardTemplateCustomFieldArgsDict']]]]] = None,
                 optional_fields: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureDataStandardTemplateOptionalFieldArgs', 'ArchitectureDataStandardTemplateOptionalFieldArgsDict']]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages DataArts Architecture data standard template resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        workspace_id = config.require_object("workspaceId")
        test = huaweicloud.dataartsstudio.ArchitectureDataStandardTemplate("test",
            workspace_id=workspace_id,
            optional_fields=[
                {
                    "fd_name": "dataLength",
                    "required": True,
                    "searchable": True,
                },
                {
                    "fd_name": "dqcRule",
                    "required": True,
                    "searchable": False,
                },
            ],
            custom_fields=[{
                "fd_name": "custom_field_test",
                "optional_values": "value1;value2;value3",
                "required": True,
                "searchable": True,
            }])
        ```

        ## Import

        The DataArts architecture data standard template can be imported using the `workspace_id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:DataArtsStudio/architectureDataStandardTemplate:ArchitectureDataStandardTemplate test <workspace_id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureDataStandardTemplateCustomFieldArgs', 'ArchitectureDataStandardTemplateCustomFieldArgsDict']]]] custom_fields: Specifies the custom fields of the data standard template to be added.
               The custom_fields structure is documented below.
               
               <a name="DataStandardTemplate_OptionalField"></a>
               The `optional_fields` block supports:
        :param pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureDataStandardTemplateOptionalFieldArgs', 'ArchitectureDataStandardTemplateOptionalFieldArgsDict']]]] optional_fields: Specifies the optional fields of the data standard template to be activated.
               The optional_fields structure is documented below.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the workspace ID of DataArts Architecture. Changing this
               parameter will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ArchitectureDataStandardTemplateArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages DataArts Architecture data standard template resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        workspace_id = config.require_object("workspaceId")
        test = huaweicloud.dataartsstudio.ArchitectureDataStandardTemplate("test",
            workspace_id=workspace_id,
            optional_fields=[
                {
                    "fd_name": "dataLength",
                    "required": True,
                    "searchable": True,
                },
                {
                    "fd_name": "dqcRule",
                    "required": True,
                    "searchable": False,
                },
            ],
            custom_fields=[{
                "fd_name": "custom_field_test",
                "optional_values": "value1;value2;value3",
                "required": True,
                "searchable": True,
            }])
        ```

        ## Import

        The DataArts architecture data standard template can be imported using the `workspace_id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:DataArtsStudio/architectureDataStandardTemplate:ArchitectureDataStandardTemplate test <workspace_id>
        ```

        :param str resource_name: The name of the resource.
        :param ArchitectureDataStandardTemplateArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ArchitectureDataStandardTemplateArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 custom_fields: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureDataStandardTemplateCustomFieldArgs', 'ArchitectureDataStandardTemplateCustomFieldArgsDict']]]]] = None,
                 optional_fields: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureDataStandardTemplateOptionalFieldArgs', 'ArchitectureDataStandardTemplateOptionalFieldArgsDict']]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ArchitectureDataStandardTemplateArgs.__new__(ArchitectureDataStandardTemplateArgs)

            __props__.__dict__["custom_fields"] = custom_fields
            __props__.__dict__["optional_fields"] = optional_fields
            __props__.__dict__["region"] = region
            if workspace_id is None and not opts.urn:
                raise TypeError("Missing required property 'workspace_id'")
            __props__.__dict__["workspace_id"] = workspace_id
        super(ArchitectureDataStandardTemplate, __self__).__init__(
            'huaweicloud:DataArtsStudio/architectureDataStandardTemplate:ArchitectureDataStandardTemplate',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            custom_fields: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureDataStandardTemplateCustomFieldArgs', 'ArchitectureDataStandardTemplateCustomFieldArgsDict']]]]] = None,
            optional_fields: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureDataStandardTemplateOptionalFieldArgs', 'ArchitectureDataStandardTemplateOptionalFieldArgsDict']]]]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            workspace_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'ArchitectureDataStandardTemplate':
        """
        Get an existing ArchitectureDataStandardTemplate resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureDataStandardTemplateCustomFieldArgs', 'ArchitectureDataStandardTemplateCustomFieldArgsDict']]]] custom_fields: Specifies the custom fields of the data standard template to be added.
               The custom_fields structure is documented below.
               
               <a name="DataStandardTemplate_OptionalField"></a>
               The `optional_fields` block supports:
        :param pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureDataStandardTemplateOptionalFieldArgs', 'ArchitectureDataStandardTemplateOptionalFieldArgsDict']]]] optional_fields: Specifies the optional fields of the data standard template to be activated.
               The optional_fields structure is documented below.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the workspace ID of DataArts Architecture. Changing this
               parameter will create a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ArchitectureDataStandardTemplateState.__new__(_ArchitectureDataStandardTemplateState)

        __props__.__dict__["custom_fields"] = custom_fields
        __props__.__dict__["optional_fields"] = optional_fields
        __props__.__dict__["region"] = region
        __props__.__dict__["workspace_id"] = workspace_id
        return ArchitectureDataStandardTemplate(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="customFields")
    def custom_fields(self) -> pulumi.Output[Sequence['outputs.ArchitectureDataStandardTemplateCustomField']]:
        """
        Specifies the custom fields of the data standard template to be added.
        The custom_fields structure is documented below.

        <a name="DataStandardTemplate_OptionalField"></a>
        The `optional_fields` block supports:
        """
        return pulumi.get(self, "custom_fields")

    @_builtins.property
    @pulumi.getter(name="optionalFields")
    def optional_fields(self) -> pulumi.Output[Sequence['outputs.ArchitectureDataStandardTemplateOptionalField']]:
        """
        Specifies the optional fields of the data standard template to be activated.
        The optional_fields structure is documented below.
        """
        return pulumi.get(self, "optional_fields")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the workspace ID of DataArts Architecture. Changing this
        parameter will create a new resource.
        """
        return pulumi.get(self, "workspace_id")

