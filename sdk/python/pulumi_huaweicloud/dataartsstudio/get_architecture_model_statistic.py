# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetArchitectureModelStatisticResult',
    'AwaitableGetArchitectureModelStatisticResult',
    'get_architecture_model_statistic',
    'get_architecture_model_statistic_output',
]

@pulumi.output_type
class GetArchitectureModelStatisticResult:
    """
    A collection of values returned by getArchitectureModelStatistic.
    """
    def __init__(__self__, dms=None, dwrs=None, frequents=None, id=None, logics=None, physicals=None, region=None, tops=None, workspace_id=None):
        if dms and not isinstance(dms, list):
            raise TypeError("Expected argument 'dms' to be a list")
        pulumi.set(__self__, "dms", dms)
        if dwrs and not isinstance(dwrs, list):
            raise TypeError("Expected argument 'dwrs' to be a list")
        pulumi.set(__self__, "dwrs", dwrs)
        if frequents and not isinstance(frequents, list):
            raise TypeError("Expected argument 'frequents' to be a list")
        pulumi.set(__self__, "frequents", frequents)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if logics and not isinstance(logics, list):
            raise TypeError("Expected argument 'logics' to be a list")
        pulumi.set(__self__, "logics", logics)
        if physicals and not isinstance(physicals, list):
            raise TypeError("Expected argument 'physicals' to be a list")
        pulumi.set(__self__, "physicals", physicals)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if tops and not isinstance(tops, list):
            raise TypeError("Expected argument 'tops' to be a list")
        pulumi.set(__self__, "tops", tops)
        if workspace_id and not isinstance(workspace_id, str):
            raise TypeError("Expected argument 'workspace_id' to be a str")
        pulumi.set(__self__, "workspace_id", workspace_id)

    @_builtins.property
    @pulumi.getter
    def dms(self) -> Sequence['outputs.GetArchitectureModelStatisticDmResult']:
        """
        The DM data integration layer.
        The dm structure is documented below.
        """
        return pulumi.get(self, "dms")

    @_builtins.property
    @pulumi.getter
    def dwrs(self) -> Sequence['outputs.GetArchitectureModelStatisticDwrResult']:
        """
        The DWR data reporting layer.
        The dwr structure is documented below.
        """
        return pulumi.get(self, "dwrs")

    @_builtins.property
    @pulumi.getter
    def frequents(self) -> Sequence['outputs.GetArchitectureModelStatisticFrequentResult']:
        """
        Whether the model (workspace) is frequently used.
        """
        return pulumi.get(self, "frequents")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def logics(self) -> Sequence['outputs.GetArchitectureModelStatisticLogicResult']:
        """
        The list of the logical models.
        The logics structure is documented below.
        """
        return pulumi.get(self, "logics")

    @_builtins.property
    @pulumi.getter
    def physicals(self) -> Sequence['outputs.GetArchitectureModelStatisticPhysicalResult']:
        """
        The list of the physical models.
        The physicals structure is documented below.
        """
        return pulumi.get(self, "physicals")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def tops(self) -> Sequence['outputs.GetArchitectureModelStatisticTopResult']:
        """
        The list of the first-layer models.
        The tops structure is documented below.
        """
        return pulumi.get(self, "tops")

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> _builtins.str:
        return pulumi.get(self, "workspace_id")


class AwaitableGetArchitectureModelStatisticResult(GetArchitectureModelStatisticResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetArchitectureModelStatisticResult(
            dms=self.dms,
            dwrs=self.dwrs,
            frequents=self.frequents,
            id=self.id,
            logics=self.logics,
            physicals=self.physicals,
            region=self.region,
            tops=self.tops,
            workspace_id=self.workspace_id)


def get_architecture_model_statistic(region: Optional[_builtins.str] = None,
                                     workspace_id: Optional[_builtins.str] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetArchitectureModelStatisticResult:
    """
    Use this data source to get the list of model statistic of the DataArts Architecture within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    workspace_id = config.require_object("workspaceId")
    test = huaweicloud.DataArtsStudio.get_architecture_model_statistic(workspace_id=workspace_id)
    ```


    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    :param _builtins.str workspace_id: Specifies the workspace ID of DataArts Architecture.
    """
    __args__ = dict()
    __args__['region'] = region
    __args__['workspaceId'] = workspace_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:DataArtsStudio/getArchitectureModelStatistic:getArchitectureModelStatistic', __args__, opts=opts, typ=GetArchitectureModelStatisticResult).value

    return AwaitableGetArchitectureModelStatisticResult(
        dms=pulumi.get(__ret__, 'dms'),
        dwrs=pulumi.get(__ret__, 'dwrs'),
        frequents=pulumi.get(__ret__, 'frequents'),
        id=pulumi.get(__ret__, 'id'),
        logics=pulumi.get(__ret__, 'logics'),
        physicals=pulumi.get(__ret__, 'physicals'),
        region=pulumi.get(__ret__, 'region'),
        tops=pulumi.get(__ret__, 'tops'),
        workspace_id=pulumi.get(__ret__, 'workspace_id'))
def get_architecture_model_statistic_output(region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                            workspace_id: Optional[pulumi.Input[_builtins.str]] = None,
                                            opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetArchitectureModelStatisticResult]:
    """
    Use this data source to get the list of model statistic of the DataArts Architecture within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    workspace_id = config.require_object("workspaceId")
    test = huaweicloud.DataArtsStudio.get_architecture_model_statistic(workspace_id=workspace_id)
    ```


    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    :param _builtins.str workspace_id: Specifies the workspace ID of DataArts Architecture.
    """
    __args__ = dict()
    __args__['region'] = region
    __args__['workspaceId'] = workspace_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:DataArtsStudio/getArchitectureModelStatistic:getArchitectureModelStatistic', __args__, opts=opts, typ=GetArchitectureModelStatisticResult)
    return __ret__.apply(lambda __response__: GetArchitectureModelStatisticResult(
        dms=pulumi.get(__response__, 'dms'),
        dwrs=pulumi.get(__response__, 'dwrs'),
        frequents=pulumi.get(__response__, 'frequents'),
        id=pulumi.get(__response__, 'id'),
        logics=pulumi.get(__response__, 'logics'),
        physicals=pulumi.get(__response__, 'physicals'),
        region=pulumi.get(__response__, 'region'),
        tops=pulumi.get(__response__, 'tops'),
        workspace_id=pulumi.get(__response__, 'workspace_id')))
