# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ArchitectureCodeTableArgs', 'ArchitectureCodeTable']

@pulumi.input_type
class ArchitectureCodeTableArgs:
    def __init__(__self__, *,
                 code: pulumi.Input[_builtins.str],
                 directory_id: pulumi.Input[_builtins.str],
                 fields: pulumi.Input[Sequence[pulumi.Input['ArchitectureCodeTableFieldArgs']]],
                 workspace_id: pulumi.Input[_builtins.str],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a ArchitectureCodeTable resource.
        :param pulumi.Input[_builtins.str] code: Specifies the code of a field.
        :param pulumi.Input[_builtins.str] directory_id: Specifies the directory ID of the code table.
        :param pulumi.Input[Sequence[pulumi.Input['ArchitectureCodeTableFieldArgs']]] fields: Specifies the fields information of the code table.
               The fields structure is documented below.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the ID of DataArts Studio workspace.
               Changing this parameter creates a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of a field.
        :param pulumi.Input[_builtins.str] name: Specifies the name of a field.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "code", code)
        pulumi.set(__self__, "directory_id", directory_id)
        pulumi.set(__self__, "fields", fields)
        pulumi.set(__self__, "workspace_id", workspace_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter
    def code(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the code of a field.
        """
        return pulumi.get(self, "code")

    @code.setter
    def code(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "code", value)

    @_builtins.property
    @pulumi.getter(name="directoryId")
    def directory_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the directory ID of the code table.
        """
        return pulumi.get(self, "directory_id")

    @directory_id.setter
    def directory_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "directory_id", value)

    @_builtins.property
    @pulumi.getter
    def fields(self) -> pulumi.Input[Sequence[pulumi.Input['ArchitectureCodeTableFieldArgs']]]:
        """
        Specifies the fields information of the code table.
        The fields structure is documented below.
        """
        return pulumi.get(self, "fields")

    @fields.setter
    def fields(self, value: pulumi.Input[Sequence[pulumi.Input['ArchitectureCodeTableFieldArgs']]]):
        pulumi.set(self, "fields", value)

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of DataArts Studio workspace.
        Changing this parameter creates a new resource.
        """
        return pulumi.get(self, "workspace_id")

    @workspace_id.setter
    def workspace_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "workspace_id", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of a field.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of a field.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _ArchitectureCodeTableState:
    def __init__(__self__, *,
                 code: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 created_by: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 directory_id: Optional[pulumi.Input[_builtins.str]] = None,
                 directory_path: Optional[pulumi.Input[_builtins.str]] = None,
                 fields: Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureCodeTableFieldArgs']]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering ArchitectureCodeTable resources.
        :param pulumi.Input[_builtins.str] code: Specifies the code of a field.
        :param pulumi.Input[_builtins.str] created_at: The time when the code table was created.
        :param pulumi.Input[_builtins.str] created_by: The user who created the code table.
        :param pulumi.Input[_builtins.str] description: Specifies the description of a field.
        :param pulumi.Input[_builtins.str] directory_id: Specifies the directory ID of the code table.
        :param pulumi.Input[_builtins.str] directory_path: The directory path of the code table.
        :param pulumi.Input[Sequence[pulumi.Input['ArchitectureCodeTableFieldArgs']]] fields: Specifies the fields information of the code table.
               The fields structure is documented below.
        :param pulumi.Input[_builtins.str] name: Specifies the name of a field.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: The status of the code table. Valid values are: **DRAFT**, **PUBLISH_DEVELOPING**,
               **PUBLISHED**, **OFFLINE_DEVELOPING**, **OFFLINE** and **REJECT**.
        :param pulumi.Input[_builtins.str] updated_at: The time when the code table was updated.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the ID of DataArts Studio workspace.
               Changing this parameter creates a new resource.
        """
        if code is not None:
            pulumi.set(__self__, "code", code)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by is not None:
            pulumi.set(__self__, "created_by", created_by)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if directory_id is not None:
            pulumi.set(__self__, "directory_id", directory_id)
        if directory_path is not None:
            pulumi.set(__self__, "directory_path", directory_path)
        if fields is not None:
            pulumi.set(__self__, "fields", fields)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if workspace_id is not None:
            pulumi.set(__self__, "workspace_id", workspace_id)

    @_builtins.property
    @pulumi.getter
    def code(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the code of a field.
        """
        return pulumi.get(self, "code")

    @code.setter
    def code(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "code", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The time when the code table was created.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The user who created the code table.
        """
        return pulumi.get(self, "created_by")

    @created_by.setter
    def created_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_by", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of a field.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="directoryId")
    def directory_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the directory ID of the code table.
        """
        return pulumi.get(self, "directory_id")

    @directory_id.setter
    def directory_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "directory_id", value)

    @_builtins.property
    @pulumi.getter(name="directoryPath")
    def directory_path(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The directory path of the code table.
        """
        return pulumi.get(self, "directory_path")

    @directory_path.setter
    def directory_path(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "directory_path", value)

    @_builtins.property
    @pulumi.getter
    def fields(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureCodeTableFieldArgs']]]]:
        """
        Specifies the fields information of the code table.
        The fields structure is documented below.
        """
        return pulumi.get(self, "fields")

    @fields.setter
    def fields(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureCodeTableFieldArgs']]]]):
        pulumi.set(self, "fields", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of a field.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The status of the code table. Valid values are: **DRAFT**, **PUBLISH_DEVELOPING**,
        **PUBLISHED**, **OFFLINE_DEVELOPING**, **OFFLINE** and **REJECT**.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The time when the code table was updated.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of DataArts Studio workspace.
        Changing this parameter creates a new resource.
        """
        return pulumi.get(self, "workspace_id")

    @workspace_id.setter
    def workspace_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "workspace_id", value)


@pulumi.type_token("huaweicloud:DataArtsStudio/architectureCodeTable:ArchitectureCodeTable")
class ArchitectureCodeTable(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 code: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 directory_id: Optional[pulumi.Input[_builtins.str]] = None,
                 fields: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureCodeTableFieldArgs', 'ArchitectureCodeTableFieldArgsDict']]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a DataArts Architecture code table resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        workspace_id = config.require_object("workspaceId")
        directory_id = config.require_object("directoryId")
        name = config.require_object("name")
        code = config.require_object("code")
        test = huaweicloud.dataartsstudio.ArchitectureCodeTable("test",
            workspace_id=workspace_id,
            name=name,
            code=code,
            directory_id=directory_id,
            fields=[{
                "name": "field",
                "code": "field_code",
                "type": "BIGINT",
            }])
        ```

        ## Import

        The DataArts Architecture code table resource can be imported using the `workspace_id` and `name`, separated by

        a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:DataArtsStudio/architectureCodeTable:ArchitectureCodeTable test <workspace_id>/<name>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] code: Specifies the code of a field.
        :param pulumi.Input[_builtins.str] description: Specifies the description of a field.
        :param pulumi.Input[_builtins.str] directory_id: Specifies the directory ID of the code table.
        :param pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureCodeTableFieldArgs', 'ArchitectureCodeTableFieldArgsDict']]]] fields: Specifies the fields information of the code table.
               The fields structure is documented below.
        :param pulumi.Input[_builtins.str] name: Specifies the name of a field.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the ID of DataArts Studio workspace.
               Changing this parameter creates a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ArchitectureCodeTableArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a DataArts Architecture code table resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        workspace_id = config.require_object("workspaceId")
        directory_id = config.require_object("directoryId")
        name = config.require_object("name")
        code = config.require_object("code")
        test = huaweicloud.dataartsstudio.ArchitectureCodeTable("test",
            workspace_id=workspace_id,
            name=name,
            code=code,
            directory_id=directory_id,
            fields=[{
                "name": "field",
                "code": "field_code",
                "type": "BIGINT",
            }])
        ```

        ## Import

        The DataArts Architecture code table resource can be imported using the `workspace_id` and `name`, separated by

        a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:DataArtsStudio/architectureCodeTable:ArchitectureCodeTable test <workspace_id>/<name>
        ```

        :param str resource_name: The name of the resource.
        :param ArchitectureCodeTableArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ArchitectureCodeTableArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 code: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 directory_id: Optional[pulumi.Input[_builtins.str]] = None,
                 fields: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureCodeTableFieldArgs', 'ArchitectureCodeTableFieldArgsDict']]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ArchitectureCodeTableArgs.__new__(ArchitectureCodeTableArgs)

            if code is None and not opts.urn:
                raise TypeError("Missing required property 'code'")
            __props__.__dict__["code"] = code
            __props__.__dict__["description"] = description
            if directory_id is None and not opts.urn:
                raise TypeError("Missing required property 'directory_id'")
            __props__.__dict__["directory_id"] = directory_id
            if fields is None and not opts.urn:
                raise TypeError("Missing required property 'fields'")
            __props__.__dict__["fields"] = fields
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            if workspace_id is None and not opts.urn:
                raise TypeError("Missing required property 'workspace_id'")
            __props__.__dict__["workspace_id"] = workspace_id
            __props__.__dict__["created_at"] = None
            __props__.__dict__["created_by"] = None
            __props__.__dict__["directory_path"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["updated_at"] = None
        super(ArchitectureCodeTable, __self__).__init__(
            'huaweicloud:DataArtsStudio/architectureCodeTable:ArchitectureCodeTable',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            code: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            created_by: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            directory_id: Optional[pulumi.Input[_builtins.str]] = None,
            directory_path: Optional[pulumi.Input[_builtins.str]] = None,
            fields: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureCodeTableFieldArgs', 'ArchitectureCodeTableFieldArgsDict']]]]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            workspace_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'ArchitectureCodeTable':
        """
        Get an existing ArchitectureCodeTable resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] code: Specifies the code of a field.
        :param pulumi.Input[_builtins.str] created_at: The time when the code table was created.
        :param pulumi.Input[_builtins.str] created_by: The user who created the code table.
        :param pulumi.Input[_builtins.str] description: Specifies the description of a field.
        :param pulumi.Input[_builtins.str] directory_id: Specifies the directory ID of the code table.
        :param pulumi.Input[_builtins.str] directory_path: The directory path of the code table.
        :param pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureCodeTableFieldArgs', 'ArchitectureCodeTableFieldArgsDict']]]] fields: Specifies the fields information of the code table.
               The fields structure is documented below.
        :param pulumi.Input[_builtins.str] name: Specifies the name of a field.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: The status of the code table. Valid values are: **DRAFT**, **PUBLISH_DEVELOPING**,
               **PUBLISHED**, **OFFLINE_DEVELOPING**, **OFFLINE** and **REJECT**.
        :param pulumi.Input[_builtins.str] updated_at: The time when the code table was updated.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the ID of DataArts Studio workspace.
               Changing this parameter creates a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ArchitectureCodeTableState.__new__(_ArchitectureCodeTableState)

        __props__.__dict__["code"] = code
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["created_by"] = created_by
        __props__.__dict__["description"] = description
        __props__.__dict__["directory_id"] = directory_id
        __props__.__dict__["directory_path"] = directory_path
        __props__.__dict__["fields"] = fields
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["status"] = status
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["workspace_id"] = workspace_id
        return ArchitectureCodeTable(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def code(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the code of a field.
        """
        return pulumi.get(self, "code")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The time when the code table was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> pulumi.Output[_builtins.str]:
        """
        The user who created the code table.
        """
        return pulumi.get(self, "created_by")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the description of a field.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="directoryId")
    def directory_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the directory ID of the code table.
        """
        return pulumi.get(self, "directory_id")

    @_builtins.property
    @pulumi.getter(name="directoryPath")
    def directory_path(self) -> pulumi.Output[_builtins.str]:
        """
        The directory path of the code table.
        """
        return pulumi.get(self, "directory_path")

    @_builtins.property
    @pulumi.getter
    def fields(self) -> pulumi.Output[Sequence['outputs.ArchitectureCodeTableField']]:
        """
        Specifies the fields information of the code table.
        The fields structure is documented below.
        """
        return pulumi.get(self, "fields")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of a field.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The status of the code table. Valid values are: **DRAFT**, **PUBLISH_DEVELOPING**,
        **PUBLISHED**, **OFFLINE_DEVELOPING**, **OFFLINE** and **REJECT**.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The time when the code table was updated.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of DataArts Studio workspace.
        Changing this parameter creates a new resource.
        """
        return pulumi.get(self, "workspace_id")

