# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ArchitectureDataStandardArgs', 'ArchitectureDataStandard']

@pulumi.input_type
class ArchitectureDataStandardArgs:
    def __init__(__self__, *,
                 directory_id: pulumi.Input[_builtins.str],
                 values: pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardValueArgs']]],
                 workspace_id: pulumi.Input[_builtins.str],
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a ArchitectureDataStandard resource.
        :param pulumi.Input[_builtins.str] directory_id: Specifies the directory ID that the data standard belongs to.
        :param pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardValueArgs']]] values: Specifies the value of data standard attributes.
               The values structure is documented below.
               
               <a name="DataStandard_Value"></a>
               The `values` block supports:
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the workspace ID of DataArts Architecture. Changing this parameter will
               create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "directory_id", directory_id)
        pulumi.set(__self__, "values", values)
        pulumi.set(__self__, "workspace_id", workspace_id)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="directoryId")
    def directory_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the directory ID that the data standard belongs to.
        """
        return pulumi.get(self, "directory_id")

    @directory_id.setter
    def directory_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "directory_id", value)

    @_builtins.property
    @pulumi.getter
    def values(self) -> pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardValueArgs']]]:
        """
        Specifies the value of data standard attributes.
        The values structure is documented below.

        <a name="DataStandard_Value"></a>
        The `values` block supports:
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardValueArgs']]]):
        pulumi.set(self, "values", value)

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the workspace ID of DataArts Architecture. Changing this parameter will
        create a new resource.
        """
        return pulumi.get(self, "workspace_id")

    @workspace_id.setter
    def workspace_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "workspace_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _ArchitectureDataStandardState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 created_by: Optional[pulumi.Input[_builtins.str]] = None,
                 directory_id: Optional[pulumi.Input[_builtins.str]] = None,
                 directory_path: Optional[pulumi.Input[_builtins.str]] = None,
                 new_bizs: Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardNewBizArgs']]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_by: Optional[pulumi.Input[_builtins.str]] = None,
                 values: Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardValueArgs']]]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering ArchitectureDataStandard resources.
        :param pulumi.Input[_builtins.str] created_at: Indicates the creation time of the data standard.
        :param pulumi.Input[_builtins.str] created_by: Indicates the creation time of the new biz.
        :param pulumi.Input[_builtins.str] directory_id: Specifies the directory ID that the data standard belongs to.
        :param pulumi.Input[_builtins.str] directory_path: Indicates the path of the directory.
        :param pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardNewBizArgs']]] new_bizs: Specifies the biz info of manager.
               The new_biz structure is documented below.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: Indicates the status of the new biz.
        :param pulumi.Input[_builtins.str] updated_at: Indicates the latest update time of the new biz.
        :param pulumi.Input[_builtins.str] updated_by: Indicates the name of updater.
        :param pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardValueArgs']]] values: Specifies the value of data standard attributes.
               The values structure is documented below.
               
               <a name="DataStandard_Value"></a>
               The `values` block supports:
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the workspace ID of DataArts Architecture. Changing this parameter will
               create a new resource.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_by is not None:
            pulumi.set(__self__, "created_by", created_by)
        if directory_id is not None:
            pulumi.set(__self__, "directory_id", directory_id)
        if directory_path is not None:
            pulumi.set(__self__, "directory_path", directory_path)
        if new_bizs is not None:
            pulumi.set(__self__, "new_bizs", new_bizs)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if updated_by is not None:
            pulumi.set(__self__, "updated_by", updated_by)
        if values is not None:
            pulumi.set(__self__, "values", values)
        if workspace_id is not None:
            pulumi.set(__self__, "workspace_id", workspace_id)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the creation time of the data standard.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the creation time of the new biz.
        """
        return pulumi.get(self, "created_by")

    @created_by.setter
    def created_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_by", value)

    @_builtins.property
    @pulumi.getter(name="directoryId")
    def directory_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the directory ID that the data standard belongs to.
        """
        return pulumi.get(self, "directory_id")

    @directory_id.setter
    def directory_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "directory_id", value)

    @_builtins.property
    @pulumi.getter(name="directoryPath")
    def directory_path(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the path of the directory.
        """
        return pulumi.get(self, "directory_path")

    @directory_path.setter
    def directory_path(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "directory_path", value)

    @_builtins.property
    @pulumi.getter(name="newBizs")
    def new_bizs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardNewBizArgs']]]]:
        """
        Specifies the biz info of manager.
        The new_biz structure is documented below.
        """
        return pulumi.get(self, "new_bizs")

    @new_bizs.setter
    def new_bizs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardNewBizArgs']]]]):
        pulumi.set(self, "new_bizs", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the status of the new biz.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the latest update time of the new biz.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the name of updater.
        """
        return pulumi.get(self, "updated_by")

    @updated_by.setter
    def updated_by(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_by", value)

    @_builtins.property
    @pulumi.getter
    def values(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardValueArgs']]]]:
        """
        Specifies the value of data standard attributes.
        The values structure is documented below.

        <a name="DataStandard_Value"></a>
        The `values` block supports:
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ArchitectureDataStandardValueArgs']]]]):
        pulumi.set(self, "values", value)

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the workspace ID of DataArts Architecture. Changing this parameter will
        create a new resource.
        """
        return pulumi.get(self, "workspace_id")

    @workspace_id.setter
    def workspace_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "workspace_id", value)


@pulumi.type_token("huaweicloud:DataArtsStudio/architectureDataStandard:ArchitectureDataStandard")
class ArchitectureDataStandard(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 directory_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 values: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureDataStandardValueArgs', 'ArchitectureDataStandardValueArgsDict']]]]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages DataArts Architecture data standard resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        workspace_id = config.require_object("workspaceId")
        directory_id = config.require_object("directoryId")
        test = huaweicloud.dataartsstudio.ArchitectureDataStandard("test",
            workspace_id=workspace_id,
            directory_id=directory_id,
            values=[
                {
                    "fd_name": "nameCh",
                    "fd_value": "test_name",
                },
                {
                    "fd_name": "nameEn",
                    "fd_value": "test_name",
                },
                {
                    "fd_name": "description",
                    "fd_value": "this is a test",
                },
            ])
        ```

        ## Import

        The DataArts Architecture data standard can be imported using the `workspace_id` and `id` separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:DataArtsStudio/architectureDataStandard:ArchitectureDataStandard test <workspace_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] directory_id: Specifies the directory ID that the data standard belongs to.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureDataStandardValueArgs', 'ArchitectureDataStandardValueArgsDict']]]] values: Specifies the value of data standard attributes.
               The values structure is documented below.
               
               <a name="DataStandard_Value"></a>
               The `values` block supports:
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the workspace ID of DataArts Architecture. Changing this parameter will
               create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ArchitectureDataStandardArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages DataArts Architecture data standard resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        workspace_id = config.require_object("workspaceId")
        directory_id = config.require_object("directoryId")
        test = huaweicloud.dataartsstudio.ArchitectureDataStandard("test",
            workspace_id=workspace_id,
            directory_id=directory_id,
            values=[
                {
                    "fd_name": "nameCh",
                    "fd_value": "test_name",
                },
                {
                    "fd_name": "nameEn",
                    "fd_value": "test_name",
                },
                {
                    "fd_name": "description",
                    "fd_value": "this is a test",
                },
            ])
        ```

        ## Import

        The DataArts Architecture data standard can be imported using the `workspace_id` and `id` separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:DataArtsStudio/architectureDataStandard:ArchitectureDataStandard test <workspace_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param ArchitectureDataStandardArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ArchitectureDataStandardArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 directory_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 values: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureDataStandardValueArgs', 'ArchitectureDataStandardValueArgsDict']]]]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ArchitectureDataStandardArgs.__new__(ArchitectureDataStandardArgs)

            if directory_id is None and not opts.urn:
                raise TypeError("Missing required property 'directory_id'")
            __props__.__dict__["directory_id"] = directory_id
            __props__.__dict__["region"] = region
            if values is None and not opts.urn:
                raise TypeError("Missing required property 'values'")
            __props__.__dict__["values"] = values
            if workspace_id is None and not opts.urn:
                raise TypeError("Missing required property 'workspace_id'")
            __props__.__dict__["workspace_id"] = workspace_id
            __props__.__dict__["created_at"] = None
            __props__.__dict__["created_by"] = None
            __props__.__dict__["directory_path"] = None
            __props__.__dict__["new_bizs"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["updated_at"] = None
            __props__.__dict__["updated_by"] = None
        super(ArchitectureDataStandard, __self__).__init__(
            'huaweicloud:DataArtsStudio/architectureDataStandard:ArchitectureDataStandard',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            created_by: Optional[pulumi.Input[_builtins.str]] = None,
            directory_id: Optional[pulumi.Input[_builtins.str]] = None,
            directory_path: Optional[pulumi.Input[_builtins.str]] = None,
            new_bizs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureDataStandardNewBizArgs', 'ArchitectureDataStandardNewBizArgsDict']]]]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            updated_by: Optional[pulumi.Input[_builtins.str]] = None,
            values: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureDataStandardValueArgs', 'ArchitectureDataStandardValueArgsDict']]]]] = None,
            workspace_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'ArchitectureDataStandard':
        """
        Get an existing ArchitectureDataStandard resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: Indicates the creation time of the data standard.
        :param pulumi.Input[_builtins.str] created_by: Indicates the creation time of the new biz.
        :param pulumi.Input[_builtins.str] directory_id: Specifies the directory ID that the data standard belongs to.
        :param pulumi.Input[_builtins.str] directory_path: Indicates the path of the directory.
        :param pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureDataStandardNewBizArgs', 'ArchitectureDataStandardNewBizArgsDict']]]] new_bizs: Specifies the biz info of manager.
               The new_biz structure is documented below.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: Indicates the status of the new biz.
        :param pulumi.Input[_builtins.str] updated_at: Indicates the latest update time of the new biz.
        :param pulumi.Input[_builtins.str] updated_by: Indicates the name of updater.
        :param pulumi.Input[Sequence[pulumi.Input[Union['ArchitectureDataStandardValueArgs', 'ArchitectureDataStandardValueArgsDict']]]] values: Specifies the value of data standard attributes.
               The values structure is documented below.
               
               <a name="DataStandard_Value"></a>
               The `values` block supports:
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the workspace ID of DataArts Architecture. Changing this parameter will
               create a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ArchitectureDataStandardState.__new__(_ArchitectureDataStandardState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["created_by"] = created_by
        __props__.__dict__["directory_id"] = directory_id
        __props__.__dict__["directory_path"] = directory_path
        __props__.__dict__["new_bizs"] = new_bizs
        __props__.__dict__["region"] = region
        __props__.__dict__["status"] = status
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["updated_by"] = updated_by
        __props__.__dict__["values"] = values
        __props__.__dict__["workspace_id"] = workspace_id
        return ArchitectureDataStandard(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the creation time of the data standard.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the creation time of the new biz.
        """
        return pulumi.get(self, "created_by")

    @_builtins.property
    @pulumi.getter(name="directoryId")
    def directory_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the directory ID that the data standard belongs to.
        """
        return pulumi.get(self, "directory_id")

    @_builtins.property
    @pulumi.getter(name="directoryPath")
    def directory_path(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the path of the directory.
        """
        return pulumi.get(self, "directory_path")

    @_builtins.property
    @pulumi.getter(name="newBizs")
    def new_bizs(self) -> pulumi.Output[Sequence['outputs.ArchitectureDataStandardNewBiz']]:
        """
        Specifies the biz info of manager.
        The new_biz structure is documented below.
        """
        return pulumi.get(self, "new_bizs")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the status of the new biz.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the latest update time of the new biz.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter(name="updatedBy")
    def updated_by(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the name of updater.
        """
        return pulumi.get(self, "updated_by")

    @_builtins.property
    @pulumi.getter
    def values(self) -> pulumi.Output[Sequence['outputs.ArchitectureDataStandardValue']]:
        """
        Specifies the value of data standard attributes.
        The values structure is documented below.

        <a name="DataStandard_Value"></a>
        The `values` block supports:
        """
        return pulumi.get(self, "values")

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the workspace ID of DataArts Architecture. Changing this parameter will
        create a new resource.
        """
        return pulumi.get(self, "workspace_id")

