# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['ArchitectureReviewerArgs', 'ArchitectureReviewer']

@pulumi.input_type
class ArchitectureReviewerArgs:
    def __init__(__self__, *,
                 user_id: pulumi.Input[_builtins.str],
                 user_name: pulumi.Input[_builtins.str],
                 workspace_id: pulumi.Input[_builtins.str],
                 email: Optional[pulumi.Input[_builtins.str]] = None,
                 phone_number: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a ArchitectureReviewer resource.
        :param pulumi.Input[_builtins.str] user_id: Specifies the user ID of the architecture reviewer.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] user_name: Specifies the user name of the architecture reviewer.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the workspace ID to which the architecture reviewer belongs.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] email: Specifies the email of the architecture reviewer.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] phone_number: Specifies the phone number of the architecture reviewer.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the architecture reviewer resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "user_id", user_id)
        pulumi.set(__self__, "user_name", user_name)
        pulumi.set(__self__, "workspace_id", workspace_id)
        if email is not None:
            pulumi.set(__self__, "email", email)
        if phone_number is not None:
            pulumi.set(__self__, "phone_number", phone_number)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="userId")
    def user_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the user ID of the architecture reviewer.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "user_id")

    @user_id.setter
    def user_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "user_id", value)

    @_builtins.property
    @pulumi.getter(name="userName")
    def user_name(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the user name of the architecture reviewer.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "user_name")

    @user_name.setter
    def user_name(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "user_name", value)

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the workspace ID to which the architecture reviewer belongs.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "workspace_id")

    @workspace_id.setter
    def workspace_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "workspace_id", value)

    @_builtins.property
    @pulumi.getter
    def email(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the email of the architecture reviewer.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "email")

    @email.setter
    def email(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "email", value)

    @_builtins.property
    @pulumi.getter(name="phoneNumber")
    def phone_number(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the phone number of the architecture reviewer.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "phone_number")

    @phone_number.setter
    def phone_number(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "phone_number", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the architecture reviewer resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _ArchitectureReviewerState:
    def __init__(__self__, *,
                 email: Optional[pulumi.Input[_builtins.str]] = None,
                 phone_number: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 reviewer_id: Optional[pulumi.Input[_builtins.str]] = None,
                 user_id: Optional[pulumi.Input[_builtins.str]] = None,
                 user_name: Optional[pulumi.Input[_builtins.str]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering ArchitectureReviewer resources.
        :param pulumi.Input[_builtins.str] email: Specifies the email of the architecture reviewer.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] phone_number: Specifies the phone number of the architecture reviewer.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the architecture reviewer resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] reviewer_id: The ID of the reviewer.
        :param pulumi.Input[_builtins.str] user_id: Specifies the user ID of the architecture reviewer.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] user_name: Specifies the user name of the architecture reviewer.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the workspace ID to which the architecture reviewer belongs.
               Changing this parameter will create a new resource.
        """
        if email is not None:
            pulumi.set(__self__, "email", email)
        if phone_number is not None:
            pulumi.set(__self__, "phone_number", phone_number)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if reviewer_id is not None:
            pulumi.set(__self__, "reviewer_id", reviewer_id)
        if user_id is not None:
            pulumi.set(__self__, "user_id", user_id)
        if user_name is not None:
            pulumi.set(__self__, "user_name", user_name)
        if workspace_id is not None:
            pulumi.set(__self__, "workspace_id", workspace_id)

    @_builtins.property
    @pulumi.getter
    def email(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the email of the architecture reviewer.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "email")

    @email.setter
    def email(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "email", value)

    @_builtins.property
    @pulumi.getter(name="phoneNumber")
    def phone_number(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the phone number of the architecture reviewer.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "phone_number")

    @phone_number.setter
    def phone_number(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "phone_number", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the architecture reviewer resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="reviewerId")
    def reviewer_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the reviewer.
        """
        return pulumi.get(self, "reviewer_id")

    @reviewer_id.setter
    def reviewer_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "reviewer_id", value)

    @_builtins.property
    @pulumi.getter(name="userId")
    def user_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the user ID of the architecture reviewer.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "user_id")

    @user_id.setter
    def user_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "user_id", value)

    @_builtins.property
    @pulumi.getter(name="userName")
    def user_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the user name of the architecture reviewer.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "user_name")

    @user_name.setter
    def user_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "user_name", value)

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the workspace ID to which the architecture reviewer belongs.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "workspace_id")

    @workspace_id.setter
    def workspace_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "workspace_id", value)


@pulumi.type_token("huaweicloud:DataArtsStudio/architectureReviewer:ArchitectureReviewer")
class ArchitectureReviewer(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 email: Optional[pulumi.Input[_builtins.str]] = None,
                 phone_number: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 user_id: Optional[pulumi.Input[_builtins.str]] = None,
                 user_name: Optional[pulumi.Input[_builtins.str]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages DataArts Studio architecture reviewer resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        workspace_id = config.require_object("workspaceId")
        user_name = config.require_object("userName")
        user_id = config.require_object("userId")
        email = config.require_object("email")
        phone_number = config.require_object("phoneNumber")
        test = huaweicloud.dataartsstudio.ArchitectureReviewer("test",
            workspace_id=workspace_id,
            user_name=user_name,
            user_id=user_id,
            email=email,
            phone_number=phone_number)
        ```

        ## Import

        The DataArts architecture reviewer can be imported using the `workspace_id` and `user_name` separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:DataArtsStudio/architectureReviewer:ArchitectureReviewer test <workspace_id>/<user_name>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason.

        The missing attributes include: `email` and `phone_number`.

        It is generally recommended running `pulumi preview` after importing a reviewer.

        You can then decide if changes should be applied to the reviewer, or the resource definition should be updated to

        align with the reviewer. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_dataarts_architecture_reviewer" "test"{

            ...

          lifecycle {

            ignore_changes = [
            
              email, phone_number,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] email: Specifies the email of the architecture reviewer.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] phone_number: Specifies the phone number of the architecture reviewer.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the architecture reviewer resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] user_id: Specifies the user ID of the architecture reviewer.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] user_name: Specifies the user name of the architecture reviewer.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the workspace ID to which the architecture reviewer belongs.
               Changing this parameter will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ArchitectureReviewerArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages DataArts Studio architecture reviewer resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        workspace_id = config.require_object("workspaceId")
        user_name = config.require_object("userName")
        user_id = config.require_object("userId")
        email = config.require_object("email")
        phone_number = config.require_object("phoneNumber")
        test = huaweicloud.dataartsstudio.ArchitectureReviewer("test",
            workspace_id=workspace_id,
            user_name=user_name,
            user_id=user_id,
            email=email,
            phone_number=phone_number)
        ```

        ## Import

        The DataArts architecture reviewer can be imported using the `workspace_id` and `user_name` separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:DataArtsStudio/architectureReviewer:ArchitectureReviewer test <workspace_id>/<user_name>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason.

        The missing attributes include: `email` and `phone_number`.

        It is generally recommended running `pulumi preview` after importing a reviewer.

        You can then decide if changes should be applied to the reviewer, or the resource definition should be updated to

        align with the reviewer. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_dataarts_architecture_reviewer" "test"{

            ...

          lifecycle {

            ignore_changes = [
            
              email, phone_number,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param ArchitectureReviewerArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ArchitectureReviewerArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 email: Optional[pulumi.Input[_builtins.str]] = None,
                 phone_number: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 user_id: Optional[pulumi.Input[_builtins.str]] = None,
                 user_name: Optional[pulumi.Input[_builtins.str]] = None,
                 workspace_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ArchitectureReviewerArgs.__new__(ArchitectureReviewerArgs)

            __props__.__dict__["email"] = email
            __props__.__dict__["phone_number"] = phone_number
            __props__.__dict__["region"] = region
            if user_id is None and not opts.urn:
                raise TypeError("Missing required property 'user_id'")
            __props__.__dict__["user_id"] = user_id
            if user_name is None and not opts.urn:
                raise TypeError("Missing required property 'user_name'")
            __props__.__dict__["user_name"] = user_name
            if workspace_id is None and not opts.urn:
                raise TypeError("Missing required property 'workspace_id'")
            __props__.__dict__["workspace_id"] = workspace_id
            __props__.__dict__["reviewer_id"] = None
        super(ArchitectureReviewer, __self__).__init__(
            'huaweicloud:DataArtsStudio/architectureReviewer:ArchitectureReviewer',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            email: Optional[pulumi.Input[_builtins.str]] = None,
            phone_number: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            reviewer_id: Optional[pulumi.Input[_builtins.str]] = None,
            user_id: Optional[pulumi.Input[_builtins.str]] = None,
            user_name: Optional[pulumi.Input[_builtins.str]] = None,
            workspace_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'ArchitectureReviewer':
        """
        Get an existing ArchitectureReviewer resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] email: Specifies the email of the architecture reviewer.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] phone_number: Specifies the phone number of the architecture reviewer.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the architecture reviewer resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] reviewer_id: The ID of the reviewer.
        :param pulumi.Input[_builtins.str] user_id: Specifies the user ID of the architecture reviewer.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] user_name: Specifies the user name of the architecture reviewer.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] workspace_id: Specifies the workspace ID to which the architecture reviewer belongs.
               Changing this parameter will create a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ArchitectureReviewerState.__new__(_ArchitectureReviewerState)

        __props__.__dict__["email"] = email
        __props__.__dict__["phone_number"] = phone_number
        __props__.__dict__["region"] = region
        __props__.__dict__["reviewer_id"] = reviewer_id
        __props__.__dict__["user_id"] = user_id
        __props__.__dict__["user_name"] = user_name
        __props__.__dict__["workspace_id"] = workspace_id
        return ArchitectureReviewer(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def email(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the email of the architecture reviewer.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter(name="phoneNumber")
    def phone_number(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the phone number of the architecture reviewer.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "phone_number")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the architecture reviewer resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="reviewerId")
    def reviewer_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the reviewer.
        """
        return pulumi.get(self, "reviewer_id")

    @_builtins.property
    @pulumi.getter(name="userId")
    def user_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the user ID of the architecture reviewer.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "user_id")

    @_builtins.property
    @pulumi.getter(name="userName")
    def user_name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the user name of the architecture reviewer.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "user_name")

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the workspace ID to which the architecture reviewer belongs.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "workspace_id")

