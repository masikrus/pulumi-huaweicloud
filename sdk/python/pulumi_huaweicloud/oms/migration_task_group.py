# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['MigrationTaskGroupArgs', 'MigrationTaskGroup']

@pulumi.input_type
class MigrationTaskGroupArgs:
    def __init__(__self__, *,
                 destination_object: pulumi.Input['MigrationTaskGroupDestinationObjectArgs'],
                 source_object: pulumi.Input['MigrationTaskGroupSourceObjectArgs'],
                 type: pulumi.Input[_builtins.str],
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth_policies: Optional[pulumi.Input[Sequence[pulumi.Input['MigrationTaskGroupBandwidthPolicyArgs']]]] = None,
                 consistency_check: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 dst_storage_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_failed_object_recording: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_kms: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_metadata_migration: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_requester_pays: Optional[pulumi.Input[_builtins.bool]] = None,
                 migrate_since: Optional[pulumi.Input[_builtins.str]] = None,
                 object_overwrite_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 source_cdn: Optional[pulumi.Input['MigrationTaskGroupSourceCdnArgs']] = None):
        """
        The set of arguments for constructing a MigrationTaskGroup resource.
        :param pulumi.Input['MigrationTaskGroupDestinationObjectArgs'] destination_object: Specifies the destination information.
               The object structure is documented below. Changing this creates a new resource.
        :param pulumi.Input['MigrationTaskGroupSourceObjectArgs'] source_object: Specifies the source information. The object
               structure is documented below. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] type: Specifies the task group type. The value can be:
               + **LIST**: indicates that the system will migrate the objects specified in the object list.
               + **URL_LIST**: indicates that the system will migrate the objects specified in the URL list.
               + **PREFIX**: indicates that the system will migrate the objects with a specific prefix.
               
               The default value is **PREFIX**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] action: Specifies the action for migration task group. Value options are as follows:
               + **retry**: Restart a failed migration task group. This will migrate all objects in the failed tasks again.
               + **start**: Resume a paused migration task group.
               + **stop**:  Pause a migration task group when it is being monitored.
               
               > **NOTE:** The usage of `action` has some limitations. Only creation failed task groups can be retried
               and only paused task groups can be started and only monitoring task groups can be stopped.
        :param pulumi.Input[Sequence[pulumi.Input['MigrationTaskGroupBandwidthPolicyArgs']]] bandwidth_policies: Specifies the traffic limit rules. Each element in the array
               corresponds to the maximum bandwidth of a time segment. A maximum of 5 time segments are allowed, and the time
               segments must not overlap. The object structure is documented below.
        :param pulumi.Input[_builtins.str] consistency_check: Specifies the consistency check method, which is used to check
               whether objects are consistent before and after migration. All check methods take effect for only objects that are
               in the same encryption status in the source and destination buckets. The check method and results will be recorded
               in the object list. Value options are as follows:
               
               + **size_last_modified**: the system checks object consistency with object size and last modification time.
               If a source object is as large as but was last modified earlier than its paired destination object, the system
               considers the source object does not need to be migrated or has been already migrated successfully.
               
               + **crc64**: this option is only available for migration on Huawei Cloud or from Alibaba Cloud or Tencent Cloud. If
               a source object and its paired destination object have CRC64 checksums, the checksums are checked. Otherwise, their
               sizes and last modification times are checked.
               
               + **no_check**: this option is only available for migration of HTTP/HTTPS data. This option takes effect for source
               objects whose sizes cannot be obtained using the content-length field in the standard HTTP protocol. These source
               objects will overwrite their paired destination objects directly.
               If the size of a source object can be obtained, its size and last modification time will be checked.
               
               The default value is **size_last_modified**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the task group. The message cannot
               exceed 255 characters. The following special characters are not allowed: ^<>&"'.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] dst_storage_policy: Specifies the destination storage class.
               This parameter is required only when the destination is Huawei Cloud OBS. The default value is STANDARD.
               + **STANDARD**: OBS Standard storage.
               + **IA**: OBS Infrequent Access storage.
               + **ARCHIVE**: OBS Archive storage
               + **DEEP_ARCHIVE**: OBS Deep Archive storage
               + **SRC_STORAGE_MAPPING**: converts the source storage class into an OBS storage class based on the predefined rules.
               Changing this creates a new resource.
               
               <a name="source_object_object"></a>
               The `source_object` block supports:
        :param pulumi.Input[_builtins.bool] enable_failed_object_recording: Specifies whether to record failed objects.
               Default value: **true**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_kms: Specifies whether to enable the KMS encryption function.
               Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_metadata_migration: Specifies whether metadata migration is enabled. Even if this
               function is disabled, the ContentType metadata will still be migrated to ensure a successful migration.
               Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_requester_pays: Specifies whether to let the requester make payment.
               After enabled, the requester pays the request and data transmission fees.
               Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] migrate_since: Specifies a time in format **yyyy-MM-dd HH:mm:ss**,
               e.g. **2006-01-02 15:04:05**. The system migrates only the objects that are modified after the specified time.
               No time is specified by default. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] object_overwrite_mode: Specifies whether to skip a source object or allow the source
               object to overwrite its paired destination object. Value options are as follows:
               
               + **NO_OVERWRITE**: indicates the system never allows override. The system always skips source objects and keeps
               their paired destination objects.
               
               + **SIZE_LAST_MODIFIED_COMPARISON_OVERWRITE**: indicates the system allows override based on the results of size or
               modification time checks. If a source object is not as large as or was last modified more recently than its paired
               destination object, the source object will overwrite the destination object. Otherwise, the source object will be
               skipped.
               
               + **CRC64_COMPARISON_OVERWRITE**: indicates the system allows override if the source and destination objects have
               different CRC64 checksums. This option is only available for migration on Huawei Cloud or from Alibaba Cloud or
               Tencent Cloud. If a source object has a CRC64 checksum different from the paired destination object, the source
               object will overwrite the destination object. Otherwise, the source object will be skipped.
               If any of them doesn't have a CRC64 checksum, their sizes and last modification times are checked.
               
               + **FULL_OVERWRITE**: indicates the system always allows override. The system always allows source objects to
               overwrite their paired destination objects.
               
               The default value is **SIZE_LAST_MODIFIED_COMPARISON_OVERWRITE**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the destination bucket is located.
               The value must be the same as that of the service endpoint. Changing this creates a new resource.
        :param pulumi.Input['MigrationTaskGroupSourceCdnArgs'] source_cdn: Specifies the CDN information. If this parameter is contained,
               using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
               name during migration. The object structure is documented below.
               Changing this creates a new resource.
        """
        pulumi.set(__self__, "destination_object", destination_object)
        pulumi.set(__self__, "source_object", source_object)
        pulumi.set(__self__, "type", type)
        if action is not None:
            pulumi.set(__self__, "action", action)
        if bandwidth_policies is not None:
            pulumi.set(__self__, "bandwidth_policies", bandwidth_policies)
        if consistency_check is not None:
            pulumi.set(__self__, "consistency_check", consistency_check)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if dst_storage_policy is not None:
            pulumi.set(__self__, "dst_storage_policy", dst_storage_policy)
        if enable_failed_object_recording is not None:
            pulumi.set(__self__, "enable_failed_object_recording", enable_failed_object_recording)
        if enable_kms is not None:
            pulumi.set(__self__, "enable_kms", enable_kms)
        if enable_metadata_migration is not None:
            pulumi.set(__self__, "enable_metadata_migration", enable_metadata_migration)
        if enable_requester_pays is not None:
            pulumi.set(__self__, "enable_requester_pays", enable_requester_pays)
        if migrate_since is not None:
            pulumi.set(__self__, "migrate_since", migrate_since)
        if object_overwrite_mode is not None:
            pulumi.set(__self__, "object_overwrite_mode", object_overwrite_mode)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if source_cdn is not None:
            pulumi.set(__self__, "source_cdn", source_cdn)

    @_builtins.property
    @pulumi.getter(name="destinationObject")
    def destination_object(self) -> pulumi.Input['MigrationTaskGroupDestinationObjectArgs']:
        """
        Specifies the destination information.
        The object structure is documented below. Changing this creates a new resource.
        """
        return pulumi.get(self, "destination_object")

    @destination_object.setter
    def destination_object(self, value: pulumi.Input['MigrationTaskGroupDestinationObjectArgs']):
        pulumi.set(self, "destination_object", value)

    @_builtins.property
    @pulumi.getter(name="sourceObject")
    def source_object(self) -> pulumi.Input['MigrationTaskGroupSourceObjectArgs']:
        """
        Specifies the source information. The object
        structure is documented below. Changing this creates a new resource.
        """
        return pulumi.get(self, "source_object")

    @source_object.setter
    def source_object(self, value: pulumi.Input['MigrationTaskGroupSourceObjectArgs']):
        pulumi.set(self, "source_object", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the task group type. The value can be:
        + **LIST**: indicates that the system will migrate the objects specified in the object list.
        + **URL_LIST**: indicates that the system will migrate the objects specified in the URL list.
        + **PREFIX**: indicates that the system will migrate the objects with a specific prefix.

        The default value is **PREFIX**. Changing this creates a new resource.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter
    def action(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the action for migration task group. Value options are as follows:
        + **retry**: Restart a failed migration task group. This will migrate all objects in the failed tasks again.
        + **start**: Resume a paused migration task group.
        + **stop**:  Pause a migration task group when it is being monitored.

        > **NOTE:** The usage of `action` has some limitations. Only creation failed task groups can be retried
        and only paused task groups can be started and only monitoring task groups can be stopped.
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "action", value)

    @_builtins.property
    @pulumi.getter(name="bandwidthPolicies")
    def bandwidth_policies(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['MigrationTaskGroupBandwidthPolicyArgs']]]]:
        """
        Specifies the traffic limit rules. Each element in the array
        corresponds to the maximum bandwidth of a time segment. A maximum of 5 time segments are allowed, and the time
        segments must not overlap. The object structure is documented below.
        """
        return pulumi.get(self, "bandwidth_policies")

    @bandwidth_policies.setter
    def bandwidth_policies(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['MigrationTaskGroupBandwidthPolicyArgs']]]]):
        pulumi.set(self, "bandwidth_policies", value)

    @_builtins.property
    @pulumi.getter(name="consistencyCheck")
    def consistency_check(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the consistency check method, which is used to check
        whether objects are consistent before and after migration. All check methods take effect for only objects that are
        in the same encryption status in the source and destination buckets. The check method and results will be recorded
        in the object list. Value options are as follows:

        + **size_last_modified**: the system checks object consistency with object size and last modification time.
        If a source object is as large as but was last modified earlier than its paired destination object, the system
        considers the source object does not need to be migrated or has been already migrated successfully.

        + **crc64**: this option is only available for migration on Huawei Cloud or from Alibaba Cloud or Tencent Cloud. If
        a source object and its paired destination object have CRC64 checksums, the checksums are checked. Otherwise, their
        sizes and last modification times are checked.

        + **no_check**: this option is only available for migration of HTTP/HTTPS data. This option takes effect for source
        objects whose sizes cannot be obtained using the content-length field in the standard HTTP protocol. These source
        objects will overwrite their paired destination objects directly.
        If the size of a source object can be obtained, its size and last modification time will be checked.

        The default value is **size_last_modified**. Changing this creates a new resource.
        """
        return pulumi.get(self, "consistency_check")

    @consistency_check.setter
    def consistency_check(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "consistency_check", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the task group. The message cannot
        exceed 255 characters. The following special characters are not allowed: ^<>&"'.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="dstStoragePolicy")
    def dst_storage_policy(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the destination storage class.
        This parameter is required only when the destination is Huawei Cloud OBS. The default value is STANDARD.
        + **STANDARD**: OBS Standard storage.
        + **IA**: OBS Infrequent Access storage.
        + **ARCHIVE**: OBS Archive storage
        + **DEEP_ARCHIVE**: OBS Deep Archive storage
        + **SRC_STORAGE_MAPPING**: converts the source storage class into an OBS storage class based on the predefined rules.
        Changing this creates a new resource.

        <a name="source_object_object"></a>
        The `source_object` block supports:
        """
        return pulumi.get(self, "dst_storage_policy")

    @dst_storage_policy.setter
    def dst_storage_policy(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dst_storage_policy", value)

    @_builtins.property
    @pulumi.getter(name="enableFailedObjectRecording")
    def enable_failed_object_recording(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to record failed objects.
        Default value: **true**. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_failed_object_recording")

    @enable_failed_object_recording.setter
    def enable_failed_object_recording(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_failed_object_recording", value)

    @_builtins.property
    @pulumi.getter(name="enableKms")
    def enable_kms(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to enable the KMS encryption function.
        Default value: **false**. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_kms")

    @enable_kms.setter
    def enable_kms(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_kms", value)

    @_builtins.property
    @pulumi.getter(name="enableMetadataMigration")
    def enable_metadata_migration(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether metadata migration is enabled. Even if this
        function is disabled, the ContentType metadata will still be migrated to ensure a successful migration.
        Default value: **false**. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_metadata_migration")

    @enable_metadata_migration.setter
    def enable_metadata_migration(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_metadata_migration", value)

    @_builtins.property
    @pulumi.getter(name="enableRequesterPays")
    def enable_requester_pays(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to let the requester make payment.
        After enabled, the requester pays the request and data transmission fees.
        Default value: **false**. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_requester_pays")

    @enable_requester_pays.setter
    def enable_requester_pays(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_requester_pays", value)

    @_builtins.property
    @pulumi.getter(name="migrateSince")
    def migrate_since(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies a time in format **yyyy-MM-dd HH:mm:ss**,
        e.g. **2006-01-02 15:04:05**. The system migrates only the objects that are modified after the specified time.
        No time is specified by default. Changing this creates a new resource.
        """
        return pulumi.get(self, "migrate_since")

    @migrate_since.setter
    def migrate_since(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "migrate_since", value)

    @_builtins.property
    @pulumi.getter(name="objectOverwriteMode")
    def object_overwrite_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies whether to skip a source object or allow the source
        object to overwrite its paired destination object. Value options are as follows:

        + **NO_OVERWRITE**: indicates the system never allows override. The system always skips source objects and keeps
        their paired destination objects.

        + **SIZE_LAST_MODIFIED_COMPARISON_OVERWRITE**: indicates the system allows override based on the results of size or
        modification time checks. If a source object is not as large as or was last modified more recently than its paired
        destination object, the source object will overwrite the destination object. Otherwise, the source object will be
        skipped.

        + **CRC64_COMPARISON_OVERWRITE**: indicates the system allows override if the source and destination objects have
        different CRC64 checksums. This option is only available for migration on Huawei Cloud or from Alibaba Cloud or
        Tencent Cloud. If a source object has a CRC64 checksum different from the paired destination object, the source
        object will overwrite the destination object. Otherwise, the source object will be skipped.
        If any of them doesn't have a CRC64 checksum, their sizes and last modification times are checked.

        + **FULL_OVERWRITE**: indicates the system always allows override. The system always allows source objects to
        overwrite their paired destination objects.

        The default value is **SIZE_LAST_MODIFIED_COMPARISON_OVERWRITE**. Changing this creates a new resource.
        """
        return pulumi.get(self, "object_overwrite_mode")

    @object_overwrite_mode.setter
    def object_overwrite_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "object_overwrite_mode", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the destination bucket is located.
        The value must be the same as that of the service endpoint. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="sourceCdn")
    def source_cdn(self) -> Optional[pulumi.Input['MigrationTaskGroupSourceCdnArgs']]:
        """
        Specifies the CDN information. If this parameter is contained,
        using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
        name during migration. The object structure is documented below.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "source_cdn")

    @source_cdn.setter
    def source_cdn(self, value: Optional[pulumi.Input['MigrationTaskGroupSourceCdnArgs']]):
        pulumi.set(self, "source_cdn", value)


@pulumi.input_type
class _MigrationTaskGroupState:
    def __init__(__self__, *,
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth_policies: Optional[pulumi.Input[Sequence[pulumi.Input['MigrationTaskGroupBandwidthPolicyArgs']]]] = None,
                 complete_size: Optional[pulumi.Input[_builtins.int]] = None,
                 consistency_check: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 destination_object: Optional[pulumi.Input['MigrationTaskGroupDestinationObjectArgs']] = None,
                 dst_storage_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_failed_object_recording: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_kms: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_metadata_migration: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_requester_pays: Optional[pulumi.Input[_builtins.bool]] = None,
                 fail_num: Optional[pulumi.Input[_builtins.int]] = None,
                 migrate_since: Optional[pulumi.Input[_builtins.str]] = None,
                 object_overwrite_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 source_cdn: Optional[pulumi.Input['MigrationTaskGroupSourceCdnArgs']] = None,
                 source_object: Optional[pulumi.Input['MigrationTaskGroupSourceObjectArgs']] = None,
                 status: Optional[pulumi.Input[_builtins.int]] = None,
                 success_num: Optional[pulumi.Input[_builtins.int]] = None,
                 total_num: Optional[pulumi.Input[_builtins.int]] = None,
                 total_size: Optional[pulumi.Input[_builtins.int]] = None,
                 total_time: Optional[pulumi.Input[_builtins.int]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering MigrationTaskGroup resources.
        :param pulumi.Input[_builtins.str] action: Specifies the action for migration task group. Value options are as follows:
               + **retry**: Restart a failed migration task group. This will migrate all objects in the failed tasks again.
               + **start**: Resume a paused migration task group.
               + **stop**:  Pause a migration task group when it is being monitored.
               
               > **NOTE:** The usage of `action` has some limitations. Only creation failed task groups can be retried
               and only paused task groups can be started and only monitoring task groups can be stopped.
        :param pulumi.Input[Sequence[pulumi.Input['MigrationTaskGroupBandwidthPolicyArgs']]] bandwidth_policies: Specifies the traffic limit rules. Each element in the array
               corresponds to the maximum bandwidth of a time segment. A maximum of 5 time segments are allowed, and the time
               segments must not overlap. The object structure is documented below.
        :param pulumi.Input[_builtins.int] complete_size: The size (in bytes) of the objects that have been migrated.
        :param pulumi.Input[_builtins.str] consistency_check: Specifies the consistency check method, which is used to check
               whether objects are consistent before and after migration. All check methods take effect for only objects that are
               in the same encryption status in the source and destination buckets. The check method and results will be recorded
               in the object list. Value options are as follows:
               
               + **size_last_modified**: the system checks object consistency with object size and last modification time.
               If a source object is as large as but was last modified earlier than its paired destination object, the system
               considers the source object does not need to be migrated or has been already migrated successfully.
               
               + **crc64**: this option is only available for migration on Huawei Cloud or from Alibaba Cloud or Tencent Cloud. If
               a source object and its paired destination object have CRC64 checksums, the checksums are checked. Otherwise, their
               sizes and last modification times are checked.
               
               + **no_check**: this option is only available for migration of HTTP/HTTPS data. This option takes effect for source
               objects whose sizes cannot be obtained using the content-length field in the standard HTTP protocol. These source
               objects will overwrite their paired destination objects directly.
               If the size of a source object can be obtained, its size and last modification time will be checked.
               
               The default value is **size_last_modified**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the task group. The message cannot
               exceed 255 characters. The following special characters are not allowed: ^<>&"'.
               Changing this creates a new resource.
        :param pulumi.Input['MigrationTaskGroupDestinationObjectArgs'] destination_object: Specifies the destination information.
               The object structure is documented below. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] dst_storage_policy: Specifies the destination storage class.
               This parameter is required only when the destination is Huawei Cloud OBS. The default value is STANDARD.
               + **STANDARD**: OBS Standard storage.
               + **IA**: OBS Infrequent Access storage.
               + **ARCHIVE**: OBS Archive storage
               + **DEEP_ARCHIVE**: OBS Deep Archive storage
               + **SRC_STORAGE_MAPPING**: converts the source storage class into an OBS storage class based on the predefined rules.
               Changing this creates a new resource.
               
               <a name="source_object_object"></a>
               The `source_object` block supports:
        :param pulumi.Input[_builtins.bool] enable_failed_object_recording: Specifies whether to record failed objects.
               Default value: **true**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_kms: Specifies whether to enable the KMS encryption function.
               Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_metadata_migration: Specifies whether metadata migration is enabled. Even if this
               function is disabled, the ContentType metadata will still be migrated to ensure a successful migration.
               Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_requester_pays: Specifies whether to let the requester make payment.
               After enabled, the requester pays the request and data transmission fees.
               Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] fail_num: The number of failed objects.
        :param pulumi.Input[_builtins.str] migrate_since: Specifies a time in format **yyyy-MM-dd HH:mm:ss**,
               e.g. **2006-01-02 15:04:05**. The system migrates only the objects that are modified after the specified time.
               No time is specified by default. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] object_overwrite_mode: Specifies whether to skip a source object or allow the source
               object to overwrite its paired destination object. Value options are as follows:
               
               + **NO_OVERWRITE**: indicates the system never allows override. The system always skips source objects and keeps
               their paired destination objects.
               
               + **SIZE_LAST_MODIFIED_COMPARISON_OVERWRITE**: indicates the system allows override based on the results of size or
               modification time checks. If a source object is not as large as or was last modified more recently than its paired
               destination object, the source object will overwrite the destination object. Otherwise, the source object will be
               skipped.
               
               + **CRC64_COMPARISON_OVERWRITE**: indicates the system allows override if the source and destination objects have
               different CRC64 checksums. This option is only available for migration on Huawei Cloud or from Alibaba Cloud or
               Tencent Cloud. If a source object has a CRC64 checksum different from the paired destination object, the source
               object will overwrite the destination object. Otherwise, the source object will be skipped.
               If any of them doesn't have a CRC64 checksum, their sizes and last modification times are checked.
               
               + **FULL_OVERWRITE**: indicates the system always allows override. The system always allows source objects to
               overwrite their paired destination objects.
               
               The default value is **SIZE_LAST_MODIFIED_COMPARISON_OVERWRITE**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the destination bucket is located.
               The value must be the same as that of the service endpoint. Changing this creates a new resource.
        :param pulumi.Input['MigrationTaskGroupSourceCdnArgs'] source_cdn: Specifies the CDN information. If this parameter is contained,
               using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
               name during migration. The object structure is documented below.
               Changing this creates a new resource.
        :param pulumi.Input['MigrationTaskGroupSourceObjectArgs'] source_object: Specifies the source information. The object
               structure is documented below. Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] status: The migration task group status. The value can be:
               + **0**: Waiting.
               + **1**: Executing/Creating.
               + **2**: Monitoring.
               + **3**: Paused.
               + **4**: Creation failed.
               + **5**: Migration failed.
               + **6**: Migration completed.
               + **7**: Pausing.
               + **8**: Waiting to be deleted.
               + **9**: Deleted.
        :param pulumi.Input[_builtins.int] success_num: The number of migrated objects.
        :param pulumi.Input[_builtins.int] total_num: The total number of objects to be migrated in the migration task group.
        :param pulumi.Input[_builtins.int] total_size: The total size of migrated objects, in bytes.
        :param pulumi.Input[_builtins.int] total_time: The total amount of time used by the migration task group, in ms.
        :param pulumi.Input[_builtins.str] type: Specifies the task group type. The value can be:
               + **LIST**: indicates that the system will migrate the objects specified in the object list.
               + **URL_LIST**: indicates that the system will migrate the objects specified in the URL list.
               + **PREFIX**: indicates that the system will migrate the objects with a specific prefix.
               
               The default value is **PREFIX**. Changing this creates a new resource.
        """
        if action is not None:
            pulumi.set(__self__, "action", action)
        if bandwidth_policies is not None:
            pulumi.set(__self__, "bandwidth_policies", bandwidth_policies)
        if complete_size is not None:
            pulumi.set(__self__, "complete_size", complete_size)
        if consistency_check is not None:
            pulumi.set(__self__, "consistency_check", consistency_check)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if destination_object is not None:
            pulumi.set(__self__, "destination_object", destination_object)
        if dst_storage_policy is not None:
            pulumi.set(__self__, "dst_storage_policy", dst_storage_policy)
        if enable_failed_object_recording is not None:
            pulumi.set(__self__, "enable_failed_object_recording", enable_failed_object_recording)
        if enable_kms is not None:
            pulumi.set(__self__, "enable_kms", enable_kms)
        if enable_metadata_migration is not None:
            pulumi.set(__self__, "enable_metadata_migration", enable_metadata_migration)
        if enable_requester_pays is not None:
            pulumi.set(__self__, "enable_requester_pays", enable_requester_pays)
        if fail_num is not None:
            pulumi.set(__self__, "fail_num", fail_num)
        if migrate_since is not None:
            pulumi.set(__self__, "migrate_since", migrate_since)
        if object_overwrite_mode is not None:
            pulumi.set(__self__, "object_overwrite_mode", object_overwrite_mode)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if source_cdn is not None:
            pulumi.set(__self__, "source_cdn", source_cdn)
        if source_object is not None:
            pulumi.set(__self__, "source_object", source_object)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if success_num is not None:
            pulumi.set(__self__, "success_num", success_num)
        if total_num is not None:
            pulumi.set(__self__, "total_num", total_num)
        if total_size is not None:
            pulumi.set(__self__, "total_size", total_size)
        if total_time is not None:
            pulumi.set(__self__, "total_time", total_time)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def action(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the action for migration task group. Value options are as follows:
        + **retry**: Restart a failed migration task group. This will migrate all objects in the failed tasks again.
        + **start**: Resume a paused migration task group.
        + **stop**:  Pause a migration task group when it is being monitored.

        > **NOTE:** The usage of `action` has some limitations. Only creation failed task groups can be retried
        and only paused task groups can be started and only monitoring task groups can be stopped.
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "action", value)

    @_builtins.property
    @pulumi.getter(name="bandwidthPolicies")
    def bandwidth_policies(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['MigrationTaskGroupBandwidthPolicyArgs']]]]:
        """
        Specifies the traffic limit rules. Each element in the array
        corresponds to the maximum bandwidth of a time segment. A maximum of 5 time segments are allowed, and the time
        segments must not overlap. The object structure is documented below.
        """
        return pulumi.get(self, "bandwidth_policies")

    @bandwidth_policies.setter
    def bandwidth_policies(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['MigrationTaskGroupBandwidthPolicyArgs']]]]):
        pulumi.set(self, "bandwidth_policies", value)

    @_builtins.property
    @pulumi.getter(name="completeSize")
    def complete_size(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The size (in bytes) of the objects that have been migrated.
        """
        return pulumi.get(self, "complete_size")

    @complete_size.setter
    def complete_size(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "complete_size", value)

    @_builtins.property
    @pulumi.getter(name="consistencyCheck")
    def consistency_check(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the consistency check method, which is used to check
        whether objects are consistent before and after migration. All check methods take effect for only objects that are
        in the same encryption status in the source and destination buckets. The check method and results will be recorded
        in the object list. Value options are as follows:

        + **size_last_modified**: the system checks object consistency with object size and last modification time.
        If a source object is as large as but was last modified earlier than its paired destination object, the system
        considers the source object does not need to be migrated or has been already migrated successfully.

        + **crc64**: this option is only available for migration on Huawei Cloud or from Alibaba Cloud or Tencent Cloud. If
        a source object and its paired destination object have CRC64 checksums, the checksums are checked. Otherwise, their
        sizes and last modification times are checked.

        + **no_check**: this option is only available for migration of HTTP/HTTPS data. This option takes effect for source
        objects whose sizes cannot be obtained using the content-length field in the standard HTTP protocol. These source
        objects will overwrite their paired destination objects directly.
        If the size of a source object can be obtained, its size and last modification time will be checked.

        The default value is **size_last_modified**. Changing this creates a new resource.
        """
        return pulumi.get(self, "consistency_check")

    @consistency_check.setter
    def consistency_check(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "consistency_check", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the task group. The message cannot
        exceed 255 characters. The following special characters are not allowed: ^<>&"'.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="destinationObject")
    def destination_object(self) -> Optional[pulumi.Input['MigrationTaskGroupDestinationObjectArgs']]:
        """
        Specifies the destination information.
        The object structure is documented below. Changing this creates a new resource.
        """
        return pulumi.get(self, "destination_object")

    @destination_object.setter
    def destination_object(self, value: Optional[pulumi.Input['MigrationTaskGroupDestinationObjectArgs']]):
        pulumi.set(self, "destination_object", value)

    @_builtins.property
    @pulumi.getter(name="dstStoragePolicy")
    def dst_storage_policy(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the destination storage class.
        This parameter is required only when the destination is Huawei Cloud OBS. The default value is STANDARD.
        + **STANDARD**: OBS Standard storage.
        + **IA**: OBS Infrequent Access storage.
        + **ARCHIVE**: OBS Archive storage
        + **DEEP_ARCHIVE**: OBS Deep Archive storage
        + **SRC_STORAGE_MAPPING**: converts the source storage class into an OBS storage class based on the predefined rules.
        Changing this creates a new resource.

        <a name="source_object_object"></a>
        The `source_object` block supports:
        """
        return pulumi.get(self, "dst_storage_policy")

    @dst_storage_policy.setter
    def dst_storage_policy(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dst_storage_policy", value)

    @_builtins.property
    @pulumi.getter(name="enableFailedObjectRecording")
    def enable_failed_object_recording(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to record failed objects.
        Default value: **true**. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_failed_object_recording")

    @enable_failed_object_recording.setter
    def enable_failed_object_recording(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_failed_object_recording", value)

    @_builtins.property
    @pulumi.getter(name="enableKms")
    def enable_kms(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to enable the KMS encryption function.
        Default value: **false**. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_kms")

    @enable_kms.setter
    def enable_kms(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_kms", value)

    @_builtins.property
    @pulumi.getter(name="enableMetadataMigration")
    def enable_metadata_migration(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether metadata migration is enabled. Even if this
        function is disabled, the ContentType metadata will still be migrated to ensure a successful migration.
        Default value: **false**. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_metadata_migration")

    @enable_metadata_migration.setter
    def enable_metadata_migration(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_metadata_migration", value)

    @_builtins.property
    @pulumi.getter(name="enableRequesterPays")
    def enable_requester_pays(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to let the requester make payment.
        After enabled, the requester pays the request and data transmission fees.
        Default value: **false**. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_requester_pays")

    @enable_requester_pays.setter
    def enable_requester_pays(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_requester_pays", value)

    @_builtins.property
    @pulumi.getter(name="failNum")
    def fail_num(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The number of failed objects.
        """
        return pulumi.get(self, "fail_num")

    @fail_num.setter
    def fail_num(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "fail_num", value)

    @_builtins.property
    @pulumi.getter(name="migrateSince")
    def migrate_since(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies a time in format **yyyy-MM-dd HH:mm:ss**,
        e.g. **2006-01-02 15:04:05**. The system migrates only the objects that are modified after the specified time.
        No time is specified by default. Changing this creates a new resource.
        """
        return pulumi.get(self, "migrate_since")

    @migrate_since.setter
    def migrate_since(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "migrate_since", value)

    @_builtins.property
    @pulumi.getter(name="objectOverwriteMode")
    def object_overwrite_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies whether to skip a source object or allow the source
        object to overwrite its paired destination object. Value options are as follows:

        + **NO_OVERWRITE**: indicates the system never allows override. The system always skips source objects and keeps
        their paired destination objects.

        + **SIZE_LAST_MODIFIED_COMPARISON_OVERWRITE**: indicates the system allows override based on the results of size or
        modification time checks. If a source object is not as large as or was last modified more recently than its paired
        destination object, the source object will overwrite the destination object. Otherwise, the source object will be
        skipped.

        + **CRC64_COMPARISON_OVERWRITE**: indicates the system allows override if the source and destination objects have
        different CRC64 checksums. This option is only available for migration on Huawei Cloud or from Alibaba Cloud or
        Tencent Cloud. If a source object has a CRC64 checksum different from the paired destination object, the source
        object will overwrite the destination object. Otherwise, the source object will be skipped.
        If any of them doesn't have a CRC64 checksum, their sizes and last modification times are checked.

        + **FULL_OVERWRITE**: indicates the system always allows override. The system always allows source objects to
        overwrite their paired destination objects.

        The default value is **SIZE_LAST_MODIFIED_COMPARISON_OVERWRITE**. Changing this creates a new resource.
        """
        return pulumi.get(self, "object_overwrite_mode")

    @object_overwrite_mode.setter
    def object_overwrite_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "object_overwrite_mode", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the destination bucket is located.
        The value must be the same as that of the service endpoint. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="sourceCdn")
    def source_cdn(self) -> Optional[pulumi.Input['MigrationTaskGroupSourceCdnArgs']]:
        """
        Specifies the CDN information. If this parameter is contained,
        using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
        name during migration. The object structure is documented below.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "source_cdn")

    @source_cdn.setter
    def source_cdn(self, value: Optional[pulumi.Input['MigrationTaskGroupSourceCdnArgs']]):
        pulumi.set(self, "source_cdn", value)

    @_builtins.property
    @pulumi.getter(name="sourceObject")
    def source_object(self) -> Optional[pulumi.Input['MigrationTaskGroupSourceObjectArgs']]:
        """
        Specifies the source information. The object
        structure is documented below. Changing this creates a new resource.
        """
        return pulumi.get(self, "source_object")

    @source_object.setter
    def source_object(self, value: Optional[pulumi.Input['MigrationTaskGroupSourceObjectArgs']]):
        pulumi.set(self, "source_object", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The migration task group status. The value can be:
        + **0**: Waiting.
        + **1**: Executing/Creating.
        + **2**: Monitoring.
        + **3**: Paused.
        + **4**: Creation failed.
        + **5**: Migration failed.
        + **6**: Migration completed.
        + **7**: Pausing.
        + **8**: Waiting to be deleted.
        + **9**: Deleted.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="successNum")
    def success_num(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The number of migrated objects.
        """
        return pulumi.get(self, "success_num")

    @success_num.setter
    def success_num(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "success_num", value)

    @_builtins.property
    @pulumi.getter(name="totalNum")
    def total_num(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The total number of objects to be migrated in the migration task group.
        """
        return pulumi.get(self, "total_num")

    @total_num.setter
    def total_num(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "total_num", value)

    @_builtins.property
    @pulumi.getter(name="totalSize")
    def total_size(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The total size of migrated objects, in bytes.
        """
        return pulumi.get(self, "total_size")

    @total_size.setter
    def total_size(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "total_size", value)

    @_builtins.property
    @pulumi.getter(name="totalTime")
    def total_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The total amount of time used by the migration task group, in ms.
        """
        return pulumi.get(self, "total_time")

    @total_time.setter
    def total_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "total_time", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the task group type. The value can be:
        + **LIST**: indicates that the system will migrate the objects specified in the object list.
        + **URL_LIST**: indicates that the system will migrate the objects specified in the URL list.
        + **PREFIX**: indicates that the system will migrate the objects with a specific prefix.

        The default value is **PREFIX**. Changing this creates a new resource.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)


@pulumi.type_token("huaweicloud:Oms/migrationTaskGroup:MigrationTaskGroup")
class MigrationTaskGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth_policies: Optional[pulumi.Input[Sequence[pulumi.Input[Union['MigrationTaskGroupBandwidthPolicyArgs', 'MigrationTaskGroupBandwidthPolicyArgsDict']]]]] = None,
                 consistency_check: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 destination_object: Optional[pulumi.Input[Union['MigrationTaskGroupDestinationObjectArgs', 'MigrationTaskGroupDestinationObjectArgsDict']]] = None,
                 dst_storage_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_failed_object_recording: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_kms: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_metadata_migration: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_requester_pays: Optional[pulumi.Input[_builtins.bool]] = None,
                 migrate_since: Optional[pulumi.Input[_builtins.str]] = None,
                 object_overwrite_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 source_cdn: Optional[pulumi.Input[Union['MigrationTaskGroupSourceCdnArgs', 'MigrationTaskGroupSourceCdnArgsDict']]] = None,
                 source_object: Optional[pulumi.Input[Union['MigrationTaskGroupSourceObjectArgs', 'MigrationTaskGroupSourceObjectArgsDict']]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages an OMS migration task group resource within HuaweiCloud.

        ## Example Usage

        ### OMS Migration Task Group with PREFIX

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        source_region = config.require_object("sourceRegion")
        source_bucket = config.require_object("sourceBucket")
        source_access_key = config.require_object("sourceAccessKey")
        source_secret_key = config.require_object("sourceSecretKey")
        dest_region = config.require_object("destRegion")
        dest_bucket = config.require_object("destBucket")
        dest_access_key = config.require_object("destAccessKey")
        dest_secret_key = config.require_object("destSecretKey")
        test = huaweicloud.oms.MigrationTaskGroup("test",
            source_object={
                "data_source": "Aliyun",
                "region": source_region,
                "bucket": source_bucket,
                "access_key": source_access_key,
                "secret_key": source_secret_key,
                "objects": [""],
            },
            destination_object={
                "region": dest_region,
                "bucket": dest_bucket,
                "access_key": dest_access_key,
                "secret_key": dest_secret_key,
            },
            type="PREFIX",
            enable_kms=True,
            description="test task group",
            migrate_since="2023-01-02 15:04:05",
            object_overwrite_mode="CRC64_COMPARISON_OVERWRITE",
            consistency_check="crc64",
            enable_requester_pays=True,
            enable_failed_object_recording=True,
            bandwidth_policies=[
                {
                    "max_bandwidth": 1,
                    "start": "15:00",
                    "end": "16:00",
                },
                {
                    "max_bandwidth": 2,
                    "start": "16:00",
                    "end": "17:00",
                },
            ])
        ```

        ### OMS Migration Task Group with LIST

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        source_region = config.require_object("sourceRegion")
        source_bucket = config.require_object("sourceBucket")
        source_access_key = config.require_object("sourceAccessKey")
        source_secret_key = config.require_object("sourceSecretKey")
        dest_region = config.require_object("destRegion")
        dest_bucket = config.require_object("destBucket")
        dest_access_key = config.require_object("destAccessKey")
        dest_secret_key = config.require_object("destSecretKey")
        list_file_bucket = config.require_object("listFileBucket")
        list_file_key = config.require_object("listFileKey")
        test = huaweicloud.oms.MigrationTaskGroup("test",
            source_object={
                "data_source": "HuaweiCloud",
                "region": source_region,
                "bucket": source_bucket,
                "access_key": source_access_key,
                "secret_key": source_secret_key,
                "list_file_bucket": list_file_bucket,
                "list_file_key": list_file_key,
            },
            destination_object={
                "region": dest_region,
                "bucket": dest_bucket,
                "access_key": dest_access_key,
                "secret_key": dest_secret_key,
            },
            type="LIST",
            description="test task group")
        ```

        ### OMS Migration Task Group with URL_LIST

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        dest_region = config.require_object("destRegion")
        dest_bucket = config.require_object("destBucket")
        dest_access_key = config.require_object("destAccessKey")
        dest_secret_key = config.require_object("destSecretKey")
        list_file_bucket = config.require_object("listFileBucket")
        list_file_key = config.require_object("listFileKey")
        test = huaweicloud.oms.MigrationTaskGroup("test",
            source_object={
                "data_source": "URLSource",
                "list_file_bucket": list_file_bucket,
                "list_file_key": list_file_key,
            },
            destination_object={
                "region": dest_region,
                "bucket": dest_bucket,
                "access_key": dest_access_key,
                "secret_key": dest_secret_key,
            },
            type="URL_LIST",
            description="test task group")
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] action: Specifies the action for migration task group. Value options are as follows:
               + **retry**: Restart a failed migration task group. This will migrate all objects in the failed tasks again.
               + **start**: Resume a paused migration task group.
               + **stop**:  Pause a migration task group when it is being monitored.
               
               > **NOTE:** The usage of `action` has some limitations. Only creation failed task groups can be retried
               and only paused task groups can be started and only monitoring task groups can be stopped.
        :param pulumi.Input[Sequence[pulumi.Input[Union['MigrationTaskGroupBandwidthPolicyArgs', 'MigrationTaskGroupBandwidthPolicyArgsDict']]]] bandwidth_policies: Specifies the traffic limit rules. Each element in the array
               corresponds to the maximum bandwidth of a time segment. A maximum of 5 time segments are allowed, and the time
               segments must not overlap. The object structure is documented below.
        :param pulumi.Input[_builtins.str] consistency_check: Specifies the consistency check method, which is used to check
               whether objects are consistent before and after migration. All check methods take effect for only objects that are
               in the same encryption status in the source and destination buckets. The check method and results will be recorded
               in the object list. Value options are as follows:
               
               + **size_last_modified**: the system checks object consistency with object size and last modification time.
               If a source object is as large as but was last modified earlier than its paired destination object, the system
               considers the source object does not need to be migrated or has been already migrated successfully.
               
               + **crc64**: this option is only available for migration on Huawei Cloud or from Alibaba Cloud or Tencent Cloud. If
               a source object and its paired destination object have CRC64 checksums, the checksums are checked. Otherwise, their
               sizes and last modification times are checked.
               
               + **no_check**: this option is only available for migration of HTTP/HTTPS data. This option takes effect for source
               objects whose sizes cannot be obtained using the content-length field in the standard HTTP protocol. These source
               objects will overwrite their paired destination objects directly.
               If the size of a source object can be obtained, its size and last modification time will be checked.
               
               The default value is **size_last_modified**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the task group. The message cannot
               exceed 255 characters. The following special characters are not allowed: ^<>&"'.
               Changing this creates a new resource.
        :param pulumi.Input[Union['MigrationTaskGroupDestinationObjectArgs', 'MigrationTaskGroupDestinationObjectArgsDict']] destination_object: Specifies the destination information.
               The object structure is documented below. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] dst_storage_policy: Specifies the destination storage class.
               This parameter is required only when the destination is Huawei Cloud OBS. The default value is STANDARD.
               + **STANDARD**: OBS Standard storage.
               + **IA**: OBS Infrequent Access storage.
               + **ARCHIVE**: OBS Archive storage
               + **DEEP_ARCHIVE**: OBS Deep Archive storage
               + **SRC_STORAGE_MAPPING**: converts the source storage class into an OBS storage class based on the predefined rules.
               Changing this creates a new resource.
               
               <a name="source_object_object"></a>
               The `source_object` block supports:
        :param pulumi.Input[_builtins.bool] enable_failed_object_recording: Specifies whether to record failed objects.
               Default value: **true**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_kms: Specifies whether to enable the KMS encryption function.
               Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_metadata_migration: Specifies whether metadata migration is enabled. Even if this
               function is disabled, the ContentType metadata will still be migrated to ensure a successful migration.
               Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_requester_pays: Specifies whether to let the requester make payment.
               After enabled, the requester pays the request and data transmission fees.
               Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] migrate_since: Specifies a time in format **yyyy-MM-dd HH:mm:ss**,
               e.g. **2006-01-02 15:04:05**. The system migrates only the objects that are modified after the specified time.
               No time is specified by default. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] object_overwrite_mode: Specifies whether to skip a source object or allow the source
               object to overwrite its paired destination object. Value options are as follows:
               
               + **NO_OVERWRITE**: indicates the system never allows override. The system always skips source objects and keeps
               their paired destination objects.
               
               + **SIZE_LAST_MODIFIED_COMPARISON_OVERWRITE**: indicates the system allows override based on the results of size or
               modification time checks. If a source object is not as large as or was last modified more recently than its paired
               destination object, the source object will overwrite the destination object. Otherwise, the source object will be
               skipped.
               
               + **CRC64_COMPARISON_OVERWRITE**: indicates the system allows override if the source and destination objects have
               different CRC64 checksums. This option is only available for migration on Huawei Cloud or from Alibaba Cloud or
               Tencent Cloud. If a source object has a CRC64 checksum different from the paired destination object, the source
               object will overwrite the destination object. Otherwise, the source object will be skipped.
               If any of them doesn't have a CRC64 checksum, their sizes and last modification times are checked.
               
               + **FULL_OVERWRITE**: indicates the system always allows override. The system always allows source objects to
               overwrite their paired destination objects.
               
               The default value is **SIZE_LAST_MODIFIED_COMPARISON_OVERWRITE**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the destination bucket is located.
               The value must be the same as that of the service endpoint. Changing this creates a new resource.
        :param pulumi.Input[Union['MigrationTaskGroupSourceCdnArgs', 'MigrationTaskGroupSourceCdnArgsDict']] source_cdn: Specifies the CDN information. If this parameter is contained,
               using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
               name during migration. The object structure is documented below.
               Changing this creates a new resource.
        :param pulumi.Input[Union['MigrationTaskGroupSourceObjectArgs', 'MigrationTaskGroupSourceObjectArgsDict']] source_object: Specifies the source information. The object
               structure is documented below. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] type: Specifies the task group type. The value can be:
               + **LIST**: indicates that the system will migrate the objects specified in the object list.
               + **URL_LIST**: indicates that the system will migrate the objects specified in the URL list.
               + **PREFIX**: indicates that the system will migrate the objects with a specific prefix.
               
               The default value is **PREFIX**. Changing this creates a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: MigrationTaskGroupArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an OMS migration task group resource within HuaweiCloud.

        ## Example Usage

        ### OMS Migration Task Group with PREFIX

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        source_region = config.require_object("sourceRegion")
        source_bucket = config.require_object("sourceBucket")
        source_access_key = config.require_object("sourceAccessKey")
        source_secret_key = config.require_object("sourceSecretKey")
        dest_region = config.require_object("destRegion")
        dest_bucket = config.require_object("destBucket")
        dest_access_key = config.require_object("destAccessKey")
        dest_secret_key = config.require_object("destSecretKey")
        test = huaweicloud.oms.MigrationTaskGroup("test",
            source_object={
                "data_source": "Aliyun",
                "region": source_region,
                "bucket": source_bucket,
                "access_key": source_access_key,
                "secret_key": source_secret_key,
                "objects": [""],
            },
            destination_object={
                "region": dest_region,
                "bucket": dest_bucket,
                "access_key": dest_access_key,
                "secret_key": dest_secret_key,
            },
            type="PREFIX",
            enable_kms=True,
            description="test task group",
            migrate_since="2023-01-02 15:04:05",
            object_overwrite_mode="CRC64_COMPARISON_OVERWRITE",
            consistency_check="crc64",
            enable_requester_pays=True,
            enable_failed_object_recording=True,
            bandwidth_policies=[
                {
                    "max_bandwidth": 1,
                    "start": "15:00",
                    "end": "16:00",
                },
                {
                    "max_bandwidth": 2,
                    "start": "16:00",
                    "end": "17:00",
                },
            ])
        ```

        ### OMS Migration Task Group with LIST

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        source_region = config.require_object("sourceRegion")
        source_bucket = config.require_object("sourceBucket")
        source_access_key = config.require_object("sourceAccessKey")
        source_secret_key = config.require_object("sourceSecretKey")
        dest_region = config.require_object("destRegion")
        dest_bucket = config.require_object("destBucket")
        dest_access_key = config.require_object("destAccessKey")
        dest_secret_key = config.require_object("destSecretKey")
        list_file_bucket = config.require_object("listFileBucket")
        list_file_key = config.require_object("listFileKey")
        test = huaweicloud.oms.MigrationTaskGroup("test",
            source_object={
                "data_source": "HuaweiCloud",
                "region": source_region,
                "bucket": source_bucket,
                "access_key": source_access_key,
                "secret_key": source_secret_key,
                "list_file_bucket": list_file_bucket,
                "list_file_key": list_file_key,
            },
            destination_object={
                "region": dest_region,
                "bucket": dest_bucket,
                "access_key": dest_access_key,
                "secret_key": dest_secret_key,
            },
            type="LIST",
            description="test task group")
        ```

        ### OMS Migration Task Group with URL_LIST

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        dest_region = config.require_object("destRegion")
        dest_bucket = config.require_object("destBucket")
        dest_access_key = config.require_object("destAccessKey")
        dest_secret_key = config.require_object("destSecretKey")
        list_file_bucket = config.require_object("listFileBucket")
        list_file_key = config.require_object("listFileKey")
        test = huaweicloud.oms.MigrationTaskGroup("test",
            source_object={
                "data_source": "URLSource",
                "list_file_bucket": list_file_bucket,
                "list_file_key": list_file_key,
            },
            destination_object={
                "region": dest_region,
                "bucket": dest_bucket,
                "access_key": dest_access_key,
                "secret_key": dest_secret_key,
            },
            type="URL_LIST",
            description="test task group")
        ```

        :param str resource_name: The name of the resource.
        :param MigrationTaskGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(MigrationTaskGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth_policies: Optional[pulumi.Input[Sequence[pulumi.Input[Union['MigrationTaskGroupBandwidthPolicyArgs', 'MigrationTaskGroupBandwidthPolicyArgsDict']]]]] = None,
                 consistency_check: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 destination_object: Optional[pulumi.Input[Union['MigrationTaskGroupDestinationObjectArgs', 'MigrationTaskGroupDestinationObjectArgsDict']]] = None,
                 dst_storage_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_failed_object_recording: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_kms: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_metadata_migration: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_requester_pays: Optional[pulumi.Input[_builtins.bool]] = None,
                 migrate_since: Optional[pulumi.Input[_builtins.str]] = None,
                 object_overwrite_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 source_cdn: Optional[pulumi.Input[Union['MigrationTaskGroupSourceCdnArgs', 'MigrationTaskGroupSourceCdnArgsDict']]] = None,
                 source_object: Optional[pulumi.Input[Union['MigrationTaskGroupSourceObjectArgs', 'MigrationTaskGroupSourceObjectArgsDict']]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = MigrationTaskGroupArgs.__new__(MigrationTaskGroupArgs)

            __props__.__dict__["action"] = action
            __props__.__dict__["bandwidth_policies"] = bandwidth_policies
            __props__.__dict__["consistency_check"] = consistency_check
            __props__.__dict__["description"] = description
            if destination_object is None and not opts.urn:
                raise TypeError("Missing required property 'destination_object'")
            __props__.__dict__["destination_object"] = destination_object
            __props__.__dict__["dst_storage_policy"] = dst_storage_policy
            __props__.__dict__["enable_failed_object_recording"] = enable_failed_object_recording
            __props__.__dict__["enable_kms"] = enable_kms
            __props__.__dict__["enable_metadata_migration"] = enable_metadata_migration
            __props__.__dict__["enable_requester_pays"] = enable_requester_pays
            __props__.__dict__["migrate_since"] = migrate_since
            __props__.__dict__["object_overwrite_mode"] = object_overwrite_mode
            __props__.__dict__["region"] = region
            __props__.__dict__["source_cdn"] = source_cdn
            if source_object is None and not opts.urn:
                raise TypeError("Missing required property 'source_object'")
            __props__.__dict__["source_object"] = source_object
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
            __props__.__dict__["complete_size"] = None
            __props__.__dict__["fail_num"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["success_num"] = None
            __props__.__dict__["total_num"] = None
            __props__.__dict__["total_size"] = None
            __props__.__dict__["total_time"] = None
        super(MigrationTaskGroup, __self__).__init__(
            'huaweicloud:Oms/migrationTaskGroup:MigrationTaskGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            action: Optional[pulumi.Input[_builtins.str]] = None,
            bandwidth_policies: Optional[pulumi.Input[Sequence[pulumi.Input[Union['MigrationTaskGroupBandwidthPolicyArgs', 'MigrationTaskGroupBandwidthPolicyArgsDict']]]]] = None,
            complete_size: Optional[pulumi.Input[_builtins.int]] = None,
            consistency_check: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            destination_object: Optional[pulumi.Input[Union['MigrationTaskGroupDestinationObjectArgs', 'MigrationTaskGroupDestinationObjectArgsDict']]] = None,
            dst_storage_policy: Optional[pulumi.Input[_builtins.str]] = None,
            enable_failed_object_recording: Optional[pulumi.Input[_builtins.bool]] = None,
            enable_kms: Optional[pulumi.Input[_builtins.bool]] = None,
            enable_metadata_migration: Optional[pulumi.Input[_builtins.bool]] = None,
            enable_requester_pays: Optional[pulumi.Input[_builtins.bool]] = None,
            fail_num: Optional[pulumi.Input[_builtins.int]] = None,
            migrate_since: Optional[pulumi.Input[_builtins.str]] = None,
            object_overwrite_mode: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            source_cdn: Optional[pulumi.Input[Union['MigrationTaskGroupSourceCdnArgs', 'MigrationTaskGroupSourceCdnArgsDict']]] = None,
            source_object: Optional[pulumi.Input[Union['MigrationTaskGroupSourceObjectArgs', 'MigrationTaskGroupSourceObjectArgsDict']]] = None,
            status: Optional[pulumi.Input[_builtins.int]] = None,
            success_num: Optional[pulumi.Input[_builtins.int]] = None,
            total_num: Optional[pulumi.Input[_builtins.int]] = None,
            total_size: Optional[pulumi.Input[_builtins.int]] = None,
            total_time: Optional[pulumi.Input[_builtins.int]] = None,
            type: Optional[pulumi.Input[_builtins.str]] = None) -> 'MigrationTaskGroup':
        """
        Get an existing MigrationTaskGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] action: Specifies the action for migration task group. Value options are as follows:
               + **retry**: Restart a failed migration task group. This will migrate all objects in the failed tasks again.
               + **start**: Resume a paused migration task group.
               + **stop**:  Pause a migration task group when it is being monitored.
               
               > **NOTE:** The usage of `action` has some limitations. Only creation failed task groups can be retried
               and only paused task groups can be started and only monitoring task groups can be stopped.
        :param pulumi.Input[Sequence[pulumi.Input[Union['MigrationTaskGroupBandwidthPolicyArgs', 'MigrationTaskGroupBandwidthPolicyArgsDict']]]] bandwidth_policies: Specifies the traffic limit rules. Each element in the array
               corresponds to the maximum bandwidth of a time segment. A maximum of 5 time segments are allowed, and the time
               segments must not overlap. The object structure is documented below.
        :param pulumi.Input[_builtins.int] complete_size: The size (in bytes) of the objects that have been migrated.
        :param pulumi.Input[_builtins.str] consistency_check: Specifies the consistency check method, which is used to check
               whether objects are consistent before and after migration. All check methods take effect for only objects that are
               in the same encryption status in the source and destination buckets. The check method and results will be recorded
               in the object list. Value options are as follows:
               
               + **size_last_modified**: the system checks object consistency with object size and last modification time.
               If a source object is as large as but was last modified earlier than its paired destination object, the system
               considers the source object does not need to be migrated or has been already migrated successfully.
               
               + **crc64**: this option is only available for migration on Huawei Cloud or from Alibaba Cloud or Tencent Cloud. If
               a source object and its paired destination object have CRC64 checksums, the checksums are checked. Otherwise, their
               sizes and last modification times are checked.
               
               + **no_check**: this option is only available for migration of HTTP/HTTPS data. This option takes effect for source
               objects whose sizes cannot be obtained using the content-length field in the standard HTTP protocol. These source
               objects will overwrite their paired destination objects directly.
               If the size of a source object can be obtained, its size and last modification time will be checked.
               
               The default value is **size_last_modified**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the task group. The message cannot
               exceed 255 characters. The following special characters are not allowed: ^<>&"'.
               Changing this creates a new resource.
        :param pulumi.Input[Union['MigrationTaskGroupDestinationObjectArgs', 'MigrationTaskGroupDestinationObjectArgsDict']] destination_object: Specifies the destination information.
               The object structure is documented below. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] dst_storage_policy: Specifies the destination storage class.
               This parameter is required only when the destination is Huawei Cloud OBS. The default value is STANDARD.
               + **STANDARD**: OBS Standard storage.
               + **IA**: OBS Infrequent Access storage.
               + **ARCHIVE**: OBS Archive storage
               + **DEEP_ARCHIVE**: OBS Deep Archive storage
               + **SRC_STORAGE_MAPPING**: converts the source storage class into an OBS storage class based on the predefined rules.
               Changing this creates a new resource.
               
               <a name="source_object_object"></a>
               The `source_object` block supports:
        :param pulumi.Input[_builtins.bool] enable_failed_object_recording: Specifies whether to record failed objects.
               Default value: **true**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_kms: Specifies whether to enable the KMS encryption function.
               Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_metadata_migration: Specifies whether metadata migration is enabled. Even if this
               function is disabled, the ContentType metadata will still be migrated to ensure a successful migration.
               Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_requester_pays: Specifies whether to let the requester make payment.
               After enabled, the requester pays the request and data transmission fees.
               Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] fail_num: The number of failed objects.
        :param pulumi.Input[_builtins.str] migrate_since: Specifies a time in format **yyyy-MM-dd HH:mm:ss**,
               e.g. **2006-01-02 15:04:05**. The system migrates only the objects that are modified after the specified time.
               No time is specified by default. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] object_overwrite_mode: Specifies whether to skip a source object or allow the source
               object to overwrite its paired destination object. Value options are as follows:
               
               + **NO_OVERWRITE**: indicates the system never allows override. The system always skips source objects and keeps
               their paired destination objects.
               
               + **SIZE_LAST_MODIFIED_COMPARISON_OVERWRITE**: indicates the system allows override based on the results of size or
               modification time checks. If a source object is not as large as or was last modified more recently than its paired
               destination object, the source object will overwrite the destination object. Otherwise, the source object will be
               skipped.
               
               + **CRC64_COMPARISON_OVERWRITE**: indicates the system allows override if the source and destination objects have
               different CRC64 checksums. This option is only available for migration on Huawei Cloud or from Alibaba Cloud or
               Tencent Cloud. If a source object has a CRC64 checksum different from the paired destination object, the source
               object will overwrite the destination object. Otherwise, the source object will be skipped.
               If any of them doesn't have a CRC64 checksum, their sizes and last modification times are checked.
               
               + **FULL_OVERWRITE**: indicates the system always allows override. The system always allows source objects to
               overwrite their paired destination objects.
               
               The default value is **SIZE_LAST_MODIFIED_COMPARISON_OVERWRITE**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the destination bucket is located.
               The value must be the same as that of the service endpoint. Changing this creates a new resource.
        :param pulumi.Input[Union['MigrationTaskGroupSourceCdnArgs', 'MigrationTaskGroupSourceCdnArgsDict']] source_cdn: Specifies the CDN information. If this parameter is contained,
               using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
               name during migration. The object structure is documented below.
               Changing this creates a new resource.
        :param pulumi.Input[Union['MigrationTaskGroupSourceObjectArgs', 'MigrationTaskGroupSourceObjectArgsDict']] source_object: Specifies the source information. The object
               structure is documented below. Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] status: The migration task group status. The value can be:
               + **0**: Waiting.
               + **1**: Executing/Creating.
               + **2**: Monitoring.
               + **3**: Paused.
               + **4**: Creation failed.
               + **5**: Migration failed.
               + **6**: Migration completed.
               + **7**: Pausing.
               + **8**: Waiting to be deleted.
               + **9**: Deleted.
        :param pulumi.Input[_builtins.int] success_num: The number of migrated objects.
        :param pulumi.Input[_builtins.int] total_num: The total number of objects to be migrated in the migration task group.
        :param pulumi.Input[_builtins.int] total_size: The total size of migrated objects, in bytes.
        :param pulumi.Input[_builtins.int] total_time: The total amount of time used by the migration task group, in ms.
        :param pulumi.Input[_builtins.str] type: Specifies the task group type. The value can be:
               + **LIST**: indicates that the system will migrate the objects specified in the object list.
               + **URL_LIST**: indicates that the system will migrate the objects specified in the URL list.
               + **PREFIX**: indicates that the system will migrate the objects with a specific prefix.
               
               The default value is **PREFIX**. Changing this creates a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _MigrationTaskGroupState.__new__(_MigrationTaskGroupState)

        __props__.__dict__["action"] = action
        __props__.__dict__["bandwidth_policies"] = bandwidth_policies
        __props__.__dict__["complete_size"] = complete_size
        __props__.__dict__["consistency_check"] = consistency_check
        __props__.__dict__["description"] = description
        __props__.__dict__["destination_object"] = destination_object
        __props__.__dict__["dst_storage_policy"] = dst_storage_policy
        __props__.__dict__["enable_failed_object_recording"] = enable_failed_object_recording
        __props__.__dict__["enable_kms"] = enable_kms
        __props__.__dict__["enable_metadata_migration"] = enable_metadata_migration
        __props__.__dict__["enable_requester_pays"] = enable_requester_pays
        __props__.__dict__["fail_num"] = fail_num
        __props__.__dict__["migrate_since"] = migrate_since
        __props__.__dict__["object_overwrite_mode"] = object_overwrite_mode
        __props__.__dict__["region"] = region
        __props__.__dict__["source_cdn"] = source_cdn
        __props__.__dict__["source_object"] = source_object
        __props__.__dict__["status"] = status
        __props__.__dict__["success_num"] = success_num
        __props__.__dict__["total_num"] = total_num
        __props__.__dict__["total_size"] = total_size
        __props__.__dict__["total_time"] = total_time
        __props__.__dict__["type"] = type
        return MigrationTaskGroup(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def action(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the action for migration task group. Value options are as follows:
        + **retry**: Restart a failed migration task group. This will migrate all objects in the failed tasks again.
        + **start**: Resume a paused migration task group.
        + **stop**:  Pause a migration task group when it is being monitored.

        > **NOTE:** The usage of `action` has some limitations. Only creation failed task groups can be retried
        and only paused task groups can be started and only monitoring task groups can be stopped.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter(name="bandwidthPolicies")
    def bandwidth_policies(self) -> pulumi.Output[Optional[Sequence['outputs.MigrationTaskGroupBandwidthPolicy']]]:
        """
        Specifies the traffic limit rules. Each element in the array
        corresponds to the maximum bandwidth of a time segment. A maximum of 5 time segments are allowed, and the time
        segments must not overlap. The object structure is documented below.
        """
        return pulumi.get(self, "bandwidth_policies")

    @_builtins.property
    @pulumi.getter(name="completeSize")
    def complete_size(self) -> pulumi.Output[_builtins.int]:
        """
        The size (in bytes) of the objects that have been migrated.
        """
        return pulumi.get(self, "complete_size")

    @_builtins.property
    @pulumi.getter(name="consistencyCheck")
    def consistency_check(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the consistency check method, which is used to check
        whether objects are consistent before and after migration. All check methods take effect for only objects that are
        in the same encryption status in the source and destination buckets. The check method and results will be recorded
        in the object list. Value options are as follows:

        + **size_last_modified**: the system checks object consistency with object size and last modification time.
        If a source object is as large as but was last modified earlier than its paired destination object, the system
        considers the source object does not need to be migrated or has been already migrated successfully.

        + **crc64**: this option is only available for migration on Huawei Cloud or from Alibaba Cloud or Tencent Cloud. If
        a source object and its paired destination object have CRC64 checksums, the checksums are checked. Otherwise, their
        sizes and last modification times are checked.

        + **no_check**: this option is only available for migration of HTTP/HTTPS data. This option takes effect for source
        objects whose sizes cannot be obtained using the content-length field in the standard HTTP protocol. These source
        objects will overwrite their paired destination objects directly.
        If the size of a source object can be obtained, its size and last modification time will be checked.

        The default value is **size_last_modified**. Changing this creates a new resource.
        """
        return pulumi.get(self, "consistency_check")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the description of the task group. The message cannot
        exceed 255 characters. The following special characters are not allowed: ^<>&"'.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="destinationObject")
    def destination_object(self) -> pulumi.Output['outputs.MigrationTaskGroupDestinationObject']:
        """
        Specifies the destination information.
        The object structure is documented below. Changing this creates a new resource.
        """
        return pulumi.get(self, "destination_object")

    @_builtins.property
    @pulumi.getter(name="dstStoragePolicy")
    def dst_storage_policy(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the destination storage class.
        This parameter is required only when the destination is Huawei Cloud OBS. The default value is STANDARD.
        + **STANDARD**: OBS Standard storage.
        + **IA**: OBS Infrequent Access storage.
        + **ARCHIVE**: OBS Archive storage
        + **DEEP_ARCHIVE**: OBS Deep Archive storage
        + **SRC_STORAGE_MAPPING**: converts the source storage class into an OBS storage class based on the predefined rules.
        Changing this creates a new resource.

        <a name="source_object_object"></a>
        The `source_object` block supports:
        """
        return pulumi.get(self, "dst_storage_policy")

    @_builtins.property
    @pulumi.getter(name="enableFailedObjectRecording")
    def enable_failed_object_recording(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether to record failed objects.
        Default value: **true**. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_failed_object_recording")

    @_builtins.property
    @pulumi.getter(name="enableKms")
    def enable_kms(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether to enable the KMS encryption function.
        Default value: **false**. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_kms")

    @_builtins.property
    @pulumi.getter(name="enableMetadataMigration")
    def enable_metadata_migration(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether metadata migration is enabled. Even if this
        function is disabled, the ContentType metadata will still be migrated to ensure a successful migration.
        Default value: **false**. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_metadata_migration")

    @_builtins.property
    @pulumi.getter(name="enableRequesterPays")
    def enable_requester_pays(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether to let the requester make payment.
        After enabled, the requester pays the request and data transmission fees.
        Default value: **false**. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_requester_pays")

    @_builtins.property
    @pulumi.getter(name="failNum")
    def fail_num(self) -> pulumi.Output[_builtins.int]:
        """
        The number of failed objects.
        """
        return pulumi.get(self, "fail_num")

    @_builtins.property
    @pulumi.getter(name="migrateSince")
    def migrate_since(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies a time in format **yyyy-MM-dd HH:mm:ss**,
        e.g. **2006-01-02 15:04:05**. The system migrates only the objects that are modified after the specified time.
        No time is specified by default. Changing this creates a new resource.
        """
        return pulumi.get(self, "migrate_since")

    @_builtins.property
    @pulumi.getter(name="objectOverwriteMode")
    def object_overwrite_mode(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies whether to skip a source object or allow the source
        object to overwrite its paired destination object. Value options are as follows:

        + **NO_OVERWRITE**: indicates the system never allows override. The system always skips source objects and keeps
        their paired destination objects.

        + **SIZE_LAST_MODIFIED_COMPARISON_OVERWRITE**: indicates the system allows override based on the results of size or
        modification time checks. If a source object is not as large as or was last modified more recently than its paired
        destination object, the source object will overwrite the destination object. Otherwise, the source object will be
        skipped.

        + **CRC64_COMPARISON_OVERWRITE**: indicates the system allows override if the source and destination objects have
        different CRC64 checksums. This option is only available for migration on Huawei Cloud or from Alibaba Cloud or
        Tencent Cloud. If a source object has a CRC64 checksum different from the paired destination object, the source
        object will overwrite the destination object. Otherwise, the source object will be skipped.
        If any of them doesn't have a CRC64 checksum, their sizes and last modification times are checked.

        + **FULL_OVERWRITE**: indicates the system always allows override. The system always allows source objects to
        overwrite their paired destination objects.

        The default value is **SIZE_LAST_MODIFIED_COMPARISON_OVERWRITE**. Changing this creates a new resource.
        """
        return pulumi.get(self, "object_overwrite_mode")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region where the destination bucket is located.
        The value must be the same as that of the service endpoint. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="sourceCdn")
    def source_cdn(self) -> pulumi.Output['outputs.MigrationTaskGroupSourceCdn']:
        """
        Specifies the CDN information. If this parameter is contained,
        using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
        name during migration. The object structure is documented below.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "source_cdn")

    @_builtins.property
    @pulumi.getter(name="sourceObject")
    def source_object(self) -> pulumi.Output['outputs.MigrationTaskGroupSourceObject']:
        """
        Specifies the source information. The object
        structure is documented below. Changing this creates a new resource.
        """
        return pulumi.get(self, "source_object")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.int]:
        """
        The migration task group status. The value can be:
        + **0**: Waiting.
        + **1**: Executing/Creating.
        + **2**: Monitoring.
        + **3**: Paused.
        + **4**: Creation failed.
        + **5**: Migration failed.
        + **6**: Migration completed.
        + **7**: Pausing.
        + **8**: Waiting to be deleted.
        + **9**: Deleted.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="successNum")
    def success_num(self) -> pulumi.Output[_builtins.int]:
        """
        The number of migrated objects.
        """
        return pulumi.get(self, "success_num")

    @_builtins.property
    @pulumi.getter(name="totalNum")
    def total_num(self) -> pulumi.Output[_builtins.int]:
        """
        The total number of objects to be migrated in the migration task group.
        """
        return pulumi.get(self, "total_num")

    @_builtins.property
    @pulumi.getter(name="totalSize")
    def total_size(self) -> pulumi.Output[_builtins.int]:
        """
        The total size of migrated objects, in bytes.
        """
        return pulumi.get(self, "total_size")

    @_builtins.property
    @pulumi.getter(name="totalTime")
    def total_time(self) -> pulumi.Output[_builtins.int]:
        """
        The total amount of time used by the migration task group, in ms.
        """
        return pulumi.get(self, "total_time")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the task group type. The value can be:
        + **LIST**: indicates that the system will migrate the objects specified in the object list.
        + **URL_LIST**: indicates that the system will migrate the objects specified in the URL list.
        + **PREFIX**: indicates that the system will migrate the objects with a specific prefix.

        The default value is **PREFIX**. Changing this creates a new resource.
        """
        return pulumi.get(self, "type")

