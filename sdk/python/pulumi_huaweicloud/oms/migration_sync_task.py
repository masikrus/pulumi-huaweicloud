# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['MigrationSyncTaskArgs', 'MigrationSyncTask']

@pulumi.input_type
class MigrationSyncTaskArgs:
    def __init__(__self__, *,
                 dst_ak: pulumi.Input[_builtins.str],
                 dst_bucket: pulumi.Input[_builtins.str],
                 dst_sk: pulumi.Input[_builtins.str],
                 src_ak: pulumi.Input[_builtins.str],
                 src_bucket: pulumi.Input[_builtins.str],
                 src_region: pulumi.Input[_builtins.str],
                 src_sk: pulumi.Input[_builtins.str],
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 app_id: Optional[pulumi.Input[_builtins.str]] = None,
                 consistency_check: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_kms: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_metadata_migration: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_restore: Optional[pulumi.Input[_builtins.bool]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 source_cdn: Optional[pulumi.Input['MigrationSyncTaskSourceCdnArgs']] = None,
                 src_cloud_type: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a MigrationSyncTask resource.
        :param pulumi.Input[_builtins.str] dst_ak: Specifies the access key for accessing the destination bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] dst_bucket: Specifies the name of the destination bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] dst_sk: Specifies the secret key for accessing the destination bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] src_ak: Specifies the access key for accessing the source bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] src_bucket: Specifies the name of the source bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] src_region: Specifies the region where the source bucket is located.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] src_sk: Specifies the secret key for accessing the source bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] action: Specifies the action for migration synchronization task. Value options:
               
               + **start**: Start a migration synchronization task.
               + **stop**:  Pause a migration synchronization task.
               
               <a name="block--source_cdn"></a>
               The `source_cdn` block supports:
        :param pulumi.Input[_builtins.str] app_id: Specifies the APP ID. This parameter is mandatory when `src_cloud_type` is
               **Tencent**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] consistency_check: Specifies the consistency check method, which is used to check
               whether objects are consistent before and after migration. All check methods take effect for only objects that are
               in the same encryption status in the source and destination buckets. The check method and results will be recorded
               in the object list. Value options:
               
               + **size_last_modified**: the system checks object consistency with object size and last modification time.
               If a source object is as large as but was last modified earlier than its paired destination object, the system
               considers the source object does not need to be migrated or has been already migrated successfully.
               
               + **crc64**: this option is only available for migration on Huawei Cloud or from Alibaba Cloud or Tencent Cloud. If
               a source object and its paired destination object have CRC64 checksums, the checksums are checked. Otherwise, their
               sizes and last modification times are checked.
               
               + **no_check**: this option is only available for migration of HTTP/HTTPS data. This option takes effect for source
               objects whose sizes cannot be obtained using the content-length field in the standard HTTP protocol. These source
               objects will overwrite their paired destination objects directly.
               If the size of a source object can be obtained, its size and last modification time will be checked.
               
               The default value is **size_last_modified**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the synchronization task.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_kms: Specifies whether to enable the KMS encryption function.
               Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_metadata_migration: Specifies whether metadata migration is enabled.
               Default value: **false**. Even if disabled, the ContentType metadata will still be migrated
               to ensure a successful migration. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_restore: Specifies whether to automatically restore the archive data. If enabled,
               archive data is automatically restored and migrated. Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource. Which is also the region
               for the destination bucket. If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input['MigrationSyncTaskSourceCdnArgs'] source_cdn: Specifies the CDN information. If this parameter is contained,
               using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
               name during migration. Changing this creates a new resource.
               The source_cdn structure is documented below.
        :param pulumi.Input[_builtins.str] src_cloud_type: Specifies the source cloud service provider. Value options:
               **AWS**, **Azure**, **Aliyun**, **Tencent**, **HuaweiCloud**, **QingCloud**, **KingsoftCloud**, **Baidu**,
               **Qiniu**, **URLSource** and **UCloud**. Default value: **Aliyun**. Changing this creates a new resource.
        """
        pulumi.set(__self__, "dst_ak", dst_ak)
        pulumi.set(__self__, "dst_bucket", dst_bucket)
        pulumi.set(__self__, "dst_sk", dst_sk)
        pulumi.set(__self__, "src_ak", src_ak)
        pulumi.set(__self__, "src_bucket", src_bucket)
        pulumi.set(__self__, "src_region", src_region)
        pulumi.set(__self__, "src_sk", src_sk)
        if action is not None:
            pulumi.set(__self__, "action", action)
        if app_id is not None:
            pulumi.set(__self__, "app_id", app_id)
        if consistency_check is not None:
            pulumi.set(__self__, "consistency_check", consistency_check)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enable_kms is not None:
            pulumi.set(__self__, "enable_kms", enable_kms)
        if enable_metadata_migration is not None:
            pulumi.set(__self__, "enable_metadata_migration", enable_metadata_migration)
        if enable_restore is not None:
            pulumi.set(__self__, "enable_restore", enable_restore)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if source_cdn is not None:
            pulumi.set(__self__, "source_cdn", source_cdn)
        if src_cloud_type is not None:
            pulumi.set(__self__, "src_cloud_type", src_cloud_type)

    @_builtins.property
    @pulumi.getter(name="dstAk")
    def dst_ak(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the access key for accessing the destination bucket.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "dst_ak")

    @dst_ak.setter
    def dst_ak(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "dst_ak", value)

    @_builtins.property
    @pulumi.getter(name="dstBucket")
    def dst_bucket(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the name of the destination bucket.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "dst_bucket")

    @dst_bucket.setter
    def dst_bucket(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "dst_bucket", value)

    @_builtins.property
    @pulumi.getter(name="dstSk")
    def dst_sk(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the secret key for accessing the destination bucket.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "dst_sk")

    @dst_sk.setter
    def dst_sk(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "dst_sk", value)

    @_builtins.property
    @pulumi.getter(name="srcAk")
    def src_ak(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the access key for accessing the source bucket.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "src_ak")

    @src_ak.setter
    def src_ak(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "src_ak", value)

    @_builtins.property
    @pulumi.getter(name="srcBucket")
    def src_bucket(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the name of the source bucket.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "src_bucket")

    @src_bucket.setter
    def src_bucket(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "src_bucket", value)

    @_builtins.property
    @pulumi.getter(name="srcRegion")
    def src_region(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the region where the source bucket is located.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "src_region")

    @src_region.setter
    def src_region(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "src_region", value)

    @_builtins.property
    @pulumi.getter(name="srcSk")
    def src_sk(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the secret key for accessing the source bucket.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "src_sk")

    @src_sk.setter
    def src_sk(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "src_sk", value)

    @_builtins.property
    @pulumi.getter
    def action(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the action for migration synchronization task. Value options:

        + **start**: Start a migration synchronization task.
        + **stop**:  Pause a migration synchronization task.

        <a name="block--source_cdn"></a>
        The `source_cdn` block supports:
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "action", value)

    @_builtins.property
    @pulumi.getter(name="appId")
    def app_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the APP ID. This parameter is mandatory when `src_cloud_type` is
        **Tencent**. Changing this creates a new resource.
        """
        return pulumi.get(self, "app_id")

    @app_id.setter
    def app_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "app_id", value)

    @_builtins.property
    @pulumi.getter(name="consistencyCheck")
    def consistency_check(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the consistency check method, which is used to check
        whether objects are consistent before and after migration. All check methods take effect for only objects that are
        in the same encryption status in the source and destination buckets. The check method and results will be recorded
        in the object list. Value options:

        + **size_last_modified**: the system checks object consistency with object size and last modification time.
        If a source object is as large as but was last modified earlier than its paired destination object, the system
        considers the source object does not need to be migrated or has been already migrated successfully.

        + **crc64**: this option is only available for migration on Huawei Cloud or from Alibaba Cloud or Tencent Cloud. If
        a source object and its paired destination object have CRC64 checksums, the checksums are checked. Otherwise, their
        sizes and last modification times are checked.

        + **no_check**: this option is only available for migration of HTTP/HTTPS data. This option takes effect for source
        objects whose sizes cannot be obtained using the content-length field in the standard HTTP protocol. These source
        objects will overwrite their paired destination objects directly.
        If the size of a source object can be obtained, its size and last modification time will be checked.

        The default value is **size_last_modified**. Changing this creates a new resource.
        """
        return pulumi.get(self, "consistency_check")

    @consistency_check.setter
    def consistency_check(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "consistency_check", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the synchronization task.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enableKms")
    def enable_kms(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to enable the KMS encryption function.
        Default value: **false**. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_kms")

    @enable_kms.setter
    def enable_kms(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_kms", value)

    @_builtins.property
    @pulumi.getter(name="enableMetadataMigration")
    def enable_metadata_migration(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether metadata migration is enabled.
        Default value: **false**. Even if disabled, the ContentType metadata will still be migrated
        to ensure a successful migration. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_metadata_migration")

    @enable_metadata_migration.setter
    def enable_metadata_migration(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_metadata_migration", value)

    @_builtins.property
    @pulumi.getter(name="enableRestore")
    def enable_restore(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to automatically restore the archive data. If enabled,
        archive data is automatically restored and migrated. Default value: **false**. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_restore")

    @enable_restore.setter
    def enable_restore(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_restore", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource. Which is also the region
        for the destination bucket. If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="sourceCdn")
    def source_cdn(self) -> Optional[pulumi.Input['MigrationSyncTaskSourceCdnArgs']]:
        """
        Specifies the CDN information. If this parameter is contained,
        using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
        name during migration. Changing this creates a new resource.
        The source_cdn structure is documented below.
        """
        return pulumi.get(self, "source_cdn")

    @source_cdn.setter
    def source_cdn(self, value: Optional[pulumi.Input['MigrationSyncTaskSourceCdnArgs']]):
        pulumi.set(self, "source_cdn", value)

    @_builtins.property
    @pulumi.getter(name="srcCloudType")
    def src_cloud_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the source cloud service provider. Value options:
        **AWS**, **Azure**, **Aliyun**, **Tencent**, **HuaweiCloud**, **QingCloud**, **KingsoftCloud**, **Baidu**,
        **Qiniu**, **URLSource** and **UCloud**. Default value: **Aliyun**. Changing this creates a new resource.
        """
        return pulumi.get(self, "src_cloud_type")

    @src_cloud_type.setter
    def src_cloud_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "src_cloud_type", value)


@pulumi.input_type
class _MigrationSyncTaskState:
    def __init__(__self__, *,
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 app_id: Optional[pulumi.Input[_builtins.str]] = None,
                 consistency_check: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 dst_ak: Optional[pulumi.Input[_builtins.str]] = None,
                 dst_bucket: Optional[pulumi.Input[_builtins.str]] = None,
                 dst_sk: Optional[pulumi.Input[_builtins.str]] = None,
                 dst_storage_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_kms: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_metadata_migration: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_restore: Optional[pulumi.Input[_builtins.bool]] = None,
                 last_start_at: Optional[pulumi.Input[_builtins.str]] = None,
                 monthly_acceptance_request: Optional[pulumi.Input[_builtins.float]] = None,
                 monthly_failure_object: Optional[pulumi.Input[_builtins.float]] = None,
                 monthly_size: Optional[pulumi.Input[_builtins.float]] = None,
                 monthly_skip_object: Optional[pulumi.Input[_builtins.float]] = None,
                 monthly_success_object: Optional[pulumi.Input[_builtins.float]] = None,
                 object_overwrite_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 source_cdn: Optional[pulumi.Input['MigrationSyncTaskSourceCdnArgs']] = None,
                 src_ak: Optional[pulumi.Input[_builtins.str]] = None,
                 src_bucket: Optional[pulumi.Input[_builtins.str]] = None,
                 src_cloud_type: Optional[pulumi.Input[_builtins.str]] = None,
                 src_region: Optional[pulumi.Input[_builtins.str]] = None,
                 src_sk: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering MigrationSyncTask resources.
        :param pulumi.Input[_builtins.str] action: Specifies the action for migration synchronization task. Value options:
               
               + **start**: Start a migration synchronization task.
               + **stop**:  Pause a migration synchronization task.
               
               <a name="block--source_cdn"></a>
               The `source_cdn` block supports:
        :param pulumi.Input[_builtins.str] app_id: Specifies the APP ID. This parameter is mandatory when `src_cloud_type` is
               **Tencent**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] consistency_check: Specifies the consistency check method, which is used to check
               whether objects are consistent before and after migration. All check methods take effect for only objects that are
               in the same encryption status in the source and destination buckets. The check method and results will be recorded
               in the object list. Value options:
               
               + **size_last_modified**: the system checks object consistency with object size and last modification time.
               If a source object is as large as but was last modified earlier than its paired destination object, the system
               considers the source object does not need to be migrated or has been already migrated successfully.
               
               + **crc64**: this option is only available for migration on Huawei Cloud or from Alibaba Cloud or Tencent Cloud. If
               a source object and its paired destination object have CRC64 checksums, the checksums are checked. Otherwise, their
               sizes and last modification times are checked.
               
               + **no_check**: this option is only available for migration of HTTP/HTTPS data. This option takes effect for source
               objects whose sizes cannot be obtained using the content-length field in the standard HTTP protocol. These source
               objects will overwrite their paired destination objects directly.
               If the size of a source object can be obtained, its size and last modification time will be checked.
               
               The default value is **size_last_modified**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] created_at: Indicates the time when the migration synchronization task was created.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the synchronization task.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] dst_ak: Specifies the access key for accessing the destination bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] dst_bucket: Specifies the name of the destination bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] dst_sk: Specifies the secret key for accessing the destination bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] dst_storage_policy: Indicates the destination storage class. The value can be:
        :param pulumi.Input[_builtins.bool] enable_kms: Specifies whether to enable the KMS encryption function.
               Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_metadata_migration: Specifies whether metadata migration is enabled.
               Default value: **false**. Even if disabled, the ContentType metadata will still be migrated
               to ensure a successful migration. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_restore: Specifies whether to automatically restore the archive data. If enabled,
               archive data is automatically restored and migrated. Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] last_start_at: Indicates the last time when the migration synchronization task started.
        :param pulumi.Input[_builtins.float] monthly_acceptance_request: Indicates the number of objects requested to be synchronized in the current month.
        :param pulumi.Input[_builtins.float] monthly_failure_object: Indicates the number of objects that failed to be synchronized in the current month.
        :param pulumi.Input[_builtins.float] monthly_size: Indicates the total size of synchronized objects in the current month, in bytes.
        :param pulumi.Input[_builtins.float] monthly_skip_object: Indicates the number of objects that were ignored in the current month.
        :param pulumi.Input[_builtins.float] monthly_success_object: Indicates the number of objects that were successfully synchronized in the current month.
        :param pulumi.Input[_builtins.str] object_overwrite_mode: Indicates the type of the source object to overwrite its paired destination object.
               The value can be:
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource. Which is also the region
               for the destination bucket. If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input['MigrationSyncTaskSourceCdnArgs'] source_cdn: Specifies the CDN information. If this parameter is contained,
               using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
               name during migration. Changing this creates a new resource.
               The source_cdn structure is documented below.
        :param pulumi.Input[_builtins.str] src_ak: Specifies the access key for accessing the source bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] src_bucket: Specifies the name of the source bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] src_cloud_type: Specifies the source cloud service provider. Value options:
               **AWS**, **Azure**, **Aliyun**, **Tencent**, **HuaweiCloud**, **QingCloud**, **KingsoftCloud**, **Baidu**,
               **Qiniu**, **URLSource** and **UCloud**. Default value: **Aliyun**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] src_region: Specifies the region where the source bucket is located.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] src_sk: Specifies the secret key for accessing the source bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] status: Indicates the status of the migration synchronization task. The value can be:
        """
        if action is not None:
            pulumi.set(__self__, "action", action)
        if app_id is not None:
            pulumi.set(__self__, "app_id", app_id)
        if consistency_check is not None:
            pulumi.set(__self__, "consistency_check", consistency_check)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if dst_ak is not None:
            pulumi.set(__self__, "dst_ak", dst_ak)
        if dst_bucket is not None:
            pulumi.set(__self__, "dst_bucket", dst_bucket)
        if dst_sk is not None:
            pulumi.set(__self__, "dst_sk", dst_sk)
        if dst_storage_policy is not None:
            pulumi.set(__self__, "dst_storage_policy", dst_storage_policy)
        if enable_kms is not None:
            pulumi.set(__self__, "enable_kms", enable_kms)
        if enable_metadata_migration is not None:
            pulumi.set(__self__, "enable_metadata_migration", enable_metadata_migration)
        if enable_restore is not None:
            pulumi.set(__self__, "enable_restore", enable_restore)
        if last_start_at is not None:
            pulumi.set(__self__, "last_start_at", last_start_at)
        if monthly_acceptance_request is not None:
            pulumi.set(__self__, "monthly_acceptance_request", monthly_acceptance_request)
        if monthly_failure_object is not None:
            pulumi.set(__self__, "monthly_failure_object", monthly_failure_object)
        if monthly_size is not None:
            pulumi.set(__self__, "monthly_size", monthly_size)
        if monthly_skip_object is not None:
            pulumi.set(__self__, "monthly_skip_object", monthly_skip_object)
        if monthly_success_object is not None:
            pulumi.set(__self__, "monthly_success_object", monthly_success_object)
        if object_overwrite_mode is not None:
            pulumi.set(__self__, "object_overwrite_mode", object_overwrite_mode)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if source_cdn is not None:
            pulumi.set(__self__, "source_cdn", source_cdn)
        if src_ak is not None:
            pulumi.set(__self__, "src_ak", src_ak)
        if src_bucket is not None:
            pulumi.set(__self__, "src_bucket", src_bucket)
        if src_cloud_type is not None:
            pulumi.set(__self__, "src_cloud_type", src_cloud_type)
        if src_region is not None:
            pulumi.set(__self__, "src_region", src_region)
        if src_sk is not None:
            pulumi.set(__self__, "src_sk", src_sk)
        if status is not None:
            pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter
    def action(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the action for migration synchronization task. Value options:

        + **start**: Start a migration synchronization task.
        + **stop**:  Pause a migration synchronization task.

        <a name="block--source_cdn"></a>
        The `source_cdn` block supports:
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "action", value)

    @_builtins.property
    @pulumi.getter(name="appId")
    def app_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the APP ID. This parameter is mandatory when `src_cloud_type` is
        **Tencent**. Changing this creates a new resource.
        """
        return pulumi.get(self, "app_id")

    @app_id.setter
    def app_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "app_id", value)

    @_builtins.property
    @pulumi.getter(name="consistencyCheck")
    def consistency_check(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the consistency check method, which is used to check
        whether objects are consistent before and after migration. All check methods take effect for only objects that are
        in the same encryption status in the source and destination buckets. The check method and results will be recorded
        in the object list. Value options:

        + **size_last_modified**: the system checks object consistency with object size and last modification time.
        If a source object is as large as but was last modified earlier than its paired destination object, the system
        considers the source object does not need to be migrated or has been already migrated successfully.

        + **crc64**: this option is only available for migration on Huawei Cloud or from Alibaba Cloud or Tencent Cloud. If
        a source object and its paired destination object have CRC64 checksums, the checksums are checked. Otherwise, their
        sizes and last modification times are checked.

        + **no_check**: this option is only available for migration of HTTP/HTTPS data. This option takes effect for source
        objects whose sizes cannot be obtained using the content-length field in the standard HTTP protocol. These source
        objects will overwrite their paired destination objects directly.
        If the size of a source object can be obtained, its size and last modification time will be checked.

        The default value is **size_last_modified**. Changing this creates a new resource.
        """
        return pulumi.get(self, "consistency_check")

    @consistency_check.setter
    def consistency_check(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "consistency_check", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the time when the migration synchronization task was created.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the synchronization task.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="dstAk")
    def dst_ak(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the access key for accessing the destination bucket.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "dst_ak")

    @dst_ak.setter
    def dst_ak(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dst_ak", value)

    @_builtins.property
    @pulumi.getter(name="dstBucket")
    def dst_bucket(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the destination bucket.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "dst_bucket")

    @dst_bucket.setter
    def dst_bucket(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dst_bucket", value)

    @_builtins.property
    @pulumi.getter(name="dstSk")
    def dst_sk(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the secret key for accessing the destination bucket.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "dst_sk")

    @dst_sk.setter
    def dst_sk(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dst_sk", value)

    @_builtins.property
    @pulumi.getter(name="dstStoragePolicy")
    def dst_storage_policy(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the destination storage class. The value can be:
        """
        return pulumi.get(self, "dst_storage_policy")

    @dst_storage_policy.setter
    def dst_storage_policy(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dst_storage_policy", value)

    @_builtins.property
    @pulumi.getter(name="enableKms")
    def enable_kms(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to enable the KMS encryption function.
        Default value: **false**. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_kms")

    @enable_kms.setter
    def enable_kms(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_kms", value)

    @_builtins.property
    @pulumi.getter(name="enableMetadataMigration")
    def enable_metadata_migration(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether metadata migration is enabled.
        Default value: **false**. Even if disabled, the ContentType metadata will still be migrated
        to ensure a successful migration. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_metadata_migration")

    @enable_metadata_migration.setter
    def enable_metadata_migration(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_metadata_migration", value)

    @_builtins.property
    @pulumi.getter(name="enableRestore")
    def enable_restore(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to automatically restore the archive data. If enabled,
        archive data is automatically restored and migrated. Default value: **false**. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_restore")

    @enable_restore.setter
    def enable_restore(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_restore", value)

    @_builtins.property
    @pulumi.getter(name="lastStartAt")
    def last_start_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the last time when the migration synchronization task started.
        """
        return pulumi.get(self, "last_start_at")

    @last_start_at.setter
    def last_start_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "last_start_at", value)

    @_builtins.property
    @pulumi.getter(name="monthlyAcceptanceRequest")
    def monthly_acceptance_request(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Indicates the number of objects requested to be synchronized in the current month.
        """
        return pulumi.get(self, "monthly_acceptance_request")

    @monthly_acceptance_request.setter
    def monthly_acceptance_request(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "monthly_acceptance_request", value)

    @_builtins.property
    @pulumi.getter(name="monthlyFailureObject")
    def monthly_failure_object(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Indicates the number of objects that failed to be synchronized in the current month.
        """
        return pulumi.get(self, "monthly_failure_object")

    @monthly_failure_object.setter
    def monthly_failure_object(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "monthly_failure_object", value)

    @_builtins.property
    @pulumi.getter(name="monthlySize")
    def monthly_size(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Indicates the total size of synchronized objects in the current month, in bytes.
        """
        return pulumi.get(self, "monthly_size")

    @monthly_size.setter
    def monthly_size(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "monthly_size", value)

    @_builtins.property
    @pulumi.getter(name="monthlySkipObject")
    def monthly_skip_object(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Indicates the number of objects that were ignored in the current month.
        """
        return pulumi.get(self, "monthly_skip_object")

    @monthly_skip_object.setter
    def monthly_skip_object(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "monthly_skip_object", value)

    @_builtins.property
    @pulumi.getter(name="monthlySuccessObject")
    def monthly_success_object(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        Indicates the number of objects that were successfully synchronized in the current month.
        """
        return pulumi.get(self, "monthly_success_object")

    @monthly_success_object.setter
    def monthly_success_object(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "monthly_success_object", value)

    @_builtins.property
    @pulumi.getter(name="objectOverwriteMode")
    def object_overwrite_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the type of the source object to overwrite its paired destination object.
        The value can be:
        """
        return pulumi.get(self, "object_overwrite_mode")

    @object_overwrite_mode.setter
    def object_overwrite_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "object_overwrite_mode", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource. Which is also the region
        for the destination bucket. If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="sourceCdn")
    def source_cdn(self) -> Optional[pulumi.Input['MigrationSyncTaskSourceCdnArgs']]:
        """
        Specifies the CDN information. If this parameter is contained,
        using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
        name during migration. Changing this creates a new resource.
        The source_cdn structure is documented below.
        """
        return pulumi.get(self, "source_cdn")

    @source_cdn.setter
    def source_cdn(self, value: Optional[pulumi.Input['MigrationSyncTaskSourceCdnArgs']]):
        pulumi.set(self, "source_cdn", value)

    @_builtins.property
    @pulumi.getter(name="srcAk")
    def src_ak(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the access key for accessing the source bucket.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "src_ak")

    @src_ak.setter
    def src_ak(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "src_ak", value)

    @_builtins.property
    @pulumi.getter(name="srcBucket")
    def src_bucket(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the source bucket.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "src_bucket")

    @src_bucket.setter
    def src_bucket(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "src_bucket", value)

    @_builtins.property
    @pulumi.getter(name="srcCloudType")
    def src_cloud_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the source cloud service provider. Value options:
        **AWS**, **Azure**, **Aliyun**, **Tencent**, **HuaweiCloud**, **QingCloud**, **KingsoftCloud**, **Baidu**,
        **Qiniu**, **URLSource** and **UCloud**. Default value: **Aliyun**. Changing this creates a new resource.
        """
        return pulumi.get(self, "src_cloud_type")

    @src_cloud_type.setter
    def src_cloud_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "src_cloud_type", value)

    @_builtins.property
    @pulumi.getter(name="srcRegion")
    def src_region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the source bucket is located.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "src_region")

    @src_region.setter
    def src_region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "src_region", value)

    @_builtins.property
    @pulumi.getter(name="srcSk")
    def src_sk(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the secret key for accessing the source bucket.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "src_sk")

    @src_sk.setter
    def src_sk(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "src_sk", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the status of the migration synchronization task. The value can be:
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)


@pulumi.type_token("huaweicloud:Oms/migrationSyncTask:MigrationSyncTask")
class MigrationSyncTask(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 app_id: Optional[pulumi.Input[_builtins.str]] = None,
                 consistency_check: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 dst_ak: Optional[pulumi.Input[_builtins.str]] = None,
                 dst_bucket: Optional[pulumi.Input[_builtins.str]] = None,
                 dst_sk: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_kms: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_metadata_migration: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_restore: Optional[pulumi.Input[_builtins.bool]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 source_cdn: Optional[pulumi.Input[Union['MigrationSyncTaskSourceCdnArgs', 'MigrationSyncTaskSourceCdnArgsDict']]] = None,
                 src_ak: Optional[pulumi.Input[_builtins.str]] = None,
                 src_bucket: Optional[pulumi.Input[_builtins.str]] = None,
                 src_cloud_type: Optional[pulumi.Input[_builtins.str]] = None,
                 src_region: Optional[pulumi.Input[_builtins.str]] = None,
                 src_sk: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages an OMS migration synchronization task resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        source_region = config.require_object("sourceRegion")
        source_bucket = config.require_object("sourceBucket")
        source_access_key = config.require_object("sourceAccessKey")
        source_secret_key = config.require_object("sourceSecretKey")
        dest_region = config.require_object("destRegion")
        dest_bucket = config.require_object("destBucket")
        dest_access_key = config.require_object("destAccessKey")
        dest_secret_key = config.require_object("destSecretKey")
        test = huaweicloud.oms.MigrationSyncTask("test",
            region=dest_region,
            src_cloud_type="HuaweiCloud",
            src_region=source_region,
            src_bucket=source_bucket,
            src_ak=source_access_key,
            src_sk=source_secret_key,
            dst_bucket=dest_bucket,
            dst_ak=dest_access_key,
            dst_sk=dest_secret_key)
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] action: Specifies the action for migration synchronization task. Value options:
               
               + **start**: Start a migration synchronization task.
               + **stop**:  Pause a migration synchronization task.
               
               <a name="block--source_cdn"></a>
               The `source_cdn` block supports:
        :param pulumi.Input[_builtins.str] app_id: Specifies the APP ID. This parameter is mandatory when `src_cloud_type` is
               **Tencent**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] consistency_check: Specifies the consistency check method, which is used to check
               whether objects are consistent before and after migration. All check methods take effect for only objects that are
               in the same encryption status in the source and destination buckets. The check method and results will be recorded
               in the object list. Value options:
               
               + **size_last_modified**: the system checks object consistency with object size and last modification time.
               If a source object is as large as but was last modified earlier than its paired destination object, the system
               considers the source object does not need to be migrated or has been already migrated successfully.
               
               + **crc64**: this option is only available for migration on Huawei Cloud or from Alibaba Cloud or Tencent Cloud. If
               a source object and its paired destination object have CRC64 checksums, the checksums are checked. Otherwise, their
               sizes and last modification times are checked.
               
               + **no_check**: this option is only available for migration of HTTP/HTTPS data. This option takes effect for source
               objects whose sizes cannot be obtained using the content-length field in the standard HTTP protocol. These source
               objects will overwrite their paired destination objects directly.
               If the size of a source object can be obtained, its size and last modification time will be checked.
               
               The default value is **size_last_modified**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the synchronization task.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] dst_ak: Specifies the access key for accessing the destination bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] dst_bucket: Specifies the name of the destination bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] dst_sk: Specifies the secret key for accessing the destination bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_kms: Specifies whether to enable the KMS encryption function.
               Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_metadata_migration: Specifies whether metadata migration is enabled.
               Default value: **false**. Even if disabled, the ContentType metadata will still be migrated
               to ensure a successful migration. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_restore: Specifies whether to automatically restore the archive data. If enabled,
               archive data is automatically restored and migrated. Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource. Which is also the region
               for the destination bucket. If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[Union['MigrationSyncTaskSourceCdnArgs', 'MigrationSyncTaskSourceCdnArgsDict']] source_cdn: Specifies the CDN information. If this parameter is contained,
               using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
               name during migration. Changing this creates a new resource.
               The source_cdn structure is documented below.
        :param pulumi.Input[_builtins.str] src_ak: Specifies the access key for accessing the source bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] src_bucket: Specifies the name of the source bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] src_cloud_type: Specifies the source cloud service provider. Value options:
               **AWS**, **Azure**, **Aliyun**, **Tencent**, **HuaweiCloud**, **QingCloud**, **KingsoftCloud**, **Baidu**,
               **Qiniu**, **URLSource** and **UCloud**. Default value: **Aliyun**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] src_region: Specifies the region where the source bucket is located.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] src_sk: Specifies the secret key for accessing the source bucket.
               Changing this creates a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: MigrationSyncTaskArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an OMS migration synchronization task resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        source_region = config.require_object("sourceRegion")
        source_bucket = config.require_object("sourceBucket")
        source_access_key = config.require_object("sourceAccessKey")
        source_secret_key = config.require_object("sourceSecretKey")
        dest_region = config.require_object("destRegion")
        dest_bucket = config.require_object("destBucket")
        dest_access_key = config.require_object("destAccessKey")
        dest_secret_key = config.require_object("destSecretKey")
        test = huaweicloud.oms.MigrationSyncTask("test",
            region=dest_region,
            src_cloud_type="HuaweiCloud",
            src_region=source_region,
            src_bucket=source_bucket,
            src_ak=source_access_key,
            src_sk=source_secret_key,
            dst_bucket=dest_bucket,
            dst_ak=dest_access_key,
            dst_sk=dest_secret_key)
        ```

        :param str resource_name: The name of the resource.
        :param MigrationSyncTaskArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(MigrationSyncTaskArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 app_id: Optional[pulumi.Input[_builtins.str]] = None,
                 consistency_check: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 dst_ak: Optional[pulumi.Input[_builtins.str]] = None,
                 dst_bucket: Optional[pulumi.Input[_builtins.str]] = None,
                 dst_sk: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_kms: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_metadata_migration: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_restore: Optional[pulumi.Input[_builtins.bool]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 source_cdn: Optional[pulumi.Input[Union['MigrationSyncTaskSourceCdnArgs', 'MigrationSyncTaskSourceCdnArgsDict']]] = None,
                 src_ak: Optional[pulumi.Input[_builtins.str]] = None,
                 src_bucket: Optional[pulumi.Input[_builtins.str]] = None,
                 src_cloud_type: Optional[pulumi.Input[_builtins.str]] = None,
                 src_region: Optional[pulumi.Input[_builtins.str]] = None,
                 src_sk: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = MigrationSyncTaskArgs.__new__(MigrationSyncTaskArgs)

            __props__.__dict__["action"] = action
            __props__.__dict__["app_id"] = app_id
            __props__.__dict__["consistency_check"] = consistency_check
            __props__.__dict__["description"] = description
            if dst_ak is None and not opts.urn:
                raise TypeError("Missing required property 'dst_ak'")
            __props__.__dict__["dst_ak"] = dst_ak
            if dst_bucket is None and not opts.urn:
                raise TypeError("Missing required property 'dst_bucket'")
            __props__.__dict__["dst_bucket"] = dst_bucket
            if dst_sk is None and not opts.urn:
                raise TypeError("Missing required property 'dst_sk'")
            __props__.__dict__["dst_sk"] = None if dst_sk is None else pulumi.Output.secret(dst_sk)
            __props__.__dict__["enable_kms"] = enable_kms
            __props__.__dict__["enable_metadata_migration"] = enable_metadata_migration
            __props__.__dict__["enable_restore"] = enable_restore
            __props__.__dict__["region"] = region
            __props__.__dict__["source_cdn"] = source_cdn
            if src_ak is None and not opts.urn:
                raise TypeError("Missing required property 'src_ak'")
            __props__.__dict__["src_ak"] = src_ak
            if src_bucket is None and not opts.urn:
                raise TypeError("Missing required property 'src_bucket'")
            __props__.__dict__["src_bucket"] = src_bucket
            __props__.__dict__["src_cloud_type"] = src_cloud_type
            if src_region is None and not opts.urn:
                raise TypeError("Missing required property 'src_region'")
            __props__.__dict__["src_region"] = src_region
            if src_sk is None and not opts.urn:
                raise TypeError("Missing required property 'src_sk'")
            __props__.__dict__["src_sk"] = None if src_sk is None else pulumi.Output.secret(src_sk)
            __props__.__dict__["created_at"] = None
            __props__.__dict__["dst_storage_policy"] = None
            __props__.__dict__["last_start_at"] = None
            __props__.__dict__["monthly_acceptance_request"] = None
            __props__.__dict__["monthly_failure_object"] = None
            __props__.__dict__["monthly_size"] = None
            __props__.__dict__["monthly_skip_object"] = None
            __props__.__dict__["monthly_success_object"] = None
            __props__.__dict__["object_overwrite_mode"] = None
            __props__.__dict__["status"] = None
        secret_opts = pulumi.ResourceOptions(additional_secret_outputs=["dstSk", "srcSk"])
        opts = pulumi.ResourceOptions.merge(opts, secret_opts)
        super(MigrationSyncTask, __self__).__init__(
            'huaweicloud:Oms/migrationSyncTask:MigrationSyncTask',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            action: Optional[pulumi.Input[_builtins.str]] = None,
            app_id: Optional[pulumi.Input[_builtins.str]] = None,
            consistency_check: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            dst_ak: Optional[pulumi.Input[_builtins.str]] = None,
            dst_bucket: Optional[pulumi.Input[_builtins.str]] = None,
            dst_sk: Optional[pulumi.Input[_builtins.str]] = None,
            dst_storage_policy: Optional[pulumi.Input[_builtins.str]] = None,
            enable_kms: Optional[pulumi.Input[_builtins.bool]] = None,
            enable_metadata_migration: Optional[pulumi.Input[_builtins.bool]] = None,
            enable_restore: Optional[pulumi.Input[_builtins.bool]] = None,
            last_start_at: Optional[pulumi.Input[_builtins.str]] = None,
            monthly_acceptance_request: Optional[pulumi.Input[_builtins.float]] = None,
            monthly_failure_object: Optional[pulumi.Input[_builtins.float]] = None,
            monthly_size: Optional[pulumi.Input[_builtins.float]] = None,
            monthly_skip_object: Optional[pulumi.Input[_builtins.float]] = None,
            monthly_success_object: Optional[pulumi.Input[_builtins.float]] = None,
            object_overwrite_mode: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            source_cdn: Optional[pulumi.Input[Union['MigrationSyncTaskSourceCdnArgs', 'MigrationSyncTaskSourceCdnArgsDict']]] = None,
            src_ak: Optional[pulumi.Input[_builtins.str]] = None,
            src_bucket: Optional[pulumi.Input[_builtins.str]] = None,
            src_cloud_type: Optional[pulumi.Input[_builtins.str]] = None,
            src_region: Optional[pulumi.Input[_builtins.str]] = None,
            src_sk: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None) -> 'MigrationSyncTask':
        """
        Get an existing MigrationSyncTask resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] action: Specifies the action for migration synchronization task. Value options:
               
               + **start**: Start a migration synchronization task.
               + **stop**:  Pause a migration synchronization task.
               
               <a name="block--source_cdn"></a>
               The `source_cdn` block supports:
        :param pulumi.Input[_builtins.str] app_id: Specifies the APP ID. This parameter is mandatory when `src_cloud_type` is
               **Tencent**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] consistency_check: Specifies the consistency check method, which is used to check
               whether objects are consistent before and after migration. All check methods take effect for only objects that are
               in the same encryption status in the source and destination buckets. The check method and results will be recorded
               in the object list. Value options:
               
               + **size_last_modified**: the system checks object consistency with object size and last modification time.
               If a source object is as large as but was last modified earlier than its paired destination object, the system
               considers the source object does not need to be migrated or has been already migrated successfully.
               
               + **crc64**: this option is only available for migration on Huawei Cloud or from Alibaba Cloud or Tencent Cloud. If
               a source object and its paired destination object have CRC64 checksums, the checksums are checked. Otherwise, their
               sizes and last modification times are checked.
               
               + **no_check**: this option is only available for migration of HTTP/HTTPS data. This option takes effect for source
               objects whose sizes cannot be obtained using the content-length field in the standard HTTP protocol. These source
               objects will overwrite their paired destination objects directly.
               If the size of a source object can be obtained, its size and last modification time will be checked.
               
               The default value is **size_last_modified**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] created_at: Indicates the time when the migration synchronization task was created.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the synchronization task.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] dst_ak: Specifies the access key for accessing the destination bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] dst_bucket: Specifies the name of the destination bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] dst_sk: Specifies the secret key for accessing the destination bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] dst_storage_policy: Indicates the destination storage class. The value can be:
        :param pulumi.Input[_builtins.bool] enable_kms: Specifies whether to enable the KMS encryption function.
               Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_metadata_migration: Specifies whether metadata migration is enabled.
               Default value: **false**. Even if disabled, the ContentType metadata will still be migrated
               to ensure a successful migration. Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] enable_restore: Specifies whether to automatically restore the archive data. If enabled,
               archive data is automatically restored and migrated. Default value: **false**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] last_start_at: Indicates the last time when the migration synchronization task started.
        :param pulumi.Input[_builtins.float] monthly_acceptance_request: Indicates the number of objects requested to be synchronized in the current month.
        :param pulumi.Input[_builtins.float] monthly_failure_object: Indicates the number of objects that failed to be synchronized in the current month.
        :param pulumi.Input[_builtins.float] monthly_size: Indicates the total size of synchronized objects in the current month, in bytes.
        :param pulumi.Input[_builtins.float] monthly_skip_object: Indicates the number of objects that were ignored in the current month.
        :param pulumi.Input[_builtins.float] monthly_success_object: Indicates the number of objects that were successfully synchronized in the current month.
        :param pulumi.Input[_builtins.str] object_overwrite_mode: Indicates the type of the source object to overwrite its paired destination object.
               The value can be:
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource. Which is also the region
               for the destination bucket. If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[Union['MigrationSyncTaskSourceCdnArgs', 'MigrationSyncTaskSourceCdnArgsDict']] source_cdn: Specifies the CDN information. If this parameter is contained,
               using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
               name during migration. Changing this creates a new resource.
               The source_cdn structure is documented below.
        :param pulumi.Input[_builtins.str] src_ak: Specifies the access key for accessing the source bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] src_bucket: Specifies the name of the source bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] src_cloud_type: Specifies the source cloud service provider. Value options:
               **AWS**, **Azure**, **Aliyun**, **Tencent**, **HuaweiCloud**, **QingCloud**, **KingsoftCloud**, **Baidu**,
               **Qiniu**, **URLSource** and **UCloud**. Default value: **Aliyun**. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] src_region: Specifies the region where the source bucket is located.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] src_sk: Specifies the secret key for accessing the source bucket.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] status: Indicates the status of the migration synchronization task. The value can be:
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _MigrationSyncTaskState.__new__(_MigrationSyncTaskState)

        __props__.__dict__["action"] = action
        __props__.__dict__["app_id"] = app_id
        __props__.__dict__["consistency_check"] = consistency_check
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["description"] = description
        __props__.__dict__["dst_ak"] = dst_ak
        __props__.__dict__["dst_bucket"] = dst_bucket
        __props__.__dict__["dst_sk"] = dst_sk
        __props__.__dict__["dst_storage_policy"] = dst_storage_policy
        __props__.__dict__["enable_kms"] = enable_kms
        __props__.__dict__["enable_metadata_migration"] = enable_metadata_migration
        __props__.__dict__["enable_restore"] = enable_restore
        __props__.__dict__["last_start_at"] = last_start_at
        __props__.__dict__["monthly_acceptance_request"] = monthly_acceptance_request
        __props__.__dict__["monthly_failure_object"] = monthly_failure_object
        __props__.__dict__["monthly_size"] = monthly_size
        __props__.__dict__["monthly_skip_object"] = monthly_skip_object
        __props__.__dict__["monthly_success_object"] = monthly_success_object
        __props__.__dict__["object_overwrite_mode"] = object_overwrite_mode
        __props__.__dict__["region"] = region
        __props__.__dict__["source_cdn"] = source_cdn
        __props__.__dict__["src_ak"] = src_ak
        __props__.__dict__["src_bucket"] = src_bucket
        __props__.__dict__["src_cloud_type"] = src_cloud_type
        __props__.__dict__["src_region"] = src_region
        __props__.__dict__["src_sk"] = src_sk
        __props__.__dict__["status"] = status
        return MigrationSyncTask(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def action(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the action for migration synchronization task. Value options:

        + **start**: Start a migration synchronization task.
        + **stop**:  Pause a migration synchronization task.

        <a name="block--source_cdn"></a>
        The `source_cdn` block supports:
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter(name="appId")
    def app_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the APP ID. This parameter is mandatory when `src_cloud_type` is
        **Tencent**. Changing this creates a new resource.
        """
        return pulumi.get(self, "app_id")

    @_builtins.property
    @pulumi.getter(name="consistencyCheck")
    def consistency_check(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the consistency check method, which is used to check
        whether objects are consistent before and after migration. All check methods take effect for only objects that are
        in the same encryption status in the source and destination buckets. The check method and results will be recorded
        in the object list. Value options:

        + **size_last_modified**: the system checks object consistency with object size and last modification time.
        If a source object is as large as but was last modified earlier than its paired destination object, the system
        considers the source object does not need to be migrated or has been already migrated successfully.

        + **crc64**: this option is only available for migration on Huawei Cloud or from Alibaba Cloud or Tencent Cloud. If
        a source object and its paired destination object have CRC64 checksums, the checksums are checked. Otherwise, their
        sizes and last modification times are checked.

        + **no_check**: this option is only available for migration of HTTP/HTTPS data. This option takes effect for source
        objects whose sizes cannot be obtained using the content-length field in the standard HTTP protocol. These source
        objects will overwrite their paired destination objects directly.
        If the size of a source object can be obtained, its size and last modification time will be checked.

        The default value is **size_last_modified**. Changing this creates a new resource.
        """
        return pulumi.get(self, "consistency_check")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the time when the migration synchronization task was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the description of the synchronization task.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="dstAk")
    def dst_ak(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the access key for accessing the destination bucket.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "dst_ak")

    @_builtins.property
    @pulumi.getter(name="dstBucket")
    def dst_bucket(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of the destination bucket.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "dst_bucket")

    @_builtins.property
    @pulumi.getter(name="dstSk")
    def dst_sk(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the secret key for accessing the destination bucket.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "dst_sk")

    @_builtins.property
    @pulumi.getter(name="dstStoragePolicy")
    def dst_storage_policy(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the destination storage class. The value can be:
        """
        return pulumi.get(self, "dst_storage_policy")

    @_builtins.property
    @pulumi.getter(name="enableKms")
    def enable_kms(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether to enable the KMS encryption function.
        Default value: **false**. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_kms")

    @_builtins.property
    @pulumi.getter(name="enableMetadataMigration")
    def enable_metadata_migration(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether metadata migration is enabled.
        Default value: **false**. Even if disabled, the ContentType metadata will still be migrated
        to ensure a successful migration. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_metadata_migration")

    @_builtins.property
    @pulumi.getter(name="enableRestore")
    def enable_restore(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether to automatically restore the archive data. If enabled,
        archive data is automatically restored and migrated. Default value: **false**. Changing this creates a new resource.
        """
        return pulumi.get(self, "enable_restore")

    @_builtins.property
    @pulumi.getter(name="lastStartAt")
    def last_start_at(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the last time when the migration synchronization task started.
        """
        return pulumi.get(self, "last_start_at")

    @_builtins.property
    @pulumi.getter(name="monthlyAcceptanceRequest")
    def monthly_acceptance_request(self) -> pulumi.Output[_builtins.float]:
        """
        Indicates the number of objects requested to be synchronized in the current month.
        """
        return pulumi.get(self, "monthly_acceptance_request")

    @_builtins.property
    @pulumi.getter(name="monthlyFailureObject")
    def monthly_failure_object(self) -> pulumi.Output[_builtins.float]:
        """
        Indicates the number of objects that failed to be synchronized in the current month.
        """
        return pulumi.get(self, "monthly_failure_object")

    @_builtins.property
    @pulumi.getter(name="monthlySize")
    def monthly_size(self) -> pulumi.Output[_builtins.float]:
        """
        Indicates the total size of synchronized objects in the current month, in bytes.
        """
        return pulumi.get(self, "monthly_size")

    @_builtins.property
    @pulumi.getter(name="monthlySkipObject")
    def monthly_skip_object(self) -> pulumi.Output[_builtins.float]:
        """
        Indicates the number of objects that were ignored in the current month.
        """
        return pulumi.get(self, "monthly_skip_object")

    @_builtins.property
    @pulumi.getter(name="monthlySuccessObject")
    def monthly_success_object(self) -> pulumi.Output[_builtins.float]:
        """
        Indicates the number of objects that were successfully synchronized in the current month.
        """
        return pulumi.get(self, "monthly_success_object")

    @_builtins.property
    @pulumi.getter(name="objectOverwriteMode")
    def object_overwrite_mode(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the type of the source object to overwrite its paired destination object.
        The value can be:
        """
        return pulumi.get(self, "object_overwrite_mode")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource. Which is also the region
        for the destination bucket. If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="sourceCdn")
    def source_cdn(self) -> pulumi.Output[Optional['outputs.MigrationSyncTaskSourceCdn']]:
        """
        Specifies the CDN information. If this parameter is contained,
        using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
        name during migration. Changing this creates a new resource.
        The source_cdn structure is documented below.
        """
        return pulumi.get(self, "source_cdn")

    @_builtins.property
    @pulumi.getter(name="srcAk")
    def src_ak(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the access key for accessing the source bucket.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "src_ak")

    @_builtins.property
    @pulumi.getter(name="srcBucket")
    def src_bucket(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of the source bucket.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "src_bucket")

    @_builtins.property
    @pulumi.getter(name="srcCloudType")
    def src_cloud_type(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the source cloud service provider. Value options:
        **AWS**, **Azure**, **Aliyun**, **Tencent**, **HuaweiCloud**, **QingCloud**, **KingsoftCloud**, **Baidu**,
        **Qiniu**, **URLSource** and **UCloud**. Default value: **Aliyun**. Changing this creates a new resource.
        """
        return pulumi.get(self, "src_cloud_type")

    @_builtins.property
    @pulumi.getter(name="srcRegion")
    def src_region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region where the source bucket is located.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "src_region")

    @_builtins.property
    @pulumi.getter(name="srcSk")
    def src_sk(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the secret key for accessing the source bucket.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "src_sk")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the status of the migration synchronization task. The value can be:
        """
        return pulumi.get(self, "status")

