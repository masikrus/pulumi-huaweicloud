# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['HostGroupArgs', 'HostGroup']

@pulumi.input_type
class HostGroupArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[_builtins.str],
                 agent_access_type: Optional[pulumi.Input[_builtins.str]] = None,
                 host_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 labels: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None):
        """
        The set of arguments for constructing a HostGroup resource.
        :param pulumi.Input[_builtins.str] type: Specifies the type of the host.
               The value can be **linux** and **windows**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] agent_access_type: Specifies the type of the host group.
               The default value is **IP**.
               The valid values are as follows:
               + **IP**
               + **LABEL**
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] host_ids: Specifies the ID list of hosts to join the host group.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] labels: Specifies the custom label list of the host group.
               This parameter is required when `agent_access_type` is set to **LABEL**.
               
               > Currently, a maximum of `10` labels can be created.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the host group.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value to attach to the host group.
        """
        pulumi.set(__self__, "type", type)
        if agent_access_type is not None:
            pulumi.set(__self__, "agent_access_type", agent_access_type)
        if host_ids is not None:
            pulumi.set(__self__, "host_ids", host_ids)
        if labels is not None:
            pulumi.set(__self__, "labels", labels)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the type of the host.
        The value can be **linux** and **windows**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="agentAccessType")
    def agent_access_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the type of the host group.
        The default value is **IP**.
        The valid values are as follows:
        + **IP**
        + **LABEL**
        """
        return pulumi.get(self, "agent_access_type")

    @agent_access_type.setter
    def agent_access_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "agent_access_type", value)

    @_builtins.property
    @pulumi.getter(name="hostIds")
    def host_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the ID list of hosts to join the host group.
        """
        return pulumi.get(self, "host_ids")

    @host_ids.setter
    def host_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "host_ids", value)

    @_builtins.property
    @pulumi.getter
    def labels(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the custom label list of the host group.
        This parameter is required when `agent_access_type` is set to **LABEL**.

        > Currently, a maximum of `10` labels can be created.
        """
        return pulumi.get(self, "labels")

    @labels.setter
    def labels(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "labels", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the host group.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the key/value to attach to the host group.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _HostGroupState:
    def __init__(__self__, *,
                 agent_access_type: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 host_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 labels: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering HostGroup resources.
        :param pulumi.Input[_builtins.str] agent_access_type: Specifies the type of the host group.
               The default value is **IP**.
               The valid values are as follows:
               + **IP**
               + **LABEL**
        :param pulumi.Input[_builtins.str] created_at: The creation time.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] host_ids: Specifies the ID list of hosts to join the host group.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] labels: Specifies the custom label list of the host group.
               This parameter is required when `agent_access_type` is set to **LABEL**.
               
               > Currently, a maximum of `10` labels can be created.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the host group.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value to attach to the host group.
        :param pulumi.Input[_builtins.str] type: Specifies the type of the host.
               The value can be **linux** and **windows**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] updated_at: The latest update time.
        """
        if agent_access_type is not None:
            pulumi.set(__self__, "agent_access_type", agent_access_type)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if host_ids is not None:
            pulumi.set(__self__, "host_ids", host_ids)
        if labels is not None:
            pulumi.set(__self__, "labels", labels)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="agentAccessType")
    def agent_access_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the type of the host group.
        The default value is **IP**.
        The valid values are as follows:
        + **IP**
        + **LABEL**
        """
        return pulumi.get(self, "agent_access_type")

    @agent_access_type.setter
    def agent_access_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "agent_access_type", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The creation time.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="hostIds")
    def host_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the ID list of hosts to join the host group.
        """
        return pulumi.get(self, "host_ids")

    @host_ids.setter
    def host_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "host_ids", value)

    @_builtins.property
    @pulumi.getter
    def labels(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the custom label list of the host group.
        This parameter is required when `agent_access_type` is set to **LABEL**.

        > Currently, a maximum of `10` labels can be created.
        """
        return pulumi.get(self, "labels")

    @labels.setter
    def labels(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "labels", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the host group.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the key/value to attach to the host group.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the type of the host.
        The value can be **linux** and **windows**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The latest update time.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("huaweicloud:Lts/hostGroup:HostGroup")
class HostGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 agent_access_type: Optional[pulumi.Input[_builtins.str]] = None,
                 host_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 labels: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages an LTS host group resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        group_name = config.require_object("groupName")
        host_ids = config.require_object("hostIds")
        test = huaweicloud.lts.HostGroup("test",
            name=group_name,
            type="linux",
            host_ids=host_ids,
            tags={
                "foo": "bar",
                "key": "value",
            })
        ```

        ## Import

        The host group can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Lts/hostGroup:HostGroup test <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] agent_access_type: Specifies the type of the host group.
               The default value is **IP**.
               The valid values are as follows:
               + **IP**
               + **LABEL**
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] host_ids: Specifies the ID list of hosts to join the host group.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] labels: Specifies the custom label list of the host group.
               This parameter is required when `agent_access_type` is set to **LABEL**.
               
               > Currently, a maximum of `10` labels can be created.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the host group.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value to attach to the host group.
        :param pulumi.Input[_builtins.str] type: Specifies the type of the host.
               The value can be **linux** and **windows**.
               
               Changing this parameter will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: HostGroupArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an LTS host group resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        group_name = config.require_object("groupName")
        host_ids = config.require_object("hostIds")
        test = huaweicloud.lts.HostGroup("test",
            name=group_name,
            type="linux",
            host_ids=host_ids,
            tags={
                "foo": "bar",
                "key": "value",
            })
        ```

        ## Import

        The host group can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Lts/hostGroup:HostGroup test <id>
        ```

        :param str resource_name: The name of the resource.
        :param HostGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(HostGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 agent_access_type: Optional[pulumi.Input[_builtins.str]] = None,
                 host_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 labels: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = HostGroupArgs.__new__(HostGroupArgs)

            __props__.__dict__["agent_access_type"] = agent_access_type
            __props__.__dict__["host_ids"] = host_ids
            __props__.__dict__["labels"] = labels
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            __props__.__dict__["tags"] = tags
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
            __props__.__dict__["created_at"] = None
            __props__.__dict__["updated_at"] = None
        super(HostGroup, __self__).__init__(
            'huaweicloud:Lts/hostGroup:HostGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            agent_access_type: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            host_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            labels: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            type: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'HostGroup':
        """
        Get an existing HostGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] agent_access_type: Specifies the type of the host group.
               The default value is **IP**.
               The valid values are as follows:
               + **IP**
               + **LABEL**
        :param pulumi.Input[_builtins.str] created_at: The creation time.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] host_ids: Specifies the ID list of hosts to join the host group.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] labels: Specifies the custom label list of the host group.
               This parameter is required when `agent_access_type` is set to **LABEL**.
               
               > Currently, a maximum of `10` labels can be created.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the host group.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value to attach to the host group.
        :param pulumi.Input[_builtins.str] type: Specifies the type of the host.
               The value can be **linux** and **windows**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] updated_at: The latest update time.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _HostGroupState.__new__(_HostGroupState)

        __props__.__dict__["agent_access_type"] = agent_access_type
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["host_ids"] = host_ids
        __props__.__dict__["labels"] = labels
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["tags"] = tags
        __props__.__dict__["type"] = type
        __props__.__dict__["updated_at"] = updated_at
        return HostGroup(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="agentAccessType")
    def agent_access_type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the type of the host group.
        The default value is **IP**.
        The valid values are as follows:
        + **IP**
        + **LABEL**
        """
        return pulumi.get(self, "agent_access_type")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The creation time.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="hostIds")
    def host_ids(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        Specifies the ID list of hosts to join the host group.
        """
        return pulumi.get(self, "host_ids")

    @_builtins.property
    @pulumi.getter
    def labels(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        Specifies the custom label list of the host group.
        This parameter is required when `agent_access_type` is set to **LABEL**.

        > Currently, a maximum of `10` labels can be created.
        """
        return pulumi.get(self, "labels")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of the host group.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Mapping[str, _builtins.str]]:
        """
        Specifies the key/value to attach to the host group.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the type of the host.
        The value can be **linux** and **windows**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The latest update time.
        """
        return pulumi.get(self, "updated_at")

