# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['StreamIndexConfigurationArgs', 'StreamIndexConfiguration']

@pulumi.input_type
class StreamIndexConfigurationArgs:
    def __init__(__self__, *,
                 group_id: pulumi.Input[_builtins.str],
                 stream_id: pulumi.Input[_builtins.str],
                 fields: Optional[pulumi.Input[Sequence[pulumi.Input['StreamIndexConfigurationFieldArgs']]]] = None,
                 full_text_index: Optional[pulumi.Input['StreamIndexConfigurationFullTextIndexArgs']] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a StreamIndexConfiguration resource.
        :param pulumi.Input[_builtins.str] group_id: Specifies the ID of the log group to which the index configuration belongs.
        :param pulumi.Input[_builtins.str] stream_id: Specifies the ID of the log stream to which the index configuration belongs.
        :param pulumi.Input[Sequence[pulumi.Input['StreamIndexConfigurationFieldArgs']]] fields: Specifies the list of the index fields.  
               The fields structure is documented below.
               
               <a name="stream_index_config_full_text_index"></a>
               The `full_text_index` block supports:
        :param pulumi.Input['StreamIndexConfigurationFullTextIndexArgs'] full_text_index: Specifies the full-text index configuration.  
               The full_text_index structure is documented below.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        """
        pulumi.set(__self__, "group_id", group_id)
        pulumi.set(__self__, "stream_id", stream_id)
        if fields is not None:
            pulumi.set(__self__, "fields", fields)
        if full_text_index is not None:
            pulumi.set(__self__, "full_text_index", full_text_index)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the log group to which the index configuration belongs.
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter(name="streamId")
    def stream_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the log stream to which the index configuration belongs.
        """
        return pulumi.get(self, "stream_id")

    @stream_id.setter
    def stream_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "stream_id", value)

    @_builtins.property
    @pulumi.getter
    def fields(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['StreamIndexConfigurationFieldArgs']]]]:
        """
        Specifies the list of the index fields.  
        The fields structure is documented below.

        <a name="stream_index_config_full_text_index"></a>
        The `full_text_index` block supports:
        """
        return pulumi.get(self, "fields")

    @fields.setter
    def fields(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['StreamIndexConfigurationFieldArgs']]]]):
        pulumi.set(self, "fields", value)

    @_builtins.property
    @pulumi.getter(name="fullTextIndex")
    def full_text_index(self) -> Optional[pulumi.Input['StreamIndexConfigurationFullTextIndexArgs']]:
        """
        Specifies the full-text index configuration.  
        The full_text_index structure is documented below.
        """
        return pulumi.get(self, "full_text_index")

    @full_text_index.setter
    def full_text_index(self, value: Optional[pulumi.Input['StreamIndexConfigurationFullTextIndexArgs']]):
        pulumi.set(self, "full_text_index", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _StreamIndexConfigurationState:
    def __init__(__self__, *,
                 fields: Optional[pulumi.Input[Sequence[pulumi.Input['StreamIndexConfigurationFieldArgs']]]] = None,
                 full_text_index: Optional[pulumi.Input['StreamIndexConfigurationFullTextIndexArgs']] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 stream_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering StreamIndexConfiguration resources.
        :param pulumi.Input[Sequence[pulumi.Input['StreamIndexConfigurationFieldArgs']]] fields: Specifies the list of the index fields.  
               The fields structure is documented below.
               
               <a name="stream_index_config_full_text_index"></a>
               The `full_text_index` block supports:
        :param pulumi.Input['StreamIndexConfigurationFullTextIndexArgs'] full_text_index: Specifies the full-text index configuration.  
               The full_text_index structure is documented below.
        :param pulumi.Input[_builtins.str] group_id: Specifies the ID of the log group to which the index configuration belongs.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] stream_id: Specifies the ID of the log stream to which the index configuration belongs.
        """
        if fields is not None:
            pulumi.set(__self__, "fields", fields)
        if full_text_index is not None:
            pulumi.set(__self__, "full_text_index", full_text_index)
        if group_id is not None:
            pulumi.set(__self__, "group_id", group_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if stream_id is not None:
            pulumi.set(__self__, "stream_id", stream_id)

    @_builtins.property
    @pulumi.getter
    def fields(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['StreamIndexConfigurationFieldArgs']]]]:
        """
        Specifies the list of the index fields.  
        The fields structure is documented below.

        <a name="stream_index_config_full_text_index"></a>
        The `full_text_index` block supports:
        """
        return pulumi.get(self, "fields")

    @fields.setter
    def fields(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['StreamIndexConfigurationFieldArgs']]]]):
        pulumi.set(self, "fields", value)

    @_builtins.property
    @pulumi.getter(name="fullTextIndex")
    def full_text_index(self) -> Optional[pulumi.Input['StreamIndexConfigurationFullTextIndexArgs']]:
        """
        Specifies the full-text index configuration.  
        The full_text_index structure is documented below.
        """
        return pulumi.get(self, "full_text_index")

    @full_text_index.setter
    def full_text_index(self, value: Optional[pulumi.Input['StreamIndexConfigurationFullTextIndexArgs']]):
        pulumi.set(self, "full_text_index", value)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the log group to which the index configuration belongs.
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="streamId")
    def stream_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the log stream to which the index configuration belongs.
        """
        return pulumi.get(self, "stream_id")

    @stream_id.setter
    def stream_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "stream_id", value)


@pulumi.type_token("huaweicloud:Lts/streamIndexConfiguration:StreamIndexConfiguration")
class StreamIndexConfiguration(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 fields: Optional[pulumi.Input[Sequence[pulumi.Input[Union['StreamIndexConfigurationFieldArgs', 'StreamIndexConfigurationFieldArgsDict']]]]] = None,
                 full_text_index: Optional[pulumi.Input[Union['StreamIndexConfigurationFullTextIndexArgs', 'StreamIndexConfigurationFullTextIndexArgsDict']]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 stream_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages an LTS log stream index configuration resource within HuaweiCloud.

        > 1. Only one resource can be created in one log stream.
        >       <br/>2. Deleting this resource will not initialize the currently configured index, but will only remove
        >       the resource information from the tfstate file.

        ## Import

        The resource can be imported using the `group_id` and `stream_id`, separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Lts/streamIndexConfiguration:StreamIndexConfiguration test <group_id>/<stream_id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['StreamIndexConfigurationFieldArgs', 'StreamIndexConfigurationFieldArgsDict']]]] fields: Specifies the list of the index fields.  
               The fields structure is documented below.
               
               <a name="stream_index_config_full_text_index"></a>
               The `full_text_index` block supports:
        :param pulumi.Input[Union['StreamIndexConfigurationFullTextIndexArgs', 'StreamIndexConfigurationFullTextIndexArgsDict']] full_text_index: Specifies the full-text index configuration.  
               The full_text_index structure is documented below.
        :param pulumi.Input[_builtins.str] group_id: Specifies the ID of the log group to which the index configuration belongs.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] stream_id: Specifies the ID of the log stream to which the index configuration belongs.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: StreamIndexConfigurationArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an LTS log stream index configuration resource within HuaweiCloud.

        > 1. Only one resource can be created in one log stream.
        >       <br/>2. Deleting this resource will not initialize the currently configured index, but will only remove
        >       the resource information from the tfstate file.

        ## Import

        The resource can be imported using the `group_id` and `stream_id`, separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Lts/streamIndexConfiguration:StreamIndexConfiguration test <group_id>/<stream_id>
        ```

        :param str resource_name: The name of the resource.
        :param StreamIndexConfigurationArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(StreamIndexConfigurationArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 fields: Optional[pulumi.Input[Sequence[pulumi.Input[Union['StreamIndexConfigurationFieldArgs', 'StreamIndexConfigurationFieldArgsDict']]]]] = None,
                 full_text_index: Optional[pulumi.Input[Union['StreamIndexConfigurationFullTextIndexArgs', 'StreamIndexConfigurationFullTextIndexArgsDict']]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 stream_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = StreamIndexConfigurationArgs.__new__(StreamIndexConfigurationArgs)

            __props__.__dict__["fields"] = fields
            __props__.__dict__["full_text_index"] = full_text_index
            if group_id is None and not opts.urn:
                raise TypeError("Missing required property 'group_id'")
            __props__.__dict__["group_id"] = group_id
            __props__.__dict__["region"] = region
            if stream_id is None and not opts.urn:
                raise TypeError("Missing required property 'stream_id'")
            __props__.__dict__["stream_id"] = stream_id
        super(StreamIndexConfiguration, __self__).__init__(
            'huaweicloud:Lts/streamIndexConfiguration:StreamIndexConfiguration',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            fields: Optional[pulumi.Input[Sequence[pulumi.Input[Union['StreamIndexConfigurationFieldArgs', 'StreamIndexConfigurationFieldArgsDict']]]]] = None,
            full_text_index: Optional[pulumi.Input[Union['StreamIndexConfigurationFullTextIndexArgs', 'StreamIndexConfigurationFullTextIndexArgsDict']]] = None,
            group_id: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            stream_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'StreamIndexConfiguration':
        """
        Get an existing StreamIndexConfiguration resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['StreamIndexConfigurationFieldArgs', 'StreamIndexConfigurationFieldArgsDict']]]] fields: Specifies the list of the index fields.  
               The fields structure is documented below.
               
               <a name="stream_index_config_full_text_index"></a>
               The `full_text_index` block supports:
        :param pulumi.Input[Union['StreamIndexConfigurationFullTextIndexArgs', 'StreamIndexConfigurationFullTextIndexArgsDict']] full_text_index: Specifies the full-text index configuration.  
               The full_text_index structure is documented below.
        :param pulumi.Input[_builtins.str] group_id: Specifies the ID of the log group to which the index configuration belongs.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] stream_id: Specifies the ID of the log stream to which the index configuration belongs.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _StreamIndexConfigurationState.__new__(_StreamIndexConfigurationState)

        __props__.__dict__["fields"] = fields
        __props__.__dict__["full_text_index"] = full_text_index
        __props__.__dict__["group_id"] = group_id
        __props__.__dict__["region"] = region
        __props__.__dict__["stream_id"] = stream_id
        return StreamIndexConfiguration(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def fields(self) -> pulumi.Output[Optional[Sequence['outputs.StreamIndexConfigurationField']]]:
        """
        Specifies the list of the index fields.  
        The fields structure is documented below.

        <a name="stream_index_config_full_text_index"></a>
        The `full_text_index` block supports:
        """
        return pulumi.get(self, "fields")

    @_builtins.property
    @pulumi.getter(name="fullTextIndex")
    def full_text_index(self) -> pulumi.Output['outputs.StreamIndexConfigurationFullTextIndex']:
        """
        Specifies the full-text index configuration.  
        The full_text_index structure is documented below.
        """
        return pulumi.get(self, "full_text_index")

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the log group to which the index configuration belongs.
        """
        return pulumi.get(self, "group_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="streamId")
    def stream_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the log stream to which the index configuration belongs.
        """
        return pulumi.get(self, "stream_id")

