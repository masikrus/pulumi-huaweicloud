# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['WafAccessArgs', 'WafAccess']

@pulumi.input_type
class WafAccessArgs:
    def __init__(__self__, *,
                 lts_group_id: pulumi.Input[_builtins.str],
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lts_access_stream_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lts_attack_stream_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a WafAccess resource.
        :param pulumi.Input[_builtins.str] lts_group_id: Specifies the log group ID.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.  
               This parameter is only valid for enterprise users. If not specified, the default enterprise project will be used.
               The default enterprise project ID is **0**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] lts_access_stream_id: Specifies the log stream ID for access logs.
               
               > The fields `lts_attack_stream_id` and `lts_access_stream_id` must be specified as different log streams.
        :param pulumi.Input[_builtins.str] lts_attack_stream_id: Specifies the log stream ID for attack logs.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "lts_group_id", lts_group_id)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if lts_access_stream_id is not None:
            pulumi.set(__self__, "lts_access_stream_id", lts_access_stream_id)
        if lts_attack_stream_id is not None:
            pulumi.set(__self__, "lts_attack_stream_id", lts_attack_stream_id)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="ltsGroupId")
    def lts_group_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the log group ID.
        """
        return pulumi.get(self, "lts_group_id")

    @lts_group_id.setter
    def lts_group_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "lts_group_id", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID.  
        This parameter is only valid for enterprise users. If not specified, the default enterprise project will be used.
        The default enterprise project ID is **0**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="ltsAccessStreamId")
    def lts_access_stream_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the log stream ID for access logs.

        > The fields `lts_attack_stream_id` and `lts_access_stream_id` must be specified as different log streams.
        """
        return pulumi.get(self, "lts_access_stream_id")

    @lts_access_stream_id.setter
    def lts_access_stream_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "lts_access_stream_id", value)

    @_builtins.property
    @pulumi.getter(name="ltsAttackStreamId")
    def lts_attack_stream_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the log stream ID for attack logs.
        """
        return pulumi.get(self, "lts_attack_stream_id")

    @lts_attack_stream_id.setter
    def lts_attack_stream_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "lts_attack_stream_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _WafAccessState:
    def __init__(__self__, *,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lts_access_stream_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lts_attack_stream_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lts_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering WafAccess resources.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.  
               This parameter is only valid for enterprise users. If not specified, the default enterprise project will be used.
               The default enterprise project ID is **0**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] lts_access_stream_id: Specifies the log stream ID for access logs.
               
               > The fields `lts_attack_stream_id` and `lts_access_stream_id` must be specified as different log streams.
        :param pulumi.Input[_builtins.str] lts_attack_stream_id: Specifies the log stream ID for attack logs.
        :param pulumi.Input[_builtins.str] lts_group_id: Specifies the log group ID.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if lts_access_stream_id is not None:
            pulumi.set(__self__, "lts_access_stream_id", lts_access_stream_id)
        if lts_attack_stream_id is not None:
            pulumi.set(__self__, "lts_attack_stream_id", lts_attack_stream_id)
        if lts_group_id is not None:
            pulumi.set(__self__, "lts_group_id", lts_group_id)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID.  
        This parameter is only valid for enterprise users. If not specified, the default enterprise project will be used.
        The default enterprise project ID is **0**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="ltsAccessStreamId")
    def lts_access_stream_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the log stream ID for access logs.

        > The fields `lts_attack_stream_id` and `lts_access_stream_id` must be specified as different log streams.
        """
        return pulumi.get(self, "lts_access_stream_id")

    @lts_access_stream_id.setter
    def lts_access_stream_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "lts_access_stream_id", value)

    @_builtins.property
    @pulumi.getter(name="ltsAttackStreamId")
    def lts_attack_stream_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the log stream ID for attack logs.
        """
        return pulumi.get(self, "lts_attack_stream_id")

    @lts_attack_stream_id.setter
    def lts_attack_stream_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "lts_attack_stream_id", value)

    @_builtins.property
    @pulumi.getter(name="ltsGroupId")
    def lts_group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the log group ID.
        """
        return pulumi.get(self, "lts_group_id")

    @lts_group_id.setter
    def lts_group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "lts_group_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.type_token("huaweicloud:Lts/wafAccess:WafAccess")
class WafAccess(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lts_access_stream_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lts_attack_stream_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lts_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages an LTS access WAF logs configuration resource within HuaweiCloud.

        > **NOTE:** This resource depends on WAF instances, the instance can be Cloud Mode or Dedicated Mode.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        lts_group_id = config.require_object("ltsGroupId")
        lts_attack_stream_id = config.require_object("ltsAttackStreamId")
        lts_access_stream_id = config.require_object("ltsAccessStreamId")
        enterprise_project_id = config.require_object("enterpriseProjectId")
        test = huaweicloud.lts.WafAccess("test",
            lts_group_id=lts_group_id,
            lts_attack_stream_id=lts_attack_stream_id,
            lts_access_stream_id=lts_access_stream_id,
            enterprise_project_id=enterprise_project_id)
        ```

        ## Import

        For enterprise users, The resource can be imported using the `enterprise_project_id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Lts/wafAccess:WafAccess test <enterprise_project_id>
        ```

        For non-enterprise users, The resource can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Lts/wafAccess:WafAccess test <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.  
               This parameter is only valid for enterprise users. If not specified, the default enterprise project will be used.
               The default enterprise project ID is **0**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] lts_access_stream_id: Specifies the log stream ID for access logs.
               
               > The fields `lts_attack_stream_id` and `lts_access_stream_id` must be specified as different log streams.
        :param pulumi.Input[_builtins.str] lts_attack_stream_id: Specifies the log stream ID for attack logs.
        :param pulumi.Input[_builtins.str] lts_group_id: Specifies the log group ID.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: WafAccessArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an LTS access WAF logs configuration resource within HuaweiCloud.

        > **NOTE:** This resource depends on WAF instances, the instance can be Cloud Mode or Dedicated Mode.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        lts_group_id = config.require_object("ltsGroupId")
        lts_attack_stream_id = config.require_object("ltsAttackStreamId")
        lts_access_stream_id = config.require_object("ltsAccessStreamId")
        enterprise_project_id = config.require_object("enterpriseProjectId")
        test = huaweicloud.lts.WafAccess("test",
            lts_group_id=lts_group_id,
            lts_attack_stream_id=lts_attack_stream_id,
            lts_access_stream_id=lts_access_stream_id,
            enterprise_project_id=enterprise_project_id)
        ```

        ## Import

        For enterprise users, The resource can be imported using the `enterprise_project_id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Lts/wafAccess:WafAccess test <enterprise_project_id>
        ```

        For non-enterprise users, The resource can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Lts/wafAccess:WafAccess test <id>
        ```

        :param str resource_name: The name of the resource.
        :param WafAccessArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(WafAccessArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lts_access_stream_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lts_attack_stream_id: Optional[pulumi.Input[_builtins.str]] = None,
                 lts_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = WafAccessArgs.__new__(WafAccessArgs)

            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            __props__.__dict__["lts_access_stream_id"] = lts_access_stream_id
            __props__.__dict__["lts_attack_stream_id"] = lts_attack_stream_id
            if lts_group_id is None and not opts.urn:
                raise TypeError("Missing required property 'lts_group_id'")
            __props__.__dict__["lts_group_id"] = lts_group_id
            __props__.__dict__["region"] = region
        super(WafAccess, __self__).__init__(
            'huaweicloud:Lts/wafAccess:WafAccess',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            lts_access_stream_id: Optional[pulumi.Input[_builtins.str]] = None,
            lts_attack_stream_id: Optional[pulumi.Input[_builtins.str]] = None,
            lts_group_id: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None) -> 'WafAccess':
        """
        Get an existing WafAccess resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.  
               This parameter is only valid for enterprise users. If not specified, the default enterprise project will be used.
               The default enterprise project ID is **0**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] lts_access_stream_id: Specifies the log stream ID for access logs.
               
               > The fields `lts_attack_stream_id` and `lts_access_stream_id` must be specified as different log streams.
        :param pulumi.Input[_builtins.str] lts_attack_stream_id: Specifies the log stream ID for attack logs.
        :param pulumi.Input[_builtins.str] lts_group_id: Specifies the log group ID.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _WafAccessState.__new__(_WafAccessState)

        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["lts_access_stream_id"] = lts_access_stream_id
        __props__.__dict__["lts_attack_stream_id"] = lts_attack_stream_id
        __props__.__dict__["lts_group_id"] = lts_group_id
        __props__.__dict__["region"] = region
        return WafAccess(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the enterprise project ID.  
        This parameter is only valid for enterprise users. If not specified, the default enterprise project will be used.
        The default enterprise project ID is **0**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="ltsAccessStreamId")
    def lts_access_stream_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the log stream ID for access logs.

        > The fields `lts_attack_stream_id` and `lts_access_stream_id` must be specified as different log streams.
        """
        return pulumi.get(self, "lts_access_stream_id")

    @_builtins.property
    @pulumi.getter(name="ltsAttackStreamId")
    def lts_attack_stream_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the log stream ID for attack logs.
        """
        return pulumi.get(self, "lts_attack_stream_id")

    @_builtins.property
    @pulumi.getter(name="ltsGroupId")
    def lts_group_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the log group ID.
        """
        return pulumi.get(self, "lts_group_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

