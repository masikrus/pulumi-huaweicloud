# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['InstanceArgs', 'Instance']

@pulumi.input_type
class InstanceArgs:
    def __init__(__self__, *,
                 availability_zone: pulumi.Input[_builtins.str],
                 charging_mode: pulumi.Input[_builtins.str],
                 flavor: pulumi.Input[_builtins.str],
                 period: pulumi.Input[_builtins.int],
                 period_unit: pulumi.Input[_builtins.str],
                 resource_spec_code: pulumi.Input[_builtins.str],
                 security_group_id: pulumi.Input[_builtins.str],
                 subnet_id: pulumi.Input[_builtins.str],
                 vpc_id: pulumi.Input[_builtins.str],
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 product_id: Optional[pulumi.Input[_builtins.str]] = None,
                 product_spec_desc: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None):
        """
        The set of arguments for constructing a Instance resource.
        :param pulumi.Input[_builtins.str] availability_zone: Specifies the availability zone to which the instance belongs.
               Primary and secondary AZs are separated by commas. Example: **cn-north-4a,cn-north-4b**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the billing mode.  
               The valid value is **prePaid**, which means the yearly/monthly billing mode.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] flavor: Specifies the flavor. Possible values are:
               + **c3ne.xlarge.4**: Basic version.
               + **c3ne.2xlarge.4**: Professional version.
               + **c6.4xlarge.4**: Advanced version.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] period: Specifies the charging period.  
               If `period_unit` is set to **month**, the value ranges from `1` to `9`.
               If `period_unit` is set to **year**, the value ranges from `1` to `3`.
               This parameter is mandatory if `charging_mode` is set to **prePaid**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the charging period unit.  
               Valid values are **month** and **year**. This parameter is mandatory if `charging_mode` is set to **prePaid**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_spec_code: Specifies the resource specifications. Possible values are:
               + **dbss.bypassaudit.low**: Basic version.
               + **dbss.bypassaudit.medium**: Professional version.
               + **dbss.bypassaudit.high**: Advanced version.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] security_group_id: Specifies the ID of the security group.
        :param pulumi.Input[_builtins.str] subnet_id: Specifies the subnet ID of the NIC.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] vpc_id: Specifies the VPC ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] action: Specifies operation the DBSS instance status.
               The valid values are as follows:
               + **start**: Indicates enable the DBSS instance.
               + **stop**: Indicates disable the DBSS instance.
               + **reboot**: Indicates restart the DBSS instance.
               
               > 1.After a DBSS instance created, the default status is **start**.
               <br/>2.The same operation cannot be performed repeatedly.
               <br/>3.The **stop** or **reboot** operation can only be performed when the DBSS instance has no tasks
               and is in **start** status.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether auto-renew is enabled. Valid values are **true** and
               **false**. Defaults to **false**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the instance.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the Enterprise project ID.
               For enterprise users, if omitted, default enterprise project will be used.
        :param pulumi.Input[_builtins.str] ip_address: Specifies the IP address.
               If the value of this parameter is left blank or is set to an empty string, the IP address is automatically assigned.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the instance name. The name can contain `1` to `64` characters.
               Only letters, digits, underscores (_), and hyphens (-) are allowed.
        :param pulumi.Input[_builtins.str] product_spec_desc: Specifies the product specification description in
               JSON string format: `{"specDesc":{"zh-cn":{"key1":"value1"},"en-us":{"key1":"value1"}}}`
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the instance.
        """
        pulumi.set(__self__, "availability_zone", availability_zone)
        pulumi.set(__self__, "charging_mode", charging_mode)
        pulumi.set(__self__, "flavor", flavor)
        pulumi.set(__self__, "period", period)
        pulumi.set(__self__, "period_unit", period_unit)
        pulumi.set(__self__, "resource_spec_code", resource_spec_code)
        pulumi.set(__self__, "security_group_id", security_group_id)
        pulumi.set(__self__, "subnet_id", subnet_id)
        pulumi.set(__self__, "vpc_id", vpc_id)
        if action is not None:
            pulumi.set(__self__, "action", action)
        if auto_renew is not None:
            pulumi.set(__self__, "auto_renew", auto_renew)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if ip_address is not None:
            pulumi.set(__self__, "ip_address", ip_address)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if product_id is not None:
            warnings.warn("""product_id is deprecated.""", DeprecationWarning)
            pulumi.log.warn("""product_id is deprecated: product_id is deprecated.""")
        if product_id is not None:
            pulumi.set(__self__, "product_id", product_id)
        if product_spec_desc is not None:
            pulumi.set(__self__, "product_spec_desc", product_spec_desc)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="availabilityZone")
    def availability_zone(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the availability zone to which the instance belongs.
        Primary and secondary AZs are separated by commas. Example: **cn-north-4a,cn-north-4b**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "availability_zone")

    @availability_zone.setter
    def availability_zone(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "availability_zone", value)

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the billing mode.  
        The valid value is **prePaid**, which means the yearly/monthly billing mode.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "charging_mode")

    @charging_mode.setter
    def charging_mode(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "charging_mode", value)

    @_builtins.property
    @pulumi.getter
    def flavor(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the flavor. Possible values are:
        + **c3ne.xlarge.4**: Basic version.
        + **c3ne.2xlarge.4**: Professional version.
        + **c6.4xlarge.4**: Advanced version.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "flavor")

    @flavor.setter
    def flavor(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "flavor", value)

    @_builtins.property
    @pulumi.getter
    def period(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the charging period.  
        If `period_unit` is set to **month**, the value ranges from `1` to `9`.
        If `period_unit` is set to **year**, the value ranges from `1` to `3`.
        This parameter is mandatory if `charging_mode` is set to **prePaid**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "period", value)

    @_builtins.property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the charging period unit.  
        Valid values are **month** and **year**. This parameter is mandatory if `charging_mode` is set to **prePaid**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "period_unit")

    @period_unit.setter
    def period_unit(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "period_unit", value)

    @_builtins.property
    @pulumi.getter(name="resourceSpecCode")
    def resource_spec_code(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the resource specifications. Possible values are:
        + **dbss.bypassaudit.low**: Basic version.
        + **dbss.bypassaudit.medium**: Professional version.
        + **dbss.bypassaudit.high**: Advanced version.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "resource_spec_code")

    @resource_spec_code.setter
    def resource_spec_code(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "resource_spec_code", value)

    @_builtins.property
    @pulumi.getter(name="securityGroupId")
    def security_group_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the security group.
        """
        return pulumi.get(self, "security_group_id")

    @security_group_id.setter
    def security_group_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "security_group_id", value)

    @_builtins.property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the subnet ID of the NIC.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "subnet_id", value)

    @_builtins.property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the VPC ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "vpc_id", value)

    @_builtins.property
    @pulumi.getter
    def action(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies operation the DBSS instance status.
        The valid values are as follows:
        + **start**: Indicates enable the DBSS instance.
        + **stop**: Indicates disable the DBSS instance.
        + **reboot**: Indicates restart the DBSS instance.

        > 1.After a DBSS instance created, the default status is **start**.
        <br/>2.The same operation cannot be performed repeatedly.
        <br/>3.The **stop** or **reboot** operation can only be performed when the DBSS instance has no tasks
        and is in **start** status.
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "action", value)

    @_builtins.property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies whether auto-renew is enabled. Valid values are **true** and
        **false**. Defaults to **false**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "auto_renew")

    @auto_renew.setter
    def auto_renew(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "auto_renew", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the instance.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the Enterprise project ID.
        For enterprise users, if omitted, default enterprise project will be used.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the IP address.
        If the value of this parameter is left blank or is set to an empty string, the IP address is automatically assigned.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "ip_address")

    @ip_address.setter
    def ip_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ip_address", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the instance name. The name can contain `1` to `64` characters.
        Only letters, digits, underscores (_), and hyphens (-) are allowed.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="productId")
    @_utilities.deprecated("""product_id is deprecated.""")
    def product_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "product_id")

    @product_id.setter
    def product_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "product_id", value)

    @_builtins.property
    @pulumi.getter(name="productSpecDesc")
    def product_spec_desc(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the product specification description in
        JSON string format: `{"specDesc":{"zh-cn":{"key1":"value1"},"en-us":{"key1":"value1"}}}`

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "product_spec_desc")

    @product_spec_desc.setter
    def product_spec_desc(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "product_spec_desc", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the key/value pairs to associate with the instance.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _InstanceState:
    def __init__(__self__, *,
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 connect_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 connect_ipv6: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 expired_at: Optional[pulumi.Input[_builtins.str]] = None,
                 flavor: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 port_id: Optional[pulumi.Input[_builtins.str]] = None,
                 product_id: Optional[pulumi.Input[_builtins.str]] = None,
                 product_spec_desc: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_spec_code: Optional[pulumi.Input[_builtins.str]] = None,
                 security_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 vpc_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering Instance resources.
        :param pulumi.Input[_builtins.str] action: Specifies operation the DBSS instance status.
               The valid values are as follows:
               + **start**: Indicates enable the DBSS instance.
               + **stop**: Indicates disable the DBSS instance.
               + **reboot**: Indicates restart the DBSS instance.
               
               > 1.After a DBSS instance created, the default status is **start**.
               <br/>2.The same operation cannot be performed repeatedly.
               <br/>3.The **stop** or **reboot** operation can only be performed when the DBSS instance has no tasks
               and is in **start** status.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether auto-renew is enabled. Valid values are **true** and
               **false**. Defaults to **false**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] availability_zone: Specifies the availability zone to which the instance belongs.
               Primary and secondary AZs are separated by commas. Example: **cn-north-4a,cn-north-4b**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the billing mode.  
               The valid value is **prePaid**, which means the yearly/monthly billing mode.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] connect_ip: The connection address.
        :param pulumi.Input[_builtins.str] connect_ipv6: The IPv6 address.
        :param pulumi.Input[_builtins.str] created_at: The creation time
        :param pulumi.Input[_builtins.str] description: Specifies the description of the instance.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the Enterprise project ID.
               For enterprise users, if omitted, default enterprise project will be used.
        :param pulumi.Input[_builtins.str] expired_at: The expired time
        :param pulumi.Input[_builtins.str] flavor: Specifies the flavor. Possible values are:
               + **c3ne.xlarge.4**: Basic version.
               + **c3ne.2xlarge.4**: Professional version.
               + **c6.4xlarge.4**: Advanced version.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] instance_id: The ID of the audit instance.
        :param pulumi.Input[_builtins.str] ip_address: Specifies the IP address.
               If the value of this parameter is left blank or is set to an empty string, the IP address is automatically assigned.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the instance name. The name can contain `1` to `64` characters.
               Only letters, digits, underscores (_), and hyphens (-) are allowed.
        :param pulumi.Input[_builtins.int] period: Specifies the charging period.  
               If `period_unit` is set to **month**, the value ranges from `1` to `9`.
               If `period_unit` is set to **year**, the value ranges from `1` to `3`.
               This parameter is mandatory if `charging_mode` is set to **prePaid**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the charging period unit.  
               Valid values are **month** and **year**. This parameter is mandatory if `charging_mode` is set to **prePaid**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] port_id: The ID of the port that the EIP is bound to.
        :param pulumi.Input[_builtins.str] product_spec_desc: Specifies the product specification description in
               JSON string format: `{"specDesc":{"zh-cn":{"key1":"value1"},"en-us":{"key1":"value1"}}}`
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_spec_code: Specifies the resource specifications. Possible values are:
               + **dbss.bypassaudit.low**: Basic version.
               + **dbss.bypassaudit.medium**: Professional version.
               + **dbss.bypassaudit.high**: Advanced version.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] security_group_id: Specifies the ID of the security group.
        :param pulumi.Input[_builtins.str] status: The instance status. The value can be:
               + **SHUTOFF**: disabled;
               + **ACTIVE**: operations allowed;
               + **DELETING**: no operations allowed;
               + **BUILD**: no operations allowed;
               + **DELETED**: not displayed;
               + **ERROR**: only deletion allowed;
               + **HAWAIT**: waiting for the standby to be created, no operations allowed;
               + **FROZEN**: only renewal, binding, and unbinding allowed;
               + **UPGRADING**: no operations allowed;
        :param pulumi.Input[_builtins.str] subnet_id: Specifies the subnet ID of the NIC.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the instance.
        :param pulumi.Input[_builtins.str] vpc_id: Specifies the VPC ID.
               
               Changing this parameter will create a new resource.
        """
        if action is not None:
            pulumi.set(__self__, "action", action)
        if auto_renew is not None:
            pulumi.set(__self__, "auto_renew", auto_renew)
        if availability_zone is not None:
            pulumi.set(__self__, "availability_zone", availability_zone)
        if charging_mode is not None:
            pulumi.set(__self__, "charging_mode", charging_mode)
        if connect_ip is not None:
            pulumi.set(__self__, "connect_ip", connect_ip)
        if connect_ipv6 is not None:
            pulumi.set(__self__, "connect_ipv6", connect_ipv6)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if expired_at is not None:
            pulumi.set(__self__, "expired_at", expired_at)
        if flavor is not None:
            pulumi.set(__self__, "flavor", flavor)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if ip_address is not None:
            pulumi.set(__self__, "ip_address", ip_address)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if period is not None:
            pulumi.set(__self__, "period", period)
        if period_unit is not None:
            pulumi.set(__self__, "period_unit", period_unit)
        if port_id is not None:
            pulumi.set(__self__, "port_id", port_id)
        if product_id is not None:
            warnings.warn("""product_id is deprecated.""", DeprecationWarning)
            pulumi.log.warn("""product_id is deprecated: product_id is deprecated.""")
        if product_id is not None:
            pulumi.set(__self__, "product_id", product_id)
        if product_spec_desc is not None:
            pulumi.set(__self__, "product_spec_desc", product_spec_desc)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if resource_spec_code is not None:
            pulumi.set(__self__, "resource_spec_code", resource_spec_code)
        if security_group_id is not None:
            pulumi.set(__self__, "security_group_id", security_group_id)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if subnet_id is not None:
            pulumi.set(__self__, "subnet_id", subnet_id)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if vpc_id is not None:
            pulumi.set(__self__, "vpc_id", vpc_id)

    @_builtins.property
    @pulumi.getter
    def action(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies operation the DBSS instance status.
        The valid values are as follows:
        + **start**: Indicates enable the DBSS instance.
        + **stop**: Indicates disable the DBSS instance.
        + **reboot**: Indicates restart the DBSS instance.

        > 1.After a DBSS instance created, the default status is **start**.
        <br/>2.The same operation cannot be performed repeatedly.
        <br/>3.The **stop** or **reboot** operation can only be performed when the DBSS instance has no tasks
        and is in **start** status.
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "action", value)

    @_builtins.property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies whether auto-renew is enabled. Valid values are **true** and
        **false**. Defaults to **false**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "auto_renew")

    @auto_renew.setter
    def auto_renew(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "auto_renew", value)

    @_builtins.property
    @pulumi.getter(name="availabilityZone")
    def availability_zone(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the availability zone to which the instance belongs.
        Primary and secondary AZs are separated by commas. Example: **cn-north-4a,cn-north-4b**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "availability_zone")

    @availability_zone.setter
    def availability_zone(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "availability_zone", value)

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the billing mode.  
        The valid value is **prePaid**, which means the yearly/monthly billing mode.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "charging_mode")

    @charging_mode.setter
    def charging_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "charging_mode", value)

    @_builtins.property
    @pulumi.getter(name="connectIp")
    def connect_ip(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The connection address.
        """
        return pulumi.get(self, "connect_ip")

    @connect_ip.setter
    def connect_ip(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "connect_ip", value)

    @_builtins.property
    @pulumi.getter(name="connectIpv6")
    def connect_ipv6(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The IPv6 address.
        """
        return pulumi.get(self, "connect_ipv6")

    @connect_ipv6.setter
    def connect_ipv6(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "connect_ipv6", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The creation time
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the instance.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the Enterprise project ID.
        For enterprise users, if omitted, default enterprise project will be used.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="expiredAt")
    def expired_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The expired time
        """
        return pulumi.get(self, "expired_at")

    @expired_at.setter
    def expired_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "expired_at", value)

    @_builtins.property
    @pulumi.getter
    def flavor(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the flavor. Possible values are:
        + **c3ne.xlarge.4**: Basic version.
        + **c3ne.2xlarge.4**: Professional version.
        + **c6.4xlarge.4**: Advanced version.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "flavor")

    @flavor.setter
    def flavor(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "flavor", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the audit instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the IP address.
        If the value of this parameter is left blank or is set to an empty string, the IP address is automatically assigned.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "ip_address")

    @ip_address.setter
    def ip_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ip_address", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the instance name. The name can contain `1` to `64` characters.
        Only letters, digits, underscores (_), and hyphens (-) are allowed.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the charging period.  
        If `period_unit` is set to **month**, the value ranges from `1` to `9`.
        If `period_unit` is set to **year**, the value ranges from `1` to `3`.
        This parameter is mandatory if `charging_mode` is set to **prePaid**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "period", value)

    @_builtins.property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the charging period unit.  
        Valid values are **month** and **year**. This parameter is mandatory if `charging_mode` is set to **prePaid**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "period_unit")

    @period_unit.setter
    def period_unit(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "period_unit", value)

    @_builtins.property
    @pulumi.getter(name="portId")
    def port_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the port that the EIP is bound to.
        """
        return pulumi.get(self, "port_id")

    @port_id.setter
    def port_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "port_id", value)

    @_builtins.property
    @pulumi.getter(name="productId")
    @_utilities.deprecated("""product_id is deprecated.""")
    def product_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "product_id")

    @product_id.setter
    def product_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "product_id", value)

    @_builtins.property
    @pulumi.getter(name="productSpecDesc")
    def product_spec_desc(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the product specification description in
        JSON string format: `{"specDesc":{"zh-cn":{"key1":"value1"},"en-us":{"key1":"value1"}}}`

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "product_spec_desc")

    @product_spec_desc.setter
    def product_spec_desc(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "product_spec_desc", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="resourceSpecCode")
    def resource_spec_code(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the resource specifications. Possible values are:
        + **dbss.bypassaudit.low**: Basic version.
        + **dbss.bypassaudit.medium**: Professional version.
        + **dbss.bypassaudit.high**: Advanced version.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "resource_spec_code")

    @resource_spec_code.setter
    def resource_spec_code(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_spec_code", value)

    @_builtins.property
    @pulumi.getter(name="securityGroupId")
    def security_group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the security group.
        """
        return pulumi.get(self, "security_group_id")

    @security_group_id.setter
    def security_group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "security_group_id", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The instance status. The value can be:
        + **SHUTOFF**: disabled;
        + **ACTIVE**: operations allowed;
        + **DELETING**: no operations allowed;
        + **BUILD**: no operations allowed;
        + **DELETED**: not displayed;
        + **ERROR**: only deletion allowed;
        + **HAWAIT**: waiting for the standby to be created, no operations allowed;
        + **FROZEN**: only renewal, binding, and unbinding allowed;
        + **UPGRADING**: no operations allowed;
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the subnet ID of the NIC.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "subnet_id", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the key/value pairs to associate with the instance.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the VPC ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "vpc_id", value)


@pulumi.type_token("huaweicloud:dbss/instance:Instance")
class Instance(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 flavor: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 product_id: Optional[pulumi.Input[_builtins.str]] = None,
                 product_spec_desc: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_spec_code: Optional[pulumi.Input[_builtins.str]] = None,
                 security_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 vpc_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a DBSS instance resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        name = config.require_object("name")
        availability_zone = config.require_object("availabilityZone")
        vpc_id = config.require_object("vpcId")
        subnet_id = config.require_object("subnetId")
        security_group_id = config.require_object("securityGroupId")
        product_spec_desc = config.require_object("productSpecDesc")
        test = huaweicloud.dbss.Instance("test",
            name=name,
            flavor="c3ne.xlarge.4",
            availability_zone=availability_zone,
            vpc_id=vpc_id,
            subnet_id=subnet_id,
            security_group_id=security_group_id,
            product_spec_desc=product_spec_desc,
            charging_mode="prePaid",
            period_unit="month",
            period=1,
            resource_spec_code="dbss.bypassaudit.low")
        ```

        ## Import

        The DBSS instance can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:dbss/instance:Instance test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response. The missing attributes include: `charging_mode`, `enterprise_project_id`, `flavor`, `period`,

        `period_unit`, `product_spec_desc`, `tags` and `action`.

        It is generally recommended running `pulumi preview` after importing an instance.

        You can then decide if changes should be applied to the instance, or the resource definition should be updated to align

        with the instance. Also, you can ignore changes as below.

        hcl

        resource "huaweicloud_dbss_instance" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              charging_mode, enterprise_project_id, flavor, period, period_unit, product_spec_desc, tags, action,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] action: Specifies operation the DBSS instance status.
               The valid values are as follows:
               + **start**: Indicates enable the DBSS instance.
               + **stop**: Indicates disable the DBSS instance.
               + **reboot**: Indicates restart the DBSS instance.
               
               > 1.After a DBSS instance created, the default status is **start**.
               <br/>2.The same operation cannot be performed repeatedly.
               <br/>3.The **stop** or **reboot** operation can only be performed when the DBSS instance has no tasks
               and is in **start** status.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether auto-renew is enabled. Valid values are **true** and
               **false**. Defaults to **false**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] availability_zone: Specifies the availability zone to which the instance belongs.
               Primary and secondary AZs are separated by commas. Example: **cn-north-4a,cn-north-4b**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the billing mode.  
               The valid value is **prePaid**, which means the yearly/monthly billing mode.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the instance.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the Enterprise project ID.
               For enterprise users, if omitted, default enterprise project will be used.
        :param pulumi.Input[_builtins.str] flavor: Specifies the flavor. Possible values are:
               + **c3ne.xlarge.4**: Basic version.
               + **c3ne.2xlarge.4**: Professional version.
               + **c6.4xlarge.4**: Advanced version.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] ip_address: Specifies the IP address.
               If the value of this parameter is left blank or is set to an empty string, the IP address is automatically assigned.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the instance name. The name can contain `1` to `64` characters.
               Only letters, digits, underscores (_), and hyphens (-) are allowed.
        :param pulumi.Input[_builtins.int] period: Specifies the charging period.  
               If `period_unit` is set to **month**, the value ranges from `1` to `9`.
               If `period_unit` is set to **year**, the value ranges from `1` to `3`.
               This parameter is mandatory if `charging_mode` is set to **prePaid**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the charging period unit.  
               Valid values are **month** and **year**. This parameter is mandatory if `charging_mode` is set to **prePaid**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] product_spec_desc: Specifies the product specification description in
               JSON string format: `{"specDesc":{"zh-cn":{"key1":"value1"},"en-us":{"key1":"value1"}}}`
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_spec_code: Specifies the resource specifications. Possible values are:
               + **dbss.bypassaudit.low**: Basic version.
               + **dbss.bypassaudit.medium**: Professional version.
               + **dbss.bypassaudit.high**: Advanced version.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] security_group_id: Specifies the ID of the security group.
        :param pulumi.Input[_builtins.str] subnet_id: Specifies the subnet ID of the NIC.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the instance.
        :param pulumi.Input[_builtins.str] vpc_id: Specifies the VPC ID.
               
               Changing this parameter will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: InstanceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a DBSS instance resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        name = config.require_object("name")
        availability_zone = config.require_object("availabilityZone")
        vpc_id = config.require_object("vpcId")
        subnet_id = config.require_object("subnetId")
        security_group_id = config.require_object("securityGroupId")
        product_spec_desc = config.require_object("productSpecDesc")
        test = huaweicloud.dbss.Instance("test",
            name=name,
            flavor="c3ne.xlarge.4",
            availability_zone=availability_zone,
            vpc_id=vpc_id,
            subnet_id=subnet_id,
            security_group_id=security_group_id,
            product_spec_desc=product_spec_desc,
            charging_mode="prePaid",
            period_unit="month",
            period=1,
            resource_spec_code="dbss.bypassaudit.low")
        ```

        ## Import

        The DBSS instance can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:dbss/instance:Instance test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response. The missing attributes include: `charging_mode`, `enterprise_project_id`, `flavor`, `period`,

        `period_unit`, `product_spec_desc`, `tags` and `action`.

        It is generally recommended running `pulumi preview` after importing an instance.

        You can then decide if changes should be applied to the instance, or the resource definition should be updated to align

        with the instance. Also, you can ignore changes as below.

        hcl

        resource "huaweicloud_dbss_instance" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              charging_mode, enterprise_project_id, flavor, period, period_unit, product_spec_desc, tags, action,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param InstanceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(InstanceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 flavor: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 product_id: Optional[pulumi.Input[_builtins.str]] = None,
                 product_spec_desc: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_spec_code: Optional[pulumi.Input[_builtins.str]] = None,
                 security_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 vpc_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = InstanceArgs.__new__(InstanceArgs)

            __props__.__dict__["action"] = action
            __props__.__dict__["auto_renew"] = auto_renew
            if availability_zone is None and not opts.urn:
                raise TypeError("Missing required property 'availability_zone'")
            __props__.__dict__["availability_zone"] = availability_zone
            if charging_mode is None and not opts.urn:
                raise TypeError("Missing required property 'charging_mode'")
            __props__.__dict__["charging_mode"] = charging_mode
            __props__.__dict__["description"] = description
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            if flavor is None and not opts.urn:
                raise TypeError("Missing required property 'flavor'")
            __props__.__dict__["flavor"] = flavor
            __props__.__dict__["ip_address"] = ip_address
            __props__.__dict__["name"] = name
            if period is None and not opts.urn:
                raise TypeError("Missing required property 'period'")
            __props__.__dict__["period"] = period
            if period_unit is None and not opts.urn:
                raise TypeError("Missing required property 'period_unit'")
            __props__.__dict__["period_unit"] = period_unit
            __props__.__dict__["product_id"] = product_id
            __props__.__dict__["product_spec_desc"] = product_spec_desc
            __props__.__dict__["region"] = region
            if resource_spec_code is None and not opts.urn:
                raise TypeError("Missing required property 'resource_spec_code'")
            __props__.__dict__["resource_spec_code"] = resource_spec_code
            if security_group_id is None and not opts.urn:
                raise TypeError("Missing required property 'security_group_id'")
            __props__.__dict__["security_group_id"] = security_group_id
            if subnet_id is None and not opts.urn:
                raise TypeError("Missing required property 'subnet_id'")
            __props__.__dict__["subnet_id"] = subnet_id
            __props__.__dict__["tags"] = tags
            if vpc_id is None and not opts.urn:
                raise TypeError("Missing required property 'vpc_id'")
            __props__.__dict__["vpc_id"] = vpc_id
            __props__.__dict__["connect_ip"] = None
            __props__.__dict__["connect_ipv6"] = None
            __props__.__dict__["created_at"] = None
            __props__.__dict__["expired_at"] = None
            __props__.__dict__["instance_id"] = None
            __props__.__dict__["port_id"] = None
            __props__.__dict__["status"] = None
        super(Instance, __self__).__init__(
            'huaweicloud:dbss/instance:Instance',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            action: Optional[pulumi.Input[_builtins.str]] = None,
            auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
            availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
            charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
            connect_ip: Optional[pulumi.Input[_builtins.str]] = None,
            connect_ipv6: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            expired_at: Optional[pulumi.Input[_builtins.str]] = None,
            flavor: Optional[pulumi.Input[_builtins.str]] = None,
            instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            ip_address: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            period: Optional[pulumi.Input[_builtins.int]] = None,
            period_unit: Optional[pulumi.Input[_builtins.str]] = None,
            port_id: Optional[pulumi.Input[_builtins.str]] = None,
            product_id: Optional[pulumi.Input[_builtins.str]] = None,
            product_spec_desc: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            resource_spec_code: Optional[pulumi.Input[_builtins.str]] = None,
            security_group_id: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            vpc_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'Instance':
        """
        Get an existing Instance resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] action: Specifies operation the DBSS instance status.
               The valid values are as follows:
               + **start**: Indicates enable the DBSS instance.
               + **stop**: Indicates disable the DBSS instance.
               + **reboot**: Indicates restart the DBSS instance.
               
               > 1.After a DBSS instance created, the default status is **start**.
               <br/>2.The same operation cannot be performed repeatedly.
               <br/>3.The **stop** or **reboot** operation can only be performed when the DBSS instance has no tasks
               and is in **start** status.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether auto-renew is enabled. Valid values are **true** and
               **false**. Defaults to **false**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] availability_zone: Specifies the availability zone to which the instance belongs.
               Primary and secondary AZs are separated by commas. Example: **cn-north-4a,cn-north-4b**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the billing mode.  
               The valid value is **prePaid**, which means the yearly/monthly billing mode.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] connect_ip: The connection address.
        :param pulumi.Input[_builtins.str] connect_ipv6: The IPv6 address.
        :param pulumi.Input[_builtins.str] created_at: The creation time
        :param pulumi.Input[_builtins.str] description: Specifies the description of the instance.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the Enterprise project ID.
               For enterprise users, if omitted, default enterprise project will be used.
        :param pulumi.Input[_builtins.str] expired_at: The expired time
        :param pulumi.Input[_builtins.str] flavor: Specifies the flavor. Possible values are:
               + **c3ne.xlarge.4**: Basic version.
               + **c3ne.2xlarge.4**: Professional version.
               + **c6.4xlarge.4**: Advanced version.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] instance_id: The ID of the audit instance.
        :param pulumi.Input[_builtins.str] ip_address: Specifies the IP address.
               If the value of this parameter is left blank or is set to an empty string, the IP address is automatically assigned.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the instance name. The name can contain `1` to `64` characters.
               Only letters, digits, underscores (_), and hyphens (-) are allowed.
        :param pulumi.Input[_builtins.int] period: Specifies the charging period.  
               If `period_unit` is set to **month**, the value ranges from `1` to `9`.
               If `period_unit` is set to **year**, the value ranges from `1` to `3`.
               This parameter is mandatory if `charging_mode` is set to **prePaid**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the charging period unit.  
               Valid values are **month** and **year**. This parameter is mandatory if `charging_mode` is set to **prePaid**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] port_id: The ID of the port that the EIP is bound to.
        :param pulumi.Input[_builtins.str] product_spec_desc: Specifies the product specification description in
               JSON string format: `{"specDesc":{"zh-cn":{"key1":"value1"},"en-us":{"key1":"value1"}}}`
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_spec_code: Specifies the resource specifications. Possible values are:
               + **dbss.bypassaudit.low**: Basic version.
               + **dbss.bypassaudit.medium**: Professional version.
               + **dbss.bypassaudit.high**: Advanced version.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] security_group_id: Specifies the ID of the security group.
        :param pulumi.Input[_builtins.str] status: The instance status. The value can be:
               + **SHUTOFF**: disabled;
               + **ACTIVE**: operations allowed;
               + **DELETING**: no operations allowed;
               + **BUILD**: no operations allowed;
               + **DELETED**: not displayed;
               + **ERROR**: only deletion allowed;
               + **HAWAIT**: waiting for the standby to be created, no operations allowed;
               + **FROZEN**: only renewal, binding, and unbinding allowed;
               + **UPGRADING**: no operations allowed;
        :param pulumi.Input[_builtins.str] subnet_id: Specifies the subnet ID of the NIC.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the instance.
        :param pulumi.Input[_builtins.str] vpc_id: Specifies the VPC ID.
               
               Changing this parameter will create a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _InstanceState.__new__(_InstanceState)

        __props__.__dict__["action"] = action
        __props__.__dict__["auto_renew"] = auto_renew
        __props__.__dict__["availability_zone"] = availability_zone
        __props__.__dict__["charging_mode"] = charging_mode
        __props__.__dict__["connect_ip"] = connect_ip
        __props__.__dict__["connect_ipv6"] = connect_ipv6
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["description"] = description
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["expired_at"] = expired_at
        __props__.__dict__["flavor"] = flavor
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["ip_address"] = ip_address
        __props__.__dict__["name"] = name
        __props__.__dict__["period"] = period
        __props__.__dict__["period_unit"] = period_unit
        __props__.__dict__["port_id"] = port_id
        __props__.__dict__["product_id"] = product_id
        __props__.__dict__["product_spec_desc"] = product_spec_desc
        __props__.__dict__["region"] = region
        __props__.__dict__["resource_spec_code"] = resource_spec_code
        __props__.__dict__["security_group_id"] = security_group_id
        __props__.__dict__["status"] = status
        __props__.__dict__["subnet_id"] = subnet_id
        __props__.__dict__["tags"] = tags
        __props__.__dict__["vpc_id"] = vpc_id
        return Instance(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def action(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies operation the DBSS instance status.
        The valid values are as follows:
        + **start**: Indicates enable the DBSS instance.
        + **stop**: Indicates disable the DBSS instance.
        + **reboot**: Indicates restart the DBSS instance.

        > 1.After a DBSS instance created, the default status is **start**.
        <br/>2.The same operation cannot be performed repeatedly.
        <br/>3.The **stop** or **reboot** operation can only be performed when the DBSS instance has no tasks
        and is in **start** status.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies whether auto-renew is enabled. Valid values are **true** and
        **false**. Defaults to **false**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "auto_renew")

    @_builtins.property
    @pulumi.getter(name="availabilityZone")
    def availability_zone(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the availability zone to which the instance belongs.
        Primary and secondary AZs are separated by commas. Example: **cn-north-4a,cn-north-4b**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "availability_zone")

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the billing mode.  
        The valid value is **prePaid**, which means the yearly/monthly billing mode.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "charging_mode")

    @_builtins.property
    @pulumi.getter(name="connectIp")
    def connect_ip(self) -> pulumi.Output[_builtins.str]:
        """
        The connection address.
        """
        return pulumi.get(self, "connect_ip")

    @_builtins.property
    @pulumi.getter(name="connectIpv6")
    def connect_ipv6(self) -> pulumi.Output[_builtins.str]:
        """
        The IPv6 address.
        """
        return pulumi.get(self, "connect_ipv6")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The creation time
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the description of the instance.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the Enterprise project ID.
        For enterprise users, if omitted, default enterprise project will be used.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="expiredAt")
    def expired_at(self) -> pulumi.Output[_builtins.str]:
        """
        The expired time
        """
        return pulumi.get(self, "expired_at")

    @_builtins.property
    @pulumi.getter
    def flavor(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the flavor. Possible values are:
        + **c3ne.xlarge.4**: Basic version.
        + **c3ne.2xlarge.4**: Professional version.
        + **c6.4xlarge.4**: Advanced version.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "flavor")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the audit instance.
        """
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the IP address.
        If the value of this parameter is left blank or is set to an empty string, the IP address is automatically assigned.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "ip_address")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the instance name. The name can contain `1` to `64` characters.
        Only letters, digits, underscores (_), and hyphens (-) are allowed.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def period(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the charging period.  
        If `period_unit` is set to **month**, the value ranges from `1` to `9`.
        If `period_unit` is set to **year**, the value ranges from `1` to `3`.
        This parameter is mandatory if `charging_mode` is set to **prePaid**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "period")

    @_builtins.property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the charging period unit.  
        Valid values are **month** and **year**. This parameter is mandatory if `charging_mode` is set to **prePaid**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "period_unit")

    @_builtins.property
    @pulumi.getter(name="portId")
    def port_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the port that the EIP is bound to.
        """
        return pulumi.get(self, "port_id")

    @_builtins.property
    @pulumi.getter(name="productId")
    @_utilities.deprecated("""product_id is deprecated.""")
    def product_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "product_id")

    @_builtins.property
    @pulumi.getter(name="productSpecDesc")
    def product_spec_desc(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the product specification description in
        JSON string format: `{"specDesc":{"zh-cn":{"key1":"value1"},"en-us":{"key1":"value1"}}}`

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "product_spec_desc")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="resourceSpecCode")
    def resource_spec_code(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the resource specifications. Possible values are:
        + **dbss.bypassaudit.low**: Basic version.
        + **dbss.bypassaudit.medium**: Professional version.
        + **dbss.bypassaudit.high**: Advanced version.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "resource_spec_code")

    @_builtins.property
    @pulumi.getter(name="securityGroupId")
    def security_group_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the security group.
        """
        return pulumi.get(self, "security_group_id")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The instance status. The value can be:
        + **SHUTOFF**: disabled;
        + **ACTIVE**: operations allowed;
        + **DELETING**: no operations allowed;
        + **BUILD**: no operations allowed;
        + **DELETED**: not displayed;
        + **ERROR**: only deletion allowed;
        + **HAWAIT**: waiting for the standby to be created, no operations allowed;
        + **FROZEN**: only renewal, binding, and unbinding allowed;
        + **UPGRADING**: no operations allowed;
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the subnet ID of the NIC.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "subnet_id")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Mapping[str, _builtins.str]]:
        """
        Specifies the key/value pairs to associate with the instance.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the VPC ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "vpc_id")

