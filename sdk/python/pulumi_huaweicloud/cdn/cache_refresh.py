# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['CacheRefreshArgs', 'CacheRefresh']

@pulumi.input_type
class CacheRefreshArgs:
    def __init__(__self__, *,
                 urls: pulumi.Input[Sequence[pulumi.Input[_builtins.str]]],
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 mode: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 zh_url_encode: Optional[pulumi.Input[_builtins.bool]] = None):
        """
        The set of arguments for constructing a CacheRefresh resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] urls: Specifies the URLs that need to be refreshed.
               A URL must start with `http://` or `https://` and must contain the accelerated domain name.
               A URL can contain up to `4,096` characters. Enter up to `1,000` URLs or `100` directories and separate them by commas (,).
               Changing this parameter will create a new resource.
               + When `type` is set to **file**, the value should be file path. Example: `http://www.example.com/file01.html` or
               `http://www.example.com/`.
               + When `type` is set to **directory**, the value should be directory path. The URL must end with a slash (/).
               Example: `http://www.example.com/tt/ee/`.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID to which the accelerated
               domain name belongs. This parameter is only valid for enterprise users and is required when using Sub-account.
               The value **all** represents all enterprise projects.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] mode: Specifies the directory refresh mode. Valid values are:
               + **all**: Refresh all resources in the directory.
               + **detect_modify_refresh**: Refresh changed resources in the directory.
               
               This field is valid only when `type` is set to **directory**. Defaults to **all**.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] type: Specifies the refresh type. Possible values: **file** and **directory**.
               Defaults to **file**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] zh_url_encode: Specifies whether to encode Chinese characters in URLs before cache refresh.
               The value **false** indicates disabled, and **true** indicates enabled. After enabled, cache is refreshed only for
               transcode URLs. Defaults to **false**.
               
               Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "urls", urls)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if mode is not None:
            pulumi.set(__self__, "mode", mode)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if zh_url_encode is not None:
            pulumi.set(__self__, "zh_url_encode", zh_url_encode)

    @_builtins.property
    @pulumi.getter
    def urls(self) -> pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]:
        """
        Specifies the URLs that need to be refreshed.
        A URL must start with `http://` or `https://` and must contain the accelerated domain name.
        A URL can contain up to `4,096` characters. Enter up to `1,000` URLs or `100` directories and separate them by commas (,).
        Changing this parameter will create a new resource.
        + When `type` is set to **file**, the value should be file path. Example: `http://www.example.com/file01.html` or
        `http://www.example.com/`.
        + When `type` is set to **directory**, the value should be directory path. The URL must end with a slash (/).
        Example: `http://www.example.com/tt/ee/`.
        """
        return pulumi.get(self, "urls")

    @urls.setter
    def urls(self, value: pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]):
        pulumi.set(self, "urls", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID to which the accelerated
        domain name belongs. This parameter is only valid for enterprise users and is required when using Sub-account.
        The value **all** represents all enterprise projects.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the directory refresh mode. Valid values are:
        + **all**: Refresh all resources in the directory.
        + **detect_modify_refresh**: Refresh changed resources in the directory.

        This field is valid only when `type` is set to **directory**. Defaults to **all**.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "mode")

    @mode.setter
    def mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "mode", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the refresh type. Possible values: **file** and **directory**.
        Defaults to **file**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="zhUrlEncode")
    def zh_url_encode(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to encode Chinese characters in URLs before cache refresh.
        The value **false** indicates disabled, and **true** indicates enabled. After enabled, cache is refreshed only for
        transcode URLs. Defaults to **false**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "zh_url_encode")

    @zh_url_encode.setter
    def zh_url_encode(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "zh_url_encode", value)


@pulumi.input_type
class _CacheRefreshState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 failed: Optional[pulumi.Input[_builtins.int]] = None,
                 mode: Optional[pulumi.Input[_builtins.str]] = None,
                 processing: Optional[pulumi.Input[_builtins.int]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 succeed: Optional[pulumi.Input[_builtins.int]] = None,
                 total: Optional[pulumi.Input[_builtins.int]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 urls: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 zh_url_encode: Optional[pulumi.Input[_builtins.bool]] = None):
        """
        Input properties used for looking up and filtering CacheRefresh resources.
        :param pulumi.Input[_builtins.str] created_at: The creation time.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID to which the accelerated
               domain name belongs. This parameter is only valid for enterprise users and is required when using Sub-account.
               The value **all** represents all enterprise projects.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] failed: The number of URLs that failed to be processed.
        :param pulumi.Input[_builtins.str] mode: Specifies the directory refresh mode. Valid values are:
               + **all**: Refresh all resources in the directory.
               + **detect_modify_refresh**: Refresh changed resources in the directory.
               
               This field is valid only when `type` is set to **directory**. Defaults to **all**.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] processing: The number of URLs that are being processed.
        :param pulumi.Input[_builtins.str] status: The task execution result. Possible values: **task_done** (successful) and **task_inprocess** (processing).
        :param pulumi.Input[_builtins.int] succeed: The number of URLs processed.
        :param pulumi.Input[_builtins.int] total: The total number of URLs in historical tasks.
        :param pulumi.Input[_builtins.str] type: Specifies the refresh type. Possible values: **file** and **directory**.
               Defaults to **file**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] urls: Specifies the URLs that need to be refreshed.
               A URL must start with `http://` or `https://` and must contain the accelerated domain name.
               A URL can contain up to `4,096` characters. Enter up to `1,000` URLs or `100` directories and separate them by commas (,).
               Changing this parameter will create a new resource.
               + When `type` is set to **file**, the value should be file path. Example: `http://www.example.com/file01.html` or
               `http://www.example.com/`.
               + When `type` is set to **directory**, the value should be directory path. The URL must end with a slash (/).
               Example: `http://www.example.com/tt/ee/`.
        :param pulumi.Input[_builtins.bool] zh_url_encode: Specifies whether to encode Chinese characters in URLs before cache refresh.
               The value **false** indicates disabled, and **true** indicates enabled. After enabled, cache is refreshed only for
               transcode URLs. Defaults to **false**.
               
               Changing this parameter will create a new resource.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if failed is not None:
            pulumi.set(__self__, "failed", failed)
        if mode is not None:
            pulumi.set(__self__, "mode", mode)
        if processing is not None:
            pulumi.set(__self__, "processing", processing)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if succeed is not None:
            pulumi.set(__self__, "succeed", succeed)
        if total is not None:
            pulumi.set(__self__, "total", total)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if urls is not None:
            pulumi.set(__self__, "urls", urls)
        if zh_url_encode is not None:
            pulumi.set(__self__, "zh_url_encode", zh_url_encode)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The creation time.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID to which the accelerated
        domain name belongs. This parameter is only valid for enterprise users and is required when using Sub-account.
        The value **all** represents all enterprise projects.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def failed(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The number of URLs that failed to be processed.
        """
        return pulumi.get(self, "failed")

    @failed.setter
    def failed(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "failed", value)

    @_builtins.property
    @pulumi.getter
    def mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the directory refresh mode. Valid values are:
        + **all**: Refresh all resources in the directory.
        + **detect_modify_refresh**: Refresh changed resources in the directory.

        This field is valid only when `type` is set to **directory**. Defaults to **all**.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "mode")

    @mode.setter
    def mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "mode", value)

    @_builtins.property
    @pulumi.getter
    def processing(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The number of URLs that are being processed.
        """
        return pulumi.get(self, "processing")

    @processing.setter
    def processing(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "processing", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The task execution result. Possible values: **task_done** (successful) and **task_inprocess** (processing).
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter
    def succeed(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The number of URLs processed.
        """
        return pulumi.get(self, "succeed")

    @succeed.setter
    def succeed(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "succeed", value)

    @_builtins.property
    @pulumi.getter
    def total(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The total number of URLs in historical tasks.
        """
        return pulumi.get(self, "total")

    @total.setter
    def total(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "total", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the refresh type. Possible values: **file** and **directory**.
        Defaults to **file**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter
    def urls(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the URLs that need to be refreshed.
        A URL must start with `http://` or `https://` and must contain the accelerated domain name.
        A URL can contain up to `4,096` characters. Enter up to `1,000` URLs or `100` directories and separate them by commas (,).
        Changing this parameter will create a new resource.
        + When `type` is set to **file**, the value should be file path. Example: `http://www.example.com/file01.html` or
        `http://www.example.com/`.
        + When `type` is set to **directory**, the value should be directory path. The URL must end with a slash (/).
        Example: `http://www.example.com/tt/ee/`.
        """
        return pulumi.get(self, "urls")

    @urls.setter
    def urls(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "urls", value)

    @_builtins.property
    @pulumi.getter(name="zhUrlEncode")
    def zh_url_encode(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to encode Chinese characters in URLs before cache refresh.
        The value **false** indicates disabled, and **true** indicates enabled. After enabled, cache is refreshed only for
        transcode URLs. Defaults to **false**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "zh_url_encode")

    @zh_url_encode.setter
    def zh_url_encode(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "zh_url_encode", value)


@pulumi.type_token("huaweicloud:Cdn/cacheRefresh:CacheRefresh")
class CacheRefresh(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 mode: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 urls: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 zh_url_encode: Optional[pulumi.Input[_builtins.bool]] = None,
                 __props__=None):
        """
        Manages a CDN cache refresh resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        urls = config.require_object("urls")
        test = huaweicloud.cdn.CacheRefresh("test", urls=urls)
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID to which the accelerated
               domain name belongs. This parameter is only valid for enterprise users and is required when using Sub-account.
               The value **all** represents all enterprise projects.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] mode: Specifies the directory refresh mode. Valid values are:
               + **all**: Refresh all resources in the directory.
               + **detect_modify_refresh**: Refresh changed resources in the directory.
               
               This field is valid only when `type` is set to **directory**. Defaults to **all**.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] type: Specifies the refresh type. Possible values: **file** and **directory**.
               Defaults to **file**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] urls: Specifies the URLs that need to be refreshed.
               A URL must start with `http://` or `https://` and must contain the accelerated domain name.
               A URL can contain up to `4,096` characters. Enter up to `1,000` URLs or `100` directories and separate them by commas (,).
               Changing this parameter will create a new resource.
               + When `type` is set to **file**, the value should be file path. Example: `http://www.example.com/file01.html` or
               `http://www.example.com/`.
               + When `type` is set to **directory**, the value should be directory path. The URL must end with a slash (/).
               Example: `http://www.example.com/tt/ee/`.
        :param pulumi.Input[_builtins.bool] zh_url_encode: Specifies whether to encode Chinese characters in URLs before cache refresh.
               The value **false** indicates disabled, and **true** indicates enabled. After enabled, cache is refreshed only for
               transcode URLs. Defaults to **false**.
               
               Changing this parameter will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CacheRefreshArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a CDN cache refresh resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        urls = config.require_object("urls")
        test = huaweicloud.cdn.CacheRefresh("test", urls=urls)
        ```

        :param str resource_name: The name of the resource.
        :param CacheRefreshArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CacheRefreshArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 mode: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 urls: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 zh_url_encode: Optional[pulumi.Input[_builtins.bool]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CacheRefreshArgs.__new__(CacheRefreshArgs)

            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            __props__.__dict__["mode"] = mode
            __props__.__dict__["type"] = type
            if urls is None and not opts.urn:
                raise TypeError("Missing required property 'urls'")
            __props__.__dict__["urls"] = urls
            __props__.__dict__["zh_url_encode"] = zh_url_encode
            __props__.__dict__["created_at"] = None
            __props__.__dict__["failed"] = None
            __props__.__dict__["processing"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["succeed"] = None
            __props__.__dict__["total"] = None
        super(CacheRefresh, __self__).__init__(
            'huaweicloud:Cdn/cacheRefresh:CacheRefresh',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            failed: Optional[pulumi.Input[_builtins.int]] = None,
            mode: Optional[pulumi.Input[_builtins.str]] = None,
            processing: Optional[pulumi.Input[_builtins.int]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            succeed: Optional[pulumi.Input[_builtins.int]] = None,
            total: Optional[pulumi.Input[_builtins.int]] = None,
            type: Optional[pulumi.Input[_builtins.str]] = None,
            urls: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            zh_url_encode: Optional[pulumi.Input[_builtins.bool]] = None) -> 'CacheRefresh':
        """
        Get an existing CacheRefresh resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: The creation time.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID to which the accelerated
               domain name belongs. This parameter is only valid for enterprise users and is required when using Sub-account.
               The value **all** represents all enterprise projects.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] failed: The number of URLs that failed to be processed.
        :param pulumi.Input[_builtins.str] mode: Specifies the directory refresh mode. Valid values are:
               + **all**: Refresh all resources in the directory.
               + **detect_modify_refresh**: Refresh changed resources in the directory.
               
               This field is valid only when `type` is set to **directory**. Defaults to **all**.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] processing: The number of URLs that are being processed.
        :param pulumi.Input[_builtins.str] status: The task execution result. Possible values: **task_done** (successful) and **task_inprocess** (processing).
        :param pulumi.Input[_builtins.int] succeed: The number of URLs processed.
        :param pulumi.Input[_builtins.int] total: The total number of URLs in historical tasks.
        :param pulumi.Input[_builtins.str] type: Specifies the refresh type. Possible values: **file** and **directory**.
               Defaults to **file**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] urls: Specifies the URLs that need to be refreshed.
               A URL must start with `http://` or `https://` and must contain the accelerated domain name.
               A URL can contain up to `4,096` characters. Enter up to `1,000` URLs or `100` directories and separate them by commas (,).
               Changing this parameter will create a new resource.
               + When `type` is set to **file**, the value should be file path. Example: `http://www.example.com/file01.html` or
               `http://www.example.com/`.
               + When `type` is set to **directory**, the value should be directory path. The URL must end with a slash (/).
               Example: `http://www.example.com/tt/ee/`.
        :param pulumi.Input[_builtins.bool] zh_url_encode: Specifies whether to encode Chinese characters in URLs before cache refresh.
               The value **false** indicates disabled, and **true** indicates enabled. After enabled, cache is refreshed only for
               transcode URLs. Defaults to **false**.
               
               Changing this parameter will create a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CacheRefreshState.__new__(_CacheRefreshState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["failed"] = failed
        __props__.__dict__["mode"] = mode
        __props__.__dict__["processing"] = processing
        __props__.__dict__["status"] = status
        __props__.__dict__["succeed"] = succeed
        __props__.__dict__["total"] = total
        __props__.__dict__["type"] = type
        __props__.__dict__["urls"] = urls
        __props__.__dict__["zh_url_encode"] = zh_url_encode
        return CacheRefresh(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The creation time.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the enterprise project ID to which the accelerated
        domain name belongs. This parameter is only valid for enterprise users and is required when using Sub-account.
        The value **all** represents all enterprise projects.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def failed(self) -> pulumi.Output[_builtins.int]:
        """
        The number of URLs that failed to be processed.
        """
        return pulumi.get(self, "failed")

    @_builtins.property
    @pulumi.getter
    def mode(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the directory refresh mode. Valid values are:
        + **all**: Refresh all resources in the directory.
        + **detect_modify_refresh**: Refresh changed resources in the directory.

        This field is valid only when `type` is set to **directory**. Defaults to **all**.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "mode")

    @_builtins.property
    @pulumi.getter
    def processing(self) -> pulumi.Output[_builtins.int]:
        """
        The number of URLs that are being processed.
        """
        return pulumi.get(self, "processing")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The task execution result. Possible values: **task_done** (successful) and **task_inprocess** (processing).
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def succeed(self) -> pulumi.Output[_builtins.int]:
        """
        The number of URLs processed.
        """
        return pulumi.get(self, "succeed")

    @_builtins.property
    @pulumi.getter
    def total(self) -> pulumi.Output[_builtins.int]:
        """
        The total number of URLs in historical tasks.
        """
        return pulumi.get(self, "total")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the refresh type. Possible values: **file** and **directory**.
        Defaults to **file**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter
    def urls(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        Specifies the URLs that need to be refreshed.
        A URL must start with `http://` or `https://` and must contain the accelerated domain name.
        A URL can contain up to `4,096` characters. Enter up to `1,000` URLs or `100` directories and separate them by commas (,).
        Changing this parameter will create a new resource.
        + When `type` is set to **file**, the value should be file path. Example: `http://www.example.com/file01.html` or
        `http://www.example.com/`.
        + When `type` is set to **directory**, the value should be directory path. The URL must end with a slash (/).
        Example: `http://www.example.com/tt/ee/`.
        """
        return pulumi.get(self, "urls")

    @_builtins.property
    @pulumi.getter(name="zhUrlEncode")
    def zh_url_encode(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether to encode Chinese characters in URLs before cache refresh.
        The value **false** indicates disabled, and **true** indicates enabled. After enabled, cache is refreshed only for
        transcode URLs. Defaults to **false**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "zh_url_encode")

