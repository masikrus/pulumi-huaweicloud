# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetBlackWhiteListsResult',
    'AwaitableGetBlackWhiteListsResult',
    'get_black_white_lists',
    'get_black_white_lists_output',
]

@pulumi.output_type
class GetBlackWhiteListsResult:
    """
    A collection of values returned by getBlackWhiteLists.
    """
    def __init__(__self__, id=None, instance_id=None, ips=None, type=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if ips and not isinstance(ips, list):
            raise TypeError("Expected argument 'ips' to be a list")
        pulumi.set(__self__, "ips", ips)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> _builtins.str:
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter
    def ips(self) -> Sequence['outputs.GetBlackWhiteListsIpResult']:
        """
        The IP address list.
        """
        return pulumi.get(self, "ips")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        return pulumi.get(self, "type")


class AwaitableGetBlackWhiteListsResult(GetBlackWhiteListsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBlackWhiteListsResult(
            id=self.id,
            instance_id=self.instance_id,
            ips=self.ips,
            type=self.type)


def get_black_white_lists(instance_id: Optional[_builtins.str] = None,
                          type: Optional[_builtins.str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBlackWhiteListsResult:
    """
    Use this data source to get the list of Advanced Anti-DDos black white list within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.AdvancedAntiDDos.get_black_white_lists()
    ```


    :param _builtins.str instance_id: Specifies the AAD instance ID.
    :param _builtins.str type: Specifies the rule type. Valid values are **black** and **white**.
    """
    __args__ = dict()
    __args__['instanceId'] = instance_id
    __args__['type'] = type
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:AdvancedAntiDDos/getBlackWhiteLists:getBlackWhiteLists', __args__, opts=opts, typ=GetBlackWhiteListsResult).value

    return AwaitableGetBlackWhiteListsResult(
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        ips=pulumi.get(__ret__, 'ips'),
        type=pulumi.get(__ret__, 'type'))
def get_black_white_lists_output(instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                                 type: Optional[pulumi.Input[_builtins.str]] = None,
                                 opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetBlackWhiteListsResult]:
    """
    Use this data source to get the list of Advanced Anti-DDos black white list within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.AdvancedAntiDDos.get_black_white_lists()
    ```


    :param _builtins.str instance_id: Specifies the AAD instance ID.
    :param _builtins.str type: Specifies the rule type. Valid values are **black** and **white**.
    """
    __args__ = dict()
    __args__['instanceId'] = instance_id
    __args__['type'] = type
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:AdvancedAntiDDos/getBlackWhiteLists:getBlackWhiteLists', __args__, opts=opts, typ=GetBlackWhiteListsResult)
    return __ret__.apply(lambda __response__: GetBlackWhiteListsResult(
        id=pulumi.get(__response__, 'id'),
        instance_id=pulumi.get(__response__, 'instance_id'),
        ips=pulumi.get(__response__, 'ips'),
        type=pulumi.get(__response__, 'type')))
