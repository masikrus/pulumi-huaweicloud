# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetWebProtectionPoliciesResult',
    'AwaitableGetWebProtectionPoliciesResult',
    'get_web_protection_policies',
    'get_web_protection_policies_output',
]

@pulumi.output_type
class GetWebProtectionPoliciesResult:
    """
    A collection of values returned by getWebProtectionPolicies.
    """
    def __init__(__self__, domain_name=None, id=None, level=None, mode=None, options=None, overseas_type=None):
        if domain_name and not isinstance(domain_name, str):
            raise TypeError("Expected argument 'domain_name' to be a str")
        pulumi.set(__self__, "domain_name", domain_name)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if level and not isinstance(level, int):
            raise TypeError("Expected argument 'level' to be a int")
        pulumi.set(__self__, "level", level)
        if mode and not isinstance(mode, int):
            raise TypeError("Expected argument 'mode' to be a int")
        pulumi.set(__self__, "mode", mode)
        if options and not isinstance(options, list):
            raise TypeError("Expected argument 'options' to be a list")
        pulumi.set(__self__, "options", options)
        if overseas_type and not isinstance(overseas_type, int):
            raise TypeError("Expected argument 'overseas_type' to be a int")
        pulumi.set(__self__, "overseas_type", overseas_type)

    @_builtins.property
    @pulumi.getter(name="domainName")
    def domain_name(self) -> _builtins.str:
        return pulumi.get(self, "domain_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def level(self) -> _builtins.int:
        """
        The intelligent CC protection level. Valid values are:
        """
        return pulumi.get(self, "level")

    @_builtins.property
    @pulumi.getter
    def mode(self) -> _builtins.int:
        """
        The smart CC mode. Valid values are:
        """
        return pulumi.get(self, "mode")

    @_builtins.property
    @pulumi.getter
    def options(self) -> Sequence['outputs.GetWebProtectionPoliciesOptionResult']:
        """
        The protection options.
        """
        return pulumi.get(self, "options")

    @_builtins.property
    @pulumi.getter(name="overseasType")
    def overseas_type(self) -> _builtins.int:
        return pulumi.get(self, "overseas_type")


class AwaitableGetWebProtectionPoliciesResult(GetWebProtectionPoliciesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetWebProtectionPoliciesResult(
            domain_name=self.domain_name,
            id=self.id,
            level=self.level,
            mode=self.mode,
            options=self.options,
            overseas_type=self.overseas_type)


def get_web_protection_policies(domain_name: Optional[_builtins.str] = None,
                                overseas_type: Optional[_builtins.int] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetWebProtectionPoliciesResult:
    """
    Use this data source to get the list of Advanced Anti-DDos web protection policies within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    domain_name = config.require_object("domainName")
    overseas_type = config.require_object("overseasType")
    test = huaweicloud.AdvancedAntiDDos.get_web_protection_policies(domain_name=domain_name,
        overseas_type=overseas_type)
    ```


    :param _builtins.str domain_name: Specifies the domain name.
    :param _builtins.int overseas_type: Specifies the overseas type. Valid values are `0` (Mainland) and `1` (Overseas).
    """
    __args__ = dict()
    __args__['domainName'] = domain_name
    __args__['overseasType'] = overseas_type
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:AdvancedAntiDDos/getWebProtectionPolicies:getWebProtectionPolicies', __args__, opts=opts, typ=GetWebProtectionPoliciesResult).value

    return AwaitableGetWebProtectionPoliciesResult(
        domain_name=pulumi.get(__ret__, 'domain_name'),
        id=pulumi.get(__ret__, 'id'),
        level=pulumi.get(__ret__, 'level'),
        mode=pulumi.get(__ret__, 'mode'),
        options=pulumi.get(__ret__, 'options'),
        overseas_type=pulumi.get(__ret__, 'overseas_type'))
def get_web_protection_policies_output(domain_name: Optional[pulumi.Input[_builtins.str]] = None,
                                       overseas_type: Optional[pulumi.Input[_builtins.int]] = None,
                                       opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetWebProtectionPoliciesResult]:
    """
    Use this data source to get the list of Advanced Anti-DDos web protection policies within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    domain_name = config.require_object("domainName")
    overseas_type = config.require_object("overseasType")
    test = huaweicloud.AdvancedAntiDDos.get_web_protection_policies(domain_name=domain_name,
        overseas_type=overseas_type)
    ```


    :param _builtins.str domain_name: Specifies the domain name.
    :param _builtins.int overseas_type: Specifies the overseas type. Valid values are `0` (Mainland) and `1` (Overseas).
    """
    __args__ = dict()
    __args__['domainName'] = domain_name
    __args__['overseasType'] = overseas_type
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:AdvancedAntiDDos/getWebProtectionPolicies:getWebProtectionPolicies', __args__, opts=opts, typ=GetWebProtectionPoliciesResult)
    return __ret__.apply(lambda __response__: GetWebProtectionPoliciesResult(
        domain_name=pulumi.get(__response__, 'domain_name'),
        id=pulumi.get(__response__, 'id'),
        level=pulumi.get(__response__, 'level'),
        mode=pulumi.get(__response__, 'mode'),
        options=pulumi.get(__response__, 'options'),
        overseas_type=pulumi.get(__response__, 'overseas_type')))
