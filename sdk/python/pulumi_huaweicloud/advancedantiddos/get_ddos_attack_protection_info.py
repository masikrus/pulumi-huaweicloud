# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetDdosAttackProtectionInfoResult',
    'AwaitableGetDdosAttackProtectionInfoResult',
    'get_ddos_attack_protection_info',
    'get_ddos_attack_protection_info_output',
]

@pulumi.output_type
class GetDdosAttackProtectionInfoResult:
    """
    A collection of values returned by getDdosAttackProtectionInfo.
    """
    def __init__(__self__, end_time=None, flow_bps=None, flow_pps=None, id=None, instance_id=None, ip=None, start_time=None, type=None):
        if end_time and not isinstance(end_time, str):
            raise TypeError("Expected argument 'end_time' to be a str")
        pulumi.set(__self__, "end_time", end_time)
        if flow_bps and not isinstance(flow_bps, list):
            raise TypeError("Expected argument 'flow_bps' to be a list")
        pulumi.set(__self__, "flow_bps", flow_bps)
        if flow_pps and not isinstance(flow_pps, list):
            raise TypeError("Expected argument 'flow_pps' to be a list")
        pulumi.set(__self__, "flow_pps", flow_pps)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if ip and not isinstance(ip, str):
            raise TypeError("Expected argument 'ip' to be a str")
        pulumi.set(__self__, "ip", ip)
        if start_time and not isinstance(start_time, str):
            raise TypeError("Expected argument 'start_time' to be a str")
        pulumi.set(__self__, "start_time", start_time)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter(name="endTime")
    def end_time(self) -> _builtins.str:
        return pulumi.get(self, "end_time")

    @_builtins.property
    @pulumi.getter(name="flowBps")
    def flow_bps(self) -> Sequence['outputs.GetDdosAttackProtectionInfoFlowBpResult']:
        """
        The BPS flow information list. This field is returned when type is **bps**.  
        The flow_bps structure is documented below.
        """
        return pulumi.get(self, "flow_bps")

    @_builtins.property
    @pulumi.getter(name="flowPps")
    def flow_pps(self) -> Sequence['outputs.GetDdosAttackProtectionInfoFlowPpResult']:
        """
        The PPS flow information list. This field is returned when type is **pps**.  
        The flow_pps structure is documented below.
        """
        return pulumi.get(self, "flow_pps")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> _builtins.str:
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter
    def ip(self) -> _builtins.str:
        return pulumi.get(self, "ip")

    @_builtins.property
    @pulumi.getter(name="startTime")
    def start_time(self) -> _builtins.str:
        return pulumi.get(self, "start_time")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        return pulumi.get(self, "type")


class AwaitableGetDdosAttackProtectionInfoResult(GetDdosAttackProtectionInfoResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDdosAttackProtectionInfoResult(
            end_time=self.end_time,
            flow_bps=self.flow_bps,
            flow_pps=self.flow_pps,
            id=self.id,
            instance_id=self.instance_id,
            ip=self.ip,
            start_time=self.start_time,
            type=self.type)


def get_ddos_attack_protection_info(end_time: Optional[_builtins.str] = None,
                                    instance_id: Optional[_builtins.str] = None,
                                    ip: Optional[_builtins.str] = None,
                                    start_time: Optional[_builtins.str] = None,
                                    type: Optional[_builtins.str] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDdosAttackProtectionInfoResult:
    """
    Use this data source to get the list of Advanced Anti-DDos DDoS attack protection info within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    ip = config.require_object("ip")
    type = config.require_object("type")
    start_time = config.require_object("startTime")
    end_time = config.require_object("endTime")
    test = huaweicloud.AdvancedAntiDDos.get_ddos_attack_protection_info(instance_id=instance_id,
        ip=ip,
        type=type,
        start_time=start_time,
        end_time=end_time)
    ```


    :param _builtins.str end_time: Specifies the end time.
    :param _builtins.str instance_id: Specifies the instance ID.
    :param _builtins.str ip: Specifies the high defense IP address.
    :param _builtins.str start_time: Specifies the start time.
    :param _builtins.str type: Specifies the request type. The valid values are **pps** and **bps**.
    """
    __args__ = dict()
    __args__['endTime'] = end_time
    __args__['instanceId'] = instance_id
    __args__['ip'] = ip
    __args__['startTime'] = start_time
    __args__['type'] = type
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:AdvancedAntiDDos/getDdosAttackProtectionInfo:getDdosAttackProtectionInfo', __args__, opts=opts, typ=GetDdosAttackProtectionInfoResult).value

    return AwaitableGetDdosAttackProtectionInfoResult(
        end_time=pulumi.get(__ret__, 'end_time'),
        flow_bps=pulumi.get(__ret__, 'flow_bps'),
        flow_pps=pulumi.get(__ret__, 'flow_pps'),
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        ip=pulumi.get(__ret__, 'ip'),
        start_time=pulumi.get(__ret__, 'start_time'),
        type=pulumi.get(__ret__, 'type'))
def get_ddos_attack_protection_info_output(end_time: Optional[pulumi.Input[_builtins.str]] = None,
                                           instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                                           ip: Optional[pulumi.Input[_builtins.str]] = None,
                                           start_time: Optional[pulumi.Input[_builtins.str]] = None,
                                           type: Optional[pulumi.Input[_builtins.str]] = None,
                                           opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetDdosAttackProtectionInfoResult]:
    """
    Use this data source to get the list of Advanced Anti-DDos DDoS attack protection info within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    ip = config.require_object("ip")
    type = config.require_object("type")
    start_time = config.require_object("startTime")
    end_time = config.require_object("endTime")
    test = huaweicloud.AdvancedAntiDDos.get_ddos_attack_protection_info(instance_id=instance_id,
        ip=ip,
        type=type,
        start_time=start_time,
        end_time=end_time)
    ```


    :param _builtins.str end_time: Specifies the end time.
    :param _builtins.str instance_id: Specifies the instance ID.
    :param _builtins.str ip: Specifies the high defense IP address.
    :param _builtins.str start_time: Specifies the start time.
    :param _builtins.str type: Specifies the request type. The valid values are **pps** and **bps**.
    """
    __args__ = dict()
    __args__['endTime'] = end_time
    __args__['instanceId'] = instance_id
    __args__['ip'] = ip
    __args__['startTime'] = start_time
    __args__['type'] = type
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:AdvancedAntiDDos/getDdosAttackProtectionInfo:getDdosAttackProtectionInfo', __args__, opts=opts, typ=GetDdosAttackProtectionInfoResult)
    return __ret__.apply(lambda __response__: GetDdosAttackProtectionInfoResult(
        end_time=pulumi.get(__response__, 'end_time'),
        flow_bps=pulumi.get(__response__, 'flow_bps'),
        flow_pps=pulumi.get(__response__, 'flow_pps'),
        id=pulumi.get(__response__, 'id'),
        instance_id=pulumi.get(__response__, 'instance_id'),
        ip=pulumi.get(__response__, 'ip'),
        start_time=pulumi.get(__response__, 'start_time'),
        type=pulumi.get(__response__, 'type')))
