# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'ChangeSpecificationUpgradeDataArgs',
    'ChangeSpecificationUpgradeDataArgsDict',
]

MYPY = False

if not MYPY:
    class ChangeSpecificationUpgradeDataArgsDict(TypedDict):
        basic_bandwidth: NotRequired[pulumi.Input[_builtins.str]]
        """
        Specifies the basic bandwidth (Gbps).
        """
        bind_domain_num: NotRequired[pulumi.Input[_builtins.int]]
        """
        Specifies the bind domain number.
        """
        elastic_bandwidth: NotRequired[pulumi.Input[_builtins.str]]
        """
        Specifies the elastic bandwidth (Gbps).
        """
        port_num: NotRequired[pulumi.Input[_builtins.int]]
        """
        Specifies the port number.
        """
        service_bandwidth: NotRequired[pulumi.Input[_builtins.int]]
        """
        Specifies the service bandwidth (Mbps).
        """
elif False:
    ChangeSpecificationUpgradeDataArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class ChangeSpecificationUpgradeDataArgs:
    def __init__(__self__, *,
                 basic_bandwidth: Optional[pulumi.Input[_builtins.str]] = None,
                 bind_domain_num: Optional[pulumi.Input[_builtins.int]] = None,
                 elastic_bandwidth: Optional[pulumi.Input[_builtins.str]] = None,
                 port_num: Optional[pulumi.Input[_builtins.int]] = None,
                 service_bandwidth: Optional[pulumi.Input[_builtins.int]] = None):
        """
        :param pulumi.Input[_builtins.str] basic_bandwidth: Specifies the basic bandwidth (Gbps).
        :param pulumi.Input[_builtins.int] bind_domain_num: Specifies the bind domain number.
        :param pulumi.Input[_builtins.str] elastic_bandwidth: Specifies the elastic bandwidth (Gbps).
        :param pulumi.Input[_builtins.int] port_num: Specifies the port number.
        :param pulumi.Input[_builtins.int] service_bandwidth: Specifies the service bandwidth (Mbps).
        """
        if basic_bandwidth is not None:
            pulumi.set(__self__, "basic_bandwidth", basic_bandwidth)
        if bind_domain_num is not None:
            pulumi.set(__self__, "bind_domain_num", bind_domain_num)
        if elastic_bandwidth is not None:
            pulumi.set(__self__, "elastic_bandwidth", elastic_bandwidth)
        if port_num is not None:
            pulumi.set(__self__, "port_num", port_num)
        if service_bandwidth is not None:
            pulumi.set(__self__, "service_bandwidth", service_bandwidth)

    @_builtins.property
    @pulumi.getter(name="basicBandwidth")
    def basic_bandwidth(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the basic bandwidth (Gbps).
        """
        return pulumi.get(self, "basic_bandwidth")

    @basic_bandwidth.setter
    def basic_bandwidth(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "basic_bandwidth", value)

    @_builtins.property
    @pulumi.getter(name="bindDomainNum")
    def bind_domain_num(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the bind domain number.
        """
        return pulumi.get(self, "bind_domain_num")

    @bind_domain_num.setter
    def bind_domain_num(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "bind_domain_num", value)

    @_builtins.property
    @pulumi.getter(name="elasticBandwidth")
    def elastic_bandwidth(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the elastic bandwidth (Gbps).
        """
        return pulumi.get(self, "elastic_bandwidth")

    @elastic_bandwidth.setter
    def elastic_bandwidth(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "elastic_bandwidth", value)

    @_builtins.property
    @pulumi.getter(name="portNum")
    def port_num(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the port number.
        """
        return pulumi.get(self, "port_num")

    @port_num.setter
    def port_num(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "port_num", value)

    @_builtins.property
    @pulumi.getter(name="serviceBandwidth")
    def service_bandwidth(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the service bandwidth (Mbps).
        """
        return pulumi.get(self, "service_bandwidth")

    @service_bandwidth.setter
    def service_bandwidth(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "service_bandwidth", value)


