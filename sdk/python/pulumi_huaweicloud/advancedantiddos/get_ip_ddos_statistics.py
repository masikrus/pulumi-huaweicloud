# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetIpDdosStatisticsResult',
    'AwaitableGetIpDdosStatisticsResult',
    'get_ip_ddos_statistics',
    'get_ip_ddos_statistics_output',
]

@pulumi.output_type
class GetIpDdosStatisticsResult:
    """
    A collection of values returned by getIpDdosStatistics.
    """
    def __init__(__self__, attack_kbps_peak=None, ddos_count=None, end_time=None, id=None, in_kbps_peak=None, instance_id=None, ip=None, start_time=None, timestamp=None, vip=None):
        if attack_kbps_peak and not isinstance(attack_kbps_peak, int):
            raise TypeError("Expected argument 'attack_kbps_peak' to be a int")
        pulumi.set(__self__, "attack_kbps_peak", attack_kbps_peak)
        if ddos_count and not isinstance(ddos_count, int):
            raise TypeError("Expected argument 'ddos_count' to be a int")
        pulumi.set(__self__, "ddos_count", ddos_count)
        if end_time and not isinstance(end_time, str):
            raise TypeError("Expected argument 'end_time' to be a str")
        pulumi.set(__self__, "end_time", end_time)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if in_kbps_peak and not isinstance(in_kbps_peak, int):
            raise TypeError("Expected argument 'in_kbps_peak' to be a int")
        pulumi.set(__self__, "in_kbps_peak", in_kbps_peak)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if ip and not isinstance(ip, str):
            raise TypeError("Expected argument 'ip' to be a str")
        pulumi.set(__self__, "ip", ip)
        if start_time and not isinstance(start_time, str):
            raise TypeError("Expected argument 'start_time' to be a str")
        pulumi.set(__self__, "start_time", start_time)
        if timestamp and not isinstance(timestamp, int):
            raise TypeError("Expected argument 'timestamp' to be a int")
        pulumi.set(__self__, "timestamp", timestamp)
        if vip and not isinstance(vip, str):
            raise TypeError("Expected argument 'vip' to be a str")
        pulumi.set(__self__, "vip", vip)

    @_builtins.property
    @pulumi.getter(name="attackKbpsPeak")
    def attack_kbps_peak(self) -> _builtins.int:
        """
        The attack peak.
        """
        return pulumi.get(self, "attack_kbps_peak")

    @_builtins.property
    @pulumi.getter(name="ddosCount")
    def ddos_count(self) -> _builtins.int:
        """
        The number of attacks.
        """
        return pulumi.get(self, "ddos_count")

    @_builtins.property
    @pulumi.getter(name="endTime")
    def end_time(self) -> _builtins.str:
        return pulumi.get(self, "end_time")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="inKbpsPeak")
    def in_kbps_peak(self) -> _builtins.int:
        """
        The traffic peak.
        """
        return pulumi.get(self, "in_kbps_peak")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> _builtins.str:
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter
    def ip(self) -> _builtins.str:
        return pulumi.get(self, "ip")

    @_builtins.property
    @pulumi.getter(name="startTime")
    def start_time(self) -> _builtins.str:
        return pulumi.get(self, "start_time")

    @_builtins.property
    @pulumi.getter
    def timestamp(self) -> _builtins.int:
        """
        The attack peak timestamp.
        """
        return pulumi.get(self, "timestamp")

    @_builtins.property
    @pulumi.getter
    def vip(self) -> _builtins.str:
        """
        The Anti-DDoS IP.
        """
        return pulumi.get(self, "vip")


class AwaitableGetIpDdosStatisticsResult(GetIpDdosStatisticsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIpDdosStatisticsResult(
            attack_kbps_peak=self.attack_kbps_peak,
            ddos_count=self.ddos_count,
            end_time=self.end_time,
            id=self.id,
            in_kbps_peak=self.in_kbps_peak,
            instance_id=self.instance_id,
            ip=self.ip,
            start_time=self.start_time,
            timestamp=self.timestamp,
            vip=self.vip)


def get_ip_ddos_statistics(end_time: Optional[_builtins.str] = None,
                           instance_id: Optional[_builtins.str] = None,
                           ip: Optional[_builtins.str] = None,
                           start_time: Optional[_builtins.str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIpDdosStatisticsResult:
    """
    Use this data source to get the Advanced Anti-DDos IP ddos statistics within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.AdvancedAntiDDos.get_ip_ddos_statistics()
    ```


    :param _builtins.str end_time: Specifies the end time, millisecond timestamp.
    :param _builtins.str instance_id: Specifies the instance ID.
    :param _builtins.str ip: Specifies the IP address.
    :param _builtins.str start_time: Specifies the start time, millisecond timestamp.
    """
    __args__ = dict()
    __args__['endTime'] = end_time
    __args__['instanceId'] = instance_id
    __args__['ip'] = ip
    __args__['startTime'] = start_time
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:AdvancedAntiDDos/getIpDdosStatistics:getIpDdosStatistics', __args__, opts=opts, typ=GetIpDdosStatisticsResult).value

    return AwaitableGetIpDdosStatisticsResult(
        attack_kbps_peak=pulumi.get(__ret__, 'attack_kbps_peak'),
        ddos_count=pulumi.get(__ret__, 'ddos_count'),
        end_time=pulumi.get(__ret__, 'end_time'),
        id=pulumi.get(__ret__, 'id'),
        in_kbps_peak=pulumi.get(__ret__, 'in_kbps_peak'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        ip=pulumi.get(__ret__, 'ip'),
        start_time=pulumi.get(__ret__, 'start_time'),
        timestamp=pulumi.get(__ret__, 'timestamp'),
        vip=pulumi.get(__ret__, 'vip'))
def get_ip_ddos_statistics_output(end_time: Optional[pulumi.Input[_builtins.str]] = None,
                                  instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                                  ip: Optional[pulumi.Input[_builtins.str]] = None,
                                  start_time: Optional[pulumi.Input[_builtins.str]] = None,
                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetIpDdosStatisticsResult]:
    """
    Use this data source to get the Advanced Anti-DDos IP ddos statistics within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.AdvancedAntiDDos.get_ip_ddos_statistics()
    ```


    :param _builtins.str end_time: Specifies the end time, millisecond timestamp.
    :param _builtins.str instance_id: Specifies the instance ID.
    :param _builtins.str ip: Specifies the IP address.
    :param _builtins.str start_time: Specifies the start time, millisecond timestamp.
    """
    __args__ = dict()
    __args__['endTime'] = end_time
    __args__['instanceId'] = instance_id
    __args__['ip'] = ip
    __args__['startTime'] = start_time
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:AdvancedAntiDDos/getIpDdosStatistics:getIpDdosStatistics', __args__, opts=opts, typ=GetIpDdosStatisticsResult)
    return __ret__.apply(lambda __response__: GetIpDdosStatisticsResult(
        attack_kbps_peak=pulumi.get(__response__, 'attack_kbps_peak'),
        ddos_count=pulumi.get(__response__, 'ddos_count'),
        end_time=pulumi.get(__response__, 'end_time'),
        id=pulumi.get(__response__, 'id'),
        in_kbps_peak=pulumi.get(__response__, 'in_kbps_peak'),
        instance_id=pulumi.get(__response__, 'instance_id'),
        ip=pulumi.get(__response__, 'ip'),
        start_time=pulumi.get(__response__, 'start_time'),
        timestamp=pulumi.get(__response__, 'timestamp'),
        vip=pulumi.get(__response__, 'vip')))
