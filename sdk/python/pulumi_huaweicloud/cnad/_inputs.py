# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'AdvancedPolicyAssociateProtectedObjectArgs',
    'AdvancedPolicyAssociateProtectedObjectArgsDict',
    'AdvancedProtectedObjectProtectedObjectArgs',
    'AdvancedProtectedObjectProtectedObjectArgsDict',
]

MYPY = False

if not MYPY:
    class AdvancedPolicyAssociateProtectedObjectArgsDict(TypedDict):
        block_threshold: NotRequired[pulumi.Input[_builtins.str]]
        """
        Indicates the block threshold of the protected object.
        """
        clean_threshold: NotRequired[pulumi.Input[_builtins.int]]
        """
        Indicates the clean threshold of the protected object.
        """
        id: NotRequired[pulumi.Input[_builtins.str]]
        """
        Indicates the ID of the protected object.
        """
        instance_id: NotRequired[pulumi.Input[_builtins.str]]
        """
        Specifies the instance ID. You can find it through data source
        `cnad_get_advanced_instances`.

        Changing this parameter will create a new resource.
        """
        instance_name: NotRequired[pulumi.Input[_builtins.str]]
        """
        Indicates the instance name of the protected object.
        """
        instance_version: NotRequired[pulumi.Input[_builtins.str]]
        """
        Indicates the instance version of the protected object.
        + **cnad_pro**: Professional Edition.
        + **cnad_ip**: Standard Edition.
        + **cnad_ep**: Platinum Edition.
        + **cnad_full_high**: Unlimited Protection Advanced Edition.
        + **cnad_vic**: On demand Version.
        + **cnad_intl_ep**: International Station Platinum Edition.
        """
        ip_address: NotRequired[pulumi.Input[_builtins.str]]
        """
        Indicates the IP of the protected object.
        """
        name: NotRequired[pulumi.Input[_builtins.str]]
        """
        Indicates the name of the protected object.
        """
        policy_name: NotRequired[pulumi.Input[_builtins.str]]
        """
        Indicates the policy name of the protected object.
        """
        region: NotRequired[pulumi.Input[_builtins.str]]
        """
        Indicates the region to which the protected object belongs.
        """
        status: NotRequired[pulumi.Input[_builtins.int]]
        """
        Indicates the status of the protected object.
        + **0**: Normal.
        + **1**: Cleaning in progress.
        + **2**: In a black hole.
        """
        type: NotRequired[pulumi.Input[_builtins.str]]
        """
        Indicates the type of the protected object.
        """
elif False:
    AdvancedPolicyAssociateProtectedObjectArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class AdvancedPolicyAssociateProtectedObjectArgs:
    def __init__(__self__, *,
                 block_threshold: Optional[pulumi.Input[_builtins.str]] = None,
                 clean_threshold: Optional[pulumi.Input[_builtins.int]] = None,
                 id: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_name: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_version: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.int]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None):
        """
        :param pulumi.Input[_builtins.str] block_threshold: Indicates the block threshold of the protected object.
        :param pulumi.Input[_builtins.int] clean_threshold: Indicates the clean threshold of the protected object.
        :param pulumi.Input[_builtins.str] id: Indicates the ID of the protected object.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the instance ID. You can find it through data source
               `cnad_get_advanced_instances`.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] instance_name: Indicates the instance name of the protected object.
        :param pulumi.Input[_builtins.str] instance_version: Indicates the instance version of the protected object.
               + **cnad_pro**: Professional Edition.
               + **cnad_ip**: Standard Edition.
               + **cnad_ep**: Platinum Edition.
               + **cnad_full_high**: Unlimited Protection Advanced Edition.
               + **cnad_vic**: On demand Version.
               + **cnad_intl_ep**: International Station Platinum Edition.
        :param pulumi.Input[_builtins.str] ip_address: Indicates the IP of the protected object.
        :param pulumi.Input[_builtins.str] name: Indicates the name of the protected object.
        :param pulumi.Input[_builtins.str] policy_name: Indicates the policy name of the protected object.
        :param pulumi.Input[_builtins.str] region: Indicates the region to which the protected object belongs.
        :param pulumi.Input[_builtins.int] status: Indicates the status of the protected object.
               + **0**: Normal.
               + **1**: Cleaning in progress.
               + **2**: In a black hole.
        :param pulumi.Input[_builtins.str] type: Indicates the type of the protected object.
        """
        if block_threshold is not None:
            pulumi.set(__self__, "block_threshold", block_threshold)
        if clean_threshold is not None:
            pulumi.set(__self__, "clean_threshold", clean_threshold)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if instance_name is not None:
            pulumi.set(__self__, "instance_name", instance_name)
        if instance_version is not None:
            pulumi.set(__self__, "instance_version", instance_version)
        if ip_address is not None:
            pulumi.set(__self__, "ip_address", ip_address)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if policy_name is not None:
            pulumi.set(__self__, "policy_name", policy_name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter(name="blockThreshold")
    def block_threshold(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the block threshold of the protected object.
        """
        return pulumi.get(self, "block_threshold")

    @block_threshold.setter
    def block_threshold(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "block_threshold", value)

    @_builtins.property
    @pulumi.getter(name="cleanThreshold")
    def clean_threshold(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Indicates the clean threshold of the protected object.
        """
        return pulumi.get(self, "clean_threshold")

    @clean_threshold.setter
    def clean_threshold(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "clean_threshold", value)

    @_builtins.property
    @pulumi.getter
    def id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the ID of the protected object.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "id", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the instance ID. You can find it through data source
        `cnad_get_advanced_instances`.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the instance name of the protected object.
        """
        return pulumi.get(self, "instance_name")

    @instance_name.setter
    def instance_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_name", value)

    @_builtins.property
    @pulumi.getter(name="instanceVersion")
    def instance_version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the instance version of the protected object.
        + **cnad_pro**: Professional Edition.
        + **cnad_ip**: Standard Edition.
        + **cnad_ep**: Platinum Edition.
        + **cnad_full_high**: Unlimited Protection Advanced Edition.
        + **cnad_vic**: On demand Version.
        + **cnad_intl_ep**: International Station Platinum Edition.
        """
        return pulumi.get(self, "instance_version")

    @instance_version.setter
    def instance_version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_version", value)

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the IP of the protected object.
        """
        return pulumi.get(self, "ip_address")

    @ip_address.setter
    def ip_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ip_address", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the name of the protected object.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="policyName")
    def policy_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the policy name of the protected object.
        """
        return pulumi.get(self, "policy_name")

    @policy_name.setter
    def policy_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "policy_name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the region to which the protected object belongs.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Indicates the status of the protected object.
        + **0**: Normal.
        + **1**: Cleaning in progress.
        + **2**: In a black hole.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the type of the protected object.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)


if not MYPY:
    class AdvancedProtectedObjectProtectedObjectArgsDict(TypedDict):
        id: pulumi.Input[_builtins.str]
        """
        Specifies the ID of the protected object. The field must be the ID of the Elastic IP,
        which in the same region with the CNAD advanced instance. You can find it through data source
        `cnad_get_advanced_available_objects`.
        """
        ip_address: pulumi.Input[_builtins.str]
        """
        Specifies the IP of the protected object. The field must be the IP of the Elastic
        IP, which in the same region with the CNAD advanced instance. You can find it through data source
        `cnad_get_advanced_available_objects`. This field and `id` must belong to the same protected object.
        """
        type: pulumi.Input[_builtins.str]
        """
        Specifies the type of the protected object. Valid values are **VPN**, **NAT**, **VIP**,
        **CCI**, **EIP**, **ELB**, **REROUTING_IP**, **SubEni** and **NetInterFace**. You can find it through data source
        `cnad_get_advanced_available_objects`. This field and `id` must belong to the same protected object.
        """
        block_threshold: NotRequired[pulumi.Input[_builtins.str]]
        """
        The blocking threshold of the protected object.
        """
        clean_threshold: NotRequired[pulumi.Input[_builtins.int]]
        """
        The cleaning threshold of the protected object.
        """
        instance_id: NotRequired[pulumi.Input[_builtins.str]]
        """
        Specifies the CNAD advanced instance ID in which to bind protected
        objects. You can find it through data source `cnad_get_advanced_instances`.

        Changing this parameter will create a new resource.
        """
        instance_name: NotRequired[pulumi.Input[_builtins.str]]
        """
        The instance name which the protected object belongs to.
        """
        instance_version: NotRequired[pulumi.Input[_builtins.str]]
        """
        The instance version which the protected object belongs to.
        + **cnad_pro**: Professional Edition.
        + **cnad_ip**: Standard Edition.
        + **cnad_ep**: Platinum Edition.
        + **cnad_full_high**: Unlimited Protection Advanced Edition.
        + **cnad_vic**: On demand Version.
        + **cnad_intl_ep**: International Station Platinum Edition.
        """
        name: NotRequired[pulumi.Input[_builtins.str]]
        """
        The name of the protected object.
        """
        policy_name: NotRequired[pulumi.Input[_builtins.str]]
        """
        The policy name which the protected object binding.
        """
        region: NotRequired[pulumi.Input[_builtins.str]]
        """
        The region to which the protected object belongs.
        """
        status: NotRequired[pulumi.Input[_builtins.int]]
        """
        The status of the protected object.
        + **0**: Normal.
        + **1**: Cleaning in progress.
        + **2**: In a black hole.
        """
elif False:
    AdvancedProtectedObjectProtectedObjectArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class AdvancedProtectedObjectProtectedObjectArgs:
    def __init__(__self__, *,
                 id: pulumi.Input[_builtins.str],
                 ip_address: pulumi.Input[_builtins.str],
                 type: pulumi.Input[_builtins.str],
                 block_threshold: Optional[pulumi.Input[_builtins.str]] = None,
                 clean_threshold: Optional[pulumi.Input[_builtins.int]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_name: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_version: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.int]] = None):
        """
        :param pulumi.Input[_builtins.str] id: Specifies the ID of the protected object. The field must be the ID of the Elastic IP,
               which in the same region with the CNAD advanced instance. You can find it through data source
               `cnad_get_advanced_available_objects`.
        :param pulumi.Input[_builtins.str] ip_address: Specifies the IP of the protected object. The field must be the IP of the Elastic
               IP, which in the same region with the CNAD advanced instance. You can find it through data source
               `cnad_get_advanced_available_objects`. This field and `id` must belong to the same protected object.
        :param pulumi.Input[_builtins.str] type: Specifies the type of the protected object. Valid values are **VPN**, **NAT**, **VIP**,
               **CCI**, **EIP**, **ELB**, **REROUTING_IP**, **SubEni** and **NetInterFace**. You can find it through data source
               `cnad_get_advanced_available_objects`. This field and `id` must belong to the same protected object.
        :param pulumi.Input[_builtins.str] block_threshold: The blocking threshold of the protected object.
        :param pulumi.Input[_builtins.int] clean_threshold: The cleaning threshold of the protected object.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the CNAD advanced instance ID in which to bind protected
               objects. You can find it through data source `cnad_get_advanced_instances`.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] instance_name: The instance name which the protected object belongs to.
        :param pulumi.Input[_builtins.str] instance_version: The instance version which the protected object belongs to.
               + **cnad_pro**: Professional Edition.
               + **cnad_ip**: Standard Edition.
               + **cnad_ep**: Platinum Edition.
               + **cnad_full_high**: Unlimited Protection Advanced Edition.
               + **cnad_vic**: On demand Version.
               + **cnad_intl_ep**: International Station Platinum Edition.
        :param pulumi.Input[_builtins.str] name: The name of the protected object.
        :param pulumi.Input[_builtins.str] policy_name: The policy name which the protected object binding.
        :param pulumi.Input[_builtins.str] region: The region to which the protected object belongs.
        :param pulumi.Input[_builtins.int] status: The status of the protected object.
               + **0**: Normal.
               + **1**: Cleaning in progress.
               + **2**: In a black hole.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "ip_address", ip_address)
        pulumi.set(__self__, "type", type)
        if block_threshold is not None:
            pulumi.set(__self__, "block_threshold", block_threshold)
        if clean_threshold is not None:
            pulumi.set(__self__, "clean_threshold", clean_threshold)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if instance_name is not None:
            pulumi.set(__self__, "instance_name", instance_name)
        if instance_version is not None:
            pulumi.set(__self__, "instance_version", instance_version)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if policy_name is not None:
            pulumi.set(__self__, "policy_name", policy_name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if status is not None:
            pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter
    def id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the protected object. The field must be the ID of the Elastic IP,
        which in the same region with the CNAD advanced instance. You can find it through data source
        `cnad_get_advanced_available_objects`.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "id", value)

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the IP of the protected object. The field must be the IP of the Elastic
        IP, which in the same region with the CNAD advanced instance. You can find it through data source
        `cnad_get_advanced_available_objects`. This field and `id` must belong to the same protected object.
        """
        return pulumi.get(self, "ip_address")

    @ip_address.setter
    def ip_address(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "ip_address", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the type of the protected object. Valid values are **VPN**, **NAT**, **VIP**,
        **CCI**, **EIP**, **ELB**, **REROUTING_IP**, **SubEni** and **NetInterFace**. You can find it through data source
        `cnad_get_advanced_available_objects`. This field and `id` must belong to the same protected object.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="blockThreshold")
    def block_threshold(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The blocking threshold of the protected object.
        """
        return pulumi.get(self, "block_threshold")

    @block_threshold.setter
    def block_threshold(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "block_threshold", value)

    @_builtins.property
    @pulumi.getter(name="cleanThreshold")
    def clean_threshold(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The cleaning threshold of the protected object.
        """
        return pulumi.get(self, "clean_threshold")

    @clean_threshold.setter
    def clean_threshold(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "clean_threshold", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the CNAD advanced instance ID in which to bind protected
        objects. You can find it through data source `cnad_get_advanced_instances`.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The instance name which the protected object belongs to.
        """
        return pulumi.get(self, "instance_name")

    @instance_name.setter
    def instance_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_name", value)

    @_builtins.property
    @pulumi.getter(name="instanceVersion")
    def instance_version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The instance version which the protected object belongs to.
        + **cnad_pro**: Professional Edition.
        + **cnad_ip**: Standard Edition.
        + **cnad_ep**: Platinum Edition.
        + **cnad_full_high**: Unlimited Protection Advanced Edition.
        + **cnad_vic**: On demand Version.
        + **cnad_intl_ep**: International Station Platinum Edition.
        """
        return pulumi.get(self, "instance_version")

    @instance_version.setter
    def instance_version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_version", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the protected object.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="policyName")
    def policy_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The policy name which the protected object binding.
        """
        return pulumi.get(self, "policy_name")

    @policy_name.setter
    def policy_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "policy_name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The region to which the protected object belongs.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The status of the protected object.
        + **0**: Normal.
        + **1**: Cleaning in progress.
        + **2**: In a black hole.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "status", value)


