# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetAdvancedProtectedObjectsResult',
    'AwaitableGetAdvancedProtectedObjectsResult',
    'get_advanced_protected_objects',
    'get_advanced_protected_objects_output',
]

@pulumi.output_type
class GetAdvancedProtectedObjectsResult:
    """
    A collection of values returned by getAdvancedProtectedObjects.
    """
    def __init__(__self__, id=None, instance_id=None, ip_address=None, is_unbound=None, policy_id=None, protected_object_id=None, protected_objects=None, type=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if ip_address and not isinstance(ip_address, str):
            raise TypeError("Expected argument 'ip_address' to be a str")
        pulumi.set(__self__, "ip_address", ip_address)
        if is_unbound and not isinstance(is_unbound, bool):
            raise TypeError("Expected argument 'is_unbound' to be a bool")
        pulumi.set(__self__, "is_unbound", is_unbound)
        if policy_id and not isinstance(policy_id, str):
            raise TypeError("Expected argument 'policy_id' to be a str")
        pulumi.set(__self__, "policy_id", policy_id)
        if protected_object_id and not isinstance(protected_object_id, str):
            raise TypeError("Expected argument 'protected_object_id' to be a str")
        pulumi.set(__self__, "protected_object_id", protected_object_id)
        if protected_objects and not isinstance(protected_objects, list):
            raise TypeError("Expected argument 'protected_objects' to be a list")
        pulumi.set(__self__, "protected_objects", protected_objects)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[_builtins.str]:
        """
        Indicates the instance ID of the protected object.
        """
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> Optional[_builtins.str]:
        """
        Indicates the IP of the protected object.
        """
        return pulumi.get(self, "ip_address")

    @_builtins.property
    @pulumi.getter(name="isUnbound")
    def is_unbound(self) -> Optional[_builtins.bool]:
        return pulumi.get(self, "is_unbound")

    @_builtins.property
    @pulumi.getter(name="policyId")
    def policy_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "policy_id")

    @_builtins.property
    @pulumi.getter(name="protectedObjectId")
    def protected_object_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "protected_object_id")

    @_builtins.property
    @pulumi.getter(name="protectedObjects")
    def protected_objects(self) -> Sequence['outputs.GetAdvancedProtectedObjectsProtectedObjectResult']:
        """
        Indicates the list of the advanced protected objects.
        The protected_objects structure is documented below.
        """
        return pulumi.get(self, "protected_objects")

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[_builtins.str]:
        """
        Indicates the type of the protected object.
        """
        return pulumi.get(self, "type")


class AwaitableGetAdvancedProtectedObjectsResult(GetAdvancedProtectedObjectsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAdvancedProtectedObjectsResult(
            id=self.id,
            instance_id=self.instance_id,
            ip_address=self.ip_address,
            is_unbound=self.is_unbound,
            policy_id=self.policy_id,
            protected_object_id=self.protected_object_id,
            protected_objects=self.protected_objects,
            type=self.type)


def get_advanced_protected_objects(instance_id: Optional[_builtins.str] = None,
                                   ip_address: Optional[_builtins.str] = None,
                                   is_unbound: Optional[_builtins.bool] = None,
                                   policy_id: Optional[_builtins.str] = None,
                                   protected_object_id: Optional[_builtins.str] = None,
                                   type: Optional[_builtins.str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAdvancedProtectedObjectsResult:
    """
    Use this data source to get the list of CNAD advanced protected objects.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    test = huaweicloud.cnad.get_advanced_protected_objects(instance_id=instance_id)
    ```


    :param _builtins.str instance_id: Specifies the CNAD advanced instance ID. You can find it through data source
           `cnad_get_advanced_instances`.
    :param _builtins.str ip_address: Specifies the CNAD advanced protected object IP which you want to query.
           The IP must be the Elastic IP.
    :param _builtins.bool is_unbound: Specifies whether query protected objects which policies unbound.
           If the field is set to **true**, only protection objects that can bind policies will be returned.
    :param _builtins.str policy_id: Specifies the CNAD advanced policy ID.
    :param _builtins.str protected_object_id: Specifies the CNAD advanced protected object ID which you want to query.
           The protected object ID must be the ID of the Elastic IP.
    :param _builtins.str type: Specifies the type of the protected object. This field means the type of resource which
           bound to Elastic IP. Valid values are: **VPN**, **NAT**, **VIP**,**CCI**, **EIP**, **ELB**, **REROUTING_IP**,
           **SubEni** and **NetInterFace**.
    """
    __args__ = dict()
    __args__['instanceId'] = instance_id
    __args__['ipAddress'] = ip_address
    __args__['isUnbound'] = is_unbound
    __args__['policyId'] = policy_id
    __args__['protectedObjectId'] = protected_object_id
    __args__['type'] = type
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:cnad/getAdvancedProtectedObjects:getAdvancedProtectedObjects', __args__, opts=opts, typ=GetAdvancedProtectedObjectsResult).value

    return AwaitableGetAdvancedProtectedObjectsResult(
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        ip_address=pulumi.get(__ret__, 'ip_address'),
        is_unbound=pulumi.get(__ret__, 'is_unbound'),
        policy_id=pulumi.get(__ret__, 'policy_id'),
        protected_object_id=pulumi.get(__ret__, 'protected_object_id'),
        protected_objects=pulumi.get(__ret__, 'protected_objects'),
        type=pulumi.get(__ret__, 'type'))
def get_advanced_protected_objects_output(instance_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                          ip_address: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                          is_unbound: Optional[pulumi.Input[Optional[_builtins.bool]]] = None,
                                          policy_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                          protected_object_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                          type: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                          opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAdvancedProtectedObjectsResult]:
    """
    Use this data source to get the list of CNAD advanced protected objects.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    test = huaweicloud.cnad.get_advanced_protected_objects(instance_id=instance_id)
    ```


    :param _builtins.str instance_id: Specifies the CNAD advanced instance ID. You can find it through data source
           `cnad_get_advanced_instances`.
    :param _builtins.str ip_address: Specifies the CNAD advanced protected object IP which you want to query.
           The IP must be the Elastic IP.
    :param _builtins.bool is_unbound: Specifies whether query protected objects which policies unbound.
           If the field is set to **true**, only protection objects that can bind policies will be returned.
    :param _builtins.str policy_id: Specifies the CNAD advanced policy ID.
    :param _builtins.str protected_object_id: Specifies the CNAD advanced protected object ID which you want to query.
           The protected object ID must be the ID of the Elastic IP.
    :param _builtins.str type: Specifies the type of the protected object. This field means the type of resource which
           bound to Elastic IP. Valid values are: **VPN**, **NAT**, **VIP**,**CCI**, **EIP**, **ELB**, **REROUTING_IP**,
           **SubEni** and **NetInterFace**.
    """
    __args__ = dict()
    __args__['instanceId'] = instance_id
    __args__['ipAddress'] = ip_address
    __args__['isUnbound'] = is_unbound
    __args__['policyId'] = policy_id
    __args__['protectedObjectId'] = protected_object_id
    __args__['type'] = type
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:cnad/getAdvancedProtectedObjects:getAdvancedProtectedObjects', __args__, opts=opts, typ=GetAdvancedProtectedObjectsResult)
    return __ret__.apply(lambda __response__: GetAdvancedProtectedObjectsResult(
        id=pulumi.get(__response__, 'id'),
        instance_id=pulumi.get(__response__, 'instance_id'),
        ip_address=pulumi.get(__response__, 'ip_address'),
        is_unbound=pulumi.get(__response__, 'is_unbound'),
        policy_id=pulumi.get(__response__, 'policy_id'),
        protected_object_id=pulumi.get(__response__, 'protected_object_id'),
        protected_objects=pulumi.get(__response__, 'protected_objects'),
        type=pulumi.get(__response__, 'type')))
