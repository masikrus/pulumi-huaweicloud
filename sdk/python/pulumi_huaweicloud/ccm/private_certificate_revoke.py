# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['PrivateCertificateRevokeArgs', 'PrivateCertificateRevoke']

@pulumi.input_type
class PrivateCertificateRevokeArgs:
    def __init__(__self__, *,
                 certificate_id: pulumi.Input[_builtins.str],
                 reason: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a PrivateCertificateRevoke resource.
        :param pulumi.Input[_builtins.str] certificate_id: Specifies the ID of the private certificate to be revoked.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] reason: Specifies the reason for revoking the private certificate.
               Changing this parameter will create a new resource.
               The valid values are as follows:
               + **UNSPECIFIED**: The default value. No reason is specified for revocation.
               + **KEY_COMPROMISE**: The certificate key material has been leaked.
               + **CERTIFICATE_AUTHORITY_COMPROMISE**: The CA key meterial may be leaked in the certificate chain.
               + **AFFILIATION_CHANGED**: The subject or other information in the certificate has been changed.
               + **SUPERSEDED**: The certificate has been replaced.
               + **CESSATION_OF_OPERATION**: The entity in the certificate or  certificate chain has ceased operation.
               + **CERTIFICATE_HOLD**: The certificate should not be considered valid currently and may take effect in the future.
               + **PRIVILEGE_WITHDRAWN**: The certificate no longer has permissions on the properties it claims.
               + **ATTRIBUTE_AUTHORITY_COMPROMISE**: The authority that guarantee attributes of the certificate may have been
               compromised.
        :param pulumi.Input[_builtins.str] region: Specifies the region to which the CCM private certificate belongs.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "certificate_id", certificate_id)
        if reason is not None:
            pulumi.set(__self__, "reason", reason)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="certificateId")
    def certificate_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the private certificate to be revoked.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "certificate_id")

    @certificate_id.setter
    def certificate_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "certificate_id", value)

    @_builtins.property
    @pulumi.getter
    def reason(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the reason for revoking the private certificate.
        Changing this parameter will create a new resource.
        The valid values are as follows:
        + **UNSPECIFIED**: The default value. No reason is specified for revocation.
        + **KEY_COMPROMISE**: The certificate key material has been leaked.
        + **CERTIFICATE_AUTHORITY_COMPROMISE**: The CA key meterial may be leaked in the certificate chain.
        + **AFFILIATION_CHANGED**: The subject or other information in the certificate has been changed.
        + **SUPERSEDED**: The certificate has been replaced.
        + **CESSATION_OF_OPERATION**: The entity in the certificate or  certificate chain has ceased operation.
        + **CERTIFICATE_HOLD**: The certificate should not be considered valid currently and may take effect in the future.
        + **PRIVILEGE_WITHDRAWN**: The certificate no longer has permissions on the properties it claims.
        + **ATTRIBUTE_AUTHORITY_COMPROMISE**: The authority that guarantee attributes of the certificate may have been
        compromised.
        """
        return pulumi.get(self, "reason")

    @reason.setter
    def reason(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "reason", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region to which the CCM private certificate belongs.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _PrivateCertificateRevokeState:
    def __init__(__self__, *,
                 certificate_id: Optional[pulumi.Input[_builtins.str]] = None,
                 reason: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering PrivateCertificateRevoke resources.
        :param pulumi.Input[_builtins.str] certificate_id: Specifies the ID of the private certificate to be revoked.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] reason: Specifies the reason for revoking the private certificate.
               Changing this parameter will create a new resource.
               The valid values are as follows:
               + **UNSPECIFIED**: The default value. No reason is specified for revocation.
               + **KEY_COMPROMISE**: The certificate key material has been leaked.
               + **CERTIFICATE_AUTHORITY_COMPROMISE**: The CA key meterial may be leaked in the certificate chain.
               + **AFFILIATION_CHANGED**: The subject or other information in the certificate has been changed.
               + **SUPERSEDED**: The certificate has been replaced.
               + **CESSATION_OF_OPERATION**: The entity in the certificate or  certificate chain has ceased operation.
               + **CERTIFICATE_HOLD**: The certificate should not be considered valid currently and may take effect in the future.
               + **PRIVILEGE_WITHDRAWN**: The certificate no longer has permissions on the properties it claims.
               + **ATTRIBUTE_AUTHORITY_COMPROMISE**: The authority that guarantee attributes of the certificate may have been
               compromised.
        :param pulumi.Input[_builtins.str] region: Specifies the region to which the CCM private certificate belongs.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        if certificate_id is not None:
            pulumi.set(__self__, "certificate_id", certificate_id)
        if reason is not None:
            pulumi.set(__self__, "reason", reason)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="certificateId")
    def certificate_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the private certificate to be revoked.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "certificate_id")

    @certificate_id.setter
    def certificate_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "certificate_id", value)

    @_builtins.property
    @pulumi.getter
    def reason(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the reason for revoking the private certificate.
        Changing this parameter will create a new resource.
        The valid values are as follows:
        + **UNSPECIFIED**: The default value. No reason is specified for revocation.
        + **KEY_COMPROMISE**: The certificate key material has been leaked.
        + **CERTIFICATE_AUTHORITY_COMPROMISE**: The CA key meterial may be leaked in the certificate chain.
        + **AFFILIATION_CHANGED**: The subject or other information in the certificate has been changed.
        + **SUPERSEDED**: The certificate has been replaced.
        + **CESSATION_OF_OPERATION**: The entity in the certificate or  certificate chain has ceased operation.
        + **CERTIFICATE_HOLD**: The certificate should not be considered valid currently and may take effect in the future.
        + **PRIVILEGE_WITHDRAWN**: The certificate no longer has permissions on the properties it claims.
        + **ATTRIBUTE_AUTHORITY_COMPROMISE**: The authority that guarantee attributes of the certificate may have been
        compromised.
        """
        return pulumi.get(self, "reason")

    @reason.setter
    def reason(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "reason", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region to which the CCM private certificate belongs.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.type_token("huaweicloud:ccm/privateCertificateRevoke:PrivateCertificateRevoke")
class PrivateCertificateRevoke(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 certificate_id: Optional[pulumi.Input[_builtins.str]] = None,
                 reason: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages CCM private certificate revoke resource within HuaweiCloud.

        > The current resource is a one-time resource, and destroying this resource will not change the current status.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        certificate_id = config.require_object("certificateId")
        test = huaweicloud.ccm.PrivateCertificateRevoke("test", certificate_id=certificate_id)
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] certificate_id: Specifies the ID of the private certificate to be revoked.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] reason: Specifies the reason for revoking the private certificate.
               Changing this parameter will create a new resource.
               The valid values are as follows:
               + **UNSPECIFIED**: The default value. No reason is specified for revocation.
               + **KEY_COMPROMISE**: The certificate key material has been leaked.
               + **CERTIFICATE_AUTHORITY_COMPROMISE**: The CA key meterial may be leaked in the certificate chain.
               + **AFFILIATION_CHANGED**: The subject or other information in the certificate has been changed.
               + **SUPERSEDED**: The certificate has been replaced.
               + **CESSATION_OF_OPERATION**: The entity in the certificate or  certificate chain has ceased operation.
               + **CERTIFICATE_HOLD**: The certificate should not be considered valid currently and may take effect in the future.
               + **PRIVILEGE_WITHDRAWN**: The certificate no longer has permissions on the properties it claims.
               + **ATTRIBUTE_AUTHORITY_COMPROMISE**: The authority that guarantee attributes of the certificate may have been
               compromised.
        :param pulumi.Input[_builtins.str] region: Specifies the region to which the CCM private certificate belongs.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PrivateCertificateRevokeArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages CCM private certificate revoke resource within HuaweiCloud.

        > The current resource is a one-time resource, and destroying this resource will not change the current status.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        certificate_id = config.require_object("certificateId")
        test = huaweicloud.ccm.PrivateCertificateRevoke("test", certificate_id=certificate_id)
        ```

        :param str resource_name: The name of the resource.
        :param PrivateCertificateRevokeArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PrivateCertificateRevokeArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 certificate_id: Optional[pulumi.Input[_builtins.str]] = None,
                 reason: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PrivateCertificateRevokeArgs.__new__(PrivateCertificateRevokeArgs)

            if certificate_id is None and not opts.urn:
                raise TypeError("Missing required property 'certificate_id'")
            __props__.__dict__["certificate_id"] = certificate_id
            __props__.__dict__["reason"] = reason
            __props__.__dict__["region"] = region
        super(PrivateCertificateRevoke, __self__).__init__(
            'huaweicloud:ccm/privateCertificateRevoke:PrivateCertificateRevoke',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            certificate_id: Optional[pulumi.Input[_builtins.str]] = None,
            reason: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None) -> 'PrivateCertificateRevoke':
        """
        Get an existing PrivateCertificateRevoke resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] certificate_id: Specifies the ID of the private certificate to be revoked.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] reason: Specifies the reason for revoking the private certificate.
               Changing this parameter will create a new resource.
               The valid values are as follows:
               + **UNSPECIFIED**: The default value. No reason is specified for revocation.
               + **KEY_COMPROMISE**: The certificate key material has been leaked.
               + **CERTIFICATE_AUTHORITY_COMPROMISE**: The CA key meterial may be leaked in the certificate chain.
               + **AFFILIATION_CHANGED**: The subject or other information in the certificate has been changed.
               + **SUPERSEDED**: The certificate has been replaced.
               + **CESSATION_OF_OPERATION**: The entity in the certificate or  certificate chain has ceased operation.
               + **CERTIFICATE_HOLD**: The certificate should not be considered valid currently and may take effect in the future.
               + **PRIVILEGE_WITHDRAWN**: The certificate no longer has permissions on the properties it claims.
               + **ATTRIBUTE_AUTHORITY_COMPROMISE**: The authority that guarantee attributes of the certificate may have been
               compromised.
        :param pulumi.Input[_builtins.str] region: Specifies the region to which the CCM private certificate belongs.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PrivateCertificateRevokeState.__new__(_PrivateCertificateRevokeState)

        __props__.__dict__["certificate_id"] = certificate_id
        __props__.__dict__["reason"] = reason
        __props__.__dict__["region"] = region
        return PrivateCertificateRevoke(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="certificateId")
    def certificate_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the private certificate to be revoked.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "certificate_id")

    @_builtins.property
    @pulumi.getter
    def reason(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the reason for revoking the private certificate.
        Changing this parameter will create a new resource.
        The valid values are as follows:
        + **UNSPECIFIED**: The default value. No reason is specified for revocation.
        + **KEY_COMPROMISE**: The certificate key material has been leaked.
        + **CERTIFICATE_AUTHORITY_COMPROMISE**: The CA key meterial may be leaked in the certificate chain.
        + **AFFILIATION_CHANGED**: The subject or other information in the certificate has been changed.
        + **SUPERSEDED**: The certificate has been replaced.
        + **CESSATION_OF_OPERATION**: The entity in the certificate or  certificate chain has ceased operation.
        + **CERTIFICATE_HOLD**: The certificate should not be considered valid currently and may take effect in the future.
        + **PRIVILEGE_WITHDRAWN**: The certificate no longer has permissions on the properties it claims.
        + **ATTRIBUTE_AUTHORITY_COMPROMISE**: The authority that guarantee attributes of the certificate may have been
        compromised.
        """
        return pulumi.get(self, "reason")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region to which the CCM private certificate belongs.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

