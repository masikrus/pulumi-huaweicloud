# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetAgenciesResult',
    'AwaitableGetAgenciesResult',
    'get_agencies',
    'get_agencies_output',
]

@pulumi.output_type
class GetAgenciesResult:
    """
    A collection of values returned by getAgencies.
    """
    def __init__(__self__, agencies=None, id=None, name=None, trust_domain_id=None):
        if agencies and not isinstance(agencies, list):
            raise TypeError("Expected argument 'agencies' to be a list")
        pulumi.set(__self__, "agencies", agencies)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if trust_domain_id and not isinstance(trust_domain_id, str):
            raise TypeError("Expected argument 'trust_domain_id' to be a str")
        pulumi.set(__self__, "trust_domain_id", trust_domain_id)

    @_builtins.property
    @pulumi.getter
    def agencies(self) -> Sequence['outputs.GetAgenciesAgencyResult']:
        """
        The details of the queried IAM agencies. The structure is documented below.
        """
        return pulumi.get(self, "agencies")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The agency name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="trustDomainId")
    def trust_domain_id(self) -> Optional[_builtins.str]:
        """
        The ID of delegated user domain.
        """
        return pulumi.get(self, "trust_domain_id")


class AwaitableGetAgenciesResult(GetAgenciesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAgenciesResult(
            agencies=self.agencies,
            id=self.id,
            name=self.name,
            trust_domain_id=self.trust_domain_id)


def get_agencies(name: Optional[_builtins.str] = None,
                 trust_domain_id: Optional[_builtins.str] = None,
                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAgenciesResult:
    """
    Use this data source to query the IAM agency list within HuaweiCloud.

    > **NOTE:** You *must* have IAM read privileges to use this data source.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    all = huaweicloud.Iam.get_agencies()
    ```


    :param _builtins.str name: Specifies the name of agency. The name is a string of 1 to 64 characters.
    :param _builtins.str trust_domain_id: Specifies the ID of delegated user domain.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['trustDomainId'] = trust_domain_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Iam/getAgencies:getAgencies', __args__, opts=opts, typ=GetAgenciesResult).value

    return AwaitableGetAgenciesResult(
        agencies=pulumi.get(__ret__, 'agencies'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        trust_domain_id=pulumi.get(__ret__, 'trust_domain_id'))
def get_agencies_output(name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                        trust_domain_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                        opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAgenciesResult]:
    """
    Use this data source to query the IAM agency list within HuaweiCloud.

    > **NOTE:** You *must* have IAM read privileges to use this data source.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    all = huaweicloud.Iam.get_agencies()
    ```


    :param _builtins.str name: Specifies the name of agency. The name is a string of 1 to 64 characters.
    :param _builtins.str trust_domain_id: Specifies the ID of delegated user domain.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['trustDomainId'] = trust_domain_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Iam/getAgencies:getAgencies', __args__, opts=opts, typ=GetAgenciesResult)
    return __ret__.apply(lambda __response__: GetAgenciesResult(
        agencies=pulumi.get(__response__, 'agencies'),
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        trust_domain_id=pulumi.get(__response__, 'trust_domain_id')))
