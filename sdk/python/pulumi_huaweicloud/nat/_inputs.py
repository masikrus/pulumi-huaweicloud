# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GatewaySessionConfArgs',
    'GatewaySessionConfArgsDict',
    'GatewayV2SessionConfArgs',
    'GatewayV2SessionConfArgsDict',
    'GatewayV3SessionConfArgs',
    'GatewayV3SessionConfArgsDict',
    'PrivateSnatRuleTransitIpAssociationArgs',
    'PrivateSnatRuleTransitIpAssociationArgsDict',
]

MYPY = False

if not MYPY:
    class GatewaySessionConfArgsDict(TypedDict):
        icmp_session_expire_time: NotRequired[pulumi.Input[_builtins.int]]
        """
        Specifies the ICMP session expiration time, in seconds.
        The valid value from `10` to `7,200`, default value is `10`.
        """
        tcp_session_expire_time: NotRequired[pulumi.Input[_builtins.int]]
        """
        Specifies the TCP session expiration time, in seconds.
        The valid value from `40` to `7,200`, default value is `900`.
        """
        tcp_time_wait_time: NotRequired[pulumi.Input[_builtins.int]]
        """
        Specifies the duration of TIME_WAIT state when TCP connection is closed,
        in seconds. The valid value from `0` to `1,800`, default value is `5`.
        """
        udp_session_expire_time: NotRequired[pulumi.Input[_builtins.int]]
        """
        Specifies the UDP session expiration time, in seconds.
        The valid value from `40` to `7,200`, default value is `300`.
        """
elif False:
    GatewaySessionConfArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class GatewaySessionConfArgs:
    def __init__(__self__, *,
                 icmp_session_expire_time: Optional[pulumi.Input[_builtins.int]] = None,
                 tcp_session_expire_time: Optional[pulumi.Input[_builtins.int]] = None,
                 tcp_time_wait_time: Optional[pulumi.Input[_builtins.int]] = None,
                 udp_session_expire_time: Optional[pulumi.Input[_builtins.int]] = None):
        """
        :param pulumi.Input[_builtins.int] icmp_session_expire_time: Specifies the ICMP session expiration time, in seconds.
               The valid value from `10` to `7,200`, default value is `10`.
        :param pulumi.Input[_builtins.int] tcp_session_expire_time: Specifies the TCP session expiration time, in seconds.
               The valid value from `40` to `7,200`, default value is `900`.
        :param pulumi.Input[_builtins.int] tcp_time_wait_time: Specifies the duration of TIME_WAIT state when TCP connection is closed,
               in seconds. The valid value from `0` to `1,800`, default value is `5`.
        :param pulumi.Input[_builtins.int] udp_session_expire_time: Specifies the UDP session expiration time, in seconds.
               The valid value from `40` to `7,200`, default value is `300`.
        """
        if icmp_session_expire_time is not None:
            pulumi.set(__self__, "icmp_session_expire_time", icmp_session_expire_time)
        if tcp_session_expire_time is not None:
            pulumi.set(__self__, "tcp_session_expire_time", tcp_session_expire_time)
        if tcp_time_wait_time is not None:
            pulumi.set(__self__, "tcp_time_wait_time", tcp_time_wait_time)
        if udp_session_expire_time is not None:
            pulumi.set(__self__, "udp_session_expire_time", udp_session_expire_time)

    @_builtins.property
    @pulumi.getter(name="icmpSessionExpireTime")
    def icmp_session_expire_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the ICMP session expiration time, in seconds.
        The valid value from `10` to `7,200`, default value is `10`.
        """
        return pulumi.get(self, "icmp_session_expire_time")

    @icmp_session_expire_time.setter
    def icmp_session_expire_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "icmp_session_expire_time", value)

    @_builtins.property
    @pulumi.getter(name="tcpSessionExpireTime")
    def tcp_session_expire_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the TCP session expiration time, in seconds.
        The valid value from `40` to `7,200`, default value is `900`.
        """
        return pulumi.get(self, "tcp_session_expire_time")

    @tcp_session_expire_time.setter
    def tcp_session_expire_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "tcp_session_expire_time", value)

    @_builtins.property
    @pulumi.getter(name="tcpTimeWaitTime")
    def tcp_time_wait_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the duration of TIME_WAIT state when TCP connection is closed,
        in seconds. The valid value from `0` to `1,800`, default value is `5`.
        """
        return pulumi.get(self, "tcp_time_wait_time")

    @tcp_time_wait_time.setter
    def tcp_time_wait_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "tcp_time_wait_time", value)

    @_builtins.property
    @pulumi.getter(name="udpSessionExpireTime")
    def udp_session_expire_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the UDP session expiration time, in seconds.
        The valid value from `40` to `7,200`, default value is `300`.
        """
        return pulumi.get(self, "udp_session_expire_time")

    @udp_session_expire_time.setter
    def udp_session_expire_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "udp_session_expire_time", value)


if not MYPY:
    class GatewayV2SessionConfArgsDict(TypedDict):
        icmp_session_expire_time: NotRequired[pulumi.Input[_builtins.int]]
        """
        The ICMP session expiration time.
        """
        tcp_session_expire_time: NotRequired[pulumi.Input[_builtins.int]]
        """
        The TCP session expiration time.
        """
        tcp_time_wait_time: NotRequired[pulumi.Input[_builtins.int]]
        """
        The duration of TIME_WAIT state when TCP connection is closed.
        """
        udp_session_expire_time: NotRequired[pulumi.Input[_builtins.int]]
        """
        The UDP session expiration time.
        """
elif False:
    GatewayV2SessionConfArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class GatewayV2SessionConfArgs:
    def __init__(__self__, *,
                 icmp_session_expire_time: Optional[pulumi.Input[_builtins.int]] = None,
                 tcp_session_expire_time: Optional[pulumi.Input[_builtins.int]] = None,
                 tcp_time_wait_time: Optional[pulumi.Input[_builtins.int]] = None,
                 udp_session_expire_time: Optional[pulumi.Input[_builtins.int]] = None):
        """
        :param pulumi.Input[_builtins.int] icmp_session_expire_time: The ICMP session expiration time.
        :param pulumi.Input[_builtins.int] tcp_session_expire_time: The TCP session expiration time.
        :param pulumi.Input[_builtins.int] tcp_time_wait_time: The duration of TIME_WAIT state when TCP connection is closed.
        :param pulumi.Input[_builtins.int] udp_session_expire_time: The UDP session expiration time.
        """
        if icmp_session_expire_time is not None:
            pulumi.set(__self__, "icmp_session_expire_time", icmp_session_expire_time)
        if tcp_session_expire_time is not None:
            pulumi.set(__self__, "tcp_session_expire_time", tcp_session_expire_time)
        if tcp_time_wait_time is not None:
            pulumi.set(__self__, "tcp_time_wait_time", tcp_time_wait_time)
        if udp_session_expire_time is not None:
            pulumi.set(__self__, "udp_session_expire_time", udp_session_expire_time)

    @_builtins.property
    @pulumi.getter(name="icmpSessionExpireTime")
    def icmp_session_expire_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The ICMP session expiration time.
        """
        return pulumi.get(self, "icmp_session_expire_time")

    @icmp_session_expire_time.setter
    def icmp_session_expire_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "icmp_session_expire_time", value)

    @_builtins.property
    @pulumi.getter(name="tcpSessionExpireTime")
    def tcp_session_expire_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The TCP session expiration time.
        """
        return pulumi.get(self, "tcp_session_expire_time")

    @tcp_session_expire_time.setter
    def tcp_session_expire_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "tcp_session_expire_time", value)

    @_builtins.property
    @pulumi.getter(name="tcpTimeWaitTime")
    def tcp_time_wait_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The duration of TIME_WAIT state when TCP connection is closed.
        """
        return pulumi.get(self, "tcp_time_wait_time")

    @tcp_time_wait_time.setter
    def tcp_time_wait_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "tcp_time_wait_time", value)

    @_builtins.property
    @pulumi.getter(name="udpSessionExpireTime")
    def udp_session_expire_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The UDP session expiration time.
        """
        return pulumi.get(self, "udp_session_expire_time")

    @udp_session_expire_time.setter
    def udp_session_expire_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "udp_session_expire_time", value)


if not MYPY:
    class GatewayV3SessionConfArgsDict(TypedDict):
        icmp_session_expire_time: NotRequired[pulumi.Input[_builtins.int]]
        """
        Specifies the ICMP session expiration time, in seconds.
        The valid value from `10` to `7,200`, default value is `10`.
        """
        tcp_session_expire_time: NotRequired[pulumi.Input[_builtins.int]]
        """
        Specifies the TCP session expiration time, in seconds.
        The valid value from `40` to `7,200`, default value is `900`.
        """
        tcp_time_wait_time: NotRequired[pulumi.Input[_builtins.int]]
        """
        Specifies the duration of TIME_WAIT state when TCP connection is closed,
        in seconds. The valid value from `0` to `1,800`, default value is `5`.
        """
        udp_session_expire_time: NotRequired[pulumi.Input[_builtins.int]]
        """
        Specifies the UDP session expiration time, in seconds.
        The valid value from `40` to `7,200`, default value is `300`.
        """
elif False:
    GatewayV3SessionConfArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class GatewayV3SessionConfArgs:
    def __init__(__self__, *,
                 icmp_session_expire_time: Optional[pulumi.Input[_builtins.int]] = None,
                 tcp_session_expire_time: Optional[pulumi.Input[_builtins.int]] = None,
                 tcp_time_wait_time: Optional[pulumi.Input[_builtins.int]] = None,
                 udp_session_expire_time: Optional[pulumi.Input[_builtins.int]] = None):
        """
        :param pulumi.Input[_builtins.int] icmp_session_expire_time: Specifies the ICMP session expiration time, in seconds.
               The valid value from `10` to `7,200`, default value is `10`.
        :param pulumi.Input[_builtins.int] tcp_session_expire_time: Specifies the TCP session expiration time, in seconds.
               The valid value from `40` to `7,200`, default value is `900`.
        :param pulumi.Input[_builtins.int] tcp_time_wait_time: Specifies the duration of TIME_WAIT state when TCP connection is closed,
               in seconds. The valid value from `0` to `1,800`, default value is `5`.
        :param pulumi.Input[_builtins.int] udp_session_expire_time: Specifies the UDP session expiration time, in seconds.
               The valid value from `40` to `7,200`, default value is `300`.
        """
        if icmp_session_expire_time is not None:
            pulumi.set(__self__, "icmp_session_expire_time", icmp_session_expire_time)
        if tcp_session_expire_time is not None:
            pulumi.set(__self__, "tcp_session_expire_time", tcp_session_expire_time)
        if tcp_time_wait_time is not None:
            pulumi.set(__self__, "tcp_time_wait_time", tcp_time_wait_time)
        if udp_session_expire_time is not None:
            pulumi.set(__self__, "udp_session_expire_time", udp_session_expire_time)

    @_builtins.property
    @pulumi.getter(name="icmpSessionExpireTime")
    def icmp_session_expire_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the ICMP session expiration time, in seconds.
        The valid value from `10` to `7,200`, default value is `10`.
        """
        return pulumi.get(self, "icmp_session_expire_time")

    @icmp_session_expire_time.setter
    def icmp_session_expire_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "icmp_session_expire_time", value)

    @_builtins.property
    @pulumi.getter(name="tcpSessionExpireTime")
    def tcp_session_expire_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the TCP session expiration time, in seconds.
        The valid value from `40` to `7,200`, default value is `900`.
        """
        return pulumi.get(self, "tcp_session_expire_time")

    @tcp_session_expire_time.setter
    def tcp_session_expire_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "tcp_session_expire_time", value)

    @_builtins.property
    @pulumi.getter(name="tcpTimeWaitTime")
    def tcp_time_wait_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the duration of TIME_WAIT state when TCP connection is closed,
        in seconds. The valid value from `0` to `1,800`, default value is `5`.
        """
        return pulumi.get(self, "tcp_time_wait_time")

    @tcp_time_wait_time.setter
    def tcp_time_wait_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "tcp_time_wait_time", value)

    @_builtins.property
    @pulumi.getter(name="udpSessionExpireTime")
    def udp_session_expire_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the UDP session expiration time, in seconds.
        The valid value from `40` to `7,200`, default value is `300`.
        """
        return pulumi.get(self, "udp_session_expire_time")

    @udp_session_expire_time.setter
    def udp_session_expire_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "udp_session_expire_time", value)


if not MYPY:
    class PrivateSnatRuleTransitIpAssociationArgsDict(TypedDict):
        transit_ip_address: NotRequired[pulumi.Input[_builtins.str]]
        """
        The IP address of the transit IP associated with the private SNAT rule.
        """
        transit_ip_id: NotRequired[pulumi.Input[_builtins.str]]
        """
        The ID of the transit IP associated with the private SNAT rule.
        """
elif False:
    PrivateSnatRuleTransitIpAssociationArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class PrivateSnatRuleTransitIpAssociationArgs:
    def __init__(__self__, *,
                 transit_ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 transit_ip_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        :param pulumi.Input[_builtins.str] transit_ip_address: The IP address of the transit IP associated with the private SNAT rule.
        :param pulumi.Input[_builtins.str] transit_ip_id: The ID of the transit IP associated with the private SNAT rule.
        """
        if transit_ip_address is not None:
            pulumi.set(__self__, "transit_ip_address", transit_ip_address)
        if transit_ip_id is not None:
            pulumi.set(__self__, "transit_ip_id", transit_ip_id)

    @_builtins.property
    @pulumi.getter(name="transitIpAddress")
    def transit_ip_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The IP address of the transit IP associated with the private SNAT rule.
        """
        return pulumi.get(self, "transit_ip_address")

    @transit_ip_address.setter
    def transit_ip_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "transit_ip_address", value)

    @_builtins.property
    @pulumi.getter(name="transitIpId")
    def transit_ip_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the transit IP associated with the private SNAT rule.
        """
        return pulumi.get(self, "transit_ip_id")

    @transit_ip_id.setter
    def transit_ip_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "transit_ip_id", value)


