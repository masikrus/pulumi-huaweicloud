# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['AppServerBatchActionArgs', 'AppServerBatchAction']

@pulumi.input_type
class AppServerBatchActionArgs:
    def __init__(__self__, *,
                 content: pulumi.Input[_builtins.str],
                 type: pulumi.Input[_builtins.str],
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 max_retries: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a AppServerBatchAction resource.
        :param pulumi.Input[_builtins.str] content: Specifies the JSON string content for the batch operation (action)
               request.
        :param pulumi.Input[_builtins.str] type: Specifies the batch operation (action) type for the APP servers.  
               The valid values are as follows:
               + **batch-change-image**: Modify server image.
               + **batch-reinstall**: Reinstall server.
               + **batch-rejoin-domain**: Rejoin AD domain.
               + **batch-update-tsvi**: Update virtual session IP configuration.
               + **batch-maint**: Mark server maintenance status.
        :param pulumi.Input[_builtins.int] max_retries: Specifies the maximum number of retries for the batch operation (action) when
               encountering 409 conflict errors.
               The default value is **0**, which means no retry will be performed.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the APP servers to be batch operated are located.  
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "content", content)
        pulumi.set(__self__, "type", type)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if max_retries is not None:
            pulumi.set(__self__, "max_retries", max_retries)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter
    def content(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the JSON string content for the batch operation (action)
        request.
        """
        return pulumi.get(self, "content")

    @content.setter
    def content(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "content", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the batch operation (action) type for the APP servers.  
        The valid values are as follows:
        + **batch-change-image**: Modify server image.
        + **batch-reinstall**: Reinstall server.
        + **batch-rejoin-domain**: Rejoin AD domain.
        + **batch-update-tsvi**: Update virtual session IP configuration.
        + **batch-maint**: Mark server maintenance status.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="maxRetries")
    def max_retries(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the maximum number of retries for the batch operation (action) when
        encountering 409 conflict errors.
        The default value is **0**, which means no retry will be performed.
        """
        return pulumi.get(self, "max_retries")

    @max_retries.setter
    def max_retries(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "max_retries", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the APP servers to be batch operated are located.  
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _AppServerBatchActionState:
    def __init__(__self__, *,
                 content: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 max_retries: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering AppServerBatchAction resources.
        :param pulumi.Input[_builtins.str] content: Specifies the JSON string content for the batch operation (action)
               request.
        :param pulumi.Input[_builtins.int] max_retries: Specifies the maximum number of retries for the batch operation (action) when
               encountering 409 conflict errors.
               The default value is **0**, which means no retry will be performed.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the APP servers to be batch operated are located.  
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] type: Specifies the batch operation (action) type for the APP servers.  
               The valid values are as follows:
               + **batch-change-image**: Modify server image.
               + **batch-reinstall**: Reinstall server.
               + **batch-rejoin-domain**: Rejoin AD domain.
               + **batch-update-tsvi**: Update virtual session IP configuration.
               + **batch-maint**: Mark server maintenance status.
        """
        if content is not None:
            pulumi.set(__self__, "content", content)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if max_retries is not None:
            pulumi.set(__self__, "max_retries", max_retries)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def content(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the JSON string content for the batch operation (action)
        request.
        """
        return pulumi.get(self, "content")

    @content.setter
    def content(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "content", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="maxRetries")
    def max_retries(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the maximum number of retries for the batch operation (action) when
        encountering 409 conflict errors.
        The default value is **0**, which means no retry will be performed.
        """
        return pulumi.get(self, "max_retries")

    @max_retries.setter
    def max_retries(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "max_retries", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the APP servers to be batch operated are located.  
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the batch operation (action) type for the APP servers.  
        The valid values are as follows:
        + **batch-change-image**: Modify server image.
        + **batch-reinstall**: Reinstall server.
        + **batch-rejoin-domain**: Rejoin AD domain.
        + **batch-update-tsvi**: Update virtual session IP configuration.
        + **batch-maint**: Mark server maintenance status.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)


@pulumi.type_token("huaweicloud:Workspace/appServerBatchAction:AppServerBatchAction")
class AppServerBatchAction(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 content: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 max_retries: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Use this resource to batch operate APP servers within HuaweiCloud.

        > This resource is only a one-time action resource for batch operate APP servers. Deleting this resource will not clear
           the corresponding request record, but will only remove the resource information from the tfstate file.

        ## Example Usage

        ### Modify Server Image

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        operate_server_ids = config.require_object("operateServerIds")
        new_image_id = config.require_object("newImageId")
        test = huaweicloud.workspace.AppServerBatchAction("test",
            type="batch-change-image",
            content=json.dumps({
                "server_ids": operate_server_ids,
                "image_id": new_image_id,
                "image_type": "private",
                "os_type": "Windows",
                "update_access_agent": True,
            }))
        ```

        ### Reinstall Server

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        operate_server_ids = config.require_object("operateServerIds")
        test = huaweicloud.workspace.AppServerBatchAction("test",
            type="batch-reinstall",
            content=json.dumps({
                "server_ids": operate_server_ids,
                "update_access_agent": False,
            }))
        ```

        ### Rejoin Domain

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        operate_server_ids = config.require_object("operateServerIds")
        rejoin_domain = huaweicloud.workspace.AppServerBatchAction("rejoin_domain",
            type="batch-rejoin-domain",
            content=json.dumps({
                "items": operate_server_ids,
            }))
        ```

        ### Update Virtual Session IP Configuration

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        operate_server_ids = config.require_object("operateServerIds")
        update_tsvi = huaweicloud.workspace.AppServerBatchAction("update_tsvi",
            type="batch-update-tsvi",
            content=json.dumps({
                "items": [{
                    "id": o,
                    "enable": True,
                } for o in operate_server_ids],
            }))
        ```

        ### Mark Server Maintenance Status

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        operate_server_ids = config.require_object("operateServerIds")
        maintain_status = huaweicloud.workspace.AppServerBatchAction("maintain_status",
            type="batch-maint",
            content=json.dumps({
                "items": operate_server_ids,
                "maintain_status": True,
            }))
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] content: Specifies the JSON string content for the batch operation (action)
               request.
        :param pulumi.Input[_builtins.int] max_retries: Specifies the maximum number of retries for the batch operation (action) when
               encountering 409 conflict errors.
               The default value is **0**, which means no retry will be performed.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the APP servers to be batch operated are located.  
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] type: Specifies the batch operation (action) type for the APP servers.  
               The valid values are as follows:
               + **batch-change-image**: Modify server image.
               + **batch-reinstall**: Reinstall server.
               + **batch-rejoin-domain**: Rejoin AD domain.
               + **batch-update-tsvi**: Update virtual session IP configuration.
               + **batch-maint**: Mark server maintenance status.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AppServerBatchActionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Use this resource to batch operate APP servers within HuaweiCloud.

        > This resource is only a one-time action resource for batch operate APP servers. Deleting this resource will not clear
           the corresponding request record, but will only remove the resource information from the tfstate file.

        ## Example Usage

        ### Modify Server Image

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        operate_server_ids = config.require_object("operateServerIds")
        new_image_id = config.require_object("newImageId")
        test = huaweicloud.workspace.AppServerBatchAction("test",
            type="batch-change-image",
            content=json.dumps({
                "server_ids": operate_server_ids,
                "image_id": new_image_id,
                "image_type": "private",
                "os_type": "Windows",
                "update_access_agent": True,
            }))
        ```

        ### Reinstall Server

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        operate_server_ids = config.require_object("operateServerIds")
        test = huaweicloud.workspace.AppServerBatchAction("test",
            type="batch-reinstall",
            content=json.dumps({
                "server_ids": operate_server_ids,
                "update_access_agent": False,
            }))
        ```

        ### Rejoin Domain

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        operate_server_ids = config.require_object("operateServerIds")
        rejoin_domain = huaweicloud.workspace.AppServerBatchAction("rejoin_domain",
            type="batch-rejoin-domain",
            content=json.dumps({
                "items": operate_server_ids,
            }))
        ```

        ### Update Virtual Session IP Configuration

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        operate_server_ids = config.require_object("operateServerIds")
        update_tsvi = huaweicloud.workspace.AppServerBatchAction("update_tsvi",
            type="batch-update-tsvi",
            content=json.dumps({
                "items": [{
                    "id": o,
                    "enable": True,
                } for o in operate_server_ids],
            }))
        ```

        ### Mark Server Maintenance Status

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        operate_server_ids = config.require_object("operateServerIds")
        maintain_status = huaweicloud.workspace.AppServerBatchAction("maintain_status",
            type="batch-maint",
            content=json.dumps({
                "items": operate_server_ids,
                "maintain_status": True,
            }))
        ```

        :param str resource_name: The name of the resource.
        :param AppServerBatchActionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AppServerBatchActionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 content: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 max_retries: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AppServerBatchActionArgs.__new__(AppServerBatchActionArgs)

            if content is None and not opts.urn:
                raise TypeError("Missing required property 'content'")
            __props__.__dict__["content"] = content
            __props__.__dict__["enable_force_new"] = enable_force_new
            __props__.__dict__["max_retries"] = max_retries
            __props__.__dict__["region"] = region
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
        super(AppServerBatchAction, __self__).__init__(
            'huaweicloud:Workspace/appServerBatchAction:AppServerBatchAction',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            content: Optional[pulumi.Input[_builtins.str]] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            max_retries: Optional[pulumi.Input[_builtins.int]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            type: Optional[pulumi.Input[_builtins.str]] = None) -> 'AppServerBatchAction':
        """
        Get an existing AppServerBatchAction resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] content: Specifies the JSON string content for the batch operation (action)
               request.
        :param pulumi.Input[_builtins.int] max_retries: Specifies the maximum number of retries for the batch operation (action) when
               encountering 409 conflict errors.
               The default value is **0**, which means no retry will be performed.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the APP servers to be batch operated are located.  
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] type: Specifies the batch operation (action) type for the APP servers.  
               The valid values are as follows:
               + **batch-change-image**: Modify server image.
               + **batch-reinstall**: Reinstall server.
               + **batch-rejoin-domain**: Rejoin AD domain.
               + **batch-update-tsvi**: Update virtual session IP configuration.
               + **batch-maint**: Mark server maintenance status.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AppServerBatchActionState.__new__(_AppServerBatchActionState)

        __props__.__dict__["content"] = content
        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["max_retries"] = max_retries
        __props__.__dict__["region"] = region
        __props__.__dict__["type"] = type
        return AppServerBatchAction(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def content(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the JSON string content for the batch operation (action)
        request.
        """
        return pulumi.get(self, "content")

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter(name="maxRetries")
    def max_retries(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        Specifies the maximum number of retries for the batch operation (action) when
        encountering 409 conflict errors.
        The default value is **0**, which means no retry will be performed.
        """
        return pulumi.get(self, "max_retries")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region where the APP servers to be batch operated are located.  
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the batch operation (action) type for the APP servers.  
        The valid values are as follows:
        + **batch-change-image**: Modify server image.
        + **batch-reinstall**: Reinstall server.
        + **batch-rejoin-domain**: Rejoin AD domain.
        + **batch-update-tsvi**: Update virtual session IP configuration.
        + **batch-maint**: Mark server maintenance status.
        """
        return pulumi.get(self, "type")

