# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['AppStoragePolicyArgs', 'AppStoragePolicy']

@pulumi.input_type
class AppStoragePolicyArgs:
    def __init__(__self__, *,
                 server_actions: pulumi.Input[Sequence[pulumi.Input[_builtins.str]]],
                 client_actions: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a AppStoragePolicy resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] server_actions: Specifies the collection of permissions that server can use to access storage.  
               The valid configuration combinations are as follows:
               + **GetObject**: Read-Only.
               + **PutObject + GetObject + DeleteObject**: Read and Write.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] client_actions: Specifies the collection of permissions that client can use to access storage.  
               The valid values are as follows:
               + **GetObject**: Download permission only.
               + **PutObject + DeleteObject**: Upload permission only.
               + **GetObject + PutObject + DeleteObject**: Both download and upload permissions are allowed.
               
               If omitted, both download and upload permissions are denied.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the custom storage permission policy is located.  
               If omitted, the provider-level region will be used. Change this parameter will create a new resource.
        """
        pulumi.set(__self__, "server_actions", server_actions)
        if client_actions is not None:
            pulumi.set(__self__, "client_actions", client_actions)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="serverActions")
    def server_actions(self) -> pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]:
        """
        Specifies the collection of permissions that server can use to access storage.  
        The valid configuration combinations are as follows:
        + **GetObject**: Read-Only.
        + **PutObject + GetObject + DeleteObject**: Read and Write.
        """
        return pulumi.get(self, "server_actions")

    @server_actions.setter
    def server_actions(self, value: pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]):
        pulumi.set(self, "server_actions", value)

    @_builtins.property
    @pulumi.getter(name="clientActions")
    def client_actions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the collection of permissions that client can use to access storage.  
        The valid values are as follows:
        + **GetObject**: Download permission only.
        + **PutObject + DeleteObject**: Upload permission only.
        + **GetObject + PutObject + DeleteObject**: Both download and upload permissions are allowed.

        If omitted, both download and upload permissions are denied.
        """
        return pulumi.get(self, "client_actions")

    @client_actions.setter
    def client_actions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "client_actions", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the custom storage permission policy is located.  
        If omitted, the provider-level region will be used. Change this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _AppStoragePolicyState:
    def __init__(__self__, *,
                 client_actions: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 server_actions: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None):
        """
        Input properties used for looking up and filtering AppStoragePolicy resources.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] client_actions: Specifies the collection of permissions that client can use to access storage.  
               The valid values are as follows:
               + **GetObject**: Download permission only.
               + **PutObject + DeleteObject**: Upload permission only.
               + **GetObject + PutObject + DeleteObject**: Both download and upload permissions are allowed.
               
               If omitted, both download and upload permissions are denied.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the custom storage permission policy is located.  
               If omitted, the provider-level region will be used. Change this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] server_actions: Specifies the collection of permissions that server can use to access storage.  
               The valid configuration combinations are as follows:
               + **GetObject**: Read-Only.
               + **PutObject + GetObject + DeleteObject**: Read and Write.
        """
        if client_actions is not None:
            pulumi.set(__self__, "client_actions", client_actions)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if server_actions is not None:
            pulumi.set(__self__, "server_actions", server_actions)

    @_builtins.property
    @pulumi.getter(name="clientActions")
    def client_actions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the collection of permissions that client can use to access storage.  
        The valid values are as follows:
        + **GetObject**: Download permission only.
        + **PutObject + DeleteObject**: Upload permission only.
        + **GetObject + PutObject + DeleteObject**: Both download and upload permissions are allowed.

        If omitted, both download and upload permissions are denied.
        """
        return pulumi.get(self, "client_actions")

    @client_actions.setter
    def client_actions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "client_actions", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the custom storage permission policy is located.  
        If omitted, the provider-level region will be used. Change this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="serverActions")
    def server_actions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the collection of permissions that server can use to access storage.  
        The valid configuration combinations are as follows:
        + **GetObject**: Read-Only.
        + **PutObject + GetObject + DeleteObject**: Read and Write.
        """
        return pulumi.get(self, "server_actions")

    @server_actions.setter
    def server_actions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "server_actions", value)


@pulumi.type_token("huaweicloud:Workspace/appStoragePolicy:AppStoragePolicy")
class AppStoragePolicy(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 client_actions: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 server_actions: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        """
        Manages the custom storage permission policy of Workspace APP within HuaweiCloud.

        > **NOTE:** Deleting this resource will not initialize (restore) the permission policy configuration and just only
           remove the tfstate record for this resource.

        ## Example Usage

        ### Read and write for server permission and allow upload and download permissions for client

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        test = huaweicloud.workspace.AppStoragePolicy("test",
            server_actions=[
                "GetObject",
                "PutObject",
                "DeleteObject",
            ],
            client_actions=[
                "PutObject",
                "DeleteObject",
            ])
        ```

        ### Read-Only for server permission and deny upload and download permissions for client

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        test = huaweicloud.workspace.AppStoragePolicy("test", server_actions=["GetObject"])
        ```

        ## Import

        Custom storage permission policy can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Workspace/appStoragePolicy:AppStoragePolicy test <id>
        ```

        'NA' or other characters can be used to instead of the `id`.

        bash

        ```sh
        $ pulumi import huaweicloud:Workspace/appStoragePolicy:AppStoragePolicy test NA
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] client_actions: Specifies the collection of permissions that client can use to access storage.  
               The valid values are as follows:
               + **GetObject**: Download permission only.
               + **PutObject + DeleteObject**: Upload permission only.
               + **GetObject + PutObject + DeleteObject**: Both download and upload permissions are allowed.
               
               If omitted, both download and upload permissions are denied.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the custom storage permission policy is located.  
               If omitted, the provider-level region will be used. Change this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] server_actions: Specifies the collection of permissions that server can use to access storage.  
               The valid configuration combinations are as follows:
               + **GetObject**: Read-Only.
               + **PutObject + GetObject + DeleteObject**: Read and Write.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AppStoragePolicyArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages the custom storage permission policy of Workspace APP within HuaweiCloud.

        > **NOTE:** Deleting this resource will not initialize (restore) the permission policy configuration and just only
           remove the tfstate record for this resource.

        ## Example Usage

        ### Read and write for server permission and allow upload and download permissions for client

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        test = huaweicloud.workspace.AppStoragePolicy("test",
            server_actions=[
                "GetObject",
                "PutObject",
                "DeleteObject",
            ],
            client_actions=[
                "PutObject",
                "DeleteObject",
            ])
        ```

        ### Read-Only for server permission and deny upload and download permissions for client

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        test = huaweicloud.workspace.AppStoragePolicy("test", server_actions=["GetObject"])
        ```

        ## Import

        Custom storage permission policy can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Workspace/appStoragePolicy:AppStoragePolicy test <id>
        ```

        'NA' or other characters can be used to instead of the `id`.

        bash

        ```sh
        $ pulumi import huaweicloud:Workspace/appStoragePolicy:AppStoragePolicy test NA
        ```

        :param str resource_name: The name of the resource.
        :param AppStoragePolicyArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AppStoragePolicyArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 client_actions: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 server_actions: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AppStoragePolicyArgs.__new__(AppStoragePolicyArgs)

            __props__.__dict__["client_actions"] = client_actions
            __props__.__dict__["region"] = region
            if server_actions is None and not opts.urn:
                raise TypeError("Missing required property 'server_actions'")
            __props__.__dict__["server_actions"] = server_actions
        super(AppStoragePolicy, __self__).__init__(
            'huaweicloud:Workspace/appStoragePolicy:AppStoragePolicy',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            client_actions: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            server_actions: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None) -> 'AppStoragePolicy':
        """
        Get an existing AppStoragePolicy resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] client_actions: Specifies the collection of permissions that client can use to access storage.  
               The valid values are as follows:
               + **GetObject**: Download permission only.
               + **PutObject + DeleteObject**: Upload permission only.
               + **GetObject + PutObject + DeleteObject**: Both download and upload permissions are allowed.
               
               If omitted, both download and upload permissions are denied.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the custom storage permission policy is located.  
               If omitted, the provider-level region will be used. Change this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] server_actions: Specifies the collection of permissions that server can use to access storage.  
               The valid configuration combinations are as follows:
               + **GetObject**: Read-Only.
               + **PutObject + GetObject + DeleteObject**: Read and Write.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AppStoragePolicyState.__new__(_AppStoragePolicyState)

        __props__.__dict__["client_actions"] = client_actions
        __props__.__dict__["region"] = region
        __props__.__dict__["server_actions"] = server_actions
        return AppStoragePolicy(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="clientActions")
    def client_actions(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        Specifies the collection of permissions that client can use to access storage.  
        The valid values are as follows:
        + **GetObject**: Download permission only.
        + **PutObject + DeleteObject**: Upload permission only.
        + **GetObject + PutObject + DeleteObject**: Both download and upload permissions are allowed.

        If omitted, both download and upload permissions are denied.
        """
        return pulumi.get(self, "client_actions")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region where the custom storage permission policy is located.  
        If omitted, the provider-level region will be used. Change this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="serverActions")
    def server_actions(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        Specifies the collection of permissions that server can use to access storage.  
        The valid configuration combinations are as follows:
        + **GetObject**: Read-Only.
        + **PutObject + GetObject + DeleteObject**: Read and Write.
        """
        return pulumi.get(self, "server_actions")

