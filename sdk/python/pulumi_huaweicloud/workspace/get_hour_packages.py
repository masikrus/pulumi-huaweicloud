# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetHourPackagesResult',
    'AwaitableGetHourPackagesResult',
    'get_hour_packages',
    'get_hour_packages_output',
]

@pulumi.output_type
class GetHourPackagesResult:
    """
    A collection of values returned by getHourPackages.
    """
    def __init__(__self__, desktop_resource_spec_code=None, hour_packages=None, id=None, region=None, resource_spec_code=None):
        if desktop_resource_spec_code and not isinstance(desktop_resource_spec_code, str):
            raise TypeError("Expected argument 'desktop_resource_spec_code' to be a str")
        pulumi.set(__self__, "desktop_resource_spec_code", desktop_resource_spec_code)
        if hour_packages and not isinstance(hour_packages, list):
            raise TypeError("Expected argument 'hour_packages' to be a list")
        pulumi.set(__self__, "hour_packages", hour_packages)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if resource_spec_code and not isinstance(resource_spec_code, str):
            raise TypeError("Expected argument 'resource_spec_code' to be a str")
        pulumi.set(__self__, "resource_spec_code", resource_spec_code)

    @_builtins.property
    @pulumi.getter(name="desktopResourceSpecCode")
    def desktop_resource_spec_code(self) -> Optional[_builtins.str]:
        """
        The ID of desktop resource.
        """
        return pulumi.get(self, "desktop_resource_spec_code")

    @_builtins.property
    @pulumi.getter(name="hourPackages")
    def hour_packages(self) -> Sequence['outputs.GetHourPackagesHourPackageResult']:
        """
        The list of hour package information that matched filter parameters.  
        The hour_packages structure is documented below.
        """
        return pulumi.get(self, "hour_packages")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="resourceSpecCode")
    def resource_spec_code(self) -> Optional[_builtins.str]:
        """
        The ID of hour package.
        """
        return pulumi.get(self, "resource_spec_code")


class AwaitableGetHourPackagesResult(GetHourPackagesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetHourPackagesResult(
            desktop_resource_spec_code=self.desktop_resource_spec_code,
            hour_packages=self.hour_packages,
            id=self.id,
            region=self.region,
            resource_spec_code=self.resource_spec_code)


def get_hour_packages(desktop_resource_spec_code: Optional[_builtins.str] = None,
                      region: Optional[_builtins.str] = None,
                      resource_spec_code: Optional[_builtins.str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetHourPackagesResult:
    """
    Use this data source to get the list of Workspace hour packages within Huaweicloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Workspace.get_hour_packages()
    ```

    ### Filter by desktop resource spec code

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    desktop_resource_spec_code = config.require_object("desktopResourceSpecCode")
    test = huaweicloud.Workspace.get_hour_packages(desktop_resource_spec_code=desktop_resource_spec_code)
    ```

    ### Filter by resource spec code

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    resource_spec_code = config.require_object("resourceSpecCode")
    test = huaweicloud.Workspace.get_hour_packages(resource_spec_code=resource_spec_code)
    ```


    :param _builtins.str desktop_resource_spec_code: Specifies the specification code of desktop resource to be queried.
    :param _builtins.str region: Specifies the region in which to obtain the hour packages.  
           If omitted, the provider-level region will be used.
    :param _builtins.str resource_spec_code: Specifies the specification code of hour package to be queried.
    """
    __args__ = dict()
    __args__['desktopResourceSpecCode'] = desktop_resource_spec_code
    __args__['region'] = region
    __args__['resourceSpecCode'] = resource_spec_code
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Workspace/getHourPackages:getHourPackages', __args__, opts=opts, typ=GetHourPackagesResult).value

    return AwaitableGetHourPackagesResult(
        desktop_resource_spec_code=pulumi.get(__ret__, 'desktop_resource_spec_code'),
        hour_packages=pulumi.get(__ret__, 'hour_packages'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'),
        resource_spec_code=pulumi.get(__ret__, 'resource_spec_code'))
def get_hour_packages_output(desktop_resource_spec_code: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                             region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                             resource_spec_code: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                             opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetHourPackagesResult]:
    """
    Use this data source to get the list of Workspace hour packages within Huaweicloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Workspace.get_hour_packages()
    ```

    ### Filter by desktop resource spec code

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    desktop_resource_spec_code = config.require_object("desktopResourceSpecCode")
    test = huaweicloud.Workspace.get_hour_packages(desktop_resource_spec_code=desktop_resource_spec_code)
    ```

    ### Filter by resource spec code

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    resource_spec_code = config.require_object("resourceSpecCode")
    test = huaweicloud.Workspace.get_hour_packages(resource_spec_code=resource_spec_code)
    ```


    :param _builtins.str desktop_resource_spec_code: Specifies the specification code of desktop resource to be queried.
    :param _builtins.str region: Specifies the region in which to obtain the hour packages.  
           If omitted, the provider-level region will be used.
    :param _builtins.str resource_spec_code: Specifies the specification code of hour package to be queried.
    """
    __args__ = dict()
    __args__['desktopResourceSpecCode'] = desktop_resource_spec_code
    __args__['region'] = region
    __args__['resourceSpecCode'] = resource_spec_code
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Workspace/getHourPackages:getHourPackages', __args__, opts=opts, typ=GetHourPackagesResult)
    return __ret__.apply(lambda __response__: GetHourPackagesResult(
        desktop_resource_spec_code=pulumi.get(__response__, 'desktop_resource_spec_code'),
        hour_packages=pulumi.get(__response__, 'hour_packages'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region'),
        resource_spec_code=pulumi.get(__response__, 'resource_spec_code')))
