# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetAppServiceResult',
    'AwaitableGetAppServiceResult',
    'get_app_service',
    'get_app_service_output',
]

@pulumi.output_type
class GetAppServiceResult:
    """
    A collection of values returned by getAppService.
    """
    def __init__(__self__, created_at=None, id=None, open_with_ad=None, region=None, service_status=None, tenant_domain_id=None, tenant_domain_name=None):
        if created_at and not isinstance(created_at, str):
            raise TypeError("Expected argument 'created_at' to be a str")
        pulumi.set(__self__, "created_at", created_at)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if open_with_ad and not isinstance(open_with_ad, bool):
            raise TypeError("Expected argument 'open_with_ad' to be a bool")
        pulumi.set(__self__, "open_with_ad", open_with_ad)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if service_status and not isinstance(service_status, str):
            raise TypeError("Expected argument 'service_status' to be a str")
        pulumi.set(__self__, "service_status", service_status)
        if tenant_domain_id and not isinstance(tenant_domain_id, str):
            raise TypeError("Expected argument 'tenant_domain_id' to be a str")
        pulumi.set(__self__, "tenant_domain_id", tenant_domain_id)
        if tenant_domain_name and not isinstance(tenant_domain_name, str):
            raise TypeError("Expected argument 'tenant_domain_name' to be a str")
        pulumi.set(__self__, "tenant_domain_name", tenant_domain_name)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> _builtins.str:
        """
        The creation time of the Workspace service, in RFC3339 format.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="openWithAd")
    def open_with_ad(self) -> _builtins.bool:
        """
        Whether the APP service is connected to AD.
        """
        return pulumi.get(self, "open_with_ad")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="serviceStatus")
    def service_status(self) -> _builtins.str:
        """
        The status of the APP service.
        + **active**
        + **inactive**
        """
        return pulumi.get(self, "service_status")

    @_builtins.property
    @pulumi.getter(name="tenantDomainId")
    def tenant_domain_id(self) -> _builtins.str:
        """
        The domain ID to which the APP service belongs.
        """
        return pulumi.get(self, "tenant_domain_id")

    @_builtins.property
    @pulumi.getter(name="tenantDomainName")
    def tenant_domain_name(self) -> _builtins.str:
        """
        The domain name to which the APP service belongs.
        """
        return pulumi.get(self, "tenant_domain_name")


class AwaitableGetAppServiceResult(GetAppServiceResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAppServiceResult(
            created_at=self.created_at,
            id=self.id,
            open_with_ad=self.open_with_ad,
            region=self.region,
            service_status=self.service_status,
            tenant_domain_id=self.tenant_domain_id,
            tenant_domain_name=self.tenant_domain_name)


def get_app_service(region: Optional[_builtins.str] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAppServiceResult:
    """
    Use this data source to get the service information of Workspace APP within HuaweiCloud.

    > Before using this data source, please ensure that the Workspace service is enabled.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Workspace.get_app_service()
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.  
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Workspace/getAppService:getAppService', __args__, opts=opts, typ=GetAppServiceResult).value

    return AwaitableGetAppServiceResult(
        created_at=pulumi.get(__ret__, 'created_at'),
        id=pulumi.get(__ret__, 'id'),
        open_with_ad=pulumi.get(__ret__, 'open_with_ad'),
        region=pulumi.get(__ret__, 'region'),
        service_status=pulumi.get(__ret__, 'service_status'),
        tenant_domain_id=pulumi.get(__ret__, 'tenant_domain_id'),
        tenant_domain_name=pulumi.get(__ret__, 'tenant_domain_name'))
def get_app_service_output(region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                           opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAppServiceResult]:
    """
    Use this data source to get the service information of Workspace APP within HuaweiCloud.

    > Before using this data source, please ensure that the Workspace service is enabled.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Workspace.get_app_service()
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.  
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Workspace/getAppService:getAppService', __args__, opts=opts, typ=GetAppServiceResult)
    return __ret__.apply(lambda __response__: GetAppServiceResult(
        created_at=pulumi.get(__response__, 'created_at'),
        id=pulumi.get(__response__, 'id'),
        open_with_ad=pulumi.get(__response__, 'open_with_ad'),
        region=pulumi.get(__response__, 'region'),
        service_status=pulumi.get(__response__, 'service_status'),
        tenant_domain_id=pulumi.get(__response__, 'tenant_domain_id'),
        tenant_domain_name=pulumi.get(__response__, 'tenant_domain_name')))
