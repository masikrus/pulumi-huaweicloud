# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetAppConfigurationsResult',
    'AwaitableGetAppConfigurationsResult',
    'get_app_configurations',
    'get_app_configurations_output',
]

@pulumi.output_type
class GetAppConfigurationsResult:
    """
    A collection of values returned by getAppConfigurations.
    """
    def __init__(__self__, configurations=None, id=None, items=None, region=None):
        if configurations and not isinstance(configurations, list):
            raise TypeError("Expected argument 'configurations' to be a list")
        pulumi.set(__self__, "configurations", configurations)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if items and not isinstance(items, list):
            raise TypeError("Expected argument 'items' to be a list")
        pulumi.set(__self__, "items", items)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter
    def configurations(self) -> Sequence['outputs.GetAppConfigurationsConfigurationResult']:
        """
        The list of configuration information.  
        The configurations structure is documented below.
        """
        return pulumi.get(self, "configurations")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "items")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetAppConfigurationsResult(GetAppConfigurationsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAppConfigurationsResult(
            configurations=self.configurations,
            id=self.id,
            items=self.items,
            region=self.region)


def get_app_configurations(items: Optional[Sequence[_builtins.str]] = None,
                           region: Optional[_builtins.str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAppConfigurationsResult:
    """
    Use this data source to get enterprise system configuration list of the Workspace APP within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    items = config.require_object("items")
    test = huaweicloud.Workspace.get_app_configurations(items=items)
    ```


    :param Sequence[_builtins.str] items: Specifies the list of configuration keys to be queried.
    :param _builtins.str region: Specifies the region where the Workspace APP are located.  
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['items'] = items
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Workspace/getAppConfigurations:getAppConfigurations', __args__, opts=opts, typ=GetAppConfigurationsResult).value

    return AwaitableGetAppConfigurationsResult(
        configurations=pulumi.get(__ret__, 'configurations'),
        id=pulumi.get(__ret__, 'id'),
        items=pulumi.get(__ret__, 'items'),
        region=pulumi.get(__ret__, 'region'))
def get_app_configurations_output(items: Optional[pulumi.Input[Sequence[_builtins.str]]] = None,
                                  region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAppConfigurationsResult]:
    """
    Use this data source to get enterprise system configuration list of the Workspace APP within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    items = config.require_object("items")
    test = huaweicloud.Workspace.get_app_configurations(items=items)
    ```


    :param Sequence[_builtins.str] items: Specifies the list of configuration keys to be queried.
    :param _builtins.str region: Specifies the region where the Workspace APP are located.  
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['items'] = items
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Workspace/getAppConfigurations:getAppConfigurations', __args__, opts=opts, typ=GetAppConfigurationsResult)
    return __ret__.apply(lambda __response__: GetAppConfigurationsResult(
        configurations=pulumi.get(__response__, 'configurations'),
        id=pulumi.get(__response__, 'id'),
        items=pulumi.get(__response__, 'items'),
        region=pulumi.get(__response__, 'region')))
