# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['AppPolicyGroupArgs', 'AppPolicyGroup']

@pulumi.input_type
class AppPolicyGroupArgs:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policies: Optional[pulumi.Input[_builtins.str]] = None,
                 priority: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 targets: Optional[pulumi.Input[Sequence[pulumi.Input['AppPolicyGroupTargetArgs']]]] = None):
        """
        The set of arguments for constructing a AppPolicyGroup resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the policy group.  
               The maximum length is limited to `255` characters.
        :param pulumi.Input[_builtins.str] name: Specifies the object name.  
               If the `type` is set to **USER**, the name means the user name.
               If the `type` is set to **USERGROUP**, the name means the user group name.
               If the `type` is set to **APPGROUP**, the name means the APP group name.
               If the `type` is set to **OU**, the name means the OU name.
               If the `type` is set to **ALL**, the name fixed with string **All-Targets**.
        :param pulumi.Input[_builtins.str] policies: Specifies the policies of the policy group, in JSON format.  
               For policy configuration items, please refer to the [documentation](https://support.huaweicloud.com/api-workspace/CreatePolicyGroup.html#CreatePolicyGroup__request_Policies).
               
               <a name="app_policy_group_targets"></a>
               The `targets` block supports:
        :param pulumi.Input[_builtins.int] priority: Specifies the priority of the policy group.  
               The valid value is range from `1` to the total number of policy groups.
               The smaller value means the higher priority.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[Sequence[pulumi.Input['AppPolicyGroupTargetArgs']]] targets: Specifies the list of target objects.
               The targets structure is documented below.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if policies is not None:
            pulumi.set(__self__, "policies", policies)
        if priority is not None:
            pulumi.set(__self__, "priority", priority)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if targets is not None:
            pulumi.set(__self__, "targets", targets)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the policy group.  
        The maximum length is limited to `255` characters.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the object name.  
        If the `type` is set to **USER**, the name means the user name.
        If the `type` is set to **USERGROUP**, the name means the user group name.
        If the `type` is set to **APPGROUP**, the name means the APP group name.
        If the `type` is set to **OU**, the name means the OU name.
        If the `type` is set to **ALL**, the name fixed with string **All-Targets**.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def policies(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the policies of the policy group, in JSON format.  
        For policy configuration items, please refer to the [documentation](https://support.huaweicloud.com/api-workspace/CreatePolicyGroup.html#CreatePolicyGroup__request_Policies).

        <a name="app_policy_group_targets"></a>
        The `targets` block supports:
        """
        return pulumi.get(self, "policies")

    @policies.setter
    def policies(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "policies", value)

    @_builtins.property
    @pulumi.getter
    def priority(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the priority of the policy group.  
        The valid value is range from `1` to the total number of policy groups.
        The smaller value means the higher priority.
        """
        return pulumi.get(self, "priority")

    @priority.setter
    def priority(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "priority", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AppPolicyGroupTargetArgs']]]]:
        """
        Specifies the list of target objects.
        The targets structure is documented below.
        """
        return pulumi.get(self, "targets")

    @targets.setter
    def targets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AppPolicyGroupTargetArgs']]]]):
        pulumi.set(self, "targets", value)


@pulumi.input_type
class _AppPolicyGroupState:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policies: Optional[pulumi.Input[_builtins.str]] = None,
                 priority: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 targets: Optional[pulumi.Input[Sequence[pulumi.Input['AppPolicyGroupTargetArgs']]]] = None):
        """
        Input properties used for looking up and filtering AppPolicyGroup resources.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the policy group.  
               The maximum length is limited to `255` characters.
        :param pulumi.Input[_builtins.str] name: Specifies the object name.  
               If the `type` is set to **USER**, the name means the user name.
               If the `type` is set to **USERGROUP**, the name means the user group name.
               If the `type` is set to **APPGROUP**, the name means the APP group name.
               If the `type` is set to **OU**, the name means the OU name.
               If the `type` is set to **ALL**, the name fixed with string **All-Targets**.
        :param pulumi.Input[_builtins.str] policies: Specifies the policies of the policy group, in JSON format.  
               For policy configuration items, please refer to the [documentation](https://support.huaweicloud.com/api-workspace/CreatePolicyGroup.html#CreatePolicyGroup__request_Policies).
               
               <a name="app_policy_group_targets"></a>
               The `targets` block supports:
        :param pulumi.Input[_builtins.int] priority: Specifies the priority of the policy group.  
               The valid value is range from `1` to the total number of policy groups.
               The smaller value means the higher priority.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[Sequence[pulumi.Input['AppPolicyGroupTargetArgs']]] targets: Specifies the list of target objects.
               The targets structure is documented below.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if policies is not None:
            pulumi.set(__self__, "policies", policies)
        if priority is not None:
            pulumi.set(__self__, "priority", priority)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if targets is not None:
            pulumi.set(__self__, "targets", targets)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the policy group.  
        The maximum length is limited to `255` characters.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the object name.  
        If the `type` is set to **USER**, the name means the user name.
        If the `type` is set to **USERGROUP**, the name means the user group name.
        If the `type` is set to **APPGROUP**, the name means the APP group name.
        If the `type` is set to **OU**, the name means the OU name.
        If the `type` is set to **ALL**, the name fixed with string **All-Targets**.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def policies(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the policies of the policy group, in JSON format.  
        For policy configuration items, please refer to the [documentation](https://support.huaweicloud.com/api-workspace/CreatePolicyGroup.html#CreatePolicyGroup__request_Policies).

        <a name="app_policy_group_targets"></a>
        The `targets` block supports:
        """
        return pulumi.get(self, "policies")

    @policies.setter
    def policies(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "policies", value)

    @_builtins.property
    @pulumi.getter
    def priority(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the priority of the policy group.  
        The valid value is range from `1` to the total number of policy groups.
        The smaller value means the higher priority.
        """
        return pulumi.get(self, "priority")

    @priority.setter
    def priority(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "priority", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AppPolicyGroupTargetArgs']]]]:
        """
        Specifies the list of target objects.
        The targets structure is documented below.
        """
        return pulumi.get(self, "targets")

    @targets.setter
    def targets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AppPolicyGroupTargetArgs']]]]):
        pulumi.set(self, "targets", value)


@pulumi.type_token("huaweicloud:Workspace/appPolicyGroup:AppPolicyGroup")
class AppPolicyGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policies: Optional[pulumi.Input[_builtins.str]] = None,
                 priority: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 targets: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AppPolicyGroupTargetArgs', 'AppPolicyGroupTargetArgsDict']]]]] = None,
                 __props__=None):
        """
        Manages a Workspace APP policy group resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        app_policy_group_name = config.require_object("appPolicyGroupName")
        app_group_id = config.require_object("appGroupId")
        app_group_name = config.require_object("appGroupName")
        test = huaweicloud.workspace.AppPolicyGroup("test",
            name=app_policy_group_name,
            priority=1,
            targets=[{
                "id": app_group_id,
                "name": app_group_name,
                "type": "APPGROUP",
            }],
            policies=json.dumps({
                "client": {
                    "automatic_reconnection_interval": 5,
                    "session_persistence_time": 180,
                    "forbid_screen_capture": False,
                },
            }))
        ```

        ## Import

        The APP policy group can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Workspace/appPolicyGroup:AppPolicyGroup test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason.

        The missing attributes include: `priority`, `policies`.

        It is generally recommended running `pulumi preview` after importing the resource.

        You can then decide if changes should be applied to the instance, or the resource definition should be updated to

        align with the instance. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_workspace_app_policy_group" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              priority, policies,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the policy group.  
               The maximum length is limited to `255` characters.
        :param pulumi.Input[_builtins.str] name: Specifies the object name.  
               If the `type` is set to **USER**, the name means the user name.
               If the `type` is set to **USERGROUP**, the name means the user group name.
               If the `type` is set to **APPGROUP**, the name means the APP group name.
               If the `type` is set to **OU**, the name means the OU name.
               If the `type` is set to **ALL**, the name fixed with string **All-Targets**.
        :param pulumi.Input[_builtins.str] policies: Specifies the policies of the policy group, in JSON format.  
               For policy configuration items, please refer to the [documentation](https://support.huaweicloud.com/api-workspace/CreatePolicyGroup.html#CreatePolicyGroup__request_Policies).
               
               <a name="app_policy_group_targets"></a>
               The `targets` block supports:
        :param pulumi.Input[_builtins.int] priority: Specifies the priority of the policy group.  
               The valid value is range from `1` to the total number of policy groups.
               The smaller value means the higher priority.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['AppPolicyGroupTargetArgs', 'AppPolicyGroupTargetArgsDict']]]] targets: Specifies the list of target objects.
               The targets structure is documented below.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[AppPolicyGroupArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a Workspace APP policy group resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        app_policy_group_name = config.require_object("appPolicyGroupName")
        app_group_id = config.require_object("appGroupId")
        app_group_name = config.require_object("appGroupName")
        test = huaweicloud.workspace.AppPolicyGroup("test",
            name=app_policy_group_name,
            priority=1,
            targets=[{
                "id": app_group_id,
                "name": app_group_name,
                "type": "APPGROUP",
            }],
            policies=json.dumps({
                "client": {
                    "automatic_reconnection_interval": 5,
                    "session_persistence_time": 180,
                    "forbid_screen_capture": False,
                },
            }))
        ```

        ## Import

        The APP policy group can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Workspace/appPolicyGroup:AppPolicyGroup test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason.

        The missing attributes include: `priority`, `policies`.

        It is generally recommended running `pulumi preview` after importing the resource.

        You can then decide if changes should be applied to the instance, or the resource definition should be updated to

        align with the instance. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_workspace_app_policy_group" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              priority, policies,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param AppPolicyGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AppPolicyGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policies: Optional[pulumi.Input[_builtins.str]] = None,
                 priority: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 targets: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AppPolicyGroupTargetArgs', 'AppPolicyGroupTargetArgsDict']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AppPolicyGroupArgs.__new__(AppPolicyGroupArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["name"] = name
            __props__.__dict__["policies"] = policies
            __props__.__dict__["priority"] = priority
            __props__.__dict__["region"] = region
            __props__.__dict__["targets"] = targets
        super(AppPolicyGroup, __self__).__init__(
            'huaweicloud:Workspace/appPolicyGroup:AppPolicyGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            policies: Optional[pulumi.Input[_builtins.str]] = None,
            priority: Optional[pulumi.Input[_builtins.int]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            targets: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AppPolicyGroupTargetArgs', 'AppPolicyGroupTargetArgsDict']]]]] = None) -> 'AppPolicyGroup':
        """
        Get an existing AppPolicyGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the policy group.  
               The maximum length is limited to `255` characters.
        :param pulumi.Input[_builtins.str] name: Specifies the object name.  
               If the `type` is set to **USER**, the name means the user name.
               If the `type` is set to **USERGROUP**, the name means the user group name.
               If the `type` is set to **APPGROUP**, the name means the APP group name.
               If the `type` is set to **OU**, the name means the OU name.
               If the `type` is set to **ALL**, the name fixed with string **All-Targets**.
        :param pulumi.Input[_builtins.str] policies: Specifies the policies of the policy group, in JSON format.  
               For policy configuration items, please refer to the [documentation](https://support.huaweicloud.com/api-workspace/CreatePolicyGroup.html#CreatePolicyGroup__request_Policies).
               
               <a name="app_policy_group_targets"></a>
               The `targets` block supports:
        :param pulumi.Input[_builtins.int] priority: Specifies the priority of the policy group.  
               The valid value is range from `1` to the total number of policy groups.
               The smaller value means the higher priority.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['AppPolicyGroupTargetArgs', 'AppPolicyGroupTargetArgsDict']]]] targets: Specifies the list of target objects.
               The targets structure is documented below.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AppPolicyGroupState.__new__(_AppPolicyGroupState)

        __props__.__dict__["description"] = description
        __props__.__dict__["name"] = name
        __props__.__dict__["policies"] = policies
        __props__.__dict__["priority"] = priority
        __props__.__dict__["region"] = region
        __props__.__dict__["targets"] = targets
        return AppPolicyGroup(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the description of the policy group.  
        The maximum length is limited to `255` characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the object name.  
        If the `type` is set to **USER**, the name means the user name.
        If the `type` is set to **USERGROUP**, the name means the user group name.
        If the `type` is set to **APPGROUP**, the name means the APP group name.
        If the `type` is set to **OU**, the name means the OU name.
        If the `type` is set to **ALL**, the name fixed with string **All-Targets**.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def policies(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the policies of the policy group, in JSON format.  
        For policy configuration items, please refer to the [documentation](https://support.huaweicloud.com/api-workspace/CreatePolicyGroup.html#CreatePolicyGroup__request_Policies).

        <a name="app_policy_group_targets"></a>
        The `targets` block supports:
        """
        return pulumi.get(self, "policies")

    @_builtins.property
    @pulumi.getter
    def priority(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        Specifies the priority of the policy group.  
        The valid value is range from `1` to the total number of policy groups.
        The smaller value means the higher priority.
        """
        return pulumi.get(self, "priority")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def targets(self) -> pulumi.Output[Optional[Sequence['outputs.AppPolicyGroupTarget']]]:
        """
        Specifies the list of target objects.
        The targets structure is documented below.
        """
        return pulumi.get(self, "targets")

