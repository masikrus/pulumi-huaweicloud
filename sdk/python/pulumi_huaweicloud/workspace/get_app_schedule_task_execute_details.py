# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetAppScheduleTaskExecuteDetailsResult',
    'AwaitableGetAppScheduleTaskExecuteDetailsResult',
    'get_app_schedule_task_execute_details',
    'get_app_schedule_task_execute_details_output',
]

@pulumi.output_type
class GetAppScheduleTaskExecuteDetailsResult:
    """
    A collection of values returned by getAppScheduleTaskExecuteDetails.
    """
    def __init__(__self__, execute_details=None, execute_history_id=None, id=None, region=None):
        if execute_details and not isinstance(execute_details, list):
            raise TypeError("Expected argument 'execute_details' to be a list")
        pulumi.set(__self__, "execute_details", execute_details)
        if execute_history_id and not isinstance(execute_history_id, str):
            raise TypeError("Expected argument 'execute_history_id' to be a str")
        pulumi.set(__self__, "execute_history_id", execute_history_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="executeDetails")
    def execute_details(self) -> Sequence['outputs.GetAppScheduleTaskExecuteDetailsExecuteDetailResult']:
        """
        The list of the sub-task execution details.
        The execute_details structure is documented below.
        """
        return pulumi.get(self, "execute_details")

    @_builtins.property
    @pulumi.getter(name="executeHistoryId")
    def execute_history_id(self) -> _builtins.str:
        return pulumi.get(self, "execute_history_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetAppScheduleTaskExecuteDetailsResult(GetAppScheduleTaskExecuteDetailsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAppScheduleTaskExecuteDetailsResult(
            execute_details=self.execute_details,
            execute_history_id=self.execute_history_id,
            id=self.id,
            region=self.region)


def get_app_schedule_task_execute_details(execute_history_id: Optional[_builtins.str] = None,
                                          region: Optional[_builtins.str] = None,
                                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAppScheduleTaskExecuteDetailsResult:
    """
    Use this data source to get the details of Workspace APP schedule task executions within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    execute_history_id = config.require_object("executeHistoryId")
    test = huaweicloud.Workspace.get_app_schedule_task_execute_details(execute_history_id=execute_history_id)
    ```


    :param _builtins.str execute_history_id: Specifies the ID of the schedule task execution record.
    :param _builtins.str region: Specifies the region where the schedule task execution details are located.  
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['executeHistoryId'] = execute_history_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Workspace/getAppScheduleTaskExecuteDetails:getAppScheduleTaskExecuteDetails', __args__, opts=opts, typ=GetAppScheduleTaskExecuteDetailsResult).value

    return AwaitableGetAppScheduleTaskExecuteDetailsResult(
        execute_details=pulumi.get(__ret__, 'execute_details'),
        execute_history_id=pulumi.get(__ret__, 'execute_history_id'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'))
def get_app_schedule_task_execute_details_output(execute_history_id: Optional[pulumi.Input[_builtins.str]] = None,
                                                 region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                 opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAppScheduleTaskExecuteDetailsResult]:
    """
    Use this data source to get the details of Workspace APP schedule task executions within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    execute_history_id = config.require_object("executeHistoryId")
    test = huaweicloud.Workspace.get_app_schedule_task_execute_details(execute_history_id=execute_history_id)
    ```


    :param _builtins.str execute_history_id: Specifies the ID of the schedule task execution record.
    :param _builtins.str region: Specifies the region where the schedule task execution details are located.  
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['executeHistoryId'] = execute_history_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Workspace/getAppScheduleTaskExecuteDetails:getAppScheduleTaskExecuteDetails', __args__, opts=opts, typ=GetAppScheduleTaskExecuteDetailsResult)
    return __ret__.apply(lambda __response__: GetAppScheduleTaskExecuteDetailsResult(
        execute_details=pulumi.get(__response__, 'execute_details'),
        execute_history_id=pulumi.get(__response__, 'execute_history_id'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region')))
