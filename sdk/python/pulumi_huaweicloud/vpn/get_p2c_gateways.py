# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetP2cGatewaysResult',
    'AwaitableGetP2cGatewaysResult',
    'get_p2c_gateways',
    'get_p2c_gateways_output',
]

@pulumi.output_type
class GetP2cGatewaysResult:
    """
    A collection of values returned by getP2cGateways.
    """
    def __init__(__self__, id=None, p2c_vpn_gateways=None, region=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if p2c_vpn_gateways and not isinstance(p2c_vpn_gateways, list):
            raise TypeError("Expected argument 'p2c_vpn_gateways' to be a list")
        pulumi.set(__self__, "p2c_vpn_gateways", p2c_vpn_gateways)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="p2cVpnGateways")
    def p2c_vpn_gateways(self) -> Sequence['outputs.GetP2cGatewaysP2cVpnGatewayResult']:
        """
        The VPN P2C gateway List.
        """
        return pulumi.get(self, "p2c_vpn_gateways")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetP2cGatewaysResult(GetP2cGatewaysResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetP2cGatewaysResult(
            id=self.id,
            p2c_vpn_gateways=self.p2c_vpn_gateways,
            region=self.region)


def get_p2c_gateways(region: Optional[_builtins.str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetP2cGatewaysResult:
    """
    Use the data source to get the list of VPN P2C gateways.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.vpn.get_p2c_gateways()
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:vpn/getP2cGateways:getP2cGateways', __args__, opts=opts, typ=GetP2cGatewaysResult).value

    return AwaitableGetP2cGatewaysResult(
        id=pulumi.get(__ret__, 'id'),
        p2c_vpn_gateways=pulumi.get(__ret__, 'p2c_vpn_gateways'),
        region=pulumi.get(__ret__, 'region'))
def get_p2c_gateways_output(region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                            opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetP2cGatewaysResult]:
    """
    Use the data source to get the list of VPN P2C gateways.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.vpn.get_p2c_gateways()
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:vpn/getP2cGateways:getP2cGateways', __args__, opts=opts, typ=GetP2cGatewaysResult)
    return __ret__.apply(lambda __response__: GetP2cGatewaysResult(
        id=pulumi.get(__response__, 'id'),
        p2c_vpn_gateways=pulumi.get(__response__, 'p2c_vpn_gateways'),
        region=pulumi.get(__response__, 'region')))
