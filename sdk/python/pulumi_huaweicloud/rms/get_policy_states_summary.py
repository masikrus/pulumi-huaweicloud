# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetPolicyStatesSummaryResult',
    'AwaitableGetPolicyStatesSummaryResult',
    'get_policy_states_summary',
    'get_policy_states_summary_output',
]

@pulumi.output_type
class GetPolicyStatesSummaryResult:
    """
    A collection of values returned by getPolicyStatesSummary.
    """
    def __init__(__self__, id=None, results=None, tags=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if results and not isinstance(results, list):
            raise TypeError("Expected argument 'results' to be a list")
        pulumi.set(__self__, "results", results)
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def results(self) -> Sequence['outputs.GetPolicyStatesSummaryResultResult']:
        """
        Indicates the results of compliance summaries.
        The results structure is documented below.
        """
        return pulumi.get(self, "results")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[Sequence[_builtins.str]]:
        return pulumi.get(self, "tags")


class AwaitableGetPolicyStatesSummaryResult(GetPolicyStatesSummaryResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPolicyStatesSummaryResult(
            id=self.id,
            results=self.results,
            tags=self.tags)


def get_policy_states_summary(tags: Optional[Sequence[_builtins.str]] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPolicyStatesSummaryResult:
    """
    Use this data source to get compliance summary by user.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.rms.get_policy_states_summary()
    ```


    :param Sequence[_builtins.str] tags: Specifies the tag list.
    """
    __args__ = dict()
    __args__['tags'] = tags
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:rms/getPolicyStatesSummary:getPolicyStatesSummary', __args__, opts=opts, typ=GetPolicyStatesSummaryResult).value

    return AwaitableGetPolicyStatesSummaryResult(
        id=pulumi.get(__ret__, 'id'),
        results=pulumi.get(__ret__, 'results'),
        tags=pulumi.get(__ret__, 'tags'))
def get_policy_states_summary_output(tags: Optional[pulumi.Input[Optional[Sequence[_builtins.str]]]] = None,
                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetPolicyStatesSummaryResult]:
    """
    Use this data source to get compliance summary by user.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.rms.get_policy_states_summary()
    ```


    :param Sequence[_builtins.str] tags: Specifies the tag list.
    """
    __args__ = dict()
    __args__['tags'] = tags
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:rms/getPolicyStatesSummary:getPolicyStatesSummary', __args__, opts=opts, typ=GetPolicyStatesSummaryResult)
    return __ret__.apply(lambda __response__: GetPolicyStatesSummaryResult(
        id=pulumi.get(__response__, 'id'),
        results=pulumi.get(__response__, 'results'),
        tags=pulumi.get(__response__, 'tags')))
