# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetOrganizationalAssignmentPackagesResult',
    'AwaitableGetOrganizationalAssignmentPackagesResult',
    'get_organizational_assignment_packages',
    'get_organizational_assignment_packages_output',
]

@pulumi.output_type
class GetOrganizationalAssignmentPackagesResult:
    """
    A collection of values returned by getOrganizationalAssignmentPackages.
    """
    def __init__(__self__, id=None, name=None, organization_id=None, package_id=None, packages=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if organization_id and not isinstance(organization_id, str):
            raise TypeError("Expected argument 'organization_id' to be a str")
        pulumi.set(__self__, "organization_id", organization_id)
        if package_id and not isinstance(package_id, str):
            raise TypeError("Expected argument 'package_id' to be a str")
        pulumi.set(__self__, "package_id", package_id)
        if packages and not isinstance(packages, list):
            raise TypeError("Expected argument 'packages' to be a list")
        pulumi.set(__self__, "packages", packages)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The organizational assignment package name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> _builtins.str:
        """
        The ID of the organization.
        """
        return pulumi.get(self, "organization_id")

    @_builtins.property
    @pulumi.getter(name="packageId")
    def package_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "package_id")

    @_builtins.property
    @pulumi.getter
    def packages(self) -> Sequence['outputs.GetOrganizationalAssignmentPackagesPackageResult']:
        """
        The list of organizational assignment packages.
        """
        return pulumi.get(self, "packages")


class AwaitableGetOrganizationalAssignmentPackagesResult(GetOrganizationalAssignmentPackagesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOrganizationalAssignmentPackagesResult(
            id=self.id,
            name=self.name,
            organization_id=self.organization_id,
            package_id=self.package_id,
            packages=self.packages)


def get_organizational_assignment_packages(name: Optional[_builtins.str] = None,
                                           organization_id: Optional[_builtins.str] = None,
                                           package_id: Optional[_builtins.str] = None,
                                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOrganizationalAssignmentPackagesResult:
    """
    Use this data source to get the list of RMS organizational assignment packages.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    assignment_package_name = config.require_object("assignmentPackageName")
    test = huaweicloud.organizations.get_organization()
    test_get_organizational_assignment_packages = huaweicloud.rms.get_organizational_assignment_packages(organization_id=test.id,
        name=assignment_package_name)
    ```


    :param _builtins.str name: Specifies the organizational assignment package name.
    :param _builtins.str organization_id: Specifies the ID of the organization.
    :param _builtins.str package_id: Specifies the organizational assignment package ID.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['organizationId'] = organization_id
    __args__['packageId'] = package_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:rms/getOrganizationalAssignmentPackages:getOrganizationalAssignmentPackages', __args__, opts=opts, typ=GetOrganizationalAssignmentPackagesResult).value

    return AwaitableGetOrganizationalAssignmentPackagesResult(
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        organization_id=pulumi.get(__ret__, 'organization_id'),
        package_id=pulumi.get(__ret__, 'package_id'),
        packages=pulumi.get(__ret__, 'packages'))
def get_organizational_assignment_packages_output(name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                  organization_id: Optional[pulumi.Input[_builtins.str]] = None,
                                                  package_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetOrganizationalAssignmentPackagesResult]:
    """
    Use this data source to get the list of RMS organizational assignment packages.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    assignment_package_name = config.require_object("assignmentPackageName")
    test = huaweicloud.organizations.get_organization()
    test_get_organizational_assignment_packages = huaweicloud.rms.get_organizational_assignment_packages(organization_id=test.id,
        name=assignment_package_name)
    ```


    :param _builtins.str name: Specifies the organizational assignment package name.
    :param _builtins.str organization_id: Specifies the ID of the organization.
    :param _builtins.str package_id: Specifies the organizational assignment package ID.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['organizationId'] = organization_id
    __args__['packageId'] = package_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:rms/getOrganizationalAssignmentPackages:getOrganizationalAssignmentPackages', __args__, opts=opts, typ=GetOrganizationalAssignmentPackagesResult)
    return __ret__.apply(lambda __response__: GetOrganizationalAssignmentPackagesResult(
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        organization_id=pulumi.get(__response__, 'organization_id'),
        package_id=pulumi.get(__response__, 'package_id'),
        packages=pulumi.get(__response__, 'packages')))
