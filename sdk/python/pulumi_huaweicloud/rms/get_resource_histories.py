# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetResourceHistoriesResult',
    'AwaitableGetResourceHistoriesResult',
    'get_resource_histories',
    'get_resource_histories_output',
]

@pulumi.output_type
class GetResourceHistoriesResult:
    """
    A collection of values returned by getResourceHistories.
    """
    def __init__(__self__, earlier_time=None, id=None, items=None, later_time=None, region=None, resource_id=None):
        if earlier_time and not isinstance(earlier_time, str):
            raise TypeError("Expected argument 'earlier_time' to be a str")
        pulumi.set(__self__, "earlier_time", earlier_time)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if items and not isinstance(items, list):
            raise TypeError("Expected argument 'items' to be a list")
        pulumi.set(__self__, "items", items)
        if later_time and not isinstance(later_time, str):
            raise TypeError("Expected argument 'later_time' to be a str")
        pulumi.set(__self__, "later_time", later_time)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if resource_id and not isinstance(resource_id, str):
            raise TypeError("Expected argument 'resource_id' to be a str")
        pulumi.set(__self__, "resource_id", resource_id)

    @_builtins.property
    @pulumi.getter(name="earlierTime")
    def earlier_time(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "earlier_time")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetResourceHistoriesItemResult']:
        """
        The resource history list.
        """
        return pulumi.get(self, "items")

    @_builtins.property
    @pulumi.getter(name="laterTime")
    def later_time(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "later_time")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> _builtins.str:
        """
        The resource ID.
        """
        return pulumi.get(self, "resource_id")


class AwaitableGetResourceHistoriesResult(GetResourceHistoriesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetResourceHistoriesResult(
            earlier_time=self.earlier_time,
            id=self.id,
            items=self.items,
            later_time=self.later_time,
            region=self.region,
            resource_id=self.resource_id)


def get_resource_histories(earlier_time: Optional[_builtins.str] = None,
                           later_time: Optional[_builtins.str] = None,
                           region: Optional[_builtins.str] = None,
                           resource_id: Optional[_builtins.str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetResourceHistoriesResult:
    """
    Use this data source to get the list of RMS resource histories.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    resource_id = config.require_object("resourceId")
    test = huaweicloud.rms.get_resource_histories(resource_id=resource_id)
    ```


    :param _builtins.str earlier_time: Specifies the start time of the query.
           If you do not set this parameter, the action returns paginated results starting from the earliest history item.
           The time format is **YYYY-MM-DD hh:mm:ss**.
    :param _builtins.str later_time: Specifies the end time of the query.
           If you do not set this parameter, the current time is used by default.
           The time format is **YYYY-MM-DD hh:mm:ss**.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str resource_id: Specifies the resource ID.
    """
    __args__ = dict()
    __args__['earlierTime'] = earlier_time
    __args__['laterTime'] = later_time
    __args__['region'] = region
    __args__['resourceId'] = resource_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:rms/getResourceHistories:getResourceHistories', __args__, opts=opts, typ=GetResourceHistoriesResult).value

    return AwaitableGetResourceHistoriesResult(
        earlier_time=pulumi.get(__ret__, 'earlier_time'),
        id=pulumi.get(__ret__, 'id'),
        items=pulumi.get(__ret__, 'items'),
        later_time=pulumi.get(__ret__, 'later_time'),
        region=pulumi.get(__ret__, 'region'),
        resource_id=pulumi.get(__ret__, 'resource_id'))
def get_resource_histories_output(earlier_time: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                  later_time: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                  region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                  resource_id: Optional[pulumi.Input[_builtins.str]] = None,
                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetResourceHistoriesResult]:
    """
    Use this data source to get the list of RMS resource histories.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    resource_id = config.require_object("resourceId")
    test = huaweicloud.rms.get_resource_histories(resource_id=resource_id)
    ```


    :param _builtins.str earlier_time: Specifies the start time of the query.
           If you do not set this parameter, the action returns paginated results starting from the earliest history item.
           The time format is **YYYY-MM-DD hh:mm:ss**.
    :param _builtins.str later_time: Specifies the end time of the query.
           If you do not set this parameter, the current time is used by default.
           The time format is **YYYY-MM-DD hh:mm:ss**.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str resource_id: Specifies the resource ID.
    """
    __args__ = dict()
    __args__['earlierTime'] = earlier_time
    __args__['laterTime'] = later_time
    __args__['region'] = region
    __args__['resourceId'] = resource_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:rms/getResourceHistories:getResourceHistories', __args__, opts=opts, typ=GetResourceHistoriesResult)
    return __ret__.apply(lambda __response__: GetResourceHistoriesResult(
        earlier_time=pulumi.get(__response__, 'earlier_time'),
        id=pulumi.get(__response__, 'id'),
        items=pulumi.get(__response__, 'items'),
        later_time=pulumi.get(__response__, 'later_time'),
        region=pulumi.get(__response__, 'region'),
        resource_id=pulumi.get(__response__, 'resource_id')))
