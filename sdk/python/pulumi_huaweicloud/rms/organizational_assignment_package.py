# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['OrganizationalAssignmentPackageArgs', 'OrganizationalAssignmentPackage']

@pulumi.input_type
class OrganizationalAssignmentPackageArgs:
    def __init__(__self__, *,
                 organization_id: pulumi.Input[_builtins.str],
                 excluded_accounts: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 template_body: Optional[pulumi.Input[_builtins.str]] = None,
                 template_key: Optional[pulumi.Input[_builtins.str]] = None,
                 template_uri: Optional[pulumi.Input[_builtins.str]] = None,
                 vars_structures: Optional[pulumi.Input[Sequence[pulumi.Input['OrganizationalAssignmentPackageVarsStructureArgs']]]] = None):
        """
        The set of arguments for constructing a OrganizationalAssignmentPackage resource.
        :param pulumi.Input[_builtins.str] organization_id: Specifies the ID of the organization.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] excluded_accounts: Specifies the excluded accounts for conformance package deployment.
        :param pulumi.Input[_builtins.str] name: Specifies the assignment package name. It contains `1` to `64` characters.
        :param pulumi.Input[_builtins.str] template_body: Specifies the content of a custom assignment package. It contains `1` to
               `51200` characters.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] template_key: Specifies the name of a predefined conformance package. It contains `1` to
               `128` characters.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] template_uri: Specifies the OBS address of a conformance package. It contains `1` to
               `1024` characters.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input['OrganizationalAssignmentPackageVarsStructureArgs']]] vars_structures: Specifies the parameters of a conformance package.
               
               The vars_structure structure is documented below.
               
               <a name="OrgAssignmentPackage_VarStructure"></a>
               The `vars_structure` block supports:
        """
        pulumi.set(__self__, "organization_id", organization_id)
        if excluded_accounts is not None:
            pulumi.set(__self__, "excluded_accounts", excluded_accounts)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if template_body is not None:
            pulumi.set(__self__, "template_body", template_body)
        if template_key is not None:
            pulumi.set(__self__, "template_key", template_key)
        if template_uri is not None:
            pulumi.set(__self__, "template_uri", template_uri)
        if vars_structures is not None:
            pulumi.set(__self__, "vars_structures", vars_structures)

    @_builtins.property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the organization.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "organization_id")

    @organization_id.setter
    def organization_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "organization_id", value)

    @_builtins.property
    @pulumi.getter(name="excludedAccounts")
    def excluded_accounts(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the excluded accounts for conformance package deployment.
        """
        return pulumi.get(self, "excluded_accounts")

    @excluded_accounts.setter
    def excluded_accounts(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "excluded_accounts", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the assignment package name. It contains `1` to `64` characters.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="templateBody")
    def template_body(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the content of a custom assignment package. It contains `1` to
        `51200` characters.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "template_body")

    @template_body.setter
    def template_body(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "template_body", value)

    @_builtins.property
    @pulumi.getter(name="templateKey")
    def template_key(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of a predefined conformance package. It contains `1` to
        `128` characters.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "template_key")

    @template_key.setter
    def template_key(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "template_key", value)

    @_builtins.property
    @pulumi.getter(name="templateUri")
    def template_uri(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the OBS address of a conformance package. It contains `1` to
        `1024` characters.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "template_uri")

    @template_uri.setter
    def template_uri(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "template_uri", value)

    @_builtins.property
    @pulumi.getter(name="varsStructures")
    def vars_structures(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OrganizationalAssignmentPackageVarsStructureArgs']]]]:
        """
        Specifies the parameters of a conformance package.

        The vars_structure structure is documented below.

        <a name="OrgAssignmentPackage_VarStructure"></a>
        The `vars_structure` block supports:
        """
        return pulumi.get(self, "vars_structures")

    @vars_structures.setter
    def vars_structures(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OrganizationalAssignmentPackageVarsStructureArgs']]]]):
        pulumi.set(self, "vars_structures", value)


@pulumi.input_type
class _OrganizationalAssignmentPackageState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 excluded_accounts: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 org_conformance_pack_urn: Optional[pulumi.Input[_builtins.str]] = None,
                 organization_id: Optional[pulumi.Input[_builtins.str]] = None,
                 owner_id: Optional[pulumi.Input[_builtins.str]] = None,
                 template_body: Optional[pulumi.Input[_builtins.str]] = None,
                 template_key: Optional[pulumi.Input[_builtins.str]] = None,
                 template_uri: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 vars_structures: Optional[pulumi.Input[Sequence[pulumi.Input['OrganizationalAssignmentPackageVarsStructureArgs']]]] = None):
        """
        Input properties used for looking up and filtering OrganizationalAssignmentPackage resources.
        :param pulumi.Input[_builtins.str] created_at: Indicates the creation time of an organization conformance package.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] excluded_accounts: Specifies the excluded accounts for conformance package deployment.
        :param pulumi.Input[_builtins.str] name: Specifies the assignment package name. It contains `1` to `64` characters.
        :param pulumi.Input[_builtins.str] org_conformance_pack_urn: Indicates the unique identifier of resources in an organization conformance package.
        :param pulumi.Input[_builtins.str] organization_id: Specifies the ID of the organization.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] owner_id: Indicates the creator of an organization conformance package.
        :param pulumi.Input[_builtins.str] template_body: Specifies the content of a custom assignment package. It contains `1` to
               `51200` characters.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] template_key: Specifies the name of a predefined conformance package. It contains `1` to
               `128` characters.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] template_uri: Specifies the OBS address of a conformance package. It contains `1` to
               `1024` characters.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] updated_at: Indicates the latest update time of an organization conformance package.
        :param pulumi.Input[Sequence[pulumi.Input['OrganizationalAssignmentPackageVarsStructureArgs']]] vars_structures: Specifies the parameters of a conformance package.
               
               The vars_structure structure is documented below.
               
               <a name="OrgAssignmentPackage_VarStructure"></a>
               The `vars_structure` block supports:
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if excluded_accounts is not None:
            pulumi.set(__self__, "excluded_accounts", excluded_accounts)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if org_conformance_pack_urn is not None:
            pulumi.set(__self__, "org_conformance_pack_urn", org_conformance_pack_urn)
        if organization_id is not None:
            pulumi.set(__self__, "organization_id", organization_id)
        if owner_id is not None:
            pulumi.set(__self__, "owner_id", owner_id)
        if template_body is not None:
            pulumi.set(__self__, "template_body", template_body)
        if template_key is not None:
            pulumi.set(__self__, "template_key", template_key)
        if template_uri is not None:
            pulumi.set(__self__, "template_uri", template_uri)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if vars_structures is not None:
            pulumi.set(__self__, "vars_structures", vars_structures)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the creation time of an organization conformance package.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="excludedAccounts")
    def excluded_accounts(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the excluded accounts for conformance package deployment.
        """
        return pulumi.get(self, "excluded_accounts")

    @excluded_accounts.setter
    def excluded_accounts(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "excluded_accounts", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the assignment package name. It contains `1` to `64` characters.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="orgConformancePackUrn")
    def org_conformance_pack_urn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the unique identifier of resources in an organization conformance package.
        """
        return pulumi.get(self, "org_conformance_pack_urn")

    @org_conformance_pack_urn.setter
    def org_conformance_pack_urn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "org_conformance_pack_urn", value)

    @_builtins.property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the organization.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "organization_id")

    @organization_id.setter
    def organization_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "organization_id", value)

    @_builtins.property
    @pulumi.getter(name="ownerId")
    def owner_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the creator of an organization conformance package.
        """
        return pulumi.get(self, "owner_id")

    @owner_id.setter
    def owner_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "owner_id", value)

    @_builtins.property
    @pulumi.getter(name="templateBody")
    def template_body(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the content of a custom assignment package. It contains `1` to
        `51200` characters.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "template_body")

    @template_body.setter
    def template_body(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "template_body", value)

    @_builtins.property
    @pulumi.getter(name="templateKey")
    def template_key(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of a predefined conformance package. It contains `1` to
        `128` characters.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "template_key")

    @template_key.setter
    def template_key(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "template_key", value)

    @_builtins.property
    @pulumi.getter(name="templateUri")
    def template_uri(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the OBS address of a conformance package. It contains `1` to
        `1024` characters.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "template_uri")

    @template_uri.setter
    def template_uri(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "template_uri", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the latest update time of an organization conformance package.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter(name="varsStructures")
    def vars_structures(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OrganizationalAssignmentPackageVarsStructureArgs']]]]:
        """
        Specifies the parameters of a conformance package.

        The vars_structure structure is documented below.

        <a name="OrgAssignmentPackage_VarStructure"></a>
        The `vars_structure` block supports:
        """
        return pulumi.get(self, "vars_structures")

    @vars_structures.setter
    def vars_structures(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OrganizationalAssignmentPackageVarsStructureArgs']]]]):
        pulumi.set(self, "vars_structures", value)


@pulumi.type_token("huaweicloud:rms/organizationalAssignmentPackage:OrganizationalAssignmentPackage")
class OrganizationalAssignmentPackage(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 excluded_accounts: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 organization_id: Optional[pulumi.Input[_builtins.str]] = None,
                 template_body: Optional[pulumi.Input[_builtins.str]] = None,
                 template_key: Optional[pulumi.Input[_builtins.str]] = None,
                 template_uri: Optional[pulumi.Input[_builtins.str]] = None,
                 vars_structures: Optional[pulumi.Input[Sequence[pulumi.Input[Union['OrganizationalAssignmentPackageVarsStructureArgs', 'OrganizationalAssignmentPackageVarsStructureArgsDict']]]]] = None,
                 __props__=None):
        """
        Manages RMS organizational assignment package resource within HuaweiCloud.

        ## Import

        The RMS organizational assignment package can be imported using the `organization_id` and `id` separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:rms/organizationalAssignmentPackage:OrganizationalAssignmentPackage test <organization_id>/<id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `template_key`,`template_body`,

        `template_uri`. It is generally recommended running `pulumi preview` after importing a RMS organizational assignment

        package. You can then decide if changes should be applied to the RMS organizational assignment package, or the resource

        definition should be updated to align with the RMS organizational assignment package. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_rms_organizational_assignment_package" "test" {

            ...

          lifecycle {

            ignore_changes = [
            
              template_key, template_body, template_uri,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] excluded_accounts: Specifies the excluded accounts for conformance package deployment.
        :param pulumi.Input[_builtins.str] name: Specifies the assignment package name. It contains `1` to `64` characters.
        :param pulumi.Input[_builtins.str] organization_id: Specifies the ID of the organization.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] template_body: Specifies the content of a custom assignment package. It contains `1` to
               `51200` characters.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] template_key: Specifies the name of a predefined conformance package. It contains `1` to
               `128` characters.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] template_uri: Specifies the OBS address of a conformance package. It contains `1` to
               `1024` characters.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['OrganizationalAssignmentPackageVarsStructureArgs', 'OrganizationalAssignmentPackageVarsStructureArgsDict']]]] vars_structures: Specifies the parameters of a conformance package.
               
               The vars_structure structure is documented below.
               
               <a name="OrgAssignmentPackage_VarStructure"></a>
               The `vars_structure` block supports:
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OrganizationalAssignmentPackageArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages RMS organizational assignment package resource within HuaweiCloud.

        ## Import

        The RMS organizational assignment package can be imported using the `organization_id` and `id` separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:rms/organizationalAssignmentPackage:OrganizationalAssignmentPackage test <organization_id>/<id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `template_key`,`template_body`,

        `template_uri`. It is generally recommended running `pulumi preview` after importing a RMS organizational assignment

        package. You can then decide if changes should be applied to the RMS organizational assignment package, or the resource

        definition should be updated to align with the RMS organizational assignment package. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_rms_organizational_assignment_package" "test" {

            ...

          lifecycle {

            ignore_changes = [
            
              template_key, template_body, template_uri,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param OrganizationalAssignmentPackageArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OrganizationalAssignmentPackageArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 excluded_accounts: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 organization_id: Optional[pulumi.Input[_builtins.str]] = None,
                 template_body: Optional[pulumi.Input[_builtins.str]] = None,
                 template_key: Optional[pulumi.Input[_builtins.str]] = None,
                 template_uri: Optional[pulumi.Input[_builtins.str]] = None,
                 vars_structures: Optional[pulumi.Input[Sequence[pulumi.Input[Union['OrganizationalAssignmentPackageVarsStructureArgs', 'OrganizationalAssignmentPackageVarsStructureArgsDict']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OrganizationalAssignmentPackageArgs.__new__(OrganizationalAssignmentPackageArgs)

            __props__.__dict__["excluded_accounts"] = excluded_accounts
            __props__.__dict__["name"] = name
            if organization_id is None and not opts.urn:
                raise TypeError("Missing required property 'organization_id'")
            __props__.__dict__["organization_id"] = organization_id
            __props__.__dict__["template_body"] = template_body
            __props__.__dict__["template_key"] = template_key
            __props__.__dict__["template_uri"] = template_uri
            __props__.__dict__["vars_structures"] = vars_structures
            __props__.__dict__["created_at"] = None
            __props__.__dict__["org_conformance_pack_urn"] = None
            __props__.__dict__["owner_id"] = None
            __props__.__dict__["updated_at"] = None
        super(OrganizationalAssignmentPackage, __self__).__init__(
            'huaweicloud:rms/organizationalAssignmentPackage:OrganizationalAssignmentPackage',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            excluded_accounts: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            org_conformance_pack_urn: Optional[pulumi.Input[_builtins.str]] = None,
            organization_id: Optional[pulumi.Input[_builtins.str]] = None,
            owner_id: Optional[pulumi.Input[_builtins.str]] = None,
            template_body: Optional[pulumi.Input[_builtins.str]] = None,
            template_key: Optional[pulumi.Input[_builtins.str]] = None,
            template_uri: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            vars_structures: Optional[pulumi.Input[Sequence[pulumi.Input[Union['OrganizationalAssignmentPackageVarsStructureArgs', 'OrganizationalAssignmentPackageVarsStructureArgsDict']]]]] = None) -> 'OrganizationalAssignmentPackage':
        """
        Get an existing OrganizationalAssignmentPackage resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: Indicates the creation time of an organization conformance package.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] excluded_accounts: Specifies the excluded accounts for conformance package deployment.
        :param pulumi.Input[_builtins.str] name: Specifies the assignment package name. It contains `1` to `64` characters.
        :param pulumi.Input[_builtins.str] org_conformance_pack_urn: Indicates the unique identifier of resources in an organization conformance package.
        :param pulumi.Input[_builtins.str] organization_id: Specifies the ID of the organization.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] owner_id: Indicates the creator of an organization conformance package.
        :param pulumi.Input[_builtins.str] template_body: Specifies the content of a custom assignment package. It contains `1` to
               `51200` characters.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] template_key: Specifies the name of a predefined conformance package. It contains `1` to
               `128` characters.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] template_uri: Specifies the OBS address of a conformance package. It contains `1` to
               `1024` characters.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] updated_at: Indicates the latest update time of an organization conformance package.
        :param pulumi.Input[Sequence[pulumi.Input[Union['OrganizationalAssignmentPackageVarsStructureArgs', 'OrganizationalAssignmentPackageVarsStructureArgsDict']]]] vars_structures: Specifies the parameters of a conformance package.
               
               The vars_structure structure is documented below.
               
               <a name="OrgAssignmentPackage_VarStructure"></a>
               The `vars_structure` block supports:
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OrganizationalAssignmentPackageState.__new__(_OrganizationalAssignmentPackageState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["excluded_accounts"] = excluded_accounts
        __props__.__dict__["name"] = name
        __props__.__dict__["org_conformance_pack_urn"] = org_conformance_pack_urn
        __props__.__dict__["organization_id"] = organization_id
        __props__.__dict__["owner_id"] = owner_id
        __props__.__dict__["template_body"] = template_body
        __props__.__dict__["template_key"] = template_key
        __props__.__dict__["template_uri"] = template_uri
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["vars_structures"] = vars_structures
        return OrganizationalAssignmentPackage(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the creation time of an organization conformance package.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="excludedAccounts")
    def excluded_accounts(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        Specifies the excluded accounts for conformance package deployment.
        """
        return pulumi.get(self, "excluded_accounts")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the assignment package name. It contains `1` to `64` characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orgConformancePackUrn")
    def org_conformance_pack_urn(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the unique identifier of resources in an organization conformance package.
        """
        return pulumi.get(self, "org_conformance_pack_urn")

    @_builtins.property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the organization.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "organization_id")

    @_builtins.property
    @pulumi.getter(name="ownerId")
    def owner_id(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the creator of an organization conformance package.
        """
        return pulumi.get(self, "owner_id")

    @_builtins.property
    @pulumi.getter(name="templateBody")
    def template_body(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the content of a custom assignment package. It contains `1` to
        `51200` characters.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "template_body")

    @_builtins.property
    @pulumi.getter(name="templateKey")
    def template_key(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of a predefined conformance package. It contains `1` to
        `128` characters.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "template_key")

    @_builtins.property
    @pulumi.getter(name="templateUri")
    def template_uri(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the OBS address of a conformance package. It contains `1` to
        `1024` characters.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "template_uri")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the latest update time of an organization conformance package.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter(name="varsStructures")
    def vars_structures(self) -> pulumi.Output[Sequence['outputs.OrganizationalAssignmentPackageVarsStructure']]:
        """
        Specifies the parameters of a conformance package.

        The vars_structure structure is documented below.

        <a name="OrgAssignmentPackage_VarStructure"></a>
        The `vars_structure` block supports:
        """
        return pulumi.get(self, "vars_structures")

