# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetAssignmentPackageSummaryResult',
    'AwaitableGetAssignmentPackageSummaryResult',
    'get_assignment_package_summary',
    'get_assignment_package_summary_output',
]

@pulumi.output_type
class GetAssignmentPackageSummaryResult:
    """
    A collection of values returned by getAssignmentPackageSummary.
    """
    def __init__(__self__, conformance_pack_name=None, id=None, values=None):
        if conformance_pack_name and not isinstance(conformance_pack_name, str):
            raise TypeError("Expected argument 'conformance_pack_name' to be a str")
        pulumi.set(__self__, "conformance_pack_name", conformance_pack_name)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if values and not isinstance(values, list):
            raise TypeError("Expected argument 'values' to be a list")
        pulumi.set(__self__, "values", values)

    @_builtins.property
    @pulumi.getter(name="conformancePackName")
    def conformance_pack_name(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "conformance_pack_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence['outputs.GetAssignmentPackageSummaryValueResult']:
        """
        Indicates the summary of the compliance results of conformance packages.
        """
        return pulumi.get(self, "values")


class AwaitableGetAssignmentPackageSummaryResult(GetAssignmentPackageSummaryResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAssignmentPackageSummaryResult(
            conformance_pack_name=self.conformance_pack_name,
            id=self.id,
            values=self.values)


def get_assignment_package_summary(conformance_pack_name: Optional[_builtins.str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAssignmentPackageSummaryResult:
    """
    Use this data source to get the compliance results of conformance packages.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.rms.get_assignment_package_summary()
    ```


    :param _builtins.str conformance_pack_name: Specifies the conformance package name.
    """
    __args__ = dict()
    __args__['conformancePackName'] = conformance_pack_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:rms/getAssignmentPackageSummary:getAssignmentPackageSummary', __args__, opts=opts, typ=GetAssignmentPackageSummaryResult).value

    return AwaitableGetAssignmentPackageSummaryResult(
        conformance_pack_name=pulumi.get(__ret__, 'conformance_pack_name'),
        id=pulumi.get(__ret__, 'id'),
        values=pulumi.get(__ret__, 'values'))
def get_assignment_package_summary_output(conformance_pack_name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                          opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAssignmentPackageSummaryResult]:
    """
    Use this data source to get the compliance results of conformance packages.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.rms.get_assignment_package_summary()
    ```


    :param _builtins.str conformance_pack_name: Specifies the conformance package name.
    """
    __args__ = dict()
    __args__['conformancePackName'] = conformance_pack_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:rms/getAssignmentPackageSummary:getAssignmentPackageSummary', __args__, opts=opts, typ=GetAssignmentPackageSummaryResult)
    return __ret__.apply(lambda __response__: GetAssignmentPackageSummaryResult(
        conformance_pack_name=pulumi.get(__response__, 'conformance_pack_name'),
        id=pulumi.get(__response__, 'id'),
        values=pulumi.get(__response__, 'values')))
