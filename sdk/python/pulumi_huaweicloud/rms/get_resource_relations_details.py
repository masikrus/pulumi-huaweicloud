# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetResourceRelationsDetailsResult',
    'AwaitableGetResourceRelationsDetailsResult',
    'get_resource_relations_details',
    'get_resource_relations_details_output',
]

@pulumi.output_type
class GetResourceRelationsDetailsResult:
    """
    A collection of values returned by getResourceRelationsDetails.
    """
    def __init__(__self__, direction=None, id=None, region=None, relations=None, resource_id=None):
        if direction and not isinstance(direction, str):
            raise TypeError("Expected argument 'direction' to be a str")
        pulumi.set(__self__, "direction", direction)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if relations and not isinstance(relations, list):
            raise TypeError("Expected argument 'relations' to be a list")
        pulumi.set(__self__, "relations", relations)
        if resource_id and not isinstance(resource_id, str):
            raise TypeError("Expected argument 'resource_id' to be a str")
        pulumi.set(__self__, "resource_id", resource_id)

    @_builtins.property
    @pulumi.getter
    def direction(self) -> _builtins.str:
        return pulumi.get(self, "direction")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def relations(self) -> Sequence['outputs.GetResourceRelationsDetailsRelationResult']:
        """
        The list of resource relationships.
        """
        return pulumi.get(self, "relations")

    @_builtins.property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> _builtins.str:
        return pulumi.get(self, "resource_id")


class AwaitableGetResourceRelationsDetailsResult(GetResourceRelationsDetailsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetResourceRelationsDetailsResult(
            direction=self.direction,
            id=self.id,
            region=self.region,
            relations=self.relations,
            resource_id=self.resource_id)


def get_resource_relations_details(direction: Optional[_builtins.str] = None,
                                   region: Optional[_builtins.str] = None,
                                   resource_id: Optional[_builtins.str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetResourceRelationsDetailsResult:
    """
    Use this data source to get the list of RMS resource relations details.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    resource_id = config.require_object("resourceId")
    direction = config.require_object("direction")
    test = huaweicloud.rms.get_resource_relations_details(resource_id=resource_id,
        direction=direction)
    ```


    :param _builtins.str direction: Specifies the direction of a resource relationship.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str resource_id: Specifies the resource ID.
    """
    __args__ = dict()
    __args__['direction'] = direction
    __args__['region'] = region
    __args__['resourceId'] = resource_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:rms/getResourceRelationsDetails:getResourceRelationsDetails', __args__, opts=opts, typ=GetResourceRelationsDetailsResult).value

    return AwaitableGetResourceRelationsDetailsResult(
        direction=pulumi.get(__ret__, 'direction'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'),
        relations=pulumi.get(__ret__, 'relations'),
        resource_id=pulumi.get(__ret__, 'resource_id'))
def get_resource_relations_details_output(direction: Optional[pulumi.Input[_builtins.str]] = None,
                                          region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                          resource_id: Optional[pulumi.Input[_builtins.str]] = None,
                                          opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetResourceRelationsDetailsResult]:
    """
    Use this data source to get the list of RMS resource relations details.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    resource_id = config.require_object("resourceId")
    direction = config.require_object("direction")
    test = huaweicloud.rms.get_resource_relations_details(resource_id=resource_id,
        direction=direction)
    ```


    :param _builtins.str direction: Specifies the direction of a resource relationship.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str resource_id: Specifies the resource ID.
    """
    __args__ = dict()
    __args__['direction'] = direction
    __args__['region'] = region
    __args__['resourceId'] = resource_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:rms/getResourceRelationsDetails:getResourceRelationsDetails', __args__, opts=opts, typ=GetResourceRelationsDetailsResult)
    return __ret__.apply(lambda __response__: GetResourceRelationsDetailsResult(
        direction=pulumi.get(__response__, 'direction'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region'),
        relations=pulumi.get(__response__, 'relations'),
        resource_id=pulumi.get(__response__, 'resource_id')))
