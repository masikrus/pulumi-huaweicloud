# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetInterconnectedServicesResult',
    'AwaitableGetInterconnectedServicesResult',
    'get_interconnected_services',
    'get_interconnected_services_output',
]

@pulumi.output_type
class GetInterconnectedServicesResult:
    """
    A collection of values returned by getInterconnectedServices.
    """
    def __init__(__self__, id=None, resource_providers=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if resource_providers and not isinstance(resource_providers, list):
            raise TypeError("Expected argument 'resource_providers' to be a list")
        pulumi.set(__self__, "resource_providers", resource_providers)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="resourceProviders")
    def resource_providers(self) -> Sequence['outputs.GetInterconnectedServicesResourceProviderResult']:
        """
        Indicates the list of cloud service details.
        """
        return pulumi.get(self, "resource_providers")


class AwaitableGetInterconnectedServicesResult(GetInterconnectedServicesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInterconnectedServicesResult(
            id=self.id,
            resource_providers=self.resource_providers)


def get_interconnected_services(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInterconnectedServicesResult:
    """
    Use this data source to get the list of all cloud services and resources interconnected with Config.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.rms.get_interconnected_services()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:rms/getInterconnectedServices:getInterconnectedServices', __args__, opts=opts, typ=GetInterconnectedServicesResult).value

    return AwaitableGetInterconnectedServicesResult(
        id=pulumi.get(__ret__, 'id'),
        resource_providers=pulumi.get(__ret__, 'resource_providers'))
def get_interconnected_services_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetInterconnectedServicesResult]:
    """
    Use this data source to get the list of all cloud services and resources interconnected with Config.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.rms.get_interconnected_services()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:rms/getInterconnectedServices:getInterconnectedServices', __args__, opts=opts, typ=GetInterconnectedServicesResult)
    return __ret__.apply(lambda __response__: GetInterconnectedServicesResult(
        id=pulumi.get(__response__, 'id'),
        resource_providers=pulumi.get(__response__, 'resource_providers')))
