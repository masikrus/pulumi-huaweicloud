# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetAzResult',
    'AwaitableGetAzResult',
    'get_az',
    'get_az_output',
]

@pulumi.output_type
class GetAzResult:
    """
    A collection of values returned by getAz.
    """
    def __init__(__self__, code=None, id=None, ipv6_enable=None, name=None, port=None, region=None):
        if code and not isinstance(code, str):
            raise TypeError("Expected argument 'code' to be a str")
        pulumi.set(__self__, "code", code)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ipv6_enable and not isinstance(ipv6_enable, bool):
            raise TypeError("Expected argument 'ipv6_enable' to be a bool")
        pulumi.set(__self__, "ipv6_enable", ipv6_enable)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if port and not isinstance(port, str):
            raise TypeError("Expected argument 'port' to be a str")
        pulumi.set(__self__, "port", port)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter
    def code(self) -> _builtins.str:
        return pulumi.get(self, "code")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="ipv6Enable")
    def ipv6_enable(self) -> _builtins.bool:
        return pulumi.get(self, "ipv6_enable")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Indicates the name of an AZ.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def port(self) -> _builtins.str:
        """
        Indicates the port number of an AZ.
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetAzResult(GetAzResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAzResult(
            code=self.code,
            id=self.id,
            ipv6_enable=self.ipv6_enable,
            name=self.name,
            port=self.port,
            region=self.region)


def get_az(code: Optional[_builtins.str] = None,
           name: Optional[_builtins.str] = None,
           port: Optional[_builtins.str] = None,
           region: Optional[_builtins.str] = None,
           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAzResult:
    """
    Use this data source to get the ID of an available HuaweiCloud dms az.

    !> **WARNING:** It has been deprecated. This data source is used for the `available_zones` of the
    `Dms.KafkaInstance` and `Dms.RabbitmqInstance` resource.
    Now argument `available_zones` has been deprecated, instead `availability_zones`,
    this data source will no longer be used.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    az1 = huaweicloud.Dms.get_az(code="cn-north-4a")
    ```


    :param _builtins.str code: Specifies the code of an AZ.
    :param _builtins.str name: Indicates the name of an AZ.
    :param _builtins.str port: Indicates the port number of an AZ.
    :param _builtins.str region: The region in which to obtain the dms az. If omitted, the provider-level region will be
           used.
    """
    __args__ = dict()
    __args__['code'] = code
    __args__['name'] = name
    __args__['port'] = port
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Dms/getAz:getAz', __args__, opts=opts, typ=GetAzResult).value

    return AwaitableGetAzResult(
        code=pulumi.get(__ret__, 'code'),
        id=pulumi.get(__ret__, 'id'),
        ipv6_enable=pulumi.get(__ret__, 'ipv6_enable'),
        name=pulumi.get(__ret__, 'name'),
        port=pulumi.get(__ret__, 'port'),
        region=pulumi.get(__ret__, 'region'))
def get_az_output(code: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                  name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                  port: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                  region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAzResult]:
    """
    Use this data source to get the ID of an available HuaweiCloud dms az.

    !> **WARNING:** It has been deprecated. This data source is used for the `available_zones` of the
    `Dms.KafkaInstance` and `Dms.RabbitmqInstance` resource.
    Now argument `available_zones` has been deprecated, instead `availability_zones`,
    this data source will no longer be used.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    az1 = huaweicloud.Dms.get_az(code="cn-north-4a")
    ```


    :param _builtins.str code: Specifies the code of an AZ.
    :param _builtins.str name: Indicates the name of an AZ.
    :param _builtins.str port: Indicates the port number of an AZ.
    :param _builtins.str region: The region in which to obtain the dms az. If omitted, the provider-level region will be
           used.
    """
    __args__ = dict()
    __args__['code'] = code
    __args__['name'] = name
    __args__['port'] = port
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Dms/getAz:getAz', __args__, opts=opts, typ=GetAzResult)
    return __ret__.apply(lambda __response__: GetAzResult(
        code=pulumi.get(__response__, 'code'),
        id=pulumi.get(__response__, 'id'),
        ipv6_enable=pulumi.get(__response__, 'ipv6_enable'),
        name=pulumi.get(__response__, 'name'),
        port=pulumi.get(__response__, 'port'),
        region=pulumi.get(__response__, 'region')))
