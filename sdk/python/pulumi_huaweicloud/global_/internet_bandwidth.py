# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['InternetBandwidthArgs', 'InternetBandwidth']

@pulumi.input_type
class InternetBandwidthArgs:
    def __init__(__self__, *,
                 access_site: pulumi.Input[_builtins.str],
                 charge_mode: pulumi.Input[_builtins.str],
                 isp: pulumi.Input[_builtins.str],
                 size: pulumi.Input[_builtins.int],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ingress_size: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a InternetBandwidth resource.
        :param pulumi.Input[_builtins.str] access_site: Specifies the access site name.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] charge_mode: Specifies the charge mode.
               Value can be as follows:
               + **bandwidth**: billed by bandwidth
               + **traffic**: billed by traffic
               + **95peak_plus_1000**: billed by enhanced 95
               + **95peak_bidirection**: billed by bidirectional traditional 95
               + **95peak_guar**: billed by traditional 95 with guaranteed minimum
               + **95peak_avr**: 95 peak average billing
        :param pulumi.Input[_builtins.str] isp: Specifies the internet service provider of the global internet bandwidth.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] size: Specifies the size of the global internet bandwidth.
               The value ranges from **300 Mbit/s** to **5000 Mbit/s** in normal.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the global internet bandwidth.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project id to which the global
               internet bandwidth belongs. Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] ingress_size: Specifies the ingress size of the global internet bandwidth.
               It's **not** used for charge mode **95peak_guar**.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the global internet bandwidth.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the tags of the global internet bandwidth.
        :param pulumi.Input[_builtins.str] type: Specifies the type of the global internet bandwidth.
        """
        pulumi.set(__self__, "access_site", access_site)
        pulumi.set(__self__, "charge_mode", charge_mode)
        pulumi.set(__self__, "isp", isp)
        pulumi.set(__self__, "size", size)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if ingress_size is not None:
            pulumi.set(__self__, "ingress_size", ingress_size)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter(name="accessSite")
    def access_site(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the access site name.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "access_site")

    @access_site.setter
    def access_site(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "access_site", value)

    @_builtins.property
    @pulumi.getter(name="chargeMode")
    def charge_mode(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the charge mode.
        Value can be as follows:
        + **bandwidth**: billed by bandwidth
        + **traffic**: billed by traffic
        + **95peak_plus_1000**: billed by enhanced 95
        + **95peak_bidirection**: billed by bidirectional traditional 95
        + **95peak_guar**: billed by traditional 95 with guaranteed minimum
        + **95peak_avr**: 95 peak average billing
        """
        return pulumi.get(self, "charge_mode")

    @charge_mode.setter
    def charge_mode(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "charge_mode", value)

    @_builtins.property
    @pulumi.getter
    def isp(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the internet service provider of the global internet bandwidth.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "isp")

    @isp.setter
    def isp(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "isp", value)

    @_builtins.property
    @pulumi.getter
    def size(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the size of the global internet bandwidth.
        The value ranges from **300 Mbit/s** to **5000 Mbit/s** in normal.
        """
        return pulumi.get(self, "size")

    @size.setter
    def size(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "size", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the global internet bandwidth.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project id to which the global
        internet bandwidth belongs. Changing this creates a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="ingressSize")
    def ingress_size(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the ingress size of the global internet bandwidth.
        It's **not** used for charge mode **95peak_guar**.
        """
        return pulumi.get(self, "ingress_size")

    @ingress_size.setter
    def ingress_size(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ingress_size", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the global internet bandwidth.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the tags of the global internet bandwidth.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the type of the global internet bandwidth.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class _InternetBandwidthState:
    def __init__(__self__, *,
                 access_site: Optional[pulumi.Input[_builtins.str]] = None,
                 charge_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 frozen_info: Optional[pulumi.Input[_builtins.str]] = None,
                 ingress_size: Optional[pulumi.Input[_builtins.int]] = None,
                 isp: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 ratio95peak: Optional[pulumi.Input[_builtins.int]] = None,
                 size: Optional[pulumi.Input[_builtins.int]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering InternetBandwidth resources.
        :param pulumi.Input[_builtins.str] access_site: Specifies the access site name.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] charge_mode: Specifies the charge mode.
               Value can be as follows:
               + **bandwidth**: billed by bandwidth
               + **traffic**: billed by traffic
               + **95peak_plus_1000**: billed by enhanced 95
               + **95peak_bidirection**: billed by bidirectional traditional 95
               + **95peak_guar**: billed by traditional 95 with guaranteed minimum
               + **95peak_avr**: 95 peak average billing
        :param pulumi.Input[_builtins.str] created_at: The create time of the global internet bandwidth.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the global internet bandwidth.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project id to which the global
               internet bandwidth belongs. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] frozen_info: The frozen info of the global internet bandwidth.
        :param pulumi.Input[_builtins.int] ingress_size: Specifies the ingress size of the global internet bandwidth.
               It's **not** used for charge mode **95peak_guar**.
        :param pulumi.Input[_builtins.str] isp: Specifies the internet service provider of the global internet bandwidth.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the global internet bandwidth.
        :param pulumi.Input[_builtins.int] ratio95peak: The enhanced 95% guaranteed rate of the global internet bandwidth.
        :param pulumi.Input[_builtins.int] size: Specifies the size of the global internet bandwidth.
               The value ranges from **300 Mbit/s** to **5000 Mbit/s** in normal.
        :param pulumi.Input[_builtins.str] status: The status of the global internet bandwidth.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the tags of the global internet bandwidth.
        :param pulumi.Input[_builtins.str] type: Specifies the type of the global internet bandwidth.
        :param pulumi.Input[_builtins.str] updated_at: The update time of the global internet bandwidth.
        """
        if access_site is not None:
            pulumi.set(__self__, "access_site", access_site)
        if charge_mode is not None:
            pulumi.set(__self__, "charge_mode", charge_mode)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if frozen_info is not None:
            pulumi.set(__self__, "frozen_info", frozen_info)
        if ingress_size is not None:
            pulumi.set(__self__, "ingress_size", ingress_size)
        if isp is not None:
            pulumi.set(__self__, "isp", isp)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if ratio95peak is not None:
            pulumi.set(__self__, "ratio95peak", ratio95peak)
        if size is not None:
            pulumi.set(__self__, "size", size)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="accessSite")
    def access_site(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the access site name.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "access_site")

    @access_site.setter
    def access_site(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "access_site", value)

    @_builtins.property
    @pulumi.getter(name="chargeMode")
    def charge_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the charge mode.
        Value can be as follows:
        + **bandwidth**: billed by bandwidth
        + **traffic**: billed by traffic
        + **95peak_plus_1000**: billed by enhanced 95
        + **95peak_bidirection**: billed by bidirectional traditional 95
        + **95peak_guar**: billed by traditional 95 with guaranteed minimum
        + **95peak_avr**: 95 peak average billing
        """
        return pulumi.get(self, "charge_mode")

    @charge_mode.setter
    def charge_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "charge_mode", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The create time of the global internet bandwidth.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the global internet bandwidth.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project id to which the global
        internet bandwidth belongs. Changing this creates a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="frozenInfo")
    def frozen_info(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The frozen info of the global internet bandwidth.
        """
        return pulumi.get(self, "frozen_info")

    @frozen_info.setter
    def frozen_info(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "frozen_info", value)

    @_builtins.property
    @pulumi.getter(name="ingressSize")
    def ingress_size(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the ingress size of the global internet bandwidth.
        It's **not** used for charge mode **95peak_guar**.
        """
        return pulumi.get(self, "ingress_size")

    @ingress_size.setter
    def ingress_size(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ingress_size", value)

    @_builtins.property
    @pulumi.getter
    def isp(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the internet service provider of the global internet bandwidth.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "isp")

    @isp.setter
    def isp(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "isp", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the global internet bandwidth.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def ratio95peak(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The enhanced 95% guaranteed rate of the global internet bandwidth.
        """
        return pulumi.get(self, "ratio95peak")

    @ratio95peak.setter
    def ratio95peak(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ratio95peak", value)

    @_builtins.property
    @pulumi.getter
    def size(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the size of the global internet bandwidth.
        The value ranges from **300 Mbit/s** to **5000 Mbit/s** in normal.
        """
        return pulumi.get(self, "size")

    @size.setter
    def size(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "size", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The status of the global internet bandwidth.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the tags of the global internet bandwidth.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the type of the global internet bandwidth.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The update time of the global internet bandwidth.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("huaweicloud:global/internetBandwidth:InternetBandwidth")
class InternetBandwidth(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 access_site: Optional[pulumi.Input[_builtins.str]] = None,
                 charge_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ingress_size: Optional[pulumi.Input[_builtins.int]] = None,
                 isp: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 size: Optional[pulumi.Input[_builtins.int]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a global internet bandwidth resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        enterprise_project_id = config.require_object("enterpriseProjectId")
        bandwidth_name = config.require_object("bandwidthName")
        all = huaweicloud.global.get_eip_pools()
        test = huaweicloud.global_.InternetBandwidth("test",
            access_site=all.geip_pools[0].access_site,
            charge_mode="95peak_guar",
            enterprise_project_id=enterprise_project_id,
            size=300,
            isp=all.geip_pools[0].isp,
            name=bandwidth_name,
            type=all.geip_pools[0].allowed_bandwidth_types[0].type,
            tags={
                "foo": "bar",
                "key": "value",
            })
        ```

        ## Import

        The global internet bandwidth can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:global/internetBandwidth:InternetBandwidth test <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] access_site: Specifies the access site name.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] charge_mode: Specifies the charge mode.
               Value can be as follows:
               + **bandwidth**: billed by bandwidth
               + **traffic**: billed by traffic
               + **95peak_plus_1000**: billed by enhanced 95
               + **95peak_bidirection**: billed by bidirectional traditional 95
               + **95peak_guar**: billed by traditional 95 with guaranteed minimum
               + **95peak_avr**: 95 peak average billing
        :param pulumi.Input[_builtins.str] description: Specifies the description of the global internet bandwidth.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project id to which the global
               internet bandwidth belongs. Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] ingress_size: Specifies the ingress size of the global internet bandwidth.
               It's **not** used for charge mode **95peak_guar**.
        :param pulumi.Input[_builtins.str] isp: Specifies the internet service provider of the global internet bandwidth.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the global internet bandwidth.
        :param pulumi.Input[_builtins.int] size: Specifies the size of the global internet bandwidth.
               The value ranges from **300 Mbit/s** to **5000 Mbit/s** in normal.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the tags of the global internet bandwidth.
        :param pulumi.Input[_builtins.str] type: Specifies the type of the global internet bandwidth.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: InternetBandwidthArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a global internet bandwidth resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        enterprise_project_id = config.require_object("enterpriseProjectId")
        bandwidth_name = config.require_object("bandwidthName")
        all = huaweicloud.global.get_eip_pools()
        test = huaweicloud.global_.InternetBandwidth("test",
            access_site=all.geip_pools[0].access_site,
            charge_mode="95peak_guar",
            enterprise_project_id=enterprise_project_id,
            size=300,
            isp=all.geip_pools[0].isp,
            name=bandwidth_name,
            type=all.geip_pools[0].allowed_bandwidth_types[0].type,
            tags={
                "foo": "bar",
                "key": "value",
            })
        ```

        ## Import

        The global internet bandwidth can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:global/internetBandwidth:InternetBandwidth test <id>
        ```

        :param str resource_name: The name of the resource.
        :param InternetBandwidthArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(InternetBandwidthArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 access_site: Optional[pulumi.Input[_builtins.str]] = None,
                 charge_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ingress_size: Optional[pulumi.Input[_builtins.int]] = None,
                 isp: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 size: Optional[pulumi.Input[_builtins.int]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = InternetBandwidthArgs.__new__(InternetBandwidthArgs)

            if access_site is None and not opts.urn:
                raise TypeError("Missing required property 'access_site'")
            __props__.__dict__["access_site"] = access_site
            if charge_mode is None and not opts.urn:
                raise TypeError("Missing required property 'charge_mode'")
            __props__.__dict__["charge_mode"] = charge_mode
            __props__.__dict__["description"] = description
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            __props__.__dict__["ingress_size"] = ingress_size
            if isp is None and not opts.urn:
                raise TypeError("Missing required property 'isp'")
            __props__.__dict__["isp"] = isp
            __props__.__dict__["name"] = name
            if size is None and not opts.urn:
                raise TypeError("Missing required property 'size'")
            __props__.__dict__["size"] = size
            __props__.__dict__["tags"] = tags
            __props__.__dict__["type"] = type
            __props__.__dict__["created_at"] = None
            __props__.__dict__["frozen_info"] = None
            __props__.__dict__["ratio95peak"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["updated_at"] = None
        super(InternetBandwidth, __self__).__init__(
            'huaweicloud:global/internetBandwidth:InternetBandwidth',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            access_site: Optional[pulumi.Input[_builtins.str]] = None,
            charge_mode: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            frozen_info: Optional[pulumi.Input[_builtins.str]] = None,
            ingress_size: Optional[pulumi.Input[_builtins.int]] = None,
            isp: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            ratio95peak: Optional[pulumi.Input[_builtins.int]] = None,
            size: Optional[pulumi.Input[_builtins.int]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            type: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'InternetBandwidth':
        """
        Get an existing InternetBandwidth resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] access_site: Specifies the access site name.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] charge_mode: Specifies the charge mode.
               Value can be as follows:
               + **bandwidth**: billed by bandwidth
               + **traffic**: billed by traffic
               + **95peak_plus_1000**: billed by enhanced 95
               + **95peak_bidirection**: billed by bidirectional traditional 95
               + **95peak_guar**: billed by traditional 95 with guaranteed minimum
               + **95peak_avr**: 95 peak average billing
        :param pulumi.Input[_builtins.str] created_at: The create time of the global internet bandwidth.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the global internet bandwidth.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project id to which the global
               internet bandwidth belongs. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] frozen_info: The frozen info of the global internet bandwidth.
        :param pulumi.Input[_builtins.int] ingress_size: Specifies the ingress size of the global internet bandwidth.
               It's **not** used for charge mode **95peak_guar**.
        :param pulumi.Input[_builtins.str] isp: Specifies the internet service provider of the global internet bandwidth.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the global internet bandwidth.
        :param pulumi.Input[_builtins.int] ratio95peak: The enhanced 95% guaranteed rate of the global internet bandwidth.
        :param pulumi.Input[_builtins.int] size: Specifies the size of the global internet bandwidth.
               The value ranges from **300 Mbit/s** to **5000 Mbit/s** in normal.
        :param pulumi.Input[_builtins.str] status: The status of the global internet bandwidth.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the tags of the global internet bandwidth.
        :param pulumi.Input[_builtins.str] type: Specifies the type of the global internet bandwidth.
        :param pulumi.Input[_builtins.str] updated_at: The update time of the global internet bandwidth.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _InternetBandwidthState.__new__(_InternetBandwidthState)

        __props__.__dict__["access_site"] = access_site
        __props__.__dict__["charge_mode"] = charge_mode
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["description"] = description
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["frozen_info"] = frozen_info
        __props__.__dict__["ingress_size"] = ingress_size
        __props__.__dict__["isp"] = isp
        __props__.__dict__["name"] = name
        __props__.__dict__["ratio95peak"] = ratio95peak
        __props__.__dict__["size"] = size
        __props__.__dict__["status"] = status
        __props__.__dict__["tags"] = tags
        __props__.__dict__["type"] = type
        __props__.__dict__["updated_at"] = updated_at
        return InternetBandwidth(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="accessSite")
    def access_site(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the access site name.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "access_site")

    @_builtins.property
    @pulumi.getter(name="chargeMode")
    def charge_mode(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the charge mode.
        Value can be as follows:
        + **bandwidth**: billed by bandwidth
        + **traffic**: billed by traffic
        + **95peak_plus_1000**: billed by enhanced 95
        + **95peak_bidirection**: billed by bidirectional traditional 95
        + **95peak_guar**: billed by traditional 95 with guaranteed minimum
        + **95peak_avr**: 95 peak average billing
        """
        return pulumi.get(self, "charge_mode")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The create time of the global internet bandwidth.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the description of the global internet bandwidth.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the enterprise project id to which the global
        internet bandwidth belongs. Changing this creates a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="frozenInfo")
    def frozen_info(self) -> pulumi.Output[_builtins.str]:
        """
        The frozen info of the global internet bandwidth.
        """
        return pulumi.get(self, "frozen_info")

    @_builtins.property
    @pulumi.getter(name="ingressSize")
    def ingress_size(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the ingress size of the global internet bandwidth.
        It's **not** used for charge mode **95peak_guar**.
        """
        return pulumi.get(self, "ingress_size")

    @_builtins.property
    @pulumi.getter
    def isp(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the internet service provider of the global internet bandwidth.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "isp")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of the global internet bandwidth.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def ratio95peak(self) -> pulumi.Output[_builtins.int]:
        """
        The enhanced 95% guaranteed rate of the global internet bandwidth.
        """
        return pulumi.get(self, "ratio95peak")

    @_builtins.property
    @pulumi.getter
    def size(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the size of the global internet bandwidth.
        The value ranges from **300 Mbit/s** to **5000 Mbit/s** in normal.
        """
        return pulumi.get(self, "size")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The status of the global internet bandwidth.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Mapping[str, _builtins.str]]:
        """
        Specifies the tags of the global internet bandwidth.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the type of the global internet bandwidth.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The update time of the global internet bandwidth.
        """
        return pulumi.get(self, "updated_at")

