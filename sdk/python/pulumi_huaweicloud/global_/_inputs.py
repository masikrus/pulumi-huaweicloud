# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'EipAssociateAssociateInstanceArgs',
    'EipAssociateAssociateInstanceArgsDict',
    'EipAssociateGcBandwidthArgs',
    'EipAssociateGcBandwidthArgsDict',
]

MYPY = False

if not MYPY:
    class EipAssociateAssociateInstanceArgsDict(TypedDict):
        instance_id: pulumi.Input[_builtins.str]
        """
        Specifies the instance ID.
        Changing this creates a new resource.
        """
        instance_type: pulumi.Input[_builtins.str]
        """
        Specifies the instance type. Valid values are **ECS**, **PORT**,
        **NATGW** and **ELB**. If value is **ECS** or **PORT**, make sure the VPC associating with an internet gateway.
        Changing this creates a new resource.
        """
        project_id: pulumi.Input[_builtins.str]
        """
        Specifies the project ID of the region.
        Changing this creates a new resource.
        """
        region: pulumi.Input[_builtins.str]
        """
        Specifies the region of the instance.
        Changing this creates a new resource.
        """
        service_id: NotRequired[pulumi.Input[_builtins.str]]
        """
        Specifies the service ID.
        Changing this creates a new resource.
        """
        service_type: NotRequired[pulumi.Input[_builtins.str]]
        """
        Specifies the service type.
        Changing this creates a new resource.

        <a name="block--gc_bandwidth"></a>
        The `gc_bandwidth` block supports:
        """
elif False:
    EipAssociateAssociateInstanceArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class EipAssociateAssociateInstanceArgs:
    def __init__(__self__, *,
                 instance_id: pulumi.Input[_builtins.str],
                 instance_type: pulumi.Input[_builtins.str],
                 project_id: pulumi.Input[_builtins.str],
                 region: pulumi.Input[_builtins.str],
                 service_id: Optional[pulumi.Input[_builtins.str]] = None,
                 service_type: Optional[pulumi.Input[_builtins.str]] = None):
        """
        :param pulumi.Input[_builtins.str] instance_id: Specifies the instance ID.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] instance_type: Specifies the instance type. Valid values are **ECS**, **PORT**,
               **NATGW** and **ELB**. If value is **ECS** or **PORT**, make sure the VPC associating with an internet gateway.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] project_id: Specifies the project ID of the region.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region of the instance.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] service_id: Specifies the service ID.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] service_type: Specifies the service type.
               Changing this creates a new resource.
               
               <a name="block--gc_bandwidth"></a>
               The `gc_bandwidth` block supports:
        """
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "instance_type", instance_type)
        pulumi.set(__self__, "project_id", project_id)
        pulumi.set(__self__, "region", region)
        if service_id is not None:
            pulumi.set(__self__, "service_id", service_id)
        if service_type is not None:
            pulumi.set(__self__, "service_type", service_type)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the instance ID.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="instanceType")
    def instance_type(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the instance type. Valid values are **ECS**, **PORT**,
        **NATGW** and **ELB**. If value is **ECS** or **PORT**, make sure the VPC associating with an internet gateway.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "instance_type")

    @instance_type.setter
    def instance_type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance_type", value)

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the project ID of the region.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "project_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the region of the instance.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the service ID.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "service_id")

    @service_id.setter
    def service_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "service_id", value)

    @_builtins.property
    @pulumi.getter(name="serviceType")
    def service_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the service type.
        Changing this creates a new resource.

        <a name="block--gc_bandwidth"></a>
        The `gc_bandwidth` block supports:
        """
        return pulumi.get(self, "service_type")

    @service_type.setter
    def service_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "service_type", value)


if not MYPY:
    class EipAssociateGcBandwidthArgsDict(TypedDict):
        charge_mode: NotRequired[pulumi.Input[_builtins.str]]
        """
        Specifies the GCB charge mode. When `gc_bandwidth.id` is empty, it is
        **Required** for creating a new GCB.

        Valid values are as follows:
        + **bwd**: Billed by bandwidth.
        + **95**: Billed by 95th percentile bandwidth.

        Changing this creates a new resource.
        """
        description: NotRequired[pulumi.Input[_builtins.str]]
        """
        Specifies the description of GCB.
        Changing this creates a new resource.
        """
        enterprise_project_id: NotRequired[pulumi.Input[_builtins.str]]
        """
        Specifies the enterprise project ID of GCB.
        Changing this creates a new resource.
        """
        id: NotRequired[pulumi.Input[_builtins.str]]
        """
        Specifies the GCB ID which is existing.
        Changing this creates a new resource.
        """
        name: NotRequired[pulumi.Input[_builtins.str]]
        """
        Specifies the GCB name. When `gc_bandwidth.id` is empty, it is **Required** for
        creating a new GCB. Changing this creates a new resource.
        """
        size: NotRequired[pulumi.Input[_builtins.int]]
        """
        Specifies the GCB size. When `gc_bandwidth.id` is empty, it is **Required** for
        creating a new GCB. If `gc_bandwidth.charge_mode` is **95**, the range is **100-300 Mbit/s**, otherwise, the range is
        **2-300 Mbit/s**. Changing this creates a new resource.
        """
        tags: NotRequired[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]
        """
        Specifies the tags of GCB.
        Changing this creates a new resource.
        """
elif False:
    EipAssociateGcBandwidthArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class EipAssociateGcBandwidthArgs:
    def __init__(__self__, *,
                 charge_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 size: Optional[pulumi.Input[_builtins.int]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None):
        """
        :param pulumi.Input[_builtins.str] charge_mode: Specifies the GCB charge mode. When `gc_bandwidth.id` is empty, it is
               **Required** for creating a new GCB.
               
               Valid values are as follows:
               + **bwd**: Billed by bandwidth.
               + **95**: Billed by 95th percentile bandwidth.
               
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of GCB.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID of GCB.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] id: Specifies the GCB ID which is existing.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the GCB name. When `gc_bandwidth.id` is empty, it is **Required** for
               creating a new GCB. Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] size: Specifies the GCB size. When `gc_bandwidth.id` is empty, it is **Required** for
               creating a new GCB. If `gc_bandwidth.charge_mode` is **95**, the range is **100-300 Mbit/s**, otherwise, the range is
               **2-300 Mbit/s**. Changing this creates a new resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the tags of GCB.
               Changing this creates a new resource.
        """
        if charge_mode is not None:
            pulumi.set(__self__, "charge_mode", charge_mode)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if size is not None:
            pulumi.set(__self__, "size", size)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="chargeMode")
    def charge_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the GCB charge mode. When `gc_bandwidth.id` is empty, it is
        **Required** for creating a new GCB.

        Valid values are as follows:
        + **bwd**: Billed by bandwidth.
        + **95**: Billed by 95th percentile bandwidth.

        Changing this creates a new resource.
        """
        return pulumi.get(self, "charge_mode")

    @charge_mode.setter
    def charge_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "charge_mode", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of GCB.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID of GCB.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the GCB ID which is existing.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the GCB name. When `gc_bandwidth.id` is empty, it is **Required** for
        creating a new GCB. Changing this creates a new resource.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def size(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the GCB size. When `gc_bandwidth.id` is empty, it is **Required** for
        creating a new GCB. If `gc_bandwidth.charge_mode` is **95**, the range is **100-300 Mbit/s**, otherwise, the range is
        **2-300 Mbit/s**. Changing this creates a new resource.
        """
        return pulumi.get(self, "size")

    @size.setter
    def size(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "size", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the tags of GCB.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)


