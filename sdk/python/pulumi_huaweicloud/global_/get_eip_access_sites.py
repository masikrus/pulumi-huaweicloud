# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetEipAccessSitesResult',
    'AwaitableGetEipAccessSitesResult',
    'get_eip_access_sites',
    'get_eip_access_sites_output',
]

@pulumi.output_type
class GetEipAccessSitesResult:
    """
    A collection of values returned by getEipAccessSites.
    """
    def __init__(__self__, access_sites=None, id=None, iec_az_code=None, name=None, proxy_region=None):
        if access_sites and not isinstance(access_sites, list):
            raise TypeError("Expected argument 'access_sites' to be a list")
        pulumi.set(__self__, "access_sites", access_sites)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if iec_az_code and not isinstance(iec_az_code, str):
            raise TypeError("Expected argument 'iec_az_code' to be a str")
        pulumi.set(__self__, "iec_az_code", iec_az_code)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if proxy_region and not isinstance(proxy_region, str):
            raise TypeError("Expected argument 'proxy_region' to be a str")
        pulumi.set(__self__, "proxy_region", proxy_region)

    @_builtins.property
    @pulumi.getter(name="accessSites")
    def access_sites(self) -> Sequence['outputs.GetEipAccessSitesAccessSiteResult']:
        """
        The access sites list.
        The access_sites structure is documented below.
        """
        return pulumi.get(self, "access_sites")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="iecAzCode")
    def iec_az_code(self) -> Optional[_builtins.str]:
        """
        The availability zone code of the edge site
        """
        return pulumi.get(self, "iec_az_code")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The name of the access site.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="proxyRegion")
    def proxy_region(self) -> Optional[_builtins.str]:
        """
        The region ID where the pop site is hosted.
        """
        return pulumi.get(self, "proxy_region")


class AwaitableGetEipAccessSitesResult(GetEipAccessSitesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetEipAccessSitesResult(
            access_sites=self.access_sites,
            id=self.id,
            iec_az_code=self.iec_az_code,
            name=self.name,
            proxy_region=self.proxy_region)


def get_eip_access_sites(iec_az_code: Optional[_builtins.str] = None,
                         name: Optional[_builtins.str] = None,
                         proxy_region: Optional[_builtins.str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetEipAccessSitesResult:
    """
    Use this data source to get a list of global EIP access sites.

    ## Example Usage

    ### Get all global EIP access sites

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    all = huaweicloud.global.get_eip_access_sites()
    ```

    ### Get specific global EIP access sites through proxy region

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.global.get_eip_access_sites(proxy_region="cn-south-1")
    ```


    :param _builtins.str iec_az_code: Specifies the availability zone code of the edge site.
    :param _builtins.str name: Specifies the name of the access sites.
    :param _builtins.str proxy_region: Specifies the region ID where the pop site is hosted.
    """
    __args__ = dict()
    __args__['iecAzCode'] = iec_az_code
    __args__['name'] = name
    __args__['proxyRegion'] = proxy_region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:global/getEipAccessSites:getEipAccessSites', __args__, opts=opts, typ=GetEipAccessSitesResult).value

    return AwaitableGetEipAccessSitesResult(
        access_sites=pulumi.get(__ret__, 'access_sites'),
        id=pulumi.get(__ret__, 'id'),
        iec_az_code=pulumi.get(__ret__, 'iec_az_code'),
        name=pulumi.get(__ret__, 'name'),
        proxy_region=pulumi.get(__ret__, 'proxy_region'))
def get_eip_access_sites_output(iec_az_code: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                proxy_region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetEipAccessSitesResult]:
    """
    Use this data source to get a list of global EIP access sites.

    ## Example Usage

    ### Get all global EIP access sites

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    all = huaweicloud.global.get_eip_access_sites()
    ```

    ### Get specific global EIP access sites through proxy region

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.global.get_eip_access_sites(proxy_region="cn-south-1")
    ```


    :param _builtins.str iec_az_code: Specifies the availability zone code of the edge site.
    :param _builtins.str name: Specifies the name of the access sites.
    :param _builtins.str proxy_region: Specifies the region ID where the pop site is hosted.
    """
    __args__ = dict()
    __args__['iecAzCode'] = iec_az_code
    __args__['name'] = name
    __args__['proxyRegion'] = proxy_region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:global/getEipAccessSites:getEipAccessSites', __args__, opts=opts, typ=GetEipAccessSitesResult)
    return __ret__.apply(lambda __response__: GetEipAccessSitesResult(
        access_sites=pulumi.get(__response__, 'access_sites'),
        id=pulumi.get(__response__, 'id'),
        iec_az_code=pulumi.get(__response__, 'iec_az_code'),
        name=pulumi.get(__response__, 'name'),
        proxy_region=pulumi.get(__response__, 'proxy_region')))
