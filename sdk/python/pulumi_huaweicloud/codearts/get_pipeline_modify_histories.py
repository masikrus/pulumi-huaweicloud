# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetPipelineModifyHistoriesResult',
    'AwaitableGetPipelineModifyHistoriesResult',
    'get_pipeline_modify_histories',
    'get_pipeline_modify_histories_output',
]

@pulumi.output_type
class GetPipelineModifyHistoriesResult:
    """
    A collection of values returned by getPipelineModifyHistories.
    """
    def __init__(__self__, histories=None, id=None, pipeline_id=None, project_id=None, region=None):
        if histories and not isinstance(histories, list):
            raise TypeError("Expected argument 'histories' to be a list")
        pulumi.set(__self__, "histories", histories)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if pipeline_id and not isinstance(pipeline_id, str):
            raise TypeError("Expected argument 'pipeline_id' to be a str")
        pulumi.set(__self__, "pipeline_id", pipeline_id)
        if project_id and not isinstance(project_id, str):
            raise TypeError("Expected argument 'project_id' to be a str")
        pulumi.set(__self__, "project_id", project_id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter
    def histories(self) -> Sequence['outputs.GetPipelineModifyHistoriesHistoryResult']:
        """
        Indicates the history list.
        The histories structure is documented below.
        """
        return pulumi.get(self, "histories")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="pipelineId")
    def pipeline_id(self) -> _builtins.str:
        return pulumi.get(self, "pipeline_id")

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> _builtins.str:
        return pulumi.get(self, "project_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetPipelineModifyHistoriesResult(GetPipelineModifyHistoriesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPipelineModifyHistoriesResult(
            histories=self.histories,
            id=self.id,
            pipeline_id=self.pipeline_id,
            project_id=self.project_id,
            region=self.region)


def get_pipeline_modify_histories(pipeline_id: Optional[_builtins.str] = None,
                                  project_id: Optional[_builtins.str] = None,
                                  region: Optional[_builtins.str] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPipelineModifyHistoriesResult:
    """
    Use this data source to get a list of CodeArts pipeline modify histories.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    codearts_project_id = config.require_object("codeartsProjectId")
    pipeline_id = config.require_object("pipelineId")
    test = huaweicloud.codearts.get_pipeline_modify_histories(project_id=codearts_project_id,
        pipeline_id=pipeline_id)
    ```


    :param _builtins.str pipeline_id: Specifies the pipeline ID.
    :param _builtins.str project_id: Specifies the CodeArts project ID.
    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['pipelineId'] = pipeline_id
    __args__['projectId'] = project_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:codearts/getPipelineModifyHistories:getPipelineModifyHistories', __args__, opts=opts, typ=GetPipelineModifyHistoriesResult).value

    return AwaitableGetPipelineModifyHistoriesResult(
        histories=pulumi.get(__ret__, 'histories'),
        id=pulumi.get(__ret__, 'id'),
        pipeline_id=pulumi.get(__ret__, 'pipeline_id'),
        project_id=pulumi.get(__ret__, 'project_id'),
        region=pulumi.get(__ret__, 'region'))
def get_pipeline_modify_histories_output(pipeline_id: Optional[pulumi.Input[_builtins.str]] = None,
                                         project_id: Optional[pulumi.Input[_builtins.str]] = None,
                                         region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                         opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetPipelineModifyHistoriesResult]:
    """
    Use this data source to get a list of CodeArts pipeline modify histories.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    codearts_project_id = config.require_object("codeartsProjectId")
    pipeline_id = config.require_object("pipelineId")
    test = huaweicloud.codearts.get_pipeline_modify_histories(project_id=codearts_project_id,
        pipeline_id=pipeline_id)
    ```


    :param _builtins.str pipeline_id: Specifies the pipeline ID.
    :param _builtins.str project_id: Specifies the CodeArts project ID.
    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['pipelineId'] = pipeline_id
    __args__['projectId'] = project_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:codearts/getPipelineModifyHistories:getPipelineModifyHistories', __args__, opts=opts, typ=GetPipelineModifyHistoriesResult)
    return __ret__.apply(lambda __response__: GetPipelineModifyHistoriesResult(
        histories=pulumi.get(__response__, 'histories'),
        id=pulumi.get(__response__, 'id'),
        pipeline_id=pulumi.get(__response__, 'pipeline_id'),
        project_id=pulumi.get(__response__, 'project_id'),
        region=pulumi.get(__response__, 'region')))
