# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['DeployHostArgs', 'DeployHost']

@pulumi.input_type
class DeployHostArgs:
    def __init__(__self__, *,
                 group_id: pulumi.Input[_builtins.str],
                 ip_address: pulumi.Input[_builtins.str],
                 os_type: pulumi.Input[_builtins.str],
                 port: pulumi.Input[_builtins.int],
                 username: pulumi.Input[_builtins.str],
                 as_proxy: Optional[pulumi.Input[_builtins.bool]] = None,
                 install_icagent: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 password: Optional[pulumi.Input[_builtins.str]] = None,
                 private_key: Optional[pulumi.Input[_builtins.str]] = None,
                 proxy_host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 sync: Optional[pulumi.Input[_builtins.bool]] = None):
        """
        The set of arguments for constructing a DeployHost resource.
        :param pulumi.Input[_builtins.str] group_id: Specifies the CodeArts deploy group ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] ip_address: Specifies the IP address of your server.
               + When creating a proxy host, only public IPv4 addresses are supported.
               + When creating a target host with proxy access mode, both public and private IPv4 addresses are supported.
               + When creating a target host without proxy access mode, only public IPv4 addresses are supported.
        :param pulumi.Input[_builtins.str] os_type: Specifies the operating system. Valid values are **windows** and **linux**.
               The value must be consistent with the CodeArts deploy group.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] port: Specifies the SSH port of your server. The value ranges from `1` to `65,535`.
        :param pulumi.Input[_builtins.str] username: Specifies the username of your server.
        :param pulumi.Input[_builtins.bool] as_proxy: Specifies whether the host is an agent host. Defaults to **false**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] install_icagent: Specifies whether to enable Application Operations Management (AOM) for free
               to provide metric monitoring, log query and alarm functions. Defaults to **false**.
        :param pulumi.Input[_builtins.str] name: Specifies the host name. The name consists of 3 to 128 characters, including letters,
               digits, chinese characters or `-_.` symbols.
        :param pulumi.Input[_builtins.str] password: Specifies the password of your server.
        :param pulumi.Input[_builtins.str] private_key: Specifies the private key of your server.
               
               > The parameter `username`, `password` and `private_key` are used for login authentication. At least one of
               `private_key` and `password` must be set. And the field `private_key` and `password` can not be set together.
        :param pulumi.Input[_builtins.str] proxy_host_id: Specifies the proxy host ID. A proxy host ID can be assigned to multiple target
               hosts. This field is required only when creating a target host with proxy access mode.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] sync: Specifies whether to synchronize the password of the current host to the hosts with the
               same IP address, username and port number in other group in the same project. Defaults to **false**.
        """
        pulumi.set(__self__, "group_id", group_id)
        pulumi.set(__self__, "ip_address", ip_address)
        pulumi.set(__self__, "os_type", os_type)
        pulumi.set(__self__, "port", port)
        pulumi.set(__self__, "username", username)
        if as_proxy is not None:
            pulumi.set(__self__, "as_proxy", as_proxy)
        if install_icagent is not None:
            pulumi.set(__self__, "install_icagent", install_icagent)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if password is not None:
            pulumi.set(__self__, "password", password)
        if private_key is not None:
            pulumi.set(__self__, "private_key", private_key)
        if proxy_host_id is not None:
            pulumi.set(__self__, "proxy_host_id", proxy_host_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if sync is not None:
            pulumi.set(__self__, "sync", sync)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the CodeArts deploy group ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the IP address of your server.
        + When creating a proxy host, only public IPv4 addresses are supported.
        + When creating a target host with proxy access mode, both public and private IPv4 addresses are supported.
        + When creating a target host without proxy access mode, only public IPv4 addresses are supported.
        """
        return pulumi.get(self, "ip_address")

    @ip_address.setter
    def ip_address(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "ip_address", value)

    @_builtins.property
    @pulumi.getter(name="osType")
    def os_type(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the operating system. Valid values are **windows** and **linux**.
        The value must be consistent with the CodeArts deploy group.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "os_type")

    @os_type.setter
    def os_type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "os_type", value)

    @_builtins.property
    @pulumi.getter
    def port(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the SSH port of your server. The value ranges from `1` to `65,535`.
        """
        return pulumi.get(self, "port")

    @port.setter
    def port(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "port", value)

    @_builtins.property
    @pulumi.getter
    def username(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the username of your server.
        """
        return pulumi.get(self, "username")

    @username.setter
    def username(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "username", value)

    @_builtins.property
    @pulumi.getter(name="asProxy")
    def as_proxy(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether the host is an agent host. Defaults to **false**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "as_proxy")

    @as_proxy.setter
    def as_proxy(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "as_proxy", value)

    @_builtins.property
    @pulumi.getter(name="installIcagent")
    def install_icagent(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to enable Application Operations Management (AOM) for free
        to provide metric monitoring, log query and alarm functions. Defaults to **false**.
        """
        return pulumi.get(self, "install_icagent")

    @install_icagent.setter
    def install_icagent(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "install_icagent", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the host name. The name consists of 3 to 128 characters, including letters,
        digits, chinese characters or `-_.` symbols.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def password(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the password of your server.
        """
        return pulumi.get(self, "password")

    @password.setter
    def password(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "password", value)

    @_builtins.property
    @pulumi.getter(name="privateKey")
    def private_key(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the private key of your server.

        > The parameter `username`, `password` and `private_key` are used for login authentication. At least one of
        `private_key` and `password` must be set. And the field `private_key` and `password` can not be set together.
        """
        return pulumi.get(self, "private_key")

    @private_key.setter
    def private_key(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "private_key", value)

    @_builtins.property
    @pulumi.getter(name="proxyHostId")
    def proxy_host_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the proxy host ID. A proxy host ID can be assigned to multiple target
        hosts. This field is required only when creating a target host with proxy access mode.
        """
        return pulumi.get(self, "proxy_host_id")

    @proxy_host_id.setter
    def proxy_host_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "proxy_host_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def sync(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to synchronize the password of the current host to the hosts with the
        same IP address, username and port number in other group in the same project. Defaults to **false**.
        """
        return pulumi.get(self, "sync")

    @sync.setter
    def sync(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "sync", value)


@pulumi.input_type
class _DeployHostState:
    def __init__(__self__, *,
                 as_proxy: Optional[pulumi.Input[_builtins.bool]] = None,
                 connection_status: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 install_icagent: Optional[pulumi.Input[_builtins.bool]] = None,
                 ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 lastest_connection_at: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 os_type: Optional[pulumi.Input[_builtins.str]] = None,
                 password: Optional[pulumi.Input[_builtins.str]] = None,
                 permissions: Optional[pulumi.Input[Sequence[pulumi.Input['DeployHostPermissionArgs']]]] = None,
                 port: Optional[pulumi.Input[_builtins.int]] = None,
                 private_key: Optional[pulumi.Input[_builtins.str]] = None,
                 proxy_host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 sync: Optional[pulumi.Input[_builtins.bool]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 username: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering DeployHost resources.
        :param pulumi.Input[_builtins.bool] as_proxy: Specifies whether the host is an agent host. Defaults to **false**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] connection_status: The connection status. Valid values are **success**, **failed** and **pending**.
        :param pulumi.Input[_builtins.str] created_at: The create time.
        :param pulumi.Input[_builtins.str] group_id: Specifies the CodeArts deploy group ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] install_icagent: Specifies whether to enable Application Operations Management (AOM) for free
               to provide metric monitoring, log query and alarm functions. Defaults to **false**.
        :param pulumi.Input[_builtins.str] ip_address: Specifies the IP address of your server.
               + When creating a proxy host, only public IPv4 addresses are supported.
               + When creating a target host with proxy access mode, both public and private IPv4 addresses are supported.
               + When creating a target host without proxy access mode, only public IPv4 addresses are supported.
        :param pulumi.Input[_builtins.str] lastest_connection_at: The last connection time.
        :param pulumi.Input[_builtins.str] name: Specifies the host name. The name consists of 3 to 128 characters, including letters,
               digits, chinese characters or `-_.` symbols.
        :param pulumi.Input[_builtins.str] os_type: Specifies the operating system. Valid values are **windows** and **linux**.
               The value must be consistent with the CodeArts deploy group.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] password: Specifies the password of your server.
        :param pulumi.Input[Sequence[pulumi.Input['DeployHostPermissionArgs']]] permissions: The host permission detail.
               The permission structure is documented below.
        :param pulumi.Input[_builtins.int] port: Specifies the SSH port of your server. The value ranges from `1` to `65,535`.
        :param pulumi.Input[_builtins.str] private_key: Specifies the private key of your server.
               
               > The parameter `username`, `password` and `private_key` are used for login authentication. At least one of
               `private_key` and `password` must be set. And the field `private_key` and `password` can not be set together.
        :param pulumi.Input[_builtins.str] proxy_host_id: Specifies the proxy host ID. A proxy host ID can be assigned to multiple target
               hosts. This field is required only when creating a target host with proxy access mode.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] sync: Specifies whether to synchronize the password of the current host to the hosts with the
               same IP address, username and port number in other group in the same project. Defaults to **false**.
        :param pulumi.Input[_builtins.str] updated_at: The update time.
        :param pulumi.Input[_builtins.str] username: Specifies the username of your server.
        """
        if as_proxy is not None:
            pulumi.set(__self__, "as_proxy", as_proxy)
        if connection_status is not None:
            pulumi.set(__self__, "connection_status", connection_status)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if group_id is not None:
            pulumi.set(__self__, "group_id", group_id)
        if install_icagent is not None:
            pulumi.set(__self__, "install_icagent", install_icagent)
        if ip_address is not None:
            pulumi.set(__self__, "ip_address", ip_address)
        if lastest_connection_at is not None:
            pulumi.set(__self__, "lastest_connection_at", lastest_connection_at)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if os_type is not None:
            pulumi.set(__self__, "os_type", os_type)
        if password is not None:
            pulumi.set(__self__, "password", password)
        if permissions is not None:
            pulumi.set(__self__, "permissions", permissions)
        if port is not None:
            pulumi.set(__self__, "port", port)
        if private_key is not None:
            pulumi.set(__self__, "private_key", private_key)
        if proxy_host_id is not None:
            pulumi.set(__self__, "proxy_host_id", proxy_host_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if sync is not None:
            pulumi.set(__self__, "sync", sync)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if username is not None:
            pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter(name="asProxy")
    def as_proxy(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether the host is an agent host. Defaults to **false**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "as_proxy")

    @as_proxy.setter
    def as_proxy(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "as_proxy", value)

    @_builtins.property
    @pulumi.getter(name="connectionStatus")
    def connection_status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The connection status. Valid values are **success**, **failed** and **pending**.
        """
        return pulumi.get(self, "connection_status")

    @connection_status.setter
    def connection_status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "connection_status", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The create time.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the CodeArts deploy group ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter(name="installIcagent")
    def install_icagent(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to enable Application Operations Management (AOM) for free
        to provide metric monitoring, log query and alarm functions. Defaults to **false**.
        """
        return pulumi.get(self, "install_icagent")

    @install_icagent.setter
    def install_icagent(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "install_icagent", value)

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the IP address of your server.
        + When creating a proxy host, only public IPv4 addresses are supported.
        + When creating a target host with proxy access mode, both public and private IPv4 addresses are supported.
        + When creating a target host without proxy access mode, only public IPv4 addresses are supported.
        """
        return pulumi.get(self, "ip_address")

    @ip_address.setter
    def ip_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ip_address", value)

    @_builtins.property
    @pulumi.getter(name="lastestConnectionAt")
    def lastest_connection_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The last connection time.
        """
        return pulumi.get(self, "lastest_connection_at")

    @lastest_connection_at.setter
    def lastest_connection_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "lastest_connection_at", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the host name. The name consists of 3 to 128 characters, including letters,
        digits, chinese characters or `-_.` symbols.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="osType")
    def os_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the operating system. Valid values are **windows** and **linux**.
        The value must be consistent with the CodeArts deploy group.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "os_type")

    @os_type.setter
    def os_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "os_type", value)

    @_builtins.property
    @pulumi.getter
    def password(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the password of your server.
        """
        return pulumi.get(self, "password")

    @password.setter
    def password(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "password", value)

    @_builtins.property
    @pulumi.getter
    def permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DeployHostPermissionArgs']]]]:
        """
        The host permission detail.
        The permission structure is documented below.
        """
        return pulumi.get(self, "permissions")

    @permissions.setter
    def permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DeployHostPermissionArgs']]]]):
        pulumi.set(self, "permissions", value)

    @_builtins.property
    @pulumi.getter
    def port(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the SSH port of your server. The value ranges from `1` to `65,535`.
        """
        return pulumi.get(self, "port")

    @port.setter
    def port(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "port", value)

    @_builtins.property
    @pulumi.getter(name="privateKey")
    def private_key(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the private key of your server.

        > The parameter `username`, `password` and `private_key` are used for login authentication. At least one of
        `private_key` and `password` must be set. And the field `private_key` and `password` can not be set together.
        """
        return pulumi.get(self, "private_key")

    @private_key.setter
    def private_key(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "private_key", value)

    @_builtins.property
    @pulumi.getter(name="proxyHostId")
    def proxy_host_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the proxy host ID. A proxy host ID can be assigned to multiple target
        hosts. This field is required only when creating a target host with proxy access mode.
        """
        return pulumi.get(self, "proxy_host_id")

    @proxy_host_id.setter
    def proxy_host_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "proxy_host_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def sync(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to synchronize the password of the current host to the hosts with the
        same IP address, username and port number in other group in the same project. Defaults to **false**.
        """
        return pulumi.get(self, "sync")

    @sync.setter
    def sync(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "sync", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The update time.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter
    def username(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the username of your server.
        """
        return pulumi.get(self, "username")

    @username.setter
    def username(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "username", value)


@pulumi.type_token("huaweicloud:codearts/deployHost:DeployHost")
class DeployHost(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 as_proxy: Optional[pulumi.Input[_builtins.bool]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 install_icagent: Optional[pulumi.Input[_builtins.bool]] = None,
                 ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 os_type: Optional[pulumi.Input[_builtins.str]] = None,
                 password: Optional[pulumi.Input[_builtins.str]] = None,
                 port: Optional[pulumi.Input[_builtins.int]] = None,
                 private_key: Optional[pulumi.Input[_builtins.str]] = None,
                 proxy_host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 sync: Optional[pulumi.Input[_builtins.bool]] = None,
                 username: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a CodeArts deploy host resource within HuaweiCloud.

        > The servers need to be prepared first. Please refer to the following documents to complete your server configuration:
        [Preparations](https://support.huaweicloud.com/intl/en-us/usermanual-deployman/deployman_hlp_0018.html),
        [Security Configuration](https://support.huaweicloud.com/intl/en-us/usermanual-deployman/deployman_hlp_1103.html),
        [Target Host Configuration](https://support.huaweicloud.com/intl/en-us/usermanual-deployman/deployman_hlp_1101.html) and
        [Proxy Host Configuring](https://support.huaweicloud.com/intl/en-us/usermanual-deployman/deployman_hlp_1102.html).

        ## Example Usage

        ### Creating a proxy host

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        group_id = config.require_object("groupId")
        group_os_type = config.require_object("groupOsType")
        ip_address = config.require_object("ipAddress")
        port = config.require_object("port")
        username = config.require_object("username")
        password = config.require_object("password")
        test = huaweicloud.codearts.DeployHost("test",
            group_id=group_id,
            ip_address=ip_address,
            port=port,
            username=username,
            password=password,
            os_type=group_os_type,
            name="test_proxy_host",
            as_proxy=True)
        ```

        ### Creating a target host with proxy access mode

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        group_id = config.require_object("groupId")
        group_os_type = config.require_object("groupOsType")
        ip_address = config.require_object("ipAddress")
        port = config.require_object("port")
        username = config.require_object("username")
        password = config.require_object("password")
        proxy_host_id = config.require_object("proxyHostId")
        test = huaweicloud.codearts.DeployHost("test",
            group_id=group_id,
            ip_address=ip_address,
            port=port,
            username=username,
            password=password,
            os_type=group_os_type,
            proxy_host_id=proxy_host_id,
            name="test_hostname")
        ```

        ### Creating a target host without proxy access mode

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        group_id = config.require_object("groupId")
        group_os_type = config.require_object("groupOsType")
        ip_address = config.require_object("ipAddress")
        port = config.require_object("port")
        username = config.require_object("username")
        password = config.require_object("password")
        test = huaweicloud.codearts.DeployHost("test",
            group_id=group_id,
            ip_address=ip_address,
            port=port,
            username=username,
            password=password,
            os_type=group_os_type,
            name="test_hostname")
        ```

        ## Import

        The CodeArts deploy host resource can be imported using `group_id` and `id`, separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:codearts/deployHost:DeployHost test <group_id>/<id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `password`, `private_key`, `install_icagent`

        and `sync`. It is generally recommended running `pulumi preview` after importing a resource.

        You can then decide if changes should be applied to the resource, or the resource definition should be updated to align

        with the resource. Also, you can ignore changes as below.

        hcl

        resource "huaweicloud_codearts_deploy_host" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              password,
            
              private_key,
            
              install_icagent,
            
              sync,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.bool] as_proxy: Specifies whether the host is an agent host. Defaults to **false**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] group_id: Specifies the CodeArts deploy group ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] install_icagent: Specifies whether to enable Application Operations Management (AOM) for free
               to provide metric monitoring, log query and alarm functions. Defaults to **false**.
        :param pulumi.Input[_builtins.str] ip_address: Specifies the IP address of your server.
               + When creating a proxy host, only public IPv4 addresses are supported.
               + When creating a target host with proxy access mode, both public and private IPv4 addresses are supported.
               + When creating a target host without proxy access mode, only public IPv4 addresses are supported.
        :param pulumi.Input[_builtins.str] name: Specifies the host name. The name consists of 3 to 128 characters, including letters,
               digits, chinese characters or `-_.` symbols.
        :param pulumi.Input[_builtins.str] os_type: Specifies the operating system. Valid values are **windows** and **linux**.
               The value must be consistent with the CodeArts deploy group.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] password: Specifies the password of your server.
        :param pulumi.Input[_builtins.int] port: Specifies the SSH port of your server. The value ranges from `1` to `65,535`.
        :param pulumi.Input[_builtins.str] private_key: Specifies the private key of your server.
               
               > The parameter `username`, `password` and `private_key` are used for login authentication. At least one of
               `private_key` and `password` must be set. And the field `private_key` and `password` can not be set together.
        :param pulumi.Input[_builtins.str] proxy_host_id: Specifies the proxy host ID. A proxy host ID can be assigned to multiple target
               hosts. This field is required only when creating a target host with proxy access mode.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] sync: Specifies whether to synchronize the password of the current host to the hosts with the
               same IP address, username and port number in other group in the same project. Defaults to **false**.
        :param pulumi.Input[_builtins.str] username: Specifies the username of your server.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: DeployHostArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a CodeArts deploy host resource within HuaweiCloud.

        > The servers need to be prepared first. Please refer to the following documents to complete your server configuration:
        [Preparations](https://support.huaweicloud.com/intl/en-us/usermanual-deployman/deployman_hlp_0018.html),
        [Security Configuration](https://support.huaweicloud.com/intl/en-us/usermanual-deployman/deployman_hlp_1103.html),
        [Target Host Configuration](https://support.huaweicloud.com/intl/en-us/usermanual-deployman/deployman_hlp_1101.html) and
        [Proxy Host Configuring](https://support.huaweicloud.com/intl/en-us/usermanual-deployman/deployman_hlp_1102.html).

        ## Example Usage

        ### Creating a proxy host

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        group_id = config.require_object("groupId")
        group_os_type = config.require_object("groupOsType")
        ip_address = config.require_object("ipAddress")
        port = config.require_object("port")
        username = config.require_object("username")
        password = config.require_object("password")
        test = huaweicloud.codearts.DeployHost("test",
            group_id=group_id,
            ip_address=ip_address,
            port=port,
            username=username,
            password=password,
            os_type=group_os_type,
            name="test_proxy_host",
            as_proxy=True)
        ```

        ### Creating a target host with proxy access mode

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        group_id = config.require_object("groupId")
        group_os_type = config.require_object("groupOsType")
        ip_address = config.require_object("ipAddress")
        port = config.require_object("port")
        username = config.require_object("username")
        password = config.require_object("password")
        proxy_host_id = config.require_object("proxyHostId")
        test = huaweicloud.codearts.DeployHost("test",
            group_id=group_id,
            ip_address=ip_address,
            port=port,
            username=username,
            password=password,
            os_type=group_os_type,
            proxy_host_id=proxy_host_id,
            name="test_hostname")
        ```

        ### Creating a target host without proxy access mode

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        group_id = config.require_object("groupId")
        group_os_type = config.require_object("groupOsType")
        ip_address = config.require_object("ipAddress")
        port = config.require_object("port")
        username = config.require_object("username")
        password = config.require_object("password")
        test = huaweicloud.codearts.DeployHost("test",
            group_id=group_id,
            ip_address=ip_address,
            port=port,
            username=username,
            password=password,
            os_type=group_os_type,
            name="test_hostname")
        ```

        ## Import

        The CodeArts deploy host resource can be imported using `group_id` and `id`, separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:codearts/deployHost:DeployHost test <group_id>/<id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `password`, `private_key`, `install_icagent`

        and `sync`. It is generally recommended running `pulumi preview` after importing a resource.

        You can then decide if changes should be applied to the resource, or the resource definition should be updated to align

        with the resource. Also, you can ignore changes as below.

        hcl

        resource "huaweicloud_codearts_deploy_host" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              password,
            
              private_key,
            
              install_icagent,
            
              sync,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param DeployHostArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(DeployHostArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 as_proxy: Optional[pulumi.Input[_builtins.bool]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 install_icagent: Optional[pulumi.Input[_builtins.bool]] = None,
                 ip_address: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 os_type: Optional[pulumi.Input[_builtins.str]] = None,
                 password: Optional[pulumi.Input[_builtins.str]] = None,
                 port: Optional[pulumi.Input[_builtins.int]] = None,
                 private_key: Optional[pulumi.Input[_builtins.str]] = None,
                 proxy_host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 sync: Optional[pulumi.Input[_builtins.bool]] = None,
                 username: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = DeployHostArgs.__new__(DeployHostArgs)

            __props__.__dict__["as_proxy"] = as_proxy
            if group_id is None and not opts.urn:
                raise TypeError("Missing required property 'group_id'")
            __props__.__dict__["group_id"] = group_id
            __props__.__dict__["install_icagent"] = install_icagent
            if ip_address is None and not opts.urn:
                raise TypeError("Missing required property 'ip_address'")
            __props__.__dict__["ip_address"] = ip_address
            __props__.__dict__["name"] = name
            if os_type is None and not opts.urn:
                raise TypeError("Missing required property 'os_type'")
            __props__.__dict__["os_type"] = os_type
            __props__.__dict__["password"] = None if password is None else pulumi.Output.secret(password)
            if port is None and not opts.urn:
                raise TypeError("Missing required property 'port'")
            __props__.__dict__["port"] = port
            __props__.__dict__["private_key"] = None if private_key is None else pulumi.Output.secret(private_key)
            __props__.__dict__["proxy_host_id"] = proxy_host_id
            __props__.__dict__["region"] = region
            __props__.__dict__["sync"] = sync
            if username is None and not opts.urn:
                raise TypeError("Missing required property 'username'")
            __props__.__dict__["username"] = username
            __props__.__dict__["connection_status"] = None
            __props__.__dict__["created_at"] = None
            __props__.__dict__["lastest_connection_at"] = None
            __props__.__dict__["permissions"] = None
            __props__.__dict__["updated_at"] = None
        secret_opts = pulumi.ResourceOptions(additional_secret_outputs=["password", "privateKey"])
        opts = pulumi.ResourceOptions.merge(opts, secret_opts)
        super(DeployHost, __self__).__init__(
            'huaweicloud:codearts/deployHost:DeployHost',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            as_proxy: Optional[pulumi.Input[_builtins.bool]] = None,
            connection_status: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            group_id: Optional[pulumi.Input[_builtins.str]] = None,
            install_icagent: Optional[pulumi.Input[_builtins.bool]] = None,
            ip_address: Optional[pulumi.Input[_builtins.str]] = None,
            lastest_connection_at: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            os_type: Optional[pulumi.Input[_builtins.str]] = None,
            password: Optional[pulumi.Input[_builtins.str]] = None,
            permissions: Optional[pulumi.Input[Sequence[pulumi.Input[Union['DeployHostPermissionArgs', 'DeployHostPermissionArgsDict']]]]] = None,
            port: Optional[pulumi.Input[_builtins.int]] = None,
            private_key: Optional[pulumi.Input[_builtins.str]] = None,
            proxy_host_id: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            sync: Optional[pulumi.Input[_builtins.bool]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            username: Optional[pulumi.Input[_builtins.str]] = None) -> 'DeployHost':
        """
        Get an existing DeployHost resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.bool] as_proxy: Specifies whether the host is an agent host. Defaults to **false**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] connection_status: The connection status. Valid values are **success**, **failed** and **pending**.
        :param pulumi.Input[_builtins.str] created_at: The create time.
        :param pulumi.Input[_builtins.str] group_id: Specifies the CodeArts deploy group ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] install_icagent: Specifies whether to enable Application Operations Management (AOM) for free
               to provide metric monitoring, log query and alarm functions. Defaults to **false**.
        :param pulumi.Input[_builtins.str] ip_address: Specifies the IP address of your server.
               + When creating a proxy host, only public IPv4 addresses are supported.
               + When creating a target host with proxy access mode, both public and private IPv4 addresses are supported.
               + When creating a target host without proxy access mode, only public IPv4 addresses are supported.
        :param pulumi.Input[_builtins.str] lastest_connection_at: The last connection time.
        :param pulumi.Input[_builtins.str] name: Specifies the host name. The name consists of 3 to 128 characters, including letters,
               digits, chinese characters or `-_.` symbols.
        :param pulumi.Input[_builtins.str] os_type: Specifies the operating system. Valid values are **windows** and **linux**.
               The value must be consistent with the CodeArts deploy group.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] password: Specifies the password of your server.
        :param pulumi.Input[Sequence[pulumi.Input[Union['DeployHostPermissionArgs', 'DeployHostPermissionArgsDict']]]] permissions: The host permission detail.
               The permission structure is documented below.
        :param pulumi.Input[_builtins.int] port: Specifies the SSH port of your server. The value ranges from `1` to `65,535`.
        :param pulumi.Input[_builtins.str] private_key: Specifies the private key of your server.
               
               > The parameter `username`, `password` and `private_key` are used for login authentication. At least one of
               `private_key` and `password` must be set. And the field `private_key` and `password` can not be set together.
        :param pulumi.Input[_builtins.str] proxy_host_id: Specifies the proxy host ID. A proxy host ID can be assigned to multiple target
               hosts. This field is required only when creating a target host with proxy access mode.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] sync: Specifies whether to synchronize the password of the current host to the hosts with the
               same IP address, username and port number in other group in the same project. Defaults to **false**.
        :param pulumi.Input[_builtins.str] updated_at: The update time.
        :param pulumi.Input[_builtins.str] username: Specifies the username of your server.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _DeployHostState.__new__(_DeployHostState)

        __props__.__dict__["as_proxy"] = as_proxy
        __props__.__dict__["connection_status"] = connection_status
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["group_id"] = group_id
        __props__.__dict__["install_icagent"] = install_icagent
        __props__.__dict__["ip_address"] = ip_address
        __props__.__dict__["lastest_connection_at"] = lastest_connection_at
        __props__.__dict__["name"] = name
        __props__.__dict__["os_type"] = os_type
        __props__.__dict__["password"] = password
        __props__.__dict__["permissions"] = permissions
        __props__.__dict__["port"] = port
        __props__.__dict__["private_key"] = private_key
        __props__.__dict__["proxy_host_id"] = proxy_host_id
        __props__.__dict__["region"] = region
        __props__.__dict__["sync"] = sync
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["username"] = username
        return DeployHost(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="asProxy")
    def as_proxy(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether the host is an agent host. Defaults to **false**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "as_proxy")

    @_builtins.property
    @pulumi.getter(name="connectionStatus")
    def connection_status(self) -> pulumi.Output[_builtins.str]:
        """
        The connection status. Valid values are **success**, **failed** and **pending**.
        """
        return pulumi.get(self, "connection_status")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The create time.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the CodeArts deploy group ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "group_id")

    @_builtins.property
    @pulumi.getter(name="installIcagent")
    def install_icagent(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether to enable Application Operations Management (AOM) for free
        to provide metric monitoring, log query and alarm functions. Defaults to **false**.
        """
        return pulumi.get(self, "install_icagent")

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the IP address of your server.
        + When creating a proxy host, only public IPv4 addresses are supported.
        + When creating a target host with proxy access mode, both public and private IPv4 addresses are supported.
        + When creating a target host without proxy access mode, only public IPv4 addresses are supported.
        """
        return pulumi.get(self, "ip_address")

    @_builtins.property
    @pulumi.getter(name="lastestConnectionAt")
    def lastest_connection_at(self) -> pulumi.Output[_builtins.str]:
        """
        The last connection time.
        """
        return pulumi.get(self, "lastest_connection_at")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the host name. The name consists of 3 to 128 characters, including letters,
        digits, chinese characters or `-_.` symbols.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="osType")
    def os_type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the operating system. Valid values are **windows** and **linux**.
        The value must be consistent with the CodeArts deploy group.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "os_type")

    @_builtins.property
    @pulumi.getter
    def password(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the password of your server.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def permissions(self) -> pulumi.Output[Sequence['outputs.DeployHostPermission']]:
        """
        The host permission detail.
        The permission structure is documented below.
        """
        return pulumi.get(self, "permissions")

    @_builtins.property
    @pulumi.getter
    def port(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the SSH port of your server. The value ranges from `1` to `65,535`.
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter(name="privateKey")
    def private_key(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the private key of your server.

        > The parameter `username`, `password` and `private_key` are used for login authentication. At least one of
        `private_key` and `password` must be set. And the field `private_key` and `password` can not be set together.
        """
        return pulumi.get(self, "private_key")

    @_builtins.property
    @pulumi.getter(name="proxyHostId")
    def proxy_host_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the proxy host ID. A proxy host ID can be assigned to multiple target
        hosts. This field is required only when creating a target host with proxy access mode.
        """
        return pulumi.get(self, "proxy_host_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def sync(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether to synchronize the password of the current host to the hosts with the
        same IP address, username and port number in other group in the same project. Defaults to **false**.
        """
        return pulumi.get(self, "sync")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The update time.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter
    def username(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the username of your server.
        """
        return pulumi.get(self, "username")

