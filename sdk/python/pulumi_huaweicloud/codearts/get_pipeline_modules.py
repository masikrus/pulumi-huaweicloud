# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetPipelineModulesResult',
    'AwaitableGetPipelineModulesResult',
    'get_pipeline_modules',
    'get_pipeline_modules_output',
]

@pulumi.output_type
class GetPipelineModulesResult:
    """
    A collection of values returned by getPipelineModules.
    """
    def __init__(__self__, id=None, modules=None, name=None, product_line=None, region=None, tags=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if modules and not isinstance(modules, list):
            raise TypeError("Expected argument 'modules' to be a list")
        pulumi.set(__self__, "modules", modules)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if product_line and not isinstance(product_line, str):
            raise TypeError("Expected argument 'product_line' to be a str")
        pulumi.set(__self__, "product_line", product_line)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def modules(self) -> Sequence['outputs.GetPipelineModulesModuleResult']:
        """
        Indicates the module list.
        The modules structure is documented below.
        """
        return pulumi.get(self, "modules")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        Indicates the module name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="productLine")
    def product_line(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "product_line")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[Sequence[_builtins.str]]:
        """
        Indicates the tags.
        """
        return pulumi.get(self, "tags")


class AwaitableGetPipelineModulesResult(GetPipelineModulesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPipelineModulesResult(
            id=self.id,
            modules=self.modules,
            name=self.name,
            product_line=self.product_line,
            region=self.region,
            tags=self.tags)


def get_pipeline_modules(name: Optional[_builtins.str] = None,
                         product_line: Optional[_builtins.str] = None,
                         region: Optional[_builtins.str] = None,
                         tags: Optional[Sequence[_builtins.str]] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPipelineModulesResult:
    """
    Use this data source to get a list of CodeArts pipeline modules.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.codearts.get_pipeline_modules()
    ```


    :param _builtins.str name: Specifies the module name.
    :param _builtins.str product_line: Specifies the product line.
    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    :param Sequence[_builtins.str] tags: Specifies the tags.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['productLine'] = product_line
    __args__['region'] = region
    __args__['tags'] = tags
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:codearts/getPipelineModules:getPipelineModules', __args__, opts=opts, typ=GetPipelineModulesResult).value

    return AwaitableGetPipelineModulesResult(
        id=pulumi.get(__ret__, 'id'),
        modules=pulumi.get(__ret__, 'modules'),
        name=pulumi.get(__ret__, 'name'),
        product_line=pulumi.get(__ret__, 'product_line'),
        region=pulumi.get(__ret__, 'region'),
        tags=pulumi.get(__ret__, 'tags'))
def get_pipeline_modules_output(name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                product_line: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                tags: Optional[pulumi.Input[Optional[Sequence[_builtins.str]]]] = None,
                                opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetPipelineModulesResult]:
    """
    Use this data source to get a list of CodeArts pipeline modules.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.codearts.get_pipeline_modules()
    ```


    :param _builtins.str name: Specifies the module name.
    :param _builtins.str product_line: Specifies the product line.
    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    :param Sequence[_builtins.str] tags: Specifies the tags.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['productLine'] = product_line
    __args__['region'] = region
    __args__['tags'] = tags
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:codearts/getPipelineModules:getPipelineModules', __args__, opts=opts, typ=GetPipelineModulesResult)
    return __ret__.apply(lambda __response__: GetPipelineModulesResult(
        id=pulumi.get(__response__, 'id'),
        modules=pulumi.get(__response__, 'modules'),
        name=pulumi.get(__response__, 'name'),
        product_line=pulumi.get(__response__, 'product_line'),
        region=pulumi.get(__response__, 'region'),
        tags=pulumi.get(__response__, 'tags')))
