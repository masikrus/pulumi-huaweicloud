# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetDeployApplicationDeploymentRecordsResult',
    'AwaitableGetDeployApplicationDeploymentRecordsResult',
    'get_deploy_application_deployment_records',
    'get_deploy_application_deployment_records_output',
]

@pulumi.output_type
class GetDeployApplicationDeploymentRecordsResult:
    """
    A collection of values returned by getDeployApplicationDeploymentRecords.
    """
    def __init__(__self__, end_date=None, id=None, project_id=None, records=None, region=None, start_date=None, task_id=None):
        if end_date and not isinstance(end_date, str):
            raise TypeError("Expected argument 'end_date' to be a str")
        pulumi.set(__self__, "end_date", end_date)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if project_id and not isinstance(project_id, str):
            raise TypeError("Expected argument 'project_id' to be a str")
        pulumi.set(__self__, "project_id", project_id)
        if records and not isinstance(records, list):
            raise TypeError("Expected argument 'records' to be a list")
        pulumi.set(__self__, "records", records)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if start_date and not isinstance(start_date, str):
            raise TypeError("Expected argument 'start_date' to be a str")
        pulumi.set(__self__, "start_date", start_date)
        if task_id and not isinstance(task_id, str):
            raise TypeError("Expected argument 'task_id' to be a str")
        pulumi.set(__self__, "task_id", task_id)

    @_builtins.property
    @pulumi.getter(name="endDate")
    def end_date(self) -> _builtins.str:
        return pulumi.get(self, "end_date")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> _builtins.str:
        return pulumi.get(self, "project_id")

    @_builtins.property
    @pulumi.getter
    def records(self) -> Sequence['outputs.GetDeployApplicationDeploymentRecordsRecordResult']:
        """
        Indicates the record list.
        The records structure is documented below.
        """
        return pulumi.get(self, "records")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="startDate")
    def start_date(self) -> _builtins.str:
        return pulumi.get(self, "start_date")

    @_builtins.property
    @pulumi.getter(name="taskId")
    def task_id(self) -> _builtins.str:
        return pulumi.get(self, "task_id")


class AwaitableGetDeployApplicationDeploymentRecordsResult(GetDeployApplicationDeploymentRecordsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDeployApplicationDeploymentRecordsResult(
            end_date=self.end_date,
            id=self.id,
            project_id=self.project_id,
            records=self.records,
            region=self.region,
            start_date=self.start_date,
            task_id=self.task_id)


def get_deploy_application_deployment_records(end_date: Optional[_builtins.str] = None,
                                              project_id: Optional[_builtins.str] = None,
                                              region: Optional[_builtins.str] = None,
                                              start_date: Optional[_builtins.str] = None,
                                              task_id: Optional[_builtins.str] = None,
                                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDeployApplicationDeploymentRecordsResult:
    """
    Use this data source to get the list of CodeArts deploy application deployment records.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    project_id = config.require_object("projectId")
    task_id = config.require_object("taskId")
    start_date = config.require_object("startDate")
    end_date = config.require_object("endDate")
    test = huaweicloud.codearts.get_deploy_application_deployment_records(project_id=project_id,
        task_id=task_id,
        start_date=start_date,
        end_date=end_date)
    ```


    :param _builtins.str end_date: Specifies the end time. The value format is **yyyy-mm-dd**.
    :param _builtins.str project_id: Specifies the project ID for CodeArts service.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str start_date: Specifies the start time. The value format is **yyyy-mm-dd**.
    :param _builtins.str task_id: Specifies the deployment task ID.
    """
    __args__ = dict()
    __args__['endDate'] = end_date
    __args__['projectId'] = project_id
    __args__['region'] = region
    __args__['startDate'] = start_date
    __args__['taskId'] = task_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:codearts/getDeployApplicationDeploymentRecords:getDeployApplicationDeploymentRecords', __args__, opts=opts, typ=GetDeployApplicationDeploymentRecordsResult).value

    return AwaitableGetDeployApplicationDeploymentRecordsResult(
        end_date=pulumi.get(__ret__, 'end_date'),
        id=pulumi.get(__ret__, 'id'),
        project_id=pulumi.get(__ret__, 'project_id'),
        records=pulumi.get(__ret__, 'records'),
        region=pulumi.get(__ret__, 'region'),
        start_date=pulumi.get(__ret__, 'start_date'),
        task_id=pulumi.get(__ret__, 'task_id'))
def get_deploy_application_deployment_records_output(end_date: Optional[pulumi.Input[_builtins.str]] = None,
                                                     project_id: Optional[pulumi.Input[_builtins.str]] = None,
                                                     region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                     start_date: Optional[pulumi.Input[_builtins.str]] = None,
                                                     task_id: Optional[pulumi.Input[_builtins.str]] = None,
                                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetDeployApplicationDeploymentRecordsResult]:
    """
    Use this data source to get the list of CodeArts deploy application deployment records.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    project_id = config.require_object("projectId")
    task_id = config.require_object("taskId")
    start_date = config.require_object("startDate")
    end_date = config.require_object("endDate")
    test = huaweicloud.codearts.get_deploy_application_deployment_records(project_id=project_id,
        task_id=task_id,
        start_date=start_date,
        end_date=end_date)
    ```


    :param _builtins.str end_date: Specifies the end time. The value format is **yyyy-mm-dd**.
    :param _builtins.str project_id: Specifies the project ID for CodeArts service.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str start_date: Specifies the start time. The value format is **yyyy-mm-dd**.
    :param _builtins.str task_id: Specifies the deployment task ID.
    """
    __args__ = dict()
    __args__['endDate'] = end_date
    __args__['projectId'] = project_id
    __args__['region'] = region
    __args__['startDate'] = start_date
    __args__['taskId'] = task_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:codearts/getDeployApplicationDeploymentRecords:getDeployApplicationDeploymentRecords', __args__, opts=opts, typ=GetDeployApplicationDeploymentRecordsResult)
    return __ret__.apply(lambda __response__: GetDeployApplicationDeploymentRecordsResult(
        end_date=pulumi.get(__response__, 'end_date'),
        id=pulumi.get(__response__, 'id'),
        project_id=pulumi.get(__response__, 'project_id'),
        records=pulumi.get(__response__, 'records'),
        region=pulumi.get(__response__, 'region'),
        start_date=pulumi.get(__response__, 'start_date'),
        task_id=pulumi.get(__response__, 'task_id')))
