# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['DeployGroupArgs', 'DeployGroup']

@pulumi.input_type
class DeployGroupArgs:
    def __init__(__self__, *,
                 os_type: pulumi.Input[_builtins.str],
                 project_id: pulumi.Input[_builtins.str],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 is_proxy_mode: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_pool_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a DeployGroup resource.
        :param pulumi.Input[_builtins.str] os_type: Specifies the operating system. Valid values are **windows** and **linux**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] project_id: Specifies the project ID for CodeArts service.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description.
        :param pulumi.Input[_builtins.int] is_proxy_mode: Specifies whether the host is in agent access mode.
               Changing this parameter will create a new resource. Valid values are as follows:
               + **1**: Using proxy access mode.
               + **0**: Without using proxy access mode.
               
               Defaults to 1.
               
               > The scenes to use agent access mode: If the target host cannot connect to the public network, you need to select a
               host bound with an EIP as the proxy host to connect CodeArts to the target host.
        :param pulumi.Input[_builtins.str] name: Specifies the group name. The name consists of 3 to 128 characters, including letters,
               digits, chinese characters or `-_.` symbols.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_pool_id: Specifies the resource pool ID. A resource pool is a collection of physical
               environments that execute deployment commands when deploying software packages.
               If not specified, the resource pool hosted by HuaweiCloud will be used.
               If you want to use your own servers as resource pools, please fill your own resource pool ID.
               
               > Please refer to the following documents to create your own resource pool:
               [Creating an Agent Pool](https://support.huaweicloud.com/intl/en-us/usermanual-devcloud/devcloud_01_0016.html) and
               [Creating an Agent](https://support.huaweicloud.com/intl/en-us/usermanual-devcloud/devcloud_01_0017.html).
        """
        pulumi.set(__self__, "os_type", os_type)
        pulumi.set(__self__, "project_id", project_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if is_proxy_mode is not None:
            pulumi.set(__self__, "is_proxy_mode", is_proxy_mode)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if resource_pool_id is not None:
            pulumi.set(__self__, "resource_pool_id", resource_pool_id)

    @_builtins.property
    @pulumi.getter(name="osType")
    def os_type(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the operating system. Valid values are **windows** and **linux**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "os_type")

    @os_type.setter
    def os_type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "os_type", value)

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the project ID for CodeArts service.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "project_id", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="isProxyMode")
    def is_proxy_mode(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies whether the host is in agent access mode.
        Changing this parameter will create a new resource. Valid values are as follows:
        + **1**: Using proxy access mode.
        + **0**: Without using proxy access mode.

        Defaults to 1.

        > The scenes to use agent access mode: If the target host cannot connect to the public network, you need to select a
        host bound with an EIP as the proxy host to connect CodeArts to the target host.
        """
        return pulumi.get(self, "is_proxy_mode")

    @is_proxy_mode.setter
    def is_proxy_mode(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "is_proxy_mode", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the group name. The name consists of 3 to 128 characters, including letters,
        digits, chinese characters or `-_.` symbols.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="resourcePoolId")
    def resource_pool_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the resource pool ID. A resource pool is a collection of physical
        environments that execute deployment commands when deploying software packages.
        If not specified, the resource pool hosted by HuaweiCloud will be used.
        If you want to use your own servers as resource pools, please fill your own resource pool ID.

        > Please refer to the following documents to create your own resource pool:
        [Creating an Agent Pool](https://support.huaweicloud.com/intl/en-us/usermanual-devcloud/devcloud_01_0016.html) and
        [Creating an Agent](https://support.huaweicloud.com/intl/en-us/usermanual-devcloud/devcloud_01_0017.html).
        """
        return pulumi.get(self, "resource_pool_id")

    @resource_pool_id.setter
    def resource_pool_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_pool_id", value)


@pulumi.input_type
class _DeployGroupState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 created_bies: Optional[pulumi.Input[Sequence[pulumi.Input['DeployGroupCreatedByArgs']]]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 is_proxy_mode: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 os_type: Optional[pulumi.Input[_builtins.str]] = None,
                 permission_matrices: Optional[pulumi.Input[Sequence[pulumi.Input['DeployGroupPermissionMatrixArgs']]]] = None,
                 permissions: Optional[pulumi.Input[Sequence[pulumi.Input['DeployGroupPermissionArgs']]]] = None,
                 project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_pool_id: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering DeployGroup resources.
        :param pulumi.Input[_builtins.str] created_at: The permission create time.
        :param pulumi.Input[Sequence[pulumi.Input['DeployGroupCreatedByArgs']]] created_bies: The creator information.
               The object structure is documented below.
        :param pulumi.Input[_builtins.str] description: Specifies the description.
        :param pulumi.Input[_builtins.int] is_proxy_mode: Specifies whether the host is in agent access mode.
               Changing this parameter will create a new resource. Valid values are as follows:
               + **1**: Using proxy access mode.
               + **0**: Without using proxy access mode.
               
               Defaults to 1.
               
               > The scenes to use agent access mode: If the target host cannot connect to the public network, you need to select a
               host bound with an EIP as the proxy host to connect CodeArts to the target host.
        :param pulumi.Input[_builtins.str] name: Specifies the group name. The name consists of 3 to 128 characters, including letters,
               digits, chinese characters or `-_.` symbols.
        :param pulumi.Input[_builtins.str] os_type: Specifies the operating system. Valid values are **windows** and **linux**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input['DeployGroupPermissionMatrixArgs']]] permission_matrices: The group permission matrix detail.
               The permission_matrix structure is documented below.
        :param pulumi.Input[Sequence[pulumi.Input['DeployGroupPermissionArgs']]] permissions: The group permission detail.
               The permission structure is documented below.
        :param pulumi.Input[_builtins.str] project_id: Specifies the project ID for CodeArts service.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_pool_id: Specifies the resource pool ID. A resource pool is a collection of physical
               environments that execute deployment commands when deploying software packages.
               If not specified, the resource pool hosted by HuaweiCloud will be used.
               If you want to use your own servers as resource pools, please fill your own resource pool ID.
               
               > Please refer to the following documents to create your own resource pool:
               [Creating an Agent Pool](https://support.huaweicloud.com/intl/en-us/usermanual-devcloud/devcloud_01_0016.html) and
               [Creating an Agent](https://support.huaweicloud.com/intl/en-us/usermanual-devcloud/devcloud_01_0017.html).
        :param pulumi.Input[_builtins.str] updated_at: The permission update time.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if created_bies is not None:
            pulumi.set(__self__, "created_bies", created_bies)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if is_proxy_mode is not None:
            pulumi.set(__self__, "is_proxy_mode", is_proxy_mode)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if os_type is not None:
            pulumi.set(__self__, "os_type", os_type)
        if permission_matrices is not None:
            pulumi.set(__self__, "permission_matrices", permission_matrices)
        if permissions is not None:
            pulumi.set(__self__, "permissions", permissions)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if resource_pool_id is not None:
            pulumi.set(__self__, "resource_pool_id", resource_pool_id)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The permission create time.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="createdBies")
    def created_bies(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DeployGroupCreatedByArgs']]]]:
        """
        The creator information.
        The object structure is documented below.
        """
        return pulumi.get(self, "created_bies")

    @created_bies.setter
    def created_bies(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DeployGroupCreatedByArgs']]]]):
        pulumi.set(self, "created_bies", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="isProxyMode")
    def is_proxy_mode(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies whether the host is in agent access mode.
        Changing this parameter will create a new resource. Valid values are as follows:
        + **1**: Using proxy access mode.
        + **0**: Without using proxy access mode.

        Defaults to 1.

        > The scenes to use agent access mode: If the target host cannot connect to the public network, you need to select a
        host bound with an EIP as the proxy host to connect CodeArts to the target host.
        """
        return pulumi.get(self, "is_proxy_mode")

    @is_proxy_mode.setter
    def is_proxy_mode(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "is_proxy_mode", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the group name. The name consists of 3 to 128 characters, including letters,
        digits, chinese characters or `-_.` symbols.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="osType")
    def os_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the operating system. Valid values are **windows** and **linux**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "os_type")

    @os_type.setter
    def os_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "os_type", value)

    @_builtins.property
    @pulumi.getter(name="permissionMatrices")
    def permission_matrices(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DeployGroupPermissionMatrixArgs']]]]:
        """
        The group permission matrix detail.
        The permission_matrix structure is documented below.
        """
        return pulumi.get(self, "permission_matrices")

    @permission_matrices.setter
    def permission_matrices(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DeployGroupPermissionMatrixArgs']]]]):
        pulumi.set(self, "permission_matrices", value)

    @_builtins.property
    @pulumi.getter
    def permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DeployGroupPermissionArgs']]]]:
        """
        The group permission detail.
        The permission structure is documented below.
        """
        return pulumi.get(self, "permissions")

    @permissions.setter
    def permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DeployGroupPermissionArgs']]]]):
        pulumi.set(self, "permissions", value)

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the project ID for CodeArts service.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "project_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="resourcePoolId")
    def resource_pool_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the resource pool ID. A resource pool is a collection of physical
        environments that execute deployment commands when deploying software packages.
        If not specified, the resource pool hosted by HuaweiCloud will be used.
        If you want to use your own servers as resource pools, please fill your own resource pool ID.

        > Please refer to the following documents to create your own resource pool:
        [Creating an Agent Pool](https://support.huaweicloud.com/intl/en-us/usermanual-devcloud/devcloud_01_0016.html) and
        [Creating an Agent](https://support.huaweicloud.com/intl/en-us/usermanual-devcloud/devcloud_01_0017.html).
        """
        return pulumi.get(self, "resource_pool_id")

    @resource_pool_id.setter
    def resource_pool_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_pool_id", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The permission update time.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("huaweicloud:codearts/deployGroup:DeployGroup")
class DeployGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 is_proxy_mode: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 os_type: Optional[pulumi.Input[_builtins.str]] = None,
                 project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_pool_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a CodeArts deploy group resource within HuaweiCloud.

        ## Example Usage

        ### Using proxy access mode

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        project_id = config.require_object("projectId")
        test = huaweicloud.codearts.DeployGroup("test",
            project_id=project_id,
            name="test_group",
            os_type="linux",
            description="test description")
        ```

        ### Without using proxy access mode

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        project_id = config.require_object("projectId")
        test = huaweicloud.codearts.DeployGroup("test",
            project_id=project_id,
            name="test_group",
            os_type="linux",
            description="test description",
            is_proxy_mode=0)
        ```

        ## Import

        The CodeArts deploy group resource can be imported using the `project_id` and `id`, separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:codearts/deployGroup:DeployGroup test <project_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description.
        :param pulumi.Input[_builtins.int] is_proxy_mode: Specifies whether the host is in agent access mode.
               Changing this parameter will create a new resource. Valid values are as follows:
               + **1**: Using proxy access mode.
               + **0**: Without using proxy access mode.
               
               Defaults to 1.
               
               > The scenes to use agent access mode: If the target host cannot connect to the public network, you need to select a
               host bound with an EIP as the proxy host to connect CodeArts to the target host.
        :param pulumi.Input[_builtins.str] name: Specifies the group name. The name consists of 3 to 128 characters, including letters,
               digits, chinese characters or `-_.` symbols.
        :param pulumi.Input[_builtins.str] os_type: Specifies the operating system. Valid values are **windows** and **linux**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] project_id: Specifies the project ID for CodeArts service.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_pool_id: Specifies the resource pool ID. A resource pool is a collection of physical
               environments that execute deployment commands when deploying software packages.
               If not specified, the resource pool hosted by HuaweiCloud will be used.
               If you want to use your own servers as resource pools, please fill your own resource pool ID.
               
               > Please refer to the following documents to create your own resource pool:
               [Creating an Agent Pool](https://support.huaweicloud.com/intl/en-us/usermanual-devcloud/devcloud_01_0016.html) and
               [Creating an Agent](https://support.huaweicloud.com/intl/en-us/usermanual-devcloud/devcloud_01_0017.html).
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: DeployGroupArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a CodeArts deploy group resource within HuaweiCloud.

        ## Example Usage

        ### Using proxy access mode

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        project_id = config.require_object("projectId")
        test = huaweicloud.codearts.DeployGroup("test",
            project_id=project_id,
            name="test_group",
            os_type="linux",
            description="test description")
        ```

        ### Without using proxy access mode

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        project_id = config.require_object("projectId")
        test = huaweicloud.codearts.DeployGroup("test",
            project_id=project_id,
            name="test_group",
            os_type="linux",
            description="test description",
            is_proxy_mode=0)
        ```

        ## Import

        The CodeArts deploy group resource can be imported using the `project_id` and `id`, separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:codearts/deployGroup:DeployGroup test <project_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param DeployGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(DeployGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 is_proxy_mode: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 os_type: Optional[pulumi.Input[_builtins.str]] = None,
                 project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_pool_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = DeployGroupArgs.__new__(DeployGroupArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["is_proxy_mode"] = is_proxy_mode
            __props__.__dict__["name"] = name
            if os_type is None and not opts.urn:
                raise TypeError("Missing required property 'os_type'")
            __props__.__dict__["os_type"] = os_type
            if project_id is None and not opts.urn:
                raise TypeError("Missing required property 'project_id'")
            __props__.__dict__["project_id"] = project_id
            __props__.__dict__["region"] = region
            __props__.__dict__["resource_pool_id"] = resource_pool_id
            __props__.__dict__["created_at"] = None
            __props__.__dict__["created_bies"] = None
            __props__.__dict__["permission_matrices"] = None
            __props__.__dict__["permissions"] = None
            __props__.__dict__["updated_at"] = None
        super(DeployGroup, __self__).__init__(
            'huaweicloud:codearts/deployGroup:DeployGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            created_bies: Optional[pulumi.Input[Sequence[pulumi.Input[Union['DeployGroupCreatedByArgs', 'DeployGroupCreatedByArgsDict']]]]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            is_proxy_mode: Optional[pulumi.Input[_builtins.int]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            os_type: Optional[pulumi.Input[_builtins.str]] = None,
            permission_matrices: Optional[pulumi.Input[Sequence[pulumi.Input[Union['DeployGroupPermissionMatrixArgs', 'DeployGroupPermissionMatrixArgsDict']]]]] = None,
            permissions: Optional[pulumi.Input[Sequence[pulumi.Input[Union['DeployGroupPermissionArgs', 'DeployGroupPermissionArgsDict']]]]] = None,
            project_id: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            resource_pool_id: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'DeployGroup':
        """
        Get an existing DeployGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: The permission create time.
        :param pulumi.Input[Sequence[pulumi.Input[Union['DeployGroupCreatedByArgs', 'DeployGroupCreatedByArgsDict']]]] created_bies: The creator information.
               The object structure is documented below.
        :param pulumi.Input[_builtins.str] description: Specifies the description.
        :param pulumi.Input[_builtins.int] is_proxy_mode: Specifies whether the host is in agent access mode.
               Changing this parameter will create a new resource. Valid values are as follows:
               + **1**: Using proxy access mode.
               + **0**: Without using proxy access mode.
               
               Defaults to 1.
               
               > The scenes to use agent access mode: If the target host cannot connect to the public network, you need to select a
               host bound with an EIP as the proxy host to connect CodeArts to the target host.
        :param pulumi.Input[_builtins.str] name: Specifies the group name. The name consists of 3 to 128 characters, including letters,
               digits, chinese characters or `-_.` symbols.
        :param pulumi.Input[_builtins.str] os_type: Specifies the operating system. Valid values are **windows** and **linux**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['DeployGroupPermissionMatrixArgs', 'DeployGroupPermissionMatrixArgsDict']]]] permission_matrices: The group permission matrix detail.
               The permission_matrix structure is documented below.
        :param pulumi.Input[Sequence[pulumi.Input[Union['DeployGroupPermissionArgs', 'DeployGroupPermissionArgsDict']]]] permissions: The group permission detail.
               The permission structure is documented below.
        :param pulumi.Input[_builtins.str] project_id: Specifies the project ID for CodeArts service.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_pool_id: Specifies the resource pool ID. A resource pool is a collection of physical
               environments that execute deployment commands when deploying software packages.
               If not specified, the resource pool hosted by HuaweiCloud will be used.
               If you want to use your own servers as resource pools, please fill your own resource pool ID.
               
               > Please refer to the following documents to create your own resource pool:
               [Creating an Agent Pool](https://support.huaweicloud.com/intl/en-us/usermanual-devcloud/devcloud_01_0016.html) and
               [Creating an Agent](https://support.huaweicloud.com/intl/en-us/usermanual-devcloud/devcloud_01_0017.html).
        :param pulumi.Input[_builtins.str] updated_at: The permission update time.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _DeployGroupState.__new__(_DeployGroupState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["created_bies"] = created_bies
        __props__.__dict__["description"] = description
        __props__.__dict__["is_proxy_mode"] = is_proxy_mode
        __props__.__dict__["name"] = name
        __props__.__dict__["os_type"] = os_type
        __props__.__dict__["permission_matrices"] = permission_matrices
        __props__.__dict__["permissions"] = permissions
        __props__.__dict__["project_id"] = project_id
        __props__.__dict__["region"] = region
        __props__.__dict__["resource_pool_id"] = resource_pool_id
        __props__.__dict__["updated_at"] = updated_at
        return DeployGroup(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The permission create time.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="createdBies")
    def created_bies(self) -> pulumi.Output[Sequence['outputs.DeployGroupCreatedBy']]:
        """
        The creator information.
        The object structure is documented below.
        """
        return pulumi.get(self, "created_bies")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the description.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="isProxyMode")
    def is_proxy_mode(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        Specifies whether the host is in agent access mode.
        Changing this parameter will create a new resource. Valid values are as follows:
        + **1**: Using proxy access mode.
        + **0**: Without using proxy access mode.

        Defaults to 1.

        > The scenes to use agent access mode: If the target host cannot connect to the public network, you need to select a
        host bound with an EIP as the proxy host to connect CodeArts to the target host.
        """
        return pulumi.get(self, "is_proxy_mode")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the group name. The name consists of 3 to 128 characters, including letters,
        digits, chinese characters or `-_.` symbols.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="osType")
    def os_type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the operating system. Valid values are **windows** and **linux**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "os_type")

    @_builtins.property
    @pulumi.getter(name="permissionMatrices")
    def permission_matrices(self) -> pulumi.Output[Sequence['outputs.DeployGroupPermissionMatrix']]:
        """
        The group permission matrix detail.
        The permission_matrix structure is documented below.
        """
        return pulumi.get(self, "permission_matrices")

    @_builtins.property
    @pulumi.getter
    def permissions(self) -> pulumi.Output[Sequence['outputs.DeployGroupPermission']]:
        """
        The group permission detail.
        The permission structure is documented below.
        """
        return pulumi.get(self, "permissions")

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the project ID for CodeArts service.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "project_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="resourcePoolId")
    def resource_pool_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the resource pool ID. A resource pool is a collection of physical
        environments that execute deployment commands when deploying software packages.
        If not specified, the resource pool hosted by HuaweiCloud will be used.
        If you want to use your own servers as resource pools, please fill your own resource pool ID.

        > Please refer to the following documents to create your own resource pool:
        [Creating an Agent Pool](https://support.huaweicloud.com/intl/en-us/usermanual-devcloud/devcloud_01_0016.html) and
        [Creating an Agent](https://support.huaweicloud.com/intl/en-us/usermanual-devcloud/devcloud_01_0017.html).
        """
        return pulumi.get(self, "resource_pool_id")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The permission update time.
        """
        return pulumi.get(self, "updated_at")

