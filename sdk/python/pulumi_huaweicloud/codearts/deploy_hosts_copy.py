# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['DeployHostsCopyArgs', 'DeployHostsCopy']

@pulumi.input_type
class DeployHostsCopyArgs:
    def __init__(__self__, *,
                 host_uuids: pulumi.Input[Sequence[pulumi.Input[_builtins.str]]],
                 source_group_id: pulumi.Input[_builtins.str],
                 target_group_id: pulumi.Input[_builtins.str],
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a DeployHostsCopy resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] host_uuids: Specifies the host IDs list.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] source_group_id: Specifies the source group ID.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] target_group_id: Specifies the target group ID.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        """
        pulumi.set(__self__, "host_uuids", host_uuids)
        pulumi.set(__self__, "source_group_id", source_group_id)
        pulumi.set(__self__, "target_group_id", target_group_id)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="hostUuids")
    def host_uuids(self) -> pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]:
        """
        Specifies the host IDs list.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "host_uuids")

    @host_uuids.setter
    def host_uuids(self, value: pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]):
        pulumi.set(self, "host_uuids", value)

    @_builtins.property
    @pulumi.getter(name="sourceGroupId")
    def source_group_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the source group ID.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "source_group_id")

    @source_group_id.setter
    def source_group_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "source_group_id", value)

    @_builtins.property
    @pulumi.getter(name="targetGroupId")
    def target_group_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the target group ID.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "target_group_id")

    @target_group_id.setter
    def target_group_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "target_group_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _DeployHostsCopyState:
    def __init__(__self__, *,
                 host_uuids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 source_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_group_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering DeployHostsCopy resources.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] host_uuids: Specifies the host IDs list.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] source_group_id: Specifies the source group ID.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] target_group_id: Specifies the target group ID.
               Changing this creates a new resource.
        """
        if host_uuids is not None:
            pulumi.set(__self__, "host_uuids", host_uuids)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if source_group_id is not None:
            pulumi.set(__self__, "source_group_id", source_group_id)
        if target_group_id is not None:
            pulumi.set(__self__, "target_group_id", target_group_id)

    @_builtins.property
    @pulumi.getter(name="hostUuids")
    def host_uuids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the host IDs list.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "host_uuids")

    @host_uuids.setter
    def host_uuids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "host_uuids", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="sourceGroupId")
    def source_group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the source group ID.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "source_group_id")

    @source_group_id.setter
    def source_group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_group_id", value)

    @_builtins.property
    @pulumi.getter(name="targetGroupId")
    def target_group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the target group ID.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "target_group_id")

    @target_group_id.setter
    def target_group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_group_id", value)


@pulumi.type_token("huaweicloud:codearts/deployHostsCopy:DeployHostsCopy")
class DeployHostsCopy(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 host_uuids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 source_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a CodeArts deploy hosts copy resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        source_group_id = config.require_object("sourceGroupId")
        host_uuids = config.require_object("hostUuids")
        target_group_id = config.require_object("targetGroupId")
        test = huaweicloud.codearts.DeployHostsCopy("test",
            source_group_id=source_group_id,
            host_uuids=host_uuids,
            target_group_id=target_group_id)
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] host_uuids: Specifies the host IDs list.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] source_group_id: Specifies the source group ID.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] target_group_id: Specifies the target group ID.
               Changing this creates a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: DeployHostsCopyArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a CodeArts deploy hosts copy resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        source_group_id = config.require_object("sourceGroupId")
        host_uuids = config.require_object("hostUuids")
        target_group_id = config.require_object("targetGroupId")
        test = huaweicloud.codearts.DeployHostsCopy("test",
            source_group_id=source_group_id,
            host_uuids=host_uuids,
            target_group_id=target_group_id)
        ```

        :param str resource_name: The name of the resource.
        :param DeployHostsCopyArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(DeployHostsCopyArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 host_uuids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 source_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = DeployHostsCopyArgs.__new__(DeployHostsCopyArgs)

            if host_uuids is None and not opts.urn:
                raise TypeError("Missing required property 'host_uuids'")
            __props__.__dict__["host_uuids"] = host_uuids
            __props__.__dict__["region"] = region
            if source_group_id is None and not opts.urn:
                raise TypeError("Missing required property 'source_group_id'")
            __props__.__dict__["source_group_id"] = source_group_id
            if target_group_id is None and not opts.urn:
                raise TypeError("Missing required property 'target_group_id'")
            __props__.__dict__["target_group_id"] = target_group_id
        super(DeployHostsCopy, __self__).__init__(
            'huaweicloud:codearts/deployHostsCopy:DeployHostsCopy',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            host_uuids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            source_group_id: Optional[pulumi.Input[_builtins.str]] = None,
            target_group_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'DeployHostsCopy':
        """
        Get an existing DeployHostsCopy resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] host_uuids: Specifies the host IDs list.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] source_group_id: Specifies the source group ID.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] target_group_id: Specifies the target group ID.
               Changing this creates a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _DeployHostsCopyState.__new__(_DeployHostsCopyState)

        __props__.__dict__["host_uuids"] = host_uuids
        __props__.__dict__["region"] = region
        __props__.__dict__["source_group_id"] = source_group_id
        __props__.__dict__["target_group_id"] = target_group_id
        return DeployHostsCopy(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="hostUuids")
    def host_uuids(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        Specifies the host IDs list.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "host_uuids")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="sourceGroupId")
    def source_group_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the source group ID.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "source_group_id")

    @_builtins.property
    @pulumi.getter(name="targetGroupId")
    def target_group_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the target group ID.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "target_group_id")

