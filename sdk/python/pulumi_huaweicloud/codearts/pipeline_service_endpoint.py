# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['PipelineServiceEndpointArgs', 'PipelineServiceEndpoint']

@pulumi.input_type
class PipelineServiceEndpointArgs:
    def __init__(__self__, *,
                 project_id: pulumi.Input[_builtins.str],
                 authorization: Optional[pulumi.Input['PipelineServiceEndpointAuthorizationArgs']] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 module_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 url: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a PipelineServiceEndpoint resource.
        :param pulumi.Input[_builtins.str] project_id: Specifies the CodeArts project ID.
        :param pulumi.Input['PipelineServiceEndpointAuthorizationArgs'] authorization: Specifies the permission information.
               The authorization structure is documented below.
        :param pulumi.Input[_builtins.str] module_id: Specifies the module ID.
        :param pulumi.Input[_builtins.str] name: Specifies the endpoint name.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] url: Specifies the URL.
               
               <a name="block--authorization"></a>
               The `authorization` block supports:
        """
        pulumi.set(__self__, "project_id", project_id)
        if authorization is not None:
            pulumi.set(__self__, "authorization", authorization)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if module_id is not None:
            pulumi.set(__self__, "module_id", module_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if url is not None:
            pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the CodeArts project ID.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "project_id", value)

    @_builtins.property
    @pulumi.getter
    def authorization(self) -> Optional[pulumi.Input['PipelineServiceEndpointAuthorizationArgs']]:
        """
        Specifies the permission information.
        The authorization structure is documented below.
        """
        return pulumi.get(self, "authorization")

    @authorization.setter
    def authorization(self, value: Optional[pulumi.Input['PipelineServiceEndpointAuthorizationArgs']]):
        pulumi.set(self, "authorization", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="moduleId")
    def module_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the module ID.
        """
        return pulumi.get(self, "module_id")

    @module_id.setter
    def module_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "module_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the endpoint name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def url(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the URL.

        <a name="block--authorization"></a>
        The `authorization` block supports:
        """
        return pulumi.get(self, "url")

    @url.setter
    def url(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "url", value)


@pulumi.input_type
class _PipelineServiceEndpointState:
    def __init__(__self__, *,
                 authorization: Optional[pulumi.Input['PipelineServiceEndpointAuthorizationArgs']] = None,
                 created_bies: Optional[pulumi.Input[Sequence[pulumi.Input['PipelineServiceEndpointCreatedByArgs']]]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 module_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 url: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering PipelineServiceEndpoint resources.
        :param pulumi.Input['PipelineServiceEndpointAuthorizationArgs'] authorization: Specifies the permission information.
               The authorization structure is documented below.
        :param pulumi.Input[Sequence[pulumi.Input['PipelineServiceEndpointCreatedByArgs']]] created_bies: Indicates the permission information.
               The created_by structure is documented below.
        :param pulumi.Input[_builtins.str] module_id: Specifies the module ID.
        :param pulumi.Input[_builtins.str] name: Specifies the endpoint name.
        :param pulumi.Input[_builtins.str] project_id: Specifies the CodeArts project ID.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] url: Specifies the URL.
               
               <a name="block--authorization"></a>
               The `authorization` block supports:
        """
        if authorization is not None:
            pulumi.set(__self__, "authorization", authorization)
        if created_bies is not None:
            pulumi.set(__self__, "created_bies", created_bies)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if module_id is not None:
            pulumi.set(__self__, "module_id", module_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if url is not None:
            pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter
    def authorization(self) -> Optional[pulumi.Input['PipelineServiceEndpointAuthorizationArgs']]:
        """
        Specifies the permission information.
        The authorization structure is documented below.
        """
        return pulumi.get(self, "authorization")

    @authorization.setter
    def authorization(self, value: Optional[pulumi.Input['PipelineServiceEndpointAuthorizationArgs']]):
        pulumi.set(self, "authorization", value)

    @_builtins.property
    @pulumi.getter(name="createdBies")
    def created_bies(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PipelineServiceEndpointCreatedByArgs']]]]:
        """
        Indicates the permission information.
        The created_by structure is documented below.
        """
        return pulumi.get(self, "created_bies")

    @created_bies.setter
    def created_bies(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PipelineServiceEndpointCreatedByArgs']]]]):
        pulumi.set(self, "created_bies", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="moduleId")
    def module_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the module ID.
        """
        return pulumi.get(self, "module_id")

    @module_id.setter
    def module_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "module_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the endpoint name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the CodeArts project ID.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "project_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def url(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the URL.

        <a name="block--authorization"></a>
        The `authorization` block supports:
        """
        return pulumi.get(self, "url")

    @url.setter
    def url(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "url", value)


@pulumi.type_token("huaweicloud:codearts/pipelineServiceEndpoint:PipelineServiceEndpoint")
class PipelineServiceEndpoint(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 authorization: Optional[pulumi.Input[Union['PipelineServiceEndpointAuthorizationArgs', 'PipelineServiceEndpointAuthorizationArgsDict']]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 module_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 url: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a CodeArts pipeline service endpoint resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        project_id = config.require_object("projectId")
        module_id = config.require_object("moduleId")
        url = config.require_object("url")
        name = config.require_object("name")
        authorization_scheme = config.require_object("authorizationScheme")
        test = huaweicloud.codearts.PipelineServiceEndpoint("test",
            project_id=project_id,
            module_id=module_id,
            url=url,
            name=name,
            authorization={
                "scheme": authorization_scheme,
                "parameters": json.dumps({
                    "username": "test",
                    "password": "test",
                }),
            })
        ```

        ## Import

        The service endpoint can be imported using `project_id` and `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:codearts/pipelineServiceEndpoint:PipelineServiceEndpoint test <project_id>/<id>
        ```

        Please add the followings if some attributes are missing when importing the resource.

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason.

        The missing attributes include: `authorization`.

        It is generally recommended running `pulumi preview` after importing the resource.

        You can then decide if changes should be applied to the service endpoint, or the resource definition should be updated to

        align with the service endpoint. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_codearts_pipeline_service_endpoint" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              authorization,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['PipelineServiceEndpointAuthorizationArgs', 'PipelineServiceEndpointAuthorizationArgsDict']] authorization: Specifies the permission information.
               The authorization structure is documented below.
        :param pulumi.Input[_builtins.str] module_id: Specifies the module ID.
        :param pulumi.Input[_builtins.str] name: Specifies the endpoint name.
        :param pulumi.Input[_builtins.str] project_id: Specifies the CodeArts project ID.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] url: Specifies the URL.
               
               <a name="block--authorization"></a>
               The `authorization` block supports:
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PipelineServiceEndpointArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a CodeArts pipeline service endpoint resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        project_id = config.require_object("projectId")
        module_id = config.require_object("moduleId")
        url = config.require_object("url")
        name = config.require_object("name")
        authorization_scheme = config.require_object("authorizationScheme")
        test = huaweicloud.codearts.PipelineServiceEndpoint("test",
            project_id=project_id,
            module_id=module_id,
            url=url,
            name=name,
            authorization={
                "scheme": authorization_scheme,
                "parameters": json.dumps({
                    "username": "test",
                    "password": "test",
                }),
            })
        ```

        ## Import

        The service endpoint can be imported using `project_id` and `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:codearts/pipelineServiceEndpoint:PipelineServiceEndpoint test <project_id>/<id>
        ```

        Please add the followings if some attributes are missing when importing the resource.

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason.

        The missing attributes include: `authorization`.

        It is generally recommended running `pulumi preview` after importing the resource.

        You can then decide if changes should be applied to the service endpoint, or the resource definition should be updated to

        align with the service endpoint. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_codearts_pipeline_service_endpoint" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              authorization,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param PipelineServiceEndpointArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PipelineServiceEndpointArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 authorization: Optional[pulumi.Input[Union['PipelineServiceEndpointAuthorizationArgs', 'PipelineServiceEndpointAuthorizationArgsDict']]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 module_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 url: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PipelineServiceEndpointArgs.__new__(PipelineServiceEndpointArgs)

            __props__.__dict__["authorization"] = authorization
            __props__.__dict__["enable_force_new"] = enable_force_new
            __props__.__dict__["module_id"] = module_id
            __props__.__dict__["name"] = name
            if project_id is None and not opts.urn:
                raise TypeError("Missing required property 'project_id'")
            __props__.__dict__["project_id"] = project_id
            __props__.__dict__["region"] = region
            __props__.__dict__["url"] = url
            __props__.__dict__["created_bies"] = None
        super(PipelineServiceEndpoint, __self__).__init__(
            'huaweicloud:codearts/pipelineServiceEndpoint:PipelineServiceEndpoint',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            authorization: Optional[pulumi.Input[Union['PipelineServiceEndpointAuthorizationArgs', 'PipelineServiceEndpointAuthorizationArgsDict']]] = None,
            created_bies: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PipelineServiceEndpointCreatedByArgs', 'PipelineServiceEndpointCreatedByArgsDict']]]]] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            module_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            project_id: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            url: Optional[pulumi.Input[_builtins.str]] = None) -> 'PipelineServiceEndpoint':
        """
        Get an existing PipelineServiceEndpoint resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['PipelineServiceEndpointAuthorizationArgs', 'PipelineServiceEndpointAuthorizationArgsDict']] authorization: Specifies the permission information.
               The authorization structure is documented below.
        :param pulumi.Input[Sequence[pulumi.Input[Union['PipelineServiceEndpointCreatedByArgs', 'PipelineServiceEndpointCreatedByArgsDict']]]] created_bies: Indicates the permission information.
               The created_by structure is documented below.
        :param pulumi.Input[_builtins.str] module_id: Specifies the module ID.
        :param pulumi.Input[_builtins.str] name: Specifies the endpoint name.
        :param pulumi.Input[_builtins.str] project_id: Specifies the CodeArts project ID.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] url: Specifies the URL.
               
               <a name="block--authorization"></a>
               The `authorization` block supports:
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PipelineServiceEndpointState.__new__(_PipelineServiceEndpointState)

        __props__.__dict__["authorization"] = authorization
        __props__.__dict__["created_bies"] = created_bies
        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["module_id"] = module_id
        __props__.__dict__["name"] = name
        __props__.__dict__["project_id"] = project_id
        __props__.__dict__["region"] = region
        __props__.__dict__["url"] = url
        return PipelineServiceEndpoint(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def authorization(self) -> pulumi.Output[Optional['outputs.PipelineServiceEndpointAuthorization']]:
        """
        Specifies the permission information.
        The authorization structure is documented below.
        """
        return pulumi.get(self, "authorization")

    @_builtins.property
    @pulumi.getter(name="createdBies")
    def created_bies(self) -> pulumi.Output[Sequence['outputs.PipelineServiceEndpointCreatedBy']]:
        """
        Indicates the permission information.
        The created_by structure is documented below.
        """
        return pulumi.get(self, "created_bies")

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter(name="moduleId")
    def module_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the module ID.
        """
        return pulumi.get(self, "module_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the endpoint name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the CodeArts project ID.
        """
        return pulumi.get(self, "project_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def url(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the URL.

        <a name="block--authorization"></a>
        The `authorization` block supports:
        """
        return pulumi.get(self, "url")

