# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['DeployApplicationGroupMoveArgs', 'DeployApplicationGroupMove']

@pulumi.input_type
class DeployApplicationGroupMoveArgs:
    def __init__(__self__, *,
                 group_id: pulumi.Input[_builtins.str],
                 movement: pulumi.Input[_builtins.int],
                 project_id: pulumi.Input[_builtins.str],
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a DeployApplicationGroupMove resource.
        :param pulumi.Input[_builtins.str] group_id: Specifies the application group ID.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] movement: Specifies the moving direction.
               Valid values are as follows:
               + **1**: Upward.
               + **-1**: Downward.
               
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] project_id: Specifies the project ID for CodeArts service.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        """
        pulumi.set(__self__, "group_id", group_id)
        pulumi.set(__self__, "movement", movement)
        pulumi.set(__self__, "project_id", project_id)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the application group ID.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter
    def movement(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the moving direction.
        Valid values are as follows:
        + **1**: Upward.
        + **-1**: Downward.

        Changing this creates a new resource.
        """
        return pulumi.get(self, "movement")

    @movement.setter
    def movement(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "movement", value)

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the project ID for CodeArts service.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "project_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _DeployApplicationGroupMoveState:
    def __init__(__self__, *,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 movement: Optional[pulumi.Input[_builtins.int]] = None,
                 project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering DeployApplicationGroupMove resources.
        :param pulumi.Input[_builtins.str] group_id: Specifies the application group ID.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] movement: Specifies the moving direction.
               Valid values are as follows:
               + **1**: Upward.
               + **-1**: Downward.
               
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] project_id: Specifies the project ID for CodeArts service.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        """
        if group_id is not None:
            pulumi.set(__self__, "group_id", group_id)
        if movement is not None:
            pulumi.set(__self__, "movement", movement)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the application group ID.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter
    def movement(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the moving direction.
        Valid values are as follows:
        + **1**: Upward.
        + **-1**: Downward.

        Changing this creates a new resource.
        """
        return pulumi.get(self, "movement")

    @movement.setter
    def movement(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "movement", value)

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the project ID for CodeArts service.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "project_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.type_token("huaweicloud:codearts/deployApplicationGroupMove:DeployApplicationGroupMove")
class DeployApplicationGroupMove(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 movement: Optional[pulumi.Input[_builtins.int]] = None,
                 project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a CodeArts deploy application group move resource within HuaweiCloud.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] group_id: Specifies the application group ID.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] movement: Specifies the moving direction.
               Valid values are as follows:
               + **1**: Upward.
               + **-1**: Downward.
               
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] project_id: Specifies the project ID for CodeArts service.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: DeployApplicationGroupMoveArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a CodeArts deploy application group move resource within HuaweiCloud.

        :param str resource_name: The name of the resource.
        :param DeployApplicationGroupMoveArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(DeployApplicationGroupMoveArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 movement: Optional[pulumi.Input[_builtins.int]] = None,
                 project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = DeployApplicationGroupMoveArgs.__new__(DeployApplicationGroupMoveArgs)

            if group_id is None and not opts.urn:
                raise TypeError("Missing required property 'group_id'")
            __props__.__dict__["group_id"] = group_id
            if movement is None and not opts.urn:
                raise TypeError("Missing required property 'movement'")
            __props__.__dict__["movement"] = movement
            if project_id is None and not opts.urn:
                raise TypeError("Missing required property 'project_id'")
            __props__.__dict__["project_id"] = project_id
            __props__.__dict__["region"] = region
        super(DeployApplicationGroupMove, __self__).__init__(
            'huaweicloud:codearts/deployApplicationGroupMove:DeployApplicationGroupMove',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            group_id: Optional[pulumi.Input[_builtins.str]] = None,
            movement: Optional[pulumi.Input[_builtins.int]] = None,
            project_id: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None) -> 'DeployApplicationGroupMove':
        """
        Get an existing DeployApplicationGroupMove resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] group_id: Specifies the application group ID.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] movement: Specifies the moving direction.
               Valid values are as follows:
               + **1**: Upward.
               + **-1**: Downward.
               
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] project_id: Specifies the project ID for CodeArts service.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _DeployApplicationGroupMoveState.__new__(_DeployApplicationGroupMoveState)

        __props__.__dict__["group_id"] = group_id
        __props__.__dict__["movement"] = movement
        __props__.__dict__["project_id"] = project_id
        __props__.__dict__["region"] = region
        return DeployApplicationGroupMove(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the application group ID.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "group_id")

    @_builtins.property
    @pulumi.getter
    def movement(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the moving direction.
        Valid values are as follows:
        + **1**: Upward.
        + **-1**: Downward.

        Changing this creates a new resource.
        """
        return pulumi.get(self, "movement")

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the project ID for CodeArts service.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "project_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

