# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetCloseAccountStatusResult',
    'AwaitableGetCloseAccountStatusResult',
    'get_close_account_status',
    'get_close_account_status_output',
]

@pulumi.output_type
class GetCloseAccountStatusResult:
    """
    A collection of values returned by getCloseAccountStatus.
    """
    def __init__(__self__, close_account_statuses=None, id=None, states=None):
        if close_account_statuses and not isinstance(close_account_statuses, list):
            raise TypeError("Expected argument 'close_account_statuses' to be a list")
        pulumi.set(__self__, "close_account_statuses", close_account_statuses)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if states and not isinstance(states, list):
            raise TypeError("Expected argument 'states' to be a list")
        pulumi.set(__self__, "states", states)

    @_builtins.property
    @pulumi.getter(name="closeAccountStatuses")
    def close_account_statuses(self) -> Sequence['outputs.GetCloseAccountStatusCloseAccountStatusResult']:
        """
        Indicates the list of close account statuses.
        """
        return pulumi.get(self, "close_account_statuses")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def states(self) -> Optional[Sequence[_builtins.str]]:
        return pulumi.get(self, "states")


class AwaitableGetCloseAccountStatusResult(GetCloseAccountStatusResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCloseAccountStatusResult(
            close_account_statuses=self.close_account_statuses,
            id=self.id,
            states=self.states)


def get_close_account_status(states: Optional[Sequence[_builtins.str]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCloseAccountStatusResult:
    """
    Use this data source to get the list of the account close requests for an organization.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.organizations.get_close_account_status()
    ```


    :param Sequence[_builtins.str] states: Specifies the list of one or more states that you want to include in the response.
    """
    __args__ = dict()
    __args__['states'] = states
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:organizations/getCloseAccountStatus:getCloseAccountStatus', __args__, opts=opts, typ=GetCloseAccountStatusResult).value

    return AwaitableGetCloseAccountStatusResult(
        close_account_statuses=pulumi.get(__ret__, 'close_account_statuses'),
        id=pulumi.get(__ret__, 'id'),
        states=pulumi.get(__ret__, 'states'))
def get_close_account_status_output(states: Optional[pulumi.Input[Optional[Sequence[_builtins.str]]]] = None,
                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetCloseAccountStatusResult]:
    """
    Use this data source to get the list of the account close requests for an organization.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.organizations.get_close_account_status()
    ```


    :param Sequence[_builtins.str] states: Specifies the list of one or more states that you want to include in the response.
    """
    __args__ = dict()
    __args__['states'] = states
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:organizations/getCloseAccountStatus:getCloseAccountStatus', __args__, opts=opts, typ=GetCloseAccountStatusResult)
    return __ret__.apply(lambda __response__: GetCloseAccountStatusResult(
        close_account_statuses=pulumi.get(__response__, 'close_account_statuses'),
        id=pulumi.get(__response__, 'id'),
        states=pulumi.get(__response__, 'states')))
