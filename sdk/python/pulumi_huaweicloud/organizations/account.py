# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['AccountArgs', 'Account']

@pulumi.input_type
class AccountArgs:
    def __init__(__self__, *,
                 agency_name: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 email: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 parent_id: Optional[pulumi.Input[_builtins.str]] = None,
                 phone: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None):
        """
        The set of arguments for constructing a Account resource.
        :param pulumi.Input[_builtins.str] agency_name: Specifies the agency name of the account.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the account.
        :param pulumi.Input[_builtins.str] email: Specifies the email address of the account.
               This parameter is mandatory in **International Website**.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the account.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] parent_id: Specifies the ID of the root or organization unit in which you want to create a new
               account. The default is root ID.
        :param pulumi.Input[_builtins.str] phone: Specifies the mobile number of the account.
               This parameter is mandatory in **Chinese Mainland Website**.
               Changing this parameter will create a new resource.
               
               > At least one of `email` and `phone` must be specified.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value to attach to the account.
        """
        if agency_name is not None:
            pulumi.set(__self__, "agency_name", agency_name)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if email is not None:
            pulumi.set(__self__, "email", email)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if parent_id is not None:
            pulumi.set(__self__, "parent_id", parent_id)
        if phone is not None:
            pulumi.set(__self__, "phone", phone)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="agencyName")
    def agency_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the agency name of the account.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "agency_name")

    @agency_name.setter
    def agency_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "agency_name", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the account.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def email(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the email address of the account.
        This parameter is mandatory in **International Website**.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "email")

    @email.setter
    def email(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "email", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the account.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="parentId")
    def parent_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the root or organization unit in which you want to create a new
        account. The default is root ID.
        """
        return pulumi.get(self, "parent_id")

    @parent_id.setter
    def parent_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "parent_id", value)

    @_builtins.property
    @pulumi.getter
    def phone(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the mobile number of the account.
        This parameter is mandatory in **Chinese Mainland Website**.
        Changing this parameter will create a new resource.

        > At least one of `email` and `phone` must be specified.
        """
        return pulumi.get(self, "phone")

    @phone.setter
    def phone(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "phone", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the key/value to attach to the account.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _AccountState:
    def __init__(__self__, *,
                 agency_name: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 email: Optional[pulumi.Input[_builtins.str]] = None,
                 intl_number_prefix: Optional[pulumi.Input[_builtins.str]] = None,
                 joined_at: Optional[pulumi.Input[_builtins.str]] = None,
                 joined_method: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 parent_id: Optional[pulumi.Input[_builtins.str]] = None,
                 phone: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 urn: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering Account resources.
        :param pulumi.Input[_builtins.str] agency_name: Specifies the agency name of the account.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the account.
        :param pulumi.Input[_builtins.str] email: Specifies the email address of the account.
               This parameter is mandatory in **International Website**.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] intl_number_prefix: Indicates the prefix of a mobile number.
        :param pulumi.Input[_builtins.str] joined_at: Indicates the time when the account was created.
        :param pulumi.Input[_builtins.str] joined_method: Indicates how an account joined an organization.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the account.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] parent_id: Specifies the ID of the root or organization unit in which you want to create a new
               account. The default is root ID.
        :param pulumi.Input[_builtins.str] phone: Specifies the mobile number of the account.
               This parameter is mandatory in **Chinese Mainland Website**.
               Changing this parameter will create a new resource.
               
               > At least one of `email` and `phone` must be specified.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value to attach to the account.
        :param pulumi.Input[_builtins.str] urn: Indicates the uniform resource name of the account.
        """
        if agency_name is not None:
            pulumi.set(__self__, "agency_name", agency_name)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if email is not None:
            pulumi.set(__self__, "email", email)
        if intl_number_prefix is not None:
            pulumi.set(__self__, "intl_number_prefix", intl_number_prefix)
        if joined_at is not None:
            pulumi.set(__self__, "joined_at", joined_at)
        if joined_method is not None:
            pulumi.set(__self__, "joined_method", joined_method)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if parent_id is not None:
            pulumi.set(__self__, "parent_id", parent_id)
        if phone is not None:
            pulumi.set(__self__, "phone", phone)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if urn is not None:
            pulumi.set(__self__, "urn", urn)

    @_builtins.property
    @pulumi.getter(name="agencyName")
    def agency_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the agency name of the account.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "agency_name")

    @agency_name.setter
    def agency_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "agency_name", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the account.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def email(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the email address of the account.
        This parameter is mandatory in **International Website**.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "email")

    @email.setter
    def email(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "email", value)

    @_builtins.property
    @pulumi.getter(name="intlNumberPrefix")
    def intl_number_prefix(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the prefix of a mobile number.
        """
        return pulumi.get(self, "intl_number_prefix")

    @intl_number_prefix.setter
    def intl_number_prefix(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "intl_number_prefix", value)

    @_builtins.property
    @pulumi.getter(name="joinedAt")
    def joined_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the time when the account was created.
        """
        return pulumi.get(self, "joined_at")

    @joined_at.setter
    def joined_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "joined_at", value)

    @_builtins.property
    @pulumi.getter(name="joinedMethod")
    def joined_method(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates how an account joined an organization.
        """
        return pulumi.get(self, "joined_method")

    @joined_method.setter
    def joined_method(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "joined_method", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the account.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="parentId")
    def parent_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the root or organization unit in which you want to create a new
        account. The default is root ID.
        """
        return pulumi.get(self, "parent_id")

    @parent_id.setter
    def parent_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "parent_id", value)

    @_builtins.property
    @pulumi.getter
    def phone(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the mobile number of the account.
        This parameter is mandatory in **Chinese Mainland Website**.
        Changing this parameter will create a new resource.

        > At least one of `email` and `phone` must be specified.
        """
        return pulumi.get(self, "phone")

    @phone.setter
    def phone(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "phone", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the key/value to attach to the account.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter
    def urn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the uniform resource name of the account.
        """
        return pulumi.get(self, "urn")

    @urn.setter
    def urn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "urn", value)


@pulumi.type_token("huaweicloud:organizations/account:Account")
class Account(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 agency_name: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 email: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 parent_id: Optional[pulumi.Input[_builtins.str]] = None,
                 phone: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        """
        Manages an Organizations account resource within HuaweiCloud.

        > **NOTE:** Deleting Organizations account is not support. If you destroy a resource of Organizations account,
        the Organizations account is only removed from the state, but it remains in the cloud.

        ## Example Usage

        ### Account in International Website

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        test = huaweicloud.organizations.Account("test",
            name="account_test_name",
            email="account_test@demo.com")
        ```

        ### Account in Chinese Mainland Website

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        test = huaweicloud.organizations.Account("test",
            name="account_test_name",
            phone="138********")
        ```

        ## Import

        The Organizations account can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:organizations/account:Account test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include `agency_name`. It is generally recommended

        running `pulumi preview` after importing an account. You can then decide if changes should be applied to the account,

        or the resource definition should be updated to align with the account. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_organizations_account" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              agency_name,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] agency_name: Specifies the agency name of the account.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the account.
        :param pulumi.Input[_builtins.str] email: Specifies the email address of the account.
               This parameter is mandatory in **International Website**.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the account.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] parent_id: Specifies the ID of the root or organization unit in which you want to create a new
               account. The default is root ID.
        :param pulumi.Input[_builtins.str] phone: Specifies the mobile number of the account.
               This parameter is mandatory in **Chinese Mainland Website**.
               Changing this parameter will create a new resource.
               
               > At least one of `email` and `phone` must be specified.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value to attach to the account.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[AccountArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an Organizations account resource within HuaweiCloud.

        > **NOTE:** Deleting Organizations account is not support. If you destroy a resource of Organizations account,
        the Organizations account is only removed from the state, but it remains in the cloud.

        ## Example Usage

        ### Account in International Website

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        test = huaweicloud.organizations.Account("test",
            name="account_test_name",
            email="account_test@demo.com")
        ```

        ### Account in Chinese Mainland Website

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        test = huaweicloud.organizations.Account("test",
            name="account_test_name",
            phone="138********")
        ```

        ## Import

        The Organizations account can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:organizations/account:Account test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include `agency_name`. It is generally recommended

        running `pulumi preview` after importing an account. You can then decide if changes should be applied to the account,

        or the resource definition should be updated to align with the account. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_organizations_account" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              agency_name,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param AccountArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AccountArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 agency_name: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 email: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 parent_id: Optional[pulumi.Input[_builtins.str]] = None,
                 phone: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AccountArgs.__new__(AccountArgs)

            __props__.__dict__["agency_name"] = agency_name
            __props__.__dict__["description"] = description
            __props__.__dict__["email"] = email
            __props__.__dict__["name"] = name
            __props__.__dict__["parent_id"] = parent_id
            __props__.__dict__["phone"] = phone
            __props__.__dict__["tags"] = tags
            __props__.__dict__["intl_number_prefix"] = None
            __props__.__dict__["joined_at"] = None
            __props__.__dict__["joined_method"] = None
            __props__.__dict__["urn"] = None
        super(Account, __self__).__init__(
            'huaweicloud:organizations/account:Account',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            agency_name: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            email: Optional[pulumi.Input[_builtins.str]] = None,
            intl_number_prefix: Optional[pulumi.Input[_builtins.str]] = None,
            joined_at: Optional[pulumi.Input[_builtins.str]] = None,
            joined_method: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            parent_id: Optional[pulumi.Input[_builtins.str]] = None,
            phone: Optional[pulumi.Input[_builtins.str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            urn: Optional[pulumi.Input[_builtins.str]] = None) -> 'Account':
        """
        Get an existing Account resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] agency_name: Specifies the agency name of the account.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the account.
        :param pulumi.Input[_builtins.str] email: Specifies the email address of the account.
               This parameter is mandatory in **International Website**.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] intl_number_prefix: Indicates the prefix of a mobile number.
        :param pulumi.Input[_builtins.str] joined_at: Indicates the time when the account was created.
        :param pulumi.Input[_builtins.str] joined_method: Indicates how an account joined an organization.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the account.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] parent_id: Specifies the ID of the root or organization unit in which you want to create a new
               account. The default is root ID.
        :param pulumi.Input[_builtins.str] phone: Specifies the mobile number of the account.
               This parameter is mandatory in **Chinese Mainland Website**.
               Changing this parameter will create a new resource.
               
               > At least one of `email` and `phone` must be specified.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value to attach to the account.
        :param pulumi.Input[_builtins.str] urn: Indicates the uniform resource name of the account.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AccountState.__new__(_AccountState)

        __props__.__dict__["agency_name"] = agency_name
        __props__.__dict__["description"] = description
        __props__.__dict__["email"] = email
        __props__.__dict__["intl_number_prefix"] = intl_number_prefix
        __props__.__dict__["joined_at"] = joined_at
        __props__.__dict__["joined_method"] = joined_method
        __props__.__dict__["name"] = name
        __props__.__dict__["parent_id"] = parent_id
        __props__.__dict__["phone"] = phone
        __props__.__dict__["tags"] = tags
        __props__.__dict__["urn"] = urn
        return Account(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="agencyName")
    def agency_name(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the agency name of the account.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "agency_name")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the description of the account.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def email(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the email address of the account.
        This parameter is mandatory in **International Website**.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "email")

    @_builtins.property
    @pulumi.getter(name="intlNumberPrefix")
    def intl_number_prefix(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the prefix of a mobile number.
        """
        return pulumi.get(self, "intl_number_prefix")

    @_builtins.property
    @pulumi.getter(name="joinedAt")
    def joined_at(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the time when the account was created.
        """
        return pulumi.get(self, "joined_at")

    @_builtins.property
    @pulumi.getter(name="joinedMethod")
    def joined_method(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates how an account joined an organization.
        """
        return pulumi.get(self, "joined_method")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of the account.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="parentId")
    def parent_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the root or organization unit in which you want to create a new
        account. The default is root ID.
        """
        return pulumi.get(self, "parent_id")

    @_builtins.property
    @pulumi.getter
    def phone(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the mobile number of the account.
        This parameter is mandatory in **Chinese Mainland Website**.
        Changing this parameter will create a new resource.

        > At least one of `email` and `phone` must be specified.
        """
        return pulumi.get(self, "phone")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Mapping[str, _builtins.str]]:
        """
        Specifies the key/value to attach to the account.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def urn(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the uniform resource name of the account.
        """
        return pulumi.get(self, "urn")

