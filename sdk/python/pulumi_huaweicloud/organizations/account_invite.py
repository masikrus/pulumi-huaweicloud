# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['AccountInviteArgs', 'AccountInvite']

@pulumi.input_type
class AccountInviteArgs:
    def __init__(__self__, *,
                 account_id: pulumi.Input[_builtins.str],
                 remove_account_on_destroy: Optional[pulumi.Input[_builtins.bool]] = None):
        """
        The set of arguments for constructing a AccountInvite resource.
        :param pulumi.Input[_builtins.str] account_id: Specifies the ID of the target account.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] remove_account_on_destroy: Specifies whether to remove the invited account when delete the
               invitation (handshake). Defaults to false.
        """
        pulumi.set(__self__, "account_id", account_id)
        if remove_account_on_destroy is not None:
            pulumi.set(__self__, "remove_account_on_destroy", remove_account_on_destroy)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the target account.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "account_id")

    @account_id.setter
    def account_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "account_id", value)

    @_builtins.property
    @pulumi.getter(name="removeAccountOnDestroy")
    def remove_account_on_destroy(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to remove the invited account when delete the
        invitation (handshake). Defaults to false.
        """
        return pulumi.get(self, "remove_account_on_destroy")

    @remove_account_on_destroy.setter
    def remove_account_on_destroy(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "remove_account_on_destroy", value)


@pulumi.input_type
class _AccountInviteState:
    def __init__(__self__, *,
                 account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 master_account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 master_account_name: Optional[pulumi.Input[_builtins.str]] = None,
                 organization_id: Optional[pulumi.Input[_builtins.str]] = None,
                 remove_account_on_destroy: Optional[pulumi.Input[_builtins.bool]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 urn: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering AccountInvite resources.
        :param pulumi.Input[_builtins.str] account_id: Specifies the ID of the target account.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] created_at: Indicates the date and time when an invitation (handshake) request was made.
        :param pulumi.Input[_builtins.str] master_account_id: Indicates the unique ID of the organization's management account.
        :param pulumi.Input[_builtins.str] master_account_name: Indicates the name of the organization's management account.
        :param pulumi.Input[_builtins.str] organization_id: Indicates the ID of the organization.
        :param pulumi.Input[_builtins.bool] remove_account_on_destroy: Specifies whether to remove the invited account when delete the
               invitation (handshake). Defaults to false.
        :param pulumi.Input[_builtins.str] status: Indicates the current state of the invitation (handshake).
        :param pulumi.Input[_builtins.str] updated_at: Indicates the date and time when an invitation (handshake) request was accepted, canceled,
               declined, or expired.
        :param pulumi.Input[_builtins.str] urn: Indicates the uniform resource name of the invitation
        """
        if account_id is not None:
            pulumi.set(__self__, "account_id", account_id)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if master_account_id is not None:
            pulumi.set(__self__, "master_account_id", master_account_id)
        if master_account_name is not None:
            pulumi.set(__self__, "master_account_name", master_account_name)
        if organization_id is not None:
            pulumi.set(__self__, "organization_id", organization_id)
        if remove_account_on_destroy is not None:
            pulumi.set(__self__, "remove_account_on_destroy", remove_account_on_destroy)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if urn is not None:
            pulumi.set(__self__, "urn", urn)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the target account.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "account_id")

    @account_id.setter
    def account_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "account_id", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the date and time when an invitation (handshake) request was made.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="masterAccountId")
    def master_account_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the unique ID of the organization's management account.
        """
        return pulumi.get(self, "master_account_id")

    @master_account_id.setter
    def master_account_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "master_account_id", value)

    @_builtins.property
    @pulumi.getter(name="masterAccountName")
    def master_account_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the name of the organization's management account.
        """
        return pulumi.get(self, "master_account_name")

    @master_account_name.setter
    def master_account_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "master_account_name", value)

    @_builtins.property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the ID of the organization.
        """
        return pulumi.get(self, "organization_id")

    @organization_id.setter
    def organization_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "organization_id", value)

    @_builtins.property
    @pulumi.getter(name="removeAccountOnDestroy")
    def remove_account_on_destroy(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to remove the invited account when delete the
        invitation (handshake). Defaults to false.
        """
        return pulumi.get(self, "remove_account_on_destroy")

    @remove_account_on_destroy.setter
    def remove_account_on_destroy(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "remove_account_on_destroy", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the current state of the invitation (handshake).
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the date and time when an invitation (handshake) request was accepted, canceled,
        declined, or expired.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter
    def urn(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the uniform resource name of the invitation
        """
        return pulumi.get(self, "urn")

    @urn.setter
    def urn(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "urn", value)


@pulumi.type_token("huaweicloud:organizations/accountInvite:AccountInvite")
class AccountInvite(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 remove_account_on_destroy: Optional[pulumi.Input[_builtins.bool]] = None,
                 __props__=None):
        """
        Manages an Organizations account invite resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        account_id = config.require_object("accountId")
        test = huaweicloud.organizations.AccountInvite("test", account_id=account_id)
        ```

        ## Import

        The Organizations account invite can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:organizations/accountInvite:AccountInvite test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `remove_account_on_destroy`. It is

        generally recommended running `pulumi preview` after importing an account invite. You can then decide if changes should

        be applied to the account invite, or the resource definition should be updated to align with the account invite.

        Also you can ignore changes as below.

        hcl

        resource "huaweicloud_organizations_account_invite" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              remove_account_on_destroy,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] account_id: Specifies the ID of the target account.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] remove_account_on_destroy: Specifies whether to remove the invited account when delete the
               invitation (handshake). Defaults to false.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AccountInviteArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an Organizations account invite resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        account_id = config.require_object("accountId")
        test = huaweicloud.organizations.AccountInvite("test", account_id=account_id)
        ```

        ## Import

        The Organizations account invite can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:organizations/accountInvite:AccountInvite test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `remove_account_on_destroy`. It is

        generally recommended running `pulumi preview` after importing an account invite. You can then decide if changes should

        be applied to the account invite, or the resource definition should be updated to align with the account invite.

        Also you can ignore changes as below.

        hcl

        resource "huaweicloud_organizations_account_invite" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              remove_account_on_destroy,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param AccountInviteArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AccountInviteArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account_id: Optional[pulumi.Input[_builtins.str]] = None,
                 remove_account_on_destroy: Optional[pulumi.Input[_builtins.bool]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AccountInviteArgs.__new__(AccountInviteArgs)

            if account_id is None and not opts.urn:
                raise TypeError("Missing required property 'account_id'")
            __props__.__dict__["account_id"] = account_id
            __props__.__dict__["remove_account_on_destroy"] = remove_account_on_destroy
            __props__.__dict__["created_at"] = None
            __props__.__dict__["master_account_id"] = None
            __props__.__dict__["master_account_name"] = None
            __props__.__dict__["organization_id"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["updated_at"] = None
            __props__.__dict__["urn"] = None
        super(AccountInvite, __self__).__init__(
            'huaweicloud:organizations/accountInvite:AccountInvite',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            account_id: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            master_account_id: Optional[pulumi.Input[_builtins.str]] = None,
            master_account_name: Optional[pulumi.Input[_builtins.str]] = None,
            organization_id: Optional[pulumi.Input[_builtins.str]] = None,
            remove_account_on_destroy: Optional[pulumi.Input[_builtins.bool]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            urn: Optional[pulumi.Input[_builtins.str]] = None) -> 'AccountInvite':
        """
        Get an existing AccountInvite resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] account_id: Specifies the ID of the target account.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] created_at: Indicates the date and time when an invitation (handshake) request was made.
        :param pulumi.Input[_builtins.str] master_account_id: Indicates the unique ID of the organization's management account.
        :param pulumi.Input[_builtins.str] master_account_name: Indicates the name of the organization's management account.
        :param pulumi.Input[_builtins.str] organization_id: Indicates the ID of the organization.
        :param pulumi.Input[_builtins.bool] remove_account_on_destroy: Specifies whether to remove the invited account when delete the
               invitation (handshake). Defaults to false.
        :param pulumi.Input[_builtins.str] status: Indicates the current state of the invitation (handshake).
        :param pulumi.Input[_builtins.str] updated_at: Indicates the date and time when an invitation (handshake) request was accepted, canceled,
               declined, or expired.
        :param pulumi.Input[_builtins.str] urn: Indicates the uniform resource name of the invitation
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AccountInviteState.__new__(_AccountInviteState)

        __props__.__dict__["account_id"] = account_id
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["master_account_id"] = master_account_id
        __props__.__dict__["master_account_name"] = master_account_name
        __props__.__dict__["organization_id"] = organization_id
        __props__.__dict__["remove_account_on_destroy"] = remove_account_on_destroy
        __props__.__dict__["status"] = status
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["urn"] = urn
        return AccountInvite(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="accountId")
    def account_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the target account.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "account_id")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the date and time when an invitation (handshake) request was made.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="masterAccountId")
    def master_account_id(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the unique ID of the organization's management account.
        """
        return pulumi.get(self, "master_account_id")

    @_builtins.property
    @pulumi.getter(name="masterAccountName")
    def master_account_name(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the name of the organization's management account.
        """
        return pulumi.get(self, "master_account_name")

    @_builtins.property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the ID of the organization.
        """
        return pulumi.get(self, "organization_id")

    @_builtins.property
    @pulumi.getter(name="removeAccountOnDestroy")
    def remove_account_on_destroy(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether to remove the invited account when delete the
        invitation (handshake). Defaults to false.
        """
        return pulumi.get(self, "remove_account_on_destroy")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the current state of the invitation (handshake).
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the date and time when an invitation (handshake) request was accepted, canceled,
        declined, or expired.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter
    def urn(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the uniform resource name of the invitation
        """
        return pulumi.get(self, "urn")

