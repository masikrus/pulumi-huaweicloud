# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['OpenProtectionArgs', 'OpenProtection']

@pulumi.input_type
class OpenProtectionArgs:
    def __init__(__self__, *,
                 app_type_id: pulumi.Input[_builtins.int],
                 cleaning_access_pos_id: pulumi.Input[_builtins.int],
                 enable_l7: pulumi.Input[_builtins.bool],
                 floating_ip_id: pulumi.Input[_builtins.str],
                 http_request_pos_id: pulumi.Input[_builtins.int],
                 traffic_pos_id: pulumi.Input[_builtins.int],
                 antiddos_config_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a OpenProtection resource.
        :param pulumi.Input[_builtins.int] app_type_id: Specifies the application type ID. Only `0` is supported.
        :param pulumi.Input[_builtins.int] cleaning_access_pos_id: Specifies the cleaning access position ID.
               The value can be:
        :param pulumi.Input[_builtins.bool] enable_l7: Specifies whether to enable L7 protection. Only **false** is supported.
        :param pulumi.Input[_builtins.str] floating_ip_id: Specifies the ID of the EIP to enable Anti-DDoS protection for.
        :param pulumi.Input[_builtins.int] http_request_pos_id: Specifies the HTTP request position ID. Only `1` is supported.
        :param pulumi.Input[_builtins.int] traffic_pos_id: Specifies the traffic position ID.
               This field can be configured with the same value as `cleaning_access_pos_id`.
        :param pulumi.Input[_builtins.str] antiddos_config_id: Specifies the Anti-DDoS configuration ID.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this will create new resource.
        """
        pulumi.set(__self__, "app_type_id", app_type_id)
        pulumi.set(__self__, "cleaning_access_pos_id", cleaning_access_pos_id)
        pulumi.set(__self__, "enable_l7", enable_l7)
        pulumi.set(__self__, "floating_ip_id", floating_ip_id)
        pulumi.set(__self__, "http_request_pos_id", http_request_pos_id)
        pulumi.set(__self__, "traffic_pos_id", traffic_pos_id)
        if antiddos_config_id is not None:
            pulumi.set(__self__, "antiddos_config_id", antiddos_config_id)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="appTypeId")
    def app_type_id(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the application type ID. Only `0` is supported.
        """
        return pulumi.get(self, "app_type_id")

    @app_type_id.setter
    def app_type_id(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "app_type_id", value)

    @_builtins.property
    @pulumi.getter(name="cleaningAccessPosId")
    def cleaning_access_pos_id(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the cleaning access position ID.
        The value can be:
        """
        return pulumi.get(self, "cleaning_access_pos_id")

    @cleaning_access_pos_id.setter
    def cleaning_access_pos_id(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "cleaning_access_pos_id", value)

    @_builtins.property
    @pulumi.getter(name="enableL7")
    def enable_l7(self) -> pulumi.Input[_builtins.bool]:
        """
        Specifies whether to enable L7 protection. Only **false** is supported.
        """
        return pulumi.get(self, "enable_l7")

    @enable_l7.setter
    def enable_l7(self, value: pulumi.Input[_builtins.bool]):
        pulumi.set(self, "enable_l7", value)

    @_builtins.property
    @pulumi.getter(name="floatingIpId")
    def floating_ip_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the EIP to enable Anti-DDoS protection for.
        """
        return pulumi.get(self, "floating_ip_id")

    @floating_ip_id.setter
    def floating_ip_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "floating_ip_id", value)

    @_builtins.property
    @pulumi.getter(name="httpRequestPosId")
    def http_request_pos_id(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the HTTP request position ID. Only `1` is supported.
        """
        return pulumi.get(self, "http_request_pos_id")

    @http_request_pos_id.setter
    def http_request_pos_id(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "http_request_pos_id", value)

    @_builtins.property
    @pulumi.getter(name="trafficPosId")
    def traffic_pos_id(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the traffic position ID.
        This field can be configured with the same value as `cleaning_access_pos_id`.
        """
        return pulumi.get(self, "traffic_pos_id")

    @traffic_pos_id.setter
    def traffic_pos_id(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "traffic_pos_id", value)

    @_builtins.property
    @pulumi.getter(name="antiddosConfigId")
    def antiddos_config_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the Anti-DDoS configuration ID.
        """
        return pulumi.get(self, "antiddos_config_id")

    @antiddos_config_id.setter
    def antiddos_config_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "antiddos_config_id", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this will create new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _OpenProtectionState:
    def __init__(__self__, *,
                 antiddos_config_id: Optional[pulumi.Input[_builtins.str]] = None,
                 app_type_id: Optional[pulumi.Input[_builtins.int]] = None,
                 cleaning_access_pos_id: Optional[pulumi.Input[_builtins.int]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_l7: Optional[pulumi.Input[_builtins.bool]] = None,
                 floating_ip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 http_request_pos_id: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 traffic_pos_id: Optional[pulumi.Input[_builtins.int]] = None):
        """
        Input properties used for looking up and filtering OpenProtection resources.
        :param pulumi.Input[_builtins.str] antiddos_config_id: Specifies the Anti-DDoS configuration ID.
        :param pulumi.Input[_builtins.int] app_type_id: Specifies the application type ID. Only `0` is supported.
        :param pulumi.Input[_builtins.int] cleaning_access_pos_id: Specifies the cleaning access position ID.
               The value can be:
        :param pulumi.Input[_builtins.bool] enable_l7: Specifies whether to enable L7 protection. Only **false** is supported.
        :param pulumi.Input[_builtins.str] floating_ip_id: Specifies the ID of the EIP to enable Anti-DDoS protection for.
        :param pulumi.Input[_builtins.int] http_request_pos_id: Specifies the HTTP request position ID. Only `1` is supported.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this will create new resource.
        :param pulumi.Input[_builtins.int] traffic_pos_id: Specifies the traffic position ID.
               This field can be configured with the same value as `cleaning_access_pos_id`.
        """
        if antiddos_config_id is not None:
            pulumi.set(__self__, "antiddos_config_id", antiddos_config_id)
        if app_type_id is not None:
            pulumi.set(__self__, "app_type_id", app_type_id)
        if cleaning_access_pos_id is not None:
            pulumi.set(__self__, "cleaning_access_pos_id", cleaning_access_pos_id)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if enable_l7 is not None:
            pulumi.set(__self__, "enable_l7", enable_l7)
        if floating_ip_id is not None:
            pulumi.set(__self__, "floating_ip_id", floating_ip_id)
        if http_request_pos_id is not None:
            pulumi.set(__self__, "http_request_pos_id", http_request_pos_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if traffic_pos_id is not None:
            pulumi.set(__self__, "traffic_pos_id", traffic_pos_id)

    @_builtins.property
    @pulumi.getter(name="antiddosConfigId")
    def antiddos_config_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the Anti-DDoS configuration ID.
        """
        return pulumi.get(self, "antiddos_config_id")

    @antiddos_config_id.setter
    def antiddos_config_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "antiddos_config_id", value)

    @_builtins.property
    @pulumi.getter(name="appTypeId")
    def app_type_id(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the application type ID. Only `0` is supported.
        """
        return pulumi.get(self, "app_type_id")

    @app_type_id.setter
    def app_type_id(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "app_type_id", value)

    @_builtins.property
    @pulumi.getter(name="cleaningAccessPosId")
    def cleaning_access_pos_id(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the cleaning access position ID.
        The value can be:
        """
        return pulumi.get(self, "cleaning_access_pos_id")

    @cleaning_access_pos_id.setter
    def cleaning_access_pos_id(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "cleaning_access_pos_id", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="enableL7")
    def enable_l7(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to enable L7 protection. Only **false** is supported.
        """
        return pulumi.get(self, "enable_l7")

    @enable_l7.setter
    def enable_l7(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_l7", value)

    @_builtins.property
    @pulumi.getter(name="floatingIpId")
    def floating_ip_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the EIP to enable Anti-DDoS protection for.
        """
        return pulumi.get(self, "floating_ip_id")

    @floating_ip_id.setter
    def floating_ip_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "floating_ip_id", value)

    @_builtins.property
    @pulumi.getter(name="httpRequestPosId")
    def http_request_pos_id(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the HTTP request position ID. Only `1` is supported.
        """
        return pulumi.get(self, "http_request_pos_id")

    @http_request_pos_id.setter
    def http_request_pos_id(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "http_request_pos_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this will create new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="trafficPosId")
    def traffic_pos_id(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the traffic position ID.
        This field can be configured with the same value as `cleaning_access_pos_id`.
        """
        return pulumi.get(self, "traffic_pos_id")

    @traffic_pos_id.setter
    def traffic_pos_id(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "traffic_pos_id", value)


@pulumi.type_token("huaweicloud:AntiDDos/openProtection:OpenProtection")
class OpenProtection(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 antiddos_config_id: Optional[pulumi.Input[_builtins.str]] = None,
                 app_type_id: Optional[pulumi.Input[_builtins.int]] = None,
                 cleaning_access_pos_id: Optional[pulumi.Input[_builtins.int]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_l7: Optional[pulumi.Input[_builtins.bool]] = None,
                 floating_ip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 http_request_pos_id: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 traffic_pos_id: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        """
        Use this resource to open Anti-DDoS protection for an EIP.

        > This resource is a one-time action resource for opening Anti-DDoS protection. Deleting this resource will not
        disable the protection, but will only remove the resource information from the tfstate file.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        eip_id = config.require("eipId")
        app_type_id = config.require_float("appTypeId")
        cleaning_access_pos_id = config.require_float("cleaningAccessPosId")
        enable_l7 = config.require_bool("enableL7")
        http_request_pos_id = config.require_float("httpRequestPosId")
        traffic_pos_id = config.require_float("trafficPosId")
        antiddos_config_id = config.require("antiddosConfigId")
        test = huaweicloud.antiddos.OpenProtection("test",
            floating_ip_id=eip_id,
            app_type_id=app_type_id,
            cleaning_access_pos_id=cleaning_access_pos_id,
            enable_l7=enable_l7,
            http_request_pos_id=http_request_pos_id,
            traffic_pos_id=traffic_pos_id,
            antiddos_config_id=antiddos_config_id)
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] antiddos_config_id: Specifies the Anti-DDoS configuration ID.
        :param pulumi.Input[_builtins.int] app_type_id: Specifies the application type ID. Only `0` is supported.
        :param pulumi.Input[_builtins.int] cleaning_access_pos_id: Specifies the cleaning access position ID.
               The value can be:
        :param pulumi.Input[_builtins.bool] enable_l7: Specifies whether to enable L7 protection. Only **false** is supported.
        :param pulumi.Input[_builtins.str] floating_ip_id: Specifies the ID of the EIP to enable Anti-DDoS protection for.
        :param pulumi.Input[_builtins.int] http_request_pos_id: Specifies the HTTP request position ID. Only `1` is supported.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this will create new resource.
        :param pulumi.Input[_builtins.int] traffic_pos_id: Specifies the traffic position ID.
               This field can be configured with the same value as `cleaning_access_pos_id`.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OpenProtectionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Use this resource to open Anti-DDoS protection for an EIP.

        > This resource is a one-time action resource for opening Anti-DDoS protection. Deleting this resource will not
        disable the protection, but will only remove the resource information from the tfstate file.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        eip_id = config.require("eipId")
        app_type_id = config.require_float("appTypeId")
        cleaning_access_pos_id = config.require_float("cleaningAccessPosId")
        enable_l7 = config.require_bool("enableL7")
        http_request_pos_id = config.require_float("httpRequestPosId")
        traffic_pos_id = config.require_float("trafficPosId")
        antiddos_config_id = config.require("antiddosConfigId")
        test = huaweicloud.antiddos.OpenProtection("test",
            floating_ip_id=eip_id,
            app_type_id=app_type_id,
            cleaning_access_pos_id=cleaning_access_pos_id,
            enable_l7=enable_l7,
            http_request_pos_id=http_request_pos_id,
            traffic_pos_id=traffic_pos_id,
            antiddos_config_id=antiddos_config_id)
        ```

        :param str resource_name: The name of the resource.
        :param OpenProtectionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OpenProtectionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 antiddos_config_id: Optional[pulumi.Input[_builtins.str]] = None,
                 app_type_id: Optional[pulumi.Input[_builtins.int]] = None,
                 cleaning_access_pos_id: Optional[pulumi.Input[_builtins.int]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_l7: Optional[pulumi.Input[_builtins.bool]] = None,
                 floating_ip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 http_request_pos_id: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 traffic_pos_id: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OpenProtectionArgs.__new__(OpenProtectionArgs)

            __props__.__dict__["antiddos_config_id"] = antiddos_config_id
            if app_type_id is None and not opts.urn:
                raise TypeError("Missing required property 'app_type_id'")
            __props__.__dict__["app_type_id"] = app_type_id
            if cleaning_access_pos_id is None and not opts.urn:
                raise TypeError("Missing required property 'cleaning_access_pos_id'")
            __props__.__dict__["cleaning_access_pos_id"] = cleaning_access_pos_id
            __props__.__dict__["enable_force_new"] = enable_force_new
            if enable_l7 is None and not opts.urn:
                raise TypeError("Missing required property 'enable_l7'")
            __props__.__dict__["enable_l7"] = enable_l7
            if floating_ip_id is None and not opts.urn:
                raise TypeError("Missing required property 'floating_ip_id'")
            __props__.__dict__["floating_ip_id"] = floating_ip_id
            if http_request_pos_id is None and not opts.urn:
                raise TypeError("Missing required property 'http_request_pos_id'")
            __props__.__dict__["http_request_pos_id"] = http_request_pos_id
            __props__.__dict__["region"] = region
            if traffic_pos_id is None and not opts.urn:
                raise TypeError("Missing required property 'traffic_pos_id'")
            __props__.__dict__["traffic_pos_id"] = traffic_pos_id
        super(OpenProtection, __self__).__init__(
            'huaweicloud:AntiDDos/openProtection:OpenProtection',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            antiddos_config_id: Optional[pulumi.Input[_builtins.str]] = None,
            app_type_id: Optional[pulumi.Input[_builtins.int]] = None,
            cleaning_access_pos_id: Optional[pulumi.Input[_builtins.int]] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            enable_l7: Optional[pulumi.Input[_builtins.bool]] = None,
            floating_ip_id: Optional[pulumi.Input[_builtins.str]] = None,
            http_request_pos_id: Optional[pulumi.Input[_builtins.int]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            traffic_pos_id: Optional[pulumi.Input[_builtins.int]] = None) -> 'OpenProtection':
        """
        Get an existing OpenProtection resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] antiddos_config_id: Specifies the Anti-DDoS configuration ID.
        :param pulumi.Input[_builtins.int] app_type_id: Specifies the application type ID. Only `0` is supported.
        :param pulumi.Input[_builtins.int] cleaning_access_pos_id: Specifies the cleaning access position ID.
               The value can be:
        :param pulumi.Input[_builtins.bool] enable_l7: Specifies whether to enable L7 protection. Only **false** is supported.
        :param pulumi.Input[_builtins.str] floating_ip_id: Specifies the ID of the EIP to enable Anti-DDoS protection for.
        :param pulumi.Input[_builtins.int] http_request_pos_id: Specifies the HTTP request position ID. Only `1` is supported.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this will create new resource.
        :param pulumi.Input[_builtins.int] traffic_pos_id: Specifies the traffic position ID.
               This field can be configured with the same value as `cleaning_access_pos_id`.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OpenProtectionState.__new__(_OpenProtectionState)

        __props__.__dict__["antiddos_config_id"] = antiddos_config_id
        __props__.__dict__["app_type_id"] = app_type_id
        __props__.__dict__["cleaning_access_pos_id"] = cleaning_access_pos_id
        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["enable_l7"] = enable_l7
        __props__.__dict__["floating_ip_id"] = floating_ip_id
        __props__.__dict__["http_request_pos_id"] = http_request_pos_id
        __props__.__dict__["region"] = region
        __props__.__dict__["traffic_pos_id"] = traffic_pos_id
        return OpenProtection(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="antiddosConfigId")
    def antiddos_config_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the Anti-DDoS configuration ID.
        """
        return pulumi.get(self, "antiddos_config_id")

    @_builtins.property
    @pulumi.getter(name="appTypeId")
    def app_type_id(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the application type ID. Only `0` is supported.
        """
        return pulumi.get(self, "app_type_id")

    @_builtins.property
    @pulumi.getter(name="cleaningAccessPosId")
    def cleaning_access_pos_id(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the cleaning access position ID.
        The value can be:
        """
        return pulumi.get(self, "cleaning_access_pos_id")

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter(name="enableL7")
    def enable_l7(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether to enable L7 protection. Only **false** is supported.
        """
        return pulumi.get(self, "enable_l7")

    @_builtins.property
    @pulumi.getter(name="floatingIpId")
    def floating_ip_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the EIP to enable Anti-DDoS protection for.
        """
        return pulumi.get(self, "floating_ip_id")

    @_builtins.property
    @pulumi.getter(name="httpRequestPosId")
    def http_request_pos_id(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the HTTP request position ID. Only `1` is supported.
        """
        return pulumi.get(self, "http_request_pos_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this will create new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="trafficPosId")
    def traffic_pos_id(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the traffic position ID.
        This field can be configured with the same value as `cleaning_access_pos_id`.
        """
        return pulumi.get(self, "traffic_pos_id")

