# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetEipDefenseStatusesResult',
    'AwaitableGetEipDefenseStatusesResult',
    'get_eip_defense_statuses',
    'get_eip_defense_statuses_output',
]

@pulumi.output_type
class GetEipDefenseStatusesResult:
    """
    A collection of values returned by getEipDefenseStatuses.
    """
    def __init__(__self__, ddos_statuses=None, id=None, ip=None, region=None, status=None):
        if ddos_statuses and not isinstance(ddos_statuses, list):
            raise TypeError("Expected argument 'ddos_statuses' to be a list")
        pulumi.set(__self__, "ddos_statuses", ddos_statuses)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ip and not isinstance(ip, str):
            raise TypeError("Expected argument 'ip' to be a str")
        pulumi.set(__self__, "ip", ip)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter(name="ddosStatuses")
    def ddos_statuses(self) -> Sequence['outputs.GetEipDefenseStatusesDdosStatusResult']:
        """
        The list of Anti-DDos statuses.
        """
        return pulumi.get(self, "ddos_statuses")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def ip(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "ip")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[_builtins.str]:
        """
        The defense status.
        """
        return pulumi.get(self, "status")


class AwaitableGetEipDefenseStatusesResult(GetEipDefenseStatusesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetEipDefenseStatusesResult(
            ddos_statuses=self.ddos_statuses,
            id=self.id,
            ip=self.ip,
            region=self.region,
            status=self.status)


def get_eip_defense_statuses(ip: Optional[_builtins.str] = None,
                             region: Optional[_builtins.str] = None,
                             status: Optional[_builtins.str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetEipDefenseStatusesResult:
    """
    Use this data source to query the list of defense statuses of EIPs within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.AntiDDos.get_eip_defense_statuses()
    ```


    :param _builtins.str ip: Specifies the IP address. Both IPv4 and IPv6 addresses are supported. For example, if you
           enter **?ip=192.168**, the defense status of EIPs corresponding to **192.168.111.1** and **10.192.168.8** is returned.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str status: Specifies the defense status. Valid values are **normal**, **configging**, **notConfig**,
           **packetcleaning**, and **packetdropping**. Query all by default.
    """
    __args__ = dict()
    __args__['ip'] = ip
    __args__['region'] = region
    __args__['status'] = status
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:AntiDDos/getEipDefenseStatuses:getEipDefenseStatuses', __args__, opts=opts, typ=GetEipDefenseStatusesResult).value

    return AwaitableGetEipDefenseStatusesResult(
        ddos_statuses=pulumi.get(__ret__, 'ddos_statuses'),
        id=pulumi.get(__ret__, 'id'),
        ip=pulumi.get(__ret__, 'ip'),
        region=pulumi.get(__ret__, 'region'),
        status=pulumi.get(__ret__, 'status'))
def get_eip_defense_statuses_output(ip: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    status: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetEipDefenseStatusesResult]:
    """
    Use this data source to query the list of defense statuses of EIPs within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.AntiDDos.get_eip_defense_statuses()
    ```


    :param _builtins.str ip: Specifies the IP address. Both IPv4 and IPv6 addresses are supported. For example, if you
           enter **?ip=192.168**, the defense status of EIPs corresponding to **192.168.111.1** and **10.192.168.8** is returned.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str status: Specifies the defense status. Valid values are **normal**, **configging**, **notConfig**,
           **packetcleaning**, and **packetdropping**. Query all by default.
    """
    __args__ = dict()
    __args__['ip'] = ip
    __args__['region'] = region
    __args__['status'] = status
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:AntiDDos/getEipDefenseStatuses:getEipDefenseStatuses', __args__, opts=opts, typ=GetEipDefenseStatusesResult)
    return __ret__.apply(lambda __response__: GetEipDefenseStatusesResult(
        ddos_statuses=pulumi.get(__response__, 'ddos_statuses'),
        id=pulumi.get(__response__, 'id'),
        ip=pulumi.get(__response__, 'ip'),
        region=pulumi.get(__response__, 'region'),
        status=pulumi.get(__response__, 'status')))
