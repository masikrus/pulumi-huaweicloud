# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetEipDefenseStatusesV2Result',
    'AwaitableGetEipDefenseStatusesV2Result',
    'get_eip_defense_statuses_v2',
    'get_eip_defense_statuses_v2_output',
]

@pulumi.output_type
class GetEipDefenseStatusesV2Result:
    """
    A collection of values returned by getEipDefenseStatusesV2.
    """
    def __init__(__self__, ddos_statuses=None, id=None, ips=None, region=None, status=None):
        if ddos_statuses and not isinstance(ddos_statuses, list):
            raise TypeError("Expected argument 'ddos_statuses' to be a list")
        pulumi.set(__self__, "ddos_statuses", ddos_statuses)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ips and not isinstance(ips, str):
            raise TypeError("Expected argument 'ips' to be a str")
        pulumi.set(__self__, "ips", ips)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter(name="ddosStatuses")
    def ddos_statuses(self) -> Sequence['outputs.GetEipDefenseStatusesV2DdosStatusResult']:
        """
        The list of EIP defense statuses.
        The ddos_status structure is documented below.
        """
        return pulumi.get(self, "ddos_statuses")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def ips(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "ips")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[_builtins.str]:
        """
        The protection status of the EIP. Valid values are:
        + **normal**: Normal.
        + **configging**: Configuring.
        + **notConfig**: Not configured.
        + **packetcleaning**: Packet cleaning.
        + **packetdropping**: Packet dropping.
        """
        return pulumi.get(self, "status")


class AwaitableGetEipDefenseStatusesV2Result(GetEipDefenseStatusesV2Result):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetEipDefenseStatusesV2Result(
            ddos_statuses=self.ddos_statuses,
            id=self.id,
            ips=self.ips,
            region=self.region,
            status=self.status)


def get_eip_defense_statuses_v2(ips: Optional[_builtins.str] = None,
                                region: Optional[_builtins.str] = None,
                                status: Optional[_builtins.str] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetEipDefenseStatusesV2Result:
    """
    Use this data source to query the defense statuses of EIPs protected by Anti-DDoS V2.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    eip_status = config.require_object("eipStatus")
    eip_address = config.require_object("eipAddress")
    test = huaweicloud.AntiDDos.get_eip_defense_statuses_v2(status=eip_status,
        ips=eip_address)
    ```


    :param _builtins.str ips: Specifies the IP address for filtering, supports partial matching.
           For example, if you enter **192.168**, it will match IPs like **192.168.111.1** and **10.192.168.8**.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str status: Specifies the protection status of the EIP. Options are:
           + **normal**: Normal.
           + **configging**: Configuring.
           + **notConfig**: Not configured.
           + **packetcleaning**: Packet cleaning.
           + **packetdropping**: Packet dropping.
    """
    __args__ = dict()
    __args__['ips'] = ips
    __args__['region'] = region
    __args__['status'] = status
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:AntiDDos/getEipDefenseStatusesV2:getEipDefenseStatusesV2', __args__, opts=opts, typ=GetEipDefenseStatusesV2Result).value

    return AwaitableGetEipDefenseStatusesV2Result(
        ddos_statuses=pulumi.get(__ret__, 'ddos_statuses'),
        id=pulumi.get(__ret__, 'id'),
        ips=pulumi.get(__ret__, 'ips'),
        region=pulumi.get(__ret__, 'region'),
        status=pulumi.get(__ret__, 'status'))
def get_eip_defense_statuses_v2_output(ips: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                       region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                       status: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                       opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetEipDefenseStatusesV2Result]:
    """
    Use this data source to query the defense statuses of EIPs protected by Anti-DDoS V2.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    eip_status = config.require_object("eipStatus")
    eip_address = config.require_object("eipAddress")
    test = huaweicloud.AntiDDos.get_eip_defense_statuses_v2(status=eip_status,
        ips=eip_address)
    ```


    :param _builtins.str ips: Specifies the IP address for filtering, supports partial matching.
           For example, if you enter **192.168**, it will match IPs like **192.168.111.1** and **10.192.168.8**.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str status: Specifies the protection status of the EIP. Options are:
           + **normal**: Normal.
           + **configging**: Configuring.
           + **notConfig**: Not configured.
           + **packetcleaning**: Packet cleaning.
           + **packetdropping**: Packet dropping.
    """
    __args__ = dict()
    __args__['ips'] = ips
    __args__['region'] = region
    __args__['status'] = status
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:AntiDDos/getEipDefenseStatusesV2:getEipDefenseStatusesV2', __args__, opts=opts, typ=GetEipDefenseStatusesV2Result)
    return __ret__.apply(lambda __response__: GetEipDefenseStatusesV2Result(
        ddos_statuses=pulumi.get(__response__, 'ddos_statuses'),
        id=pulumi.get(__response__, 'id'),
        ips=pulumi.get(__response__, 'ips'),
        region=pulumi.get(__response__, 'region'),
        status=pulumi.get(__response__, 'status')))
