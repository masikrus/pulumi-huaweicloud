# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetWeeklyProtectionStatisticsResult',
    'AwaitableGetWeeklyProtectionStatisticsResult',
    'get_weekly_protection_statistics',
    'get_weekly_protection_statistics_output',
]

@pulumi.output_type
class GetWeeklyProtectionStatisticsResult:
    """
    A collection of values returned by getWeeklyProtectionStatistics.
    """
    def __init__(__self__, ddos_intercept_times=None, id=None, period_start_date=None, region=None, top10s=None, weekdatas=None):
        if ddos_intercept_times and not isinstance(ddos_intercept_times, int):
            raise TypeError("Expected argument 'ddos_intercept_times' to be a int")
        pulumi.set(__self__, "ddos_intercept_times", ddos_intercept_times)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if period_start_date and not isinstance(period_start_date, str):
            raise TypeError("Expected argument 'period_start_date' to be a str")
        pulumi.set(__self__, "period_start_date", period_start_date)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if top10s and not isinstance(top10s, list):
            raise TypeError("Expected argument 'top10s' to be a list")
        pulumi.set(__self__, "top10s", top10s)
        if weekdatas and not isinstance(weekdatas, list):
            raise TypeError("Expected argument 'weekdatas' to be a list")
        pulumi.set(__self__, "weekdatas", weekdatas)

    @_builtins.property
    @pulumi.getter(name="ddosInterceptTimes")
    def ddos_intercept_times(self) -> _builtins.int:
        """
        The number of DDoS attacks blocked.
        """
        return pulumi.get(self, "ddos_intercept_times")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="periodStartDate")
    def period_start_date(self) -> Optional[_builtins.str]:
        """
        The start date of the seven-day period, the value is a timestamp in milliseconds.
        """
        return pulumi.get(self, "period_start_date")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def top10s(self) -> Sequence['outputs.GetWeeklyProtectionStatisticsTop10Result']:
        """
        Top `10` attacked IP addresses.
        """
        return pulumi.get(self, "top10s")

    @_builtins.property
    @pulumi.getter
    def weekdatas(self) -> Sequence['outputs.GetWeeklyProtectionStatisticsWeekdataResult']:
        """
        The number of attacks in a week.
        """
        return pulumi.get(self, "weekdatas")


class AwaitableGetWeeklyProtectionStatisticsResult(GetWeeklyProtectionStatisticsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetWeeklyProtectionStatisticsResult(
            ddos_intercept_times=self.ddos_intercept_times,
            id=self.id,
            period_start_date=self.period_start_date,
            region=self.region,
            top10s=self.top10s,
            weekdatas=self.weekdatas)


def get_weekly_protection_statistics(period_start_date: Optional[_builtins.str] = None,
                                     region: Optional[_builtins.str] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetWeeklyProtectionStatisticsResult:
    """
    Use this data source to query Cloud Native Anti-DDos weekly protection statistics within HuaweiCloud.

    > Only supports querying weekly statistical data within four weeks.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.AntiDDos.get_weekly_protection_statistics()
    ```


    :param _builtins.str period_start_date: Specifies the start date of the seven-day period, the value is a timestamp
           in milliseconds.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['periodStartDate'] = period_start_date
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:AntiDDos/getWeeklyProtectionStatistics:getWeeklyProtectionStatistics', __args__, opts=opts, typ=GetWeeklyProtectionStatisticsResult).value

    return AwaitableGetWeeklyProtectionStatisticsResult(
        ddos_intercept_times=pulumi.get(__ret__, 'ddos_intercept_times'),
        id=pulumi.get(__ret__, 'id'),
        period_start_date=pulumi.get(__ret__, 'period_start_date'),
        region=pulumi.get(__ret__, 'region'),
        top10s=pulumi.get(__ret__, 'top10s'),
        weekdatas=pulumi.get(__ret__, 'weekdatas'))
def get_weekly_protection_statistics_output(period_start_date: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                            region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                            opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetWeeklyProtectionStatisticsResult]:
    """
    Use this data source to query Cloud Native Anti-DDos weekly protection statistics within HuaweiCloud.

    > Only supports querying weekly statistical data within four weeks.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.AntiDDos.get_weekly_protection_statistics()
    ```


    :param _builtins.str period_start_date: Specifies the start date of the seven-day period, the value is a timestamp
           in milliseconds.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['periodStartDate'] = period_start_date
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:AntiDDos/getWeeklyProtectionStatistics:getWeeklyProtectionStatistics', __args__, opts=opts, typ=GetWeeklyProtectionStatisticsResult)
    return __ret__.apply(lambda __response__: GetWeeklyProtectionStatisticsResult(
        ddos_intercept_times=pulumi.get(__response__, 'ddos_intercept_times'),
        id=pulumi.get(__response__, 'id'),
        period_start_date=pulumi.get(__response__, 'period_start_date'),
        region=pulumi.get(__response__, 'region'),
        top10s=pulumi.get(__response__, 'top10s'),
        weekdatas=pulumi.get(__response__, 'weekdatas')))
