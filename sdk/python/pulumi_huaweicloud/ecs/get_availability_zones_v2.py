# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetAvailabilityZonesV2Result',
    'AwaitableGetAvailabilityZonesV2Result',
    'get_availability_zones_v2',
    'get_availability_zones_v2_output',
]

@pulumi.output_type
class GetAvailabilityZonesV2Result:
    """
    A collection of values returned by getAvailabilityZonesV2.
    """
    def __init__(__self__, id=None, names=None, state=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if names and not isinstance(names, list):
            raise TypeError("Expected argument 'names' to be a list")
        pulumi.set(__self__, "names", names)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def names(self) -> Sequence[_builtins.str]:
        """
        The names of the availability zones, ordered alphanumerically, that match the queried `state`
        """
        return pulumi.get(self, "names")

    @_builtins.property
    @pulumi.getter
    def state(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "state")


class AwaitableGetAvailabilityZonesV2Result(GetAvailabilityZonesV2Result):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAvailabilityZonesV2Result(
            id=self.id,
            names=self.names,
            state=self.state)


def get_availability_zones_v2(state: Optional[_builtins.str] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAvailabilityZonesV2Result:
    """
    Use this data source to get a list of availability zones from HuaweiCloud

    !> **WARNING:** It has been deprecated, use `get_availability_zones` instead.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    zones = huaweicloud.Ecs.get_availability_zones_v2()
    ```


    :param _builtins.str state: The `state` of the availability zones to match, default ("available").
    """
    __args__ = dict()
    __args__['state'] = state
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Ecs/getAvailabilityZonesV2:getAvailabilityZonesV2', __args__, opts=opts, typ=GetAvailabilityZonesV2Result).value

    return AwaitableGetAvailabilityZonesV2Result(
        id=pulumi.get(__ret__, 'id'),
        names=pulumi.get(__ret__, 'names'),
        state=pulumi.get(__ret__, 'state'))
def get_availability_zones_v2_output(state: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAvailabilityZonesV2Result]:
    """
    Use this data source to get a list of availability zones from HuaweiCloud

    !> **WARNING:** It has been deprecated, use `get_availability_zones` instead.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    zones = huaweicloud.Ecs.get_availability_zones_v2()
    ```


    :param _builtins.str state: The `state` of the availability zones to match, default ("available").
    """
    __args__ = dict()
    __args__['state'] = state
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Ecs/getAvailabilityZonesV2:getAvailabilityZonesV2', __args__, opts=opts, typ=GetAvailabilityZonesV2Result)
    return __ret__.apply(lambda __response__: GetAvailabilityZonesV2Result(
        id=pulumi.get(__response__, 'id'),
        names=pulumi.get(__response__, 'names'),
        state=pulumi.get(__response__, 'state')))
