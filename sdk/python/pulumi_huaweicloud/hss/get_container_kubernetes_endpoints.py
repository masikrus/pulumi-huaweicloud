# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetContainerKubernetesEndpointsResult',
    'AwaitableGetContainerKubernetesEndpointsResult',
    'get_container_kubernetes_endpoints',
    'get_container_kubernetes_endpoints_output',
]

@pulumi.output_type
class GetContainerKubernetesEndpointsResult:
    """
    A collection of values returned by getContainerKubernetesEndpoints.
    """
    def __init__(__self__, cluster_name=None, endpoint_info_lists=None, enterprise_project_id=None, id=None, last_update_time=None, name=None, namespace=None, region=None, total_num=None):
        if cluster_name and not isinstance(cluster_name, str):
            raise TypeError("Expected argument 'cluster_name' to be a str")
        pulumi.set(__self__, "cluster_name", cluster_name)
        if endpoint_info_lists and not isinstance(endpoint_info_lists, list):
            raise TypeError("Expected argument 'endpoint_info_lists' to be a list")
        pulumi.set(__self__, "endpoint_info_lists", endpoint_info_lists)
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if last_update_time and not isinstance(last_update_time, int):
            raise TypeError("Expected argument 'last_update_time' to be a int")
        pulumi.set(__self__, "last_update_time", last_update_time)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if namespace and not isinstance(namespace, str):
            raise TypeError("Expected argument 'namespace' to be a str")
        pulumi.set(__self__, "namespace", namespace)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if total_num and not isinstance(total_num, int):
            raise TypeError("Expected argument 'total_num' to be a int")
        pulumi.set(__self__, "total_num", total_num)

    @_builtins.property
    @pulumi.getter(name="clusterName")
    def cluster_name(self) -> Optional[_builtins.str]:
        """
        The cluster name.
        """
        return pulumi.get(self, "cluster_name")

    @_builtins.property
    @pulumi.getter(name="endpointInfoLists")
    def endpoint_info_lists(self) -> Sequence['outputs.GetContainerKubernetesEndpointsEndpointInfoListResult']:
        """
        The list of endpoint information.
        The endpoint_info_list structure is documented below.
        """
        return pulumi.get(self, "endpoint_info_lists")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="lastUpdateTime")
    def last_update_time(self) -> _builtins.int:
        """
        The latest update time.
        """
        return pulumi.get(self, "last_update_time")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The endpoint name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def namespace(self) -> Optional[_builtins.str]:
        """
        The namespace.
        """
        return pulumi.get(self, "namespace")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="totalNum")
    def total_num(self) -> _builtins.int:
        """
        The total number of endpoints.
        """
        return pulumi.get(self, "total_num")


class AwaitableGetContainerKubernetesEndpointsResult(GetContainerKubernetesEndpointsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetContainerKubernetesEndpointsResult(
            cluster_name=self.cluster_name,
            endpoint_info_lists=self.endpoint_info_lists,
            enterprise_project_id=self.enterprise_project_id,
            id=self.id,
            last_update_time=self.last_update_time,
            name=self.name,
            namespace=self.namespace,
            region=self.region,
            total_num=self.total_num)


def get_container_kubernetes_endpoints(cluster_name: Optional[_builtins.str] = None,
                                       enterprise_project_id: Optional[_builtins.str] = None,
                                       name: Optional[_builtins.str] = None,
                                       namespace: Optional[_builtins.str] = None,
                                       region: Optional[_builtins.str] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetContainerKubernetesEndpointsResult:
    """
    Use this data source to get the list of HSS container kubernetes endpoints within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_container_kubernetes_endpoints()
    ```


    :param _builtins.str cluster_name: Specifies the cluster name.
    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.  
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str name: Specifies the endpoint name.
    :param _builtins.str namespace: Specifies the namespace.
    :param _builtins.str region: Specifies the region in which to query the HSS container kubernetes endpoints.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['clusterName'] = cluster_name
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['name'] = name
    __args__['namespace'] = namespace
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:hss/getContainerKubernetesEndpoints:getContainerKubernetesEndpoints', __args__, opts=opts, typ=GetContainerKubernetesEndpointsResult).value

    return AwaitableGetContainerKubernetesEndpointsResult(
        cluster_name=pulumi.get(__ret__, 'cluster_name'),
        endpoint_info_lists=pulumi.get(__ret__, 'endpoint_info_lists'),
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        id=pulumi.get(__ret__, 'id'),
        last_update_time=pulumi.get(__ret__, 'last_update_time'),
        name=pulumi.get(__ret__, 'name'),
        namespace=pulumi.get(__ret__, 'namespace'),
        region=pulumi.get(__ret__, 'region'),
        total_num=pulumi.get(__ret__, 'total_num'))
def get_container_kubernetes_endpoints_output(cluster_name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                              enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                              name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                              namespace: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                              region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                              opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetContainerKubernetesEndpointsResult]:
    """
    Use this data source to get the list of HSS container kubernetes endpoints within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_container_kubernetes_endpoints()
    ```


    :param _builtins.str cluster_name: Specifies the cluster name.
    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.  
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str name: Specifies the endpoint name.
    :param _builtins.str namespace: Specifies the namespace.
    :param _builtins.str region: Specifies the region in which to query the HSS container kubernetes endpoints.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['clusterName'] = cluster_name
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['name'] = name
    __args__['namespace'] = namespace
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:hss/getContainerKubernetesEndpoints:getContainerKubernetesEndpoints', __args__, opts=opts, typ=GetContainerKubernetesEndpointsResult)
    return __ret__.apply(lambda __response__: GetContainerKubernetesEndpointsResult(
        cluster_name=pulumi.get(__response__, 'cluster_name'),
        endpoint_info_lists=pulumi.get(__response__, 'endpoint_info_lists'),
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        id=pulumi.get(__response__, 'id'),
        last_update_time=pulumi.get(__response__, 'last_update_time'),
        name=pulumi.get(__response__, 'name'),
        namespace=pulumi.get(__response__, 'namespace'),
        region=pulumi.get(__response__, 'region'),
        total_num=pulumi.get(__response__, 'total_num')))
