# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetAntivirusPayPerScanSwitchStatusResult',
    'AwaitableGetAntivirusPayPerScanSwitchStatusResult',
    'get_antivirus_pay_per_scan_switch_status',
    'get_antivirus_pay_per_scan_switch_status_output',
]

@pulumi.output_type
class GetAntivirusPayPerScanSwitchStatusResult:
    """
    A collection of values returned by getAntivirusPayPerScanSwitchStatus.
    """
    def __init__(__self__, enabled=None, enterprise_project_id=None, id=None, region=None):
        if enabled and not isinstance(enabled, bool):
            raise TypeError("Expected argument 'enabled' to be a bool")
        pulumi.set(__self__, "enabled", enabled)
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter
    def enabled(self) -> _builtins.bool:
        """
        Is it available. The valid value can be **true** or **false**.
        """
        return pulumi.get(self, "enabled")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetAntivirusPayPerScanSwitchStatusResult(GetAntivirusPayPerScanSwitchStatusResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAntivirusPayPerScanSwitchStatusResult(
            enabled=self.enabled,
            enterprise_project_id=self.enterprise_project_id,
            id=self.id,
            region=self.region)


def get_antivirus_pay_per_scan_switch_status(enterprise_project_id: Optional[_builtins.str] = None,
                                             region: Optional[_builtins.str] = None,
                                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAntivirusPayPerScanSwitchStatusResult:
    """
    Use this data source to get the HSS antivirus pay per scan switch status within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_antivirus_pay_per_scan_switch_status()
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.  
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:hss/getAntivirusPayPerScanSwitchStatus:getAntivirusPayPerScanSwitchStatus', __args__, opts=opts, typ=GetAntivirusPayPerScanSwitchStatusResult).value

    return AwaitableGetAntivirusPayPerScanSwitchStatusResult(
        enabled=pulumi.get(__ret__, 'enabled'),
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'))
def get_antivirus_pay_per_scan_switch_status_output(enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                    region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAntivirusPayPerScanSwitchStatusResult]:
    """
    Use this data source to get the HSS antivirus pay per scan switch status within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_antivirus_pay_per_scan_switch_status()
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.  
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:hss/getAntivirusPayPerScanSwitchStatus:getAntivirusPayPerScanSwitchStatus', __args__, opts=opts, typ=GetAntivirusPayPerScanSwitchStatusResult)
    return __ret__.apply(lambda __response__: GetAntivirusPayPerScanSwitchStatusResult(
        enabled=pulumi.get(__response__, 'enabled'),
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region')))
