# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetContainerKubernetesClustersConfigsResult',
    'AwaitableGetContainerKubernetesClustersConfigsResult',
    'get_container_kubernetes_clusters_configs',
    'get_container_kubernetes_clusters_configs_output',
]

@pulumi.output_type
class GetContainerKubernetesClustersConfigsResult:
    """
    A collection of values returned by getContainerKubernetesClustersConfigs.
    """
    def __init__(__self__, cluster_id_lists=None, cluster_info_lists=None, data_lists=None, enterprise_project_id=None, id=None, region=None):
        if cluster_id_lists and not isinstance(cluster_id_lists, list):
            raise TypeError("Expected argument 'cluster_id_lists' to be a list")
        pulumi.set(__self__, "cluster_id_lists", cluster_id_lists)
        if cluster_info_lists and not isinstance(cluster_info_lists, list):
            raise TypeError("Expected argument 'cluster_info_lists' to be a list")
        pulumi.set(__self__, "cluster_info_lists", cluster_info_lists)
        if data_lists and not isinstance(data_lists, list):
            raise TypeError("Expected argument 'data_lists' to be a list")
        pulumi.set(__self__, "data_lists", data_lists)
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="clusterIdLists")
    def cluster_id_lists(self) -> Optional[Sequence[_builtins.str]]:
        return pulumi.get(self, "cluster_id_lists")

    @_builtins.property
    @pulumi.getter(name="clusterInfoLists")
    def cluster_info_lists(self) -> Sequence['outputs.GetContainerKubernetesClustersConfigsClusterInfoListResult']:
        return pulumi.get(self, "cluster_info_lists")

    @_builtins.property
    @pulumi.getter(name="dataLists")
    def data_lists(self) -> Sequence['outputs.GetContainerKubernetesClustersConfigsDataListResult']:
        """
        The list of cluster configurations.
        The data_list structure is documented below.
        """
        return pulumi.get(self, "data_lists")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetContainerKubernetesClustersConfigsResult(GetContainerKubernetesClustersConfigsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetContainerKubernetesClustersConfigsResult(
            cluster_id_lists=self.cluster_id_lists,
            cluster_info_lists=self.cluster_info_lists,
            data_lists=self.data_lists,
            enterprise_project_id=self.enterprise_project_id,
            id=self.id,
            region=self.region)


def get_container_kubernetes_clusters_configs(cluster_id_lists: Optional[Sequence[_builtins.str]] = None,
                                              cluster_info_lists: Optional[Sequence[Union['GetContainerKubernetesClustersConfigsClusterInfoListArgs', 'GetContainerKubernetesClustersConfigsClusterInfoListArgsDict']]] = None,
                                              enterprise_project_id: Optional[_builtins.str] = None,
                                              region: Optional[_builtins.str] = None,
                                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetContainerKubernetesClustersConfigsResult:
    """
    Use this data source to get HSS container kubernetes clusters configuration information within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    enterprise_project_id = config.require_object("enterpriseProjectId")
    cluster_id = config.require_object("clusterId")
    cluster_name = config.require_object("clusterName")
    test = huaweicloud.hss.get_container_kubernetes_clusters_configs(enterprise_project_id=enterprise_project_id,
        cluster_info_lists=[{
            "cluster_id": cluster_id,
            "cluster_name": cluster_name,
        }])
    ```


    :param Sequence[_builtins.str] cluster_id_lists: Specifies the cluster ID list.
    :param Sequence[Union['GetContainerKubernetesClustersConfigsClusterInfoListArgs', 'GetContainerKubernetesClustersConfigsClusterInfoListArgsDict']] cluster_info_lists: Specifies the cluster information list.
           The cluster_info_list structure is documented below.
    :param _builtins.str enterprise_project_id: Specifies the ID of the enterprise project that the server belongs to.
           The value **0** indicates the default enterprise project. To query servers in all enterprise projects, set this
           parameter to **all_granted_eps**. If you have only the permission on an enterprise project, you need to transfer the
           enterprise project ID to query the server in the enterprise project. Otherwise, an error is reported due to insufficient
           permission.
           
           > An enterprise project can be configured only after the enterprise project function is enabled.
           
           <a name="cluster_info_list_struct"></a>
           The `cluster_info_list` block supports:
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['clusterIdLists'] = cluster_id_lists
    __args__['clusterInfoLists'] = cluster_info_lists
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:hss/getContainerKubernetesClustersConfigs:getContainerKubernetesClustersConfigs', __args__, opts=opts, typ=GetContainerKubernetesClustersConfigsResult).value

    return AwaitableGetContainerKubernetesClustersConfigsResult(
        cluster_id_lists=pulumi.get(__ret__, 'cluster_id_lists'),
        cluster_info_lists=pulumi.get(__ret__, 'cluster_info_lists'),
        data_lists=pulumi.get(__ret__, 'data_lists'),
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'))
def get_container_kubernetes_clusters_configs_output(cluster_id_lists: Optional[pulumi.Input[Optional[Sequence[_builtins.str]]]] = None,
                                                     cluster_info_lists: Optional[pulumi.Input[Sequence[Union['GetContainerKubernetesClustersConfigsClusterInfoListArgs', 'GetContainerKubernetesClustersConfigsClusterInfoListArgsDict']]]] = None,
                                                     enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                     region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetContainerKubernetesClustersConfigsResult]:
    """
    Use this data source to get HSS container kubernetes clusters configuration information within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    enterprise_project_id = config.require_object("enterpriseProjectId")
    cluster_id = config.require_object("clusterId")
    cluster_name = config.require_object("clusterName")
    test = huaweicloud.hss.get_container_kubernetes_clusters_configs(enterprise_project_id=enterprise_project_id,
        cluster_info_lists=[{
            "cluster_id": cluster_id,
            "cluster_name": cluster_name,
        }])
    ```


    :param Sequence[_builtins.str] cluster_id_lists: Specifies the cluster ID list.
    :param Sequence[Union['GetContainerKubernetesClustersConfigsClusterInfoListArgs', 'GetContainerKubernetesClustersConfigsClusterInfoListArgsDict']] cluster_info_lists: Specifies the cluster information list.
           The cluster_info_list structure is documented below.
    :param _builtins.str enterprise_project_id: Specifies the ID of the enterprise project that the server belongs to.
           The value **0** indicates the default enterprise project. To query servers in all enterprise projects, set this
           parameter to **all_granted_eps**. If you have only the permission on an enterprise project, you need to transfer the
           enterprise project ID to query the server in the enterprise project. Otherwise, an error is reported due to insufficient
           permission.
           
           > An enterprise project can be configured only after the enterprise project function is enabled.
           
           <a name="cluster_info_list_struct"></a>
           The `cluster_info_list` block supports:
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['clusterIdLists'] = cluster_id_lists
    __args__['clusterInfoLists'] = cluster_info_lists
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:hss/getContainerKubernetesClustersConfigs:getContainerKubernetesClustersConfigs', __args__, opts=opts, typ=GetContainerKubernetesClustersConfigsResult)
    return __ret__.apply(lambda __response__: GetContainerKubernetesClustersConfigsResult(
        cluster_id_lists=pulumi.get(__response__, 'cluster_id_lists'),
        cluster_info_lists=pulumi.get(__response__, 'cluster_info_lists'),
        data_lists=pulumi.get(__response__, 'data_lists'),
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region')))
