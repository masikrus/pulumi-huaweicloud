# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetAssetManualCollectResult',
    'AwaitableGetAssetManualCollectResult',
    'get_asset_manual_collect',
    'get_asset_manual_collect_output',
]

@pulumi.output_type
class GetAssetManualCollectResult:
    """
    A collection of values returned by getAssetManualCollect.
    """
    def __init__(__self__, enterprise_project_id=None, host_id=None, id=None, region=None, scan_status=None, scanned_time=None, type=None):
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if host_id and not isinstance(host_id, str):
            raise TypeError("Expected argument 'host_id' to be a str")
        pulumi.set(__self__, "host_id", host_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if scan_status and not isinstance(scan_status, str):
            raise TypeError("Expected argument 'scan_status' to be a str")
        pulumi.set(__self__, "scan_status", scan_status)
        if scanned_time and not isinstance(scanned_time, int):
            raise TypeError("Expected argument 'scanned_time' to be a int")
        pulumi.set(__self__, "scanned_time", scanned_time)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="hostId")
    def host_id(self) -> _builtins.str:
        return pulumi.get(self, "host_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="scanStatus")
    def scan_status(self) -> _builtins.str:
        """
        The manual detection status.
        """
        return pulumi.get(self, "scan_status")

    @_builtins.property
    @pulumi.getter(name="scannedTime")
    def scanned_time(self) -> _builtins.int:
        """
        The detection completion time.
        """
        return pulumi.get(self, "scanned_time")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        return pulumi.get(self, "type")


class AwaitableGetAssetManualCollectResult(GetAssetManualCollectResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAssetManualCollectResult(
            enterprise_project_id=self.enterprise_project_id,
            host_id=self.host_id,
            id=self.id,
            region=self.region,
            scan_status=self.scan_status,
            scanned_time=self.scanned_time,
            type=self.type)


def get_asset_manual_collect(enterprise_project_id: Optional[_builtins.str] = None,
                             host_id: Optional[_builtins.str] = None,
                             region: Optional[_builtins.str] = None,
                             type: Optional[_builtins.str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAssetManualCollectResult:
    """
    Use this data source to query the asset fingerprint collection status of a host.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    type = config.require_object("type")
    host_id = config.require_object("hostId")
    test = huaweicloud.hss.get_asset_manual_collect(type=type,
        host_id=host_id)
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If it is necessary to operate the hosts under all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str host_id: Specifies the host ID.
    :param _builtins.str region: Specifies the region in which to create the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str type: Specifies the asset type.
           The valid values are as follows:
           + **web-app**
           + **web-service**
           + **web-framwork**
           + **web-site**
           + **midware**
           + **database**
           + **kernel-module**
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['hostId'] = host_id
    __args__['region'] = region
    __args__['type'] = type
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:hss/getAssetManualCollect:getAssetManualCollect', __args__, opts=opts, typ=GetAssetManualCollectResult).value

    return AwaitableGetAssetManualCollectResult(
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        host_id=pulumi.get(__ret__, 'host_id'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'),
        scan_status=pulumi.get(__ret__, 'scan_status'),
        scanned_time=pulumi.get(__ret__, 'scanned_time'),
        type=pulumi.get(__ret__, 'type'))
def get_asset_manual_collect_output(enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    host_id: Optional[pulumi.Input[_builtins.str]] = None,
                                    region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    type: Optional[pulumi.Input[_builtins.str]] = None,
                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAssetManualCollectResult]:
    """
    Use this data source to query the asset fingerprint collection status of a host.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    type = config.require_object("type")
    host_id = config.require_object("hostId")
    test = huaweicloud.hss.get_asset_manual_collect(type=type,
        host_id=host_id)
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If it is necessary to operate the hosts under all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str host_id: Specifies the host ID.
    :param _builtins.str region: Specifies the region in which to create the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str type: Specifies the asset type.
           The valid values are as follows:
           + **web-app**
           + **web-service**
           + **web-framwork**
           + **web-site**
           + **midware**
           + **database**
           + **kernel-module**
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['hostId'] = host_id
    __args__['region'] = region
    __args__['type'] = type
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:hss/getAssetManualCollect:getAssetManualCollect', __args__, opts=opts, typ=GetAssetManualCollectResult)
    return __ret__.apply(lambda __response__: GetAssetManualCollectResult(
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        host_id=pulumi.get(__response__, 'host_id'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region'),
        scan_status=pulumi.get(__response__, 'scan_status'),
        scanned_time=pulumi.get(__response__, 'scanned_time'),
        type=pulumi.get(__response__, 'type')))
