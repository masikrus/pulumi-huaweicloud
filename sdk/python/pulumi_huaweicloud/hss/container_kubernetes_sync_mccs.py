# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ContainerKubernetesSyncMccsArgs', 'ContainerKubernetesSyncMccs']

@pulumi.input_type
class ContainerKubernetesSyncMccsArgs:
    def __init__(__self__, *,
                 total_num: pulumi.Input[_builtins.int],
                 data_lists: Optional[pulumi.Input[Sequence[pulumi.Input['ContainerKubernetesSyncMccsDataListArgs']]]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a ContainerKubernetesSyncMccs resource.
        :param pulumi.Input[_builtins.int] total_num: Specifies the total number of clusters to synchronize.
        :param pulumi.Input[Sequence[pulumi.Input['ContainerKubernetesSyncMccsDataListArgs']]] data_lists: Specifies the list of clusters to synchronize.
               The data_list structure is documented below.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project that the server
               belongs to. The value **0** indicates the default enterprise project. To query servers in all enterprise projects,
               set this parameter to **all_granted_eps**. If you have only the permission on an enterprise project, you need to
               transfer the enterprise project ID to query the server in the enterprise project.
               Otherwise, an error is reported due to insufficient permission.
               
               > An enterprise project can be configured only after the enterprise project function is enabled.
               
               <a name="data_list_object"></a>
               The `data_list` block supports:
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "total_num", total_num)
        if data_lists is not None:
            pulumi.set(__self__, "data_lists", data_lists)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="totalNum")
    def total_num(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the total number of clusters to synchronize.
        """
        return pulumi.get(self, "total_num")

    @total_num.setter
    def total_num(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "total_num", value)

    @_builtins.property
    @pulumi.getter(name="dataLists")
    def data_lists(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ContainerKubernetesSyncMccsDataListArgs']]]]:
        """
        Specifies the list of clusters to synchronize.
        The data_list structure is documented below.
        """
        return pulumi.get(self, "data_lists")

    @data_lists.setter
    def data_lists(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ContainerKubernetesSyncMccsDataListArgs']]]]):
        pulumi.set(self, "data_lists", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the enterprise project that the server
        belongs to. The value **0** indicates the default enterprise project. To query servers in all enterprise projects,
        set this parameter to **all_granted_eps**. If you have only the permission on an enterprise project, you need to
        transfer the enterprise project ID to query the server in the enterprise project.
        Otherwise, an error is reported due to insufficient permission.

        > An enterprise project can be configured only after the enterprise project function is enabled.

        <a name="data_list_object"></a>
        The `data_list` block supports:
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _ContainerKubernetesSyncMccsState:
    def __init__(__self__, *,
                 data_lists: Optional[pulumi.Input[Sequence[pulumi.Input['ContainerKubernetesSyncMccsDataListArgs']]]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 total_num: Optional[pulumi.Input[_builtins.int]] = None):
        """
        Input properties used for looking up and filtering ContainerKubernetesSyncMccs resources.
        :param pulumi.Input[Sequence[pulumi.Input['ContainerKubernetesSyncMccsDataListArgs']]] data_lists: Specifies the list of clusters to synchronize.
               The data_list structure is documented below.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project that the server
               belongs to. The value **0** indicates the default enterprise project. To query servers in all enterprise projects,
               set this parameter to **all_granted_eps**. If you have only the permission on an enterprise project, you need to
               transfer the enterprise project ID to query the server in the enterprise project.
               Otherwise, an error is reported due to insufficient permission.
               
               > An enterprise project can be configured only after the enterprise project function is enabled.
               
               <a name="data_list_object"></a>
               The `data_list` block supports:
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] total_num: Specifies the total number of clusters to synchronize.
        """
        if data_lists is not None:
            pulumi.set(__self__, "data_lists", data_lists)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if total_num is not None:
            pulumi.set(__self__, "total_num", total_num)

    @_builtins.property
    @pulumi.getter(name="dataLists")
    def data_lists(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ContainerKubernetesSyncMccsDataListArgs']]]]:
        """
        Specifies the list of clusters to synchronize.
        The data_list structure is documented below.
        """
        return pulumi.get(self, "data_lists")

    @data_lists.setter
    def data_lists(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ContainerKubernetesSyncMccsDataListArgs']]]]):
        pulumi.set(self, "data_lists", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the enterprise project that the server
        belongs to. The value **0** indicates the default enterprise project. To query servers in all enterprise projects,
        set this parameter to **all_granted_eps**. If you have only the permission on an enterprise project, you need to
        transfer the enterprise project ID to query the server in the enterprise project.
        Otherwise, an error is reported due to insufficient permission.

        > An enterprise project can be configured only after the enterprise project function is enabled.

        <a name="data_list_object"></a>
        The `data_list` block supports:
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="totalNum")
    def total_num(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the total number of clusters to synchronize.
        """
        return pulumi.get(self, "total_num")

    @total_num.setter
    def total_num(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "total_num", value)


@pulumi.type_token("huaweicloud:hss/containerKubernetesSyncMccs:ContainerKubernetesSyncMccs")
class ContainerKubernetesSyncMccs(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 data_lists: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ContainerKubernetesSyncMccsDataListArgs', 'ContainerKubernetesSyncMccsDataListArgsDict']]]]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 total_num: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        """
        Manages a container kubernetes cluster status synchronization task within HuaweiCloud.

        > This resource is only a one-time action resource for HSS container kubernetes cluster status synchronization. Deleting
           this resource will not clear the synchronization status, but will only remove the resource information from the tf
           state file.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        cluster_id1 = config.require_object("clusterId1")
        cluster_id2 = config.require_object("clusterId2")
        test = huaweicloud.hss.ContainerKubernetesSyncMccs("test",
            total_num=2,
            enterprise_project_id="0",
            data_lists=[
                {
                    "cluster_id": cluster_id1,
                },
                {
                    "cluster_id": cluster_id2,
                },
            ])
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['ContainerKubernetesSyncMccsDataListArgs', 'ContainerKubernetesSyncMccsDataListArgsDict']]]] data_lists: Specifies the list of clusters to synchronize.
               The data_list structure is documented below.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project that the server
               belongs to. The value **0** indicates the default enterprise project. To query servers in all enterprise projects,
               set this parameter to **all_granted_eps**. If you have only the permission on an enterprise project, you need to
               transfer the enterprise project ID to query the server in the enterprise project.
               Otherwise, an error is reported due to insufficient permission.
               
               > An enterprise project can be configured only after the enterprise project function is enabled.
               
               <a name="data_list_object"></a>
               The `data_list` block supports:
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] total_num: Specifies the total number of clusters to synchronize.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ContainerKubernetesSyncMccsArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a container kubernetes cluster status synchronization task within HuaweiCloud.

        > This resource is only a one-time action resource for HSS container kubernetes cluster status synchronization. Deleting
           this resource will not clear the synchronization status, but will only remove the resource information from the tf
           state file.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        cluster_id1 = config.require_object("clusterId1")
        cluster_id2 = config.require_object("clusterId2")
        test = huaweicloud.hss.ContainerKubernetesSyncMccs("test",
            total_num=2,
            enterprise_project_id="0",
            data_lists=[
                {
                    "cluster_id": cluster_id1,
                },
                {
                    "cluster_id": cluster_id2,
                },
            ])
        ```

        :param str resource_name: The name of the resource.
        :param ContainerKubernetesSyncMccsArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ContainerKubernetesSyncMccsArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 data_lists: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ContainerKubernetesSyncMccsDataListArgs', 'ContainerKubernetesSyncMccsDataListArgsDict']]]]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 total_num: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ContainerKubernetesSyncMccsArgs.__new__(ContainerKubernetesSyncMccsArgs)

            __props__.__dict__["data_lists"] = data_lists
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            __props__.__dict__["region"] = region
            if total_num is None and not opts.urn:
                raise TypeError("Missing required property 'total_num'")
            __props__.__dict__["total_num"] = total_num
        super(ContainerKubernetesSyncMccs, __self__).__init__(
            'huaweicloud:hss/containerKubernetesSyncMccs:ContainerKubernetesSyncMccs',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            data_lists: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ContainerKubernetesSyncMccsDataListArgs', 'ContainerKubernetesSyncMccsDataListArgsDict']]]]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            total_num: Optional[pulumi.Input[_builtins.int]] = None) -> 'ContainerKubernetesSyncMccs':
        """
        Get an existing ContainerKubernetesSyncMccs resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['ContainerKubernetesSyncMccsDataListArgs', 'ContainerKubernetesSyncMccsDataListArgsDict']]]] data_lists: Specifies the list of clusters to synchronize.
               The data_list structure is documented below.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project that the server
               belongs to. The value **0** indicates the default enterprise project. To query servers in all enterprise projects,
               set this parameter to **all_granted_eps**. If you have only the permission on an enterprise project, you need to
               transfer the enterprise project ID to query the server in the enterprise project.
               Otherwise, an error is reported due to insufficient permission.
               
               > An enterprise project can be configured only after the enterprise project function is enabled.
               
               <a name="data_list_object"></a>
               The `data_list` block supports:
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] total_num: Specifies the total number of clusters to synchronize.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ContainerKubernetesSyncMccsState.__new__(_ContainerKubernetesSyncMccsState)

        __props__.__dict__["data_lists"] = data_lists
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["region"] = region
        __props__.__dict__["total_num"] = total_num
        return ContainerKubernetesSyncMccs(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="dataLists")
    def data_lists(self) -> pulumi.Output[Optional[Sequence['outputs.ContainerKubernetesSyncMccsDataList']]]:
        """
        Specifies the list of clusters to synchronize.
        The data_list structure is documented below.
        """
        return pulumi.get(self, "data_lists")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the ID of the enterprise project that the server
        belongs to. The value **0** indicates the default enterprise project. To query servers in all enterprise projects,
        set this parameter to **all_granted_eps**. If you have only the permission on an enterprise project, you need to
        transfer the enterprise project ID to query the server in the enterprise project.
        Otherwise, an error is reported due to insufficient permission.

        > An enterprise project can be configured only after the enterprise project function is enabled.

        <a name="data_list_object"></a>
        The `data_list` block supports:
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="totalNum")
    def total_num(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the total number of clusters to synchronize.
        """
        return pulumi.get(self, "total_num")

