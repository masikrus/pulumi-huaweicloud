# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetResourceQuotasResult',
    'AwaitableGetResourceQuotasResult',
    'get_resource_quotas',
    'get_resource_quotas_output',
]

@pulumi.output_type
class GetResourceQuotasResult:
    """
    A collection of values returned by getResourceQuotas.
    """
    def __init__(__self__, charging_mode=None, data_lists=None, enterprise_project_id=None, id=None, region=None, version=None):
        if charging_mode and not isinstance(charging_mode, str):
            raise TypeError("Expected argument 'charging_mode' to be a str")
        pulumi.set(__self__, "charging_mode", charging_mode)
        if data_lists and not isinstance(data_lists, list):
            raise TypeError("Expected argument 'data_lists' to be a list")
        pulumi.set(__self__, "data_lists", data_lists)
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if version and not isinstance(version, str):
            raise TypeError("Expected argument 'version' to be a str")
        pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "charging_mode")

    @_builtins.property
    @pulumi.getter(name="dataLists")
    def data_lists(self) -> Sequence['outputs.GetResourceQuotasDataListResult']:
        """
        The quota information list.
        The data_list structure is documented below.
        """
        return pulumi.get(self, "data_lists")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def version(self) -> Optional[_builtins.str]:
        """
        The HSS version The valid values are as follows:
        + **hss.version.null**: No version.
        + **hss.version.basic**: Basic edition.
        + **hss.version.advanced**: Professional edition.
        + **hss.version.enterprise**: Enterprise edition.
        + **hss.version.premium**: Premium edition.
        + **hss.version.wtp**: Web tamper protection edition.
        + **hss.version.container.enterprise**: Container edition.
        """
        return pulumi.get(self, "version")


class AwaitableGetResourceQuotasResult(GetResourceQuotasResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetResourceQuotasResult(
            charging_mode=self.charging_mode,
            data_lists=self.data_lists,
            enterprise_project_id=self.enterprise_project_id,
            id=self.id,
            region=self.region,
            version=self.version)


def get_resource_quotas(charging_mode: Optional[_builtins.str] = None,
                        enterprise_project_id: Optional[_builtins.str] = None,
                        region: Optional[_builtins.str] = None,
                        version: Optional[_builtins.str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetResourceQuotasResult:
    """
    Use this data source to get the resource quotas of HSS within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_resource_quotas(version="hss.version.basic")
    ```


    :param _builtins.str charging_mode: Specifies the billing mode. The valid values are as follows:
           + **packet_cycle**: Yearly/Monthly subscription.
           + **on_demand**: Pay-per-use.
    :param _builtins.str enterprise_project_id: Specifies the ID of the enterprise project to which the resource belongs.
           This parameter is valid only when the enterprise project function is enabled.
           The value **all_granted_eps** indicates all enterprise projects.
           If omitted, the default enterprise project will be used.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str version: Specifies the HSS version. The valid values are as follows:
           + **hss.version.null**: No version.
           + **hss.version.basic**: Basic edition.
           + **hss.version.advanced**: Professional edition.
           + **hss.version.enterprise**: Enterprise edition.
           + **hss.version.premium**: Premium edition.
           + **hss.version.wtp**: Web tamper protection edition.
           + **hss.version.container.enterprise**: Container edition.
    """
    __args__ = dict()
    __args__['chargingMode'] = charging_mode
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['region'] = region
    __args__['version'] = version
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:hss/getResourceQuotas:getResourceQuotas', __args__, opts=opts, typ=GetResourceQuotasResult).value

    return AwaitableGetResourceQuotasResult(
        charging_mode=pulumi.get(__ret__, 'charging_mode'),
        data_lists=pulumi.get(__ret__, 'data_lists'),
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'),
        version=pulumi.get(__ret__, 'version'))
def get_resource_quotas_output(charging_mode: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               version: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetResourceQuotasResult]:
    """
    Use this data source to get the resource quotas of HSS within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_resource_quotas(version="hss.version.basic")
    ```


    :param _builtins.str charging_mode: Specifies the billing mode. The valid values are as follows:
           + **packet_cycle**: Yearly/Monthly subscription.
           + **on_demand**: Pay-per-use.
    :param _builtins.str enterprise_project_id: Specifies the ID of the enterprise project to which the resource belongs.
           This parameter is valid only when the enterprise project function is enabled.
           The value **all_granted_eps** indicates all enterprise projects.
           If omitted, the default enterprise project will be used.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str version: Specifies the HSS version. The valid values are as follows:
           + **hss.version.null**: No version.
           + **hss.version.basic**: Basic edition.
           + **hss.version.advanced**: Professional edition.
           + **hss.version.enterprise**: Enterprise edition.
           + **hss.version.premium**: Premium edition.
           + **hss.version.wtp**: Web tamper protection edition.
           + **hss.version.container.enterprise**: Container edition.
    """
    __args__ = dict()
    __args__['chargingMode'] = charging_mode
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['region'] = region
    __args__['version'] = version
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:hss/getResourceQuotas:getResourceQuotas', __args__, opts=opts, typ=GetResourceQuotasResult)
    return __ret__.apply(lambda __response__: GetResourceQuotasResult(
        charging_mode=pulumi.get(__response__, 'charging_mode'),
        data_lists=pulumi.get(__response__, 'data_lists'),
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region'),
        version=pulumi.get(__response__, 'version')))
