# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetAssetStatisticsResult',
    'AwaitableGetAssetStatisticsResult',
    'get_asset_statistics',
    'get_asset_statistics_output',
]

@pulumi.output_type
class GetAssetStatisticsResult:
    """
    A collection of values returned by getAssetStatistics.
    """
    def __init__(__self__, account_num=None, app_num=None, auto_launch_num=None, category=None, database_num=None, enterprise_project_id=None, host_id=None, id=None, jar_package_num=None, kernel_module_num=None, port_num=None, process_num=None, region=None, web_app_num=None, web_framework_num=None, web_service_num=None, web_site_num=None):
        if account_num and not isinstance(account_num, int):
            raise TypeError("Expected argument 'account_num' to be a int")
        pulumi.set(__self__, "account_num", account_num)
        if app_num and not isinstance(app_num, int):
            raise TypeError("Expected argument 'app_num' to be a int")
        pulumi.set(__self__, "app_num", app_num)
        if auto_launch_num and not isinstance(auto_launch_num, int):
            raise TypeError("Expected argument 'auto_launch_num' to be a int")
        pulumi.set(__self__, "auto_launch_num", auto_launch_num)
        if category and not isinstance(category, str):
            raise TypeError("Expected argument 'category' to be a str")
        pulumi.set(__self__, "category", category)
        if database_num and not isinstance(database_num, int):
            raise TypeError("Expected argument 'database_num' to be a int")
        pulumi.set(__self__, "database_num", database_num)
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if host_id and not isinstance(host_id, str):
            raise TypeError("Expected argument 'host_id' to be a str")
        pulumi.set(__self__, "host_id", host_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if jar_package_num and not isinstance(jar_package_num, int):
            raise TypeError("Expected argument 'jar_package_num' to be a int")
        pulumi.set(__self__, "jar_package_num", jar_package_num)
        if kernel_module_num and not isinstance(kernel_module_num, int):
            raise TypeError("Expected argument 'kernel_module_num' to be a int")
        pulumi.set(__self__, "kernel_module_num", kernel_module_num)
        if port_num and not isinstance(port_num, int):
            raise TypeError("Expected argument 'port_num' to be a int")
        pulumi.set(__self__, "port_num", port_num)
        if process_num and not isinstance(process_num, int):
            raise TypeError("Expected argument 'process_num' to be a int")
        pulumi.set(__self__, "process_num", process_num)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if web_app_num and not isinstance(web_app_num, int):
            raise TypeError("Expected argument 'web_app_num' to be a int")
        pulumi.set(__self__, "web_app_num", web_app_num)
        if web_framework_num and not isinstance(web_framework_num, int):
            raise TypeError("Expected argument 'web_framework_num' to be a int")
        pulumi.set(__self__, "web_framework_num", web_framework_num)
        if web_service_num and not isinstance(web_service_num, int):
            raise TypeError("Expected argument 'web_service_num' to be a int")
        pulumi.set(__self__, "web_service_num", web_service_num)
        if web_site_num and not isinstance(web_site_num, int):
            raise TypeError("Expected argument 'web_site_num' to be a int")
        pulumi.set(__self__, "web_site_num", web_site_num)

    @_builtins.property
    @pulumi.getter(name="accountNum")
    def account_num(self) -> _builtins.int:
        """
        The number of server accounts.
        """
        return pulumi.get(self, "account_num")

    @_builtins.property
    @pulumi.getter(name="appNum")
    def app_num(self) -> _builtins.int:
        """
        The number of applications.
        """
        return pulumi.get(self, "app_num")

    @_builtins.property
    @pulumi.getter(name="autoLaunchNum")
    def auto_launch_num(self) -> _builtins.int:
        """
        The number of auto launch startup processes.
        """
        return pulumi.get(self, "auto_launch_num")

    @_builtins.property
    @pulumi.getter
    def category(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "category")

    @_builtins.property
    @pulumi.getter(name="databaseNum")
    def database_num(self) -> _builtins.int:
        """
        The number of databases.
        """
        return pulumi.get(self, "database_num")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="hostId")
    def host_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "host_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="jarPackageNum")
    def jar_package_num(self) -> _builtins.int:
        """
        The number of JAR packages.
        """
        return pulumi.get(self, "jar_package_num")

    @_builtins.property
    @pulumi.getter(name="kernelModuleNum")
    def kernel_module_num(self) -> _builtins.int:
        """
        The number of kernel modules.
        """
        return pulumi.get(self, "kernel_module_num")

    @_builtins.property
    @pulumi.getter(name="portNum")
    def port_num(self) -> _builtins.int:
        """
        The number of open ports.
        """
        return pulumi.get(self, "port_num")

    @_builtins.property
    @pulumi.getter(name="processNum")
    def process_num(self) -> _builtins.int:
        """
        The number of processes.
        """
        return pulumi.get(self, "process_num")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="webAppNum")
    def web_app_num(self) -> _builtins.int:
        """
        The number of web applications.
        """
        return pulumi.get(self, "web_app_num")

    @_builtins.property
    @pulumi.getter(name="webFrameworkNum")
    def web_framework_num(self) -> _builtins.int:
        """
        The number of web frameworks.
        """
        return pulumi.get(self, "web_framework_num")

    @_builtins.property
    @pulumi.getter(name="webServiceNum")
    def web_service_num(self) -> _builtins.int:
        """
        The number of web services.
        """
        return pulumi.get(self, "web_service_num")

    @_builtins.property
    @pulumi.getter(name="webSiteNum")
    def web_site_num(self) -> _builtins.int:
        """
        The number of web sites.
        """
        return pulumi.get(self, "web_site_num")


class AwaitableGetAssetStatisticsResult(GetAssetStatisticsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAssetStatisticsResult(
            account_num=self.account_num,
            app_num=self.app_num,
            auto_launch_num=self.auto_launch_num,
            category=self.category,
            database_num=self.database_num,
            enterprise_project_id=self.enterprise_project_id,
            host_id=self.host_id,
            id=self.id,
            jar_package_num=self.jar_package_num,
            kernel_module_num=self.kernel_module_num,
            port_num=self.port_num,
            process_num=self.process_num,
            region=self.region,
            web_app_num=self.web_app_num,
            web_framework_num=self.web_framework_num,
            web_service_num=self.web_service_num,
            web_site_num=self.web_site_num)


def get_asset_statistics(category: Optional[_builtins.str] = None,
                         enterprise_project_id: Optional[_builtins.str] = None,
                         host_id: Optional[_builtins.str] = None,
                         region: Optional[_builtins.str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAssetStatisticsResult:
    """
    Use this data source to get the list of HSS asset statistics within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_asset_statistics()
    ```


    :param _builtins.str category: Specifies the type. The default value is **host**.
           The valid values are as follows:
           + **host**: Host.
           + **container**: Container.
    :param _builtins.str enterprise_project_id: Specifies the ID of the enterprise project to which the resource belongs.
           This parameter is valid only when the enterprise project function is enabled.
           The value **all_granted_eps** indicates all enterprise projects.
           If omitted, the default enterprise project will be used.
    :param _builtins.str host_id: Specifies the host ID.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['category'] = category
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['hostId'] = host_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:hss/getAssetStatistics:getAssetStatistics', __args__, opts=opts, typ=GetAssetStatisticsResult).value

    return AwaitableGetAssetStatisticsResult(
        account_num=pulumi.get(__ret__, 'account_num'),
        app_num=pulumi.get(__ret__, 'app_num'),
        auto_launch_num=pulumi.get(__ret__, 'auto_launch_num'),
        category=pulumi.get(__ret__, 'category'),
        database_num=pulumi.get(__ret__, 'database_num'),
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        host_id=pulumi.get(__ret__, 'host_id'),
        id=pulumi.get(__ret__, 'id'),
        jar_package_num=pulumi.get(__ret__, 'jar_package_num'),
        kernel_module_num=pulumi.get(__ret__, 'kernel_module_num'),
        port_num=pulumi.get(__ret__, 'port_num'),
        process_num=pulumi.get(__ret__, 'process_num'),
        region=pulumi.get(__ret__, 'region'),
        web_app_num=pulumi.get(__ret__, 'web_app_num'),
        web_framework_num=pulumi.get(__ret__, 'web_framework_num'),
        web_service_num=pulumi.get(__ret__, 'web_service_num'),
        web_site_num=pulumi.get(__ret__, 'web_site_num'))
def get_asset_statistics_output(category: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                host_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAssetStatisticsResult]:
    """
    Use this data source to get the list of HSS asset statistics within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_asset_statistics()
    ```


    :param _builtins.str category: Specifies the type. The default value is **host**.
           The valid values are as follows:
           + **host**: Host.
           + **container**: Container.
    :param _builtins.str enterprise_project_id: Specifies the ID of the enterprise project to which the resource belongs.
           This parameter is valid only when the enterprise project function is enabled.
           The value **all_granted_eps** indicates all enterprise projects.
           If omitted, the default enterprise project will be used.
    :param _builtins.str host_id: Specifies the host ID.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['category'] = category
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['hostId'] = host_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:hss/getAssetStatistics:getAssetStatistics', __args__, opts=opts, typ=GetAssetStatisticsResult)
    return __ret__.apply(lambda __response__: GetAssetStatisticsResult(
        account_num=pulumi.get(__response__, 'account_num'),
        app_num=pulumi.get(__response__, 'app_num'),
        auto_launch_num=pulumi.get(__response__, 'auto_launch_num'),
        category=pulumi.get(__response__, 'category'),
        database_num=pulumi.get(__response__, 'database_num'),
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        host_id=pulumi.get(__response__, 'host_id'),
        id=pulumi.get(__response__, 'id'),
        jar_package_num=pulumi.get(__response__, 'jar_package_num'),
        kernel_module_num=pulumi.get(__response__, 'kernel_module_num'),
        port_num=pulumi.get(__response__, 'port_num'),
        process_num=pulumi.get(__response__, 'process_num'),
        region=pulumi.get(__response__, 'region'),
        web_app_num=pulumi.get(__response__, 'web_app_num'),
        web_framework_num=pulumi.get(__response__, 'web_framework_num'),
        web_service_num=pulumi.get(__response__, 'web_service_num'),
        web_site_num=pulumi.get(__response__, 'web_site_num')))
