# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['HostProtectionArgs', 'HostProtection']

@pulumi.input_type
class HostProtectionArgs:
    def __init__(__self__, *,
                 charging_mode: pulumi.Input[_builtins.str],
                 host_id: pulumi.Input[_builtins.str],
                 version: pulumi.Input[_builtins.str],
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 is_wait_host_available: Optional[pulumi.Input[_builtins.bool]] = None,
                 quota_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a HostProtection resource.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode for host protection.  
               The valid values are as follows:
               + **prePaid**: The yearly/monthly billing mode.
               + **postPaid**: The pay-per-use billing mode.
        :param pulumi.Input[_builtins.str] host_id: Specifies the host ID for the host protection.
               Changing this parameter will create a new resource.
               
               > Before using host protection, it is necessary to ensure that the agent status of the host is **online**.
        :param pulumi.Input[_builtins.str] version: Specifies the protection version enabled by the host.  
               The valid values are as follows:
               + **hss.version.basic**: Basic version.
               + **hss.version.advanced**: Professional version.
               + **hss.version.enterprise**: Enterprise version.
               + **hss.version.premium**: Ultimate version.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project to which the host
               protection belongs. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] is_wait_host_available: Specifies whether to wait for the host agent status to become **online**.
               The value can be **true** or **false**. Defaults to **false**.
               
               > If this field is set to **true**, the program will wait for a maximum of `30` minutes until the host's agent status
               becomes **online**, and then enable host protection.
        :param pulumi.Input[_builtins.str] quota_id: Specifies quota ID for host protection.
               If omitted, randomly select quota for the corresponding version.
               This field is valid only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] region: Specifies the region to which the HSS host protection resource belongs.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "charging_mode", charging_mode)
        pulumi.set(__self__, "host_id", host_id)
        pulumi.set(__self__, "version", version)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if is_wait_host_available is not None:
            pulumi.set(__self__, "is_wait_host_available", is_wait_host_available)
        if quota_id is not None:
            pulumi.set(__self__, "quota_id", quota_id)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the charging mode for host protection.  
        The valid values are as follows:
        + **prePaid**: The yearly/monthly billing mode.
        + **postPaid**: The pay-per-use billing mode.
        """
        return pulumi.get(self, "charging_mode")

    @charging_mode.setter
    def charging_mode(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "charging_mode", value)

    @_builtins.property
    @pulumi.getter(name="hostId")
    def host_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the host ID for the host protection.
        Changing this parameter will create a new resource.

        > Before using host protection, it is necessary to ensure that the agent status of the host is **online**.
        """
        return pulumi.get(self, "host_id")

    @host_id.setter
    def host_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "host_id", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the protection version enabled by the host.  
        The valid values are as follows:
        + **hss.version.basic**: Basic version.
        + **hss.version.advanced**: Professional version.
        + **hss.version.enterprise**: Enterprise version.
        + **hss.version.premium**: Ultimate version.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "version", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the enterprise project to which the host
        protection belongs. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="isWaitHostAvailable")
    def is_wait_host_available(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to wait for the host agent status to become **online**.
        The value can be **true** or **false**. Defaults to **false**.

        > If this field is set to **true**, the program will wait for a maximum of `30` minutes until the host's agent status
        becomes **online**, and then enable host protection.
        """
        return pulumi.get(self, "is_wait_host_available")

    @is_wait_host_available.setter
    def is_wait_host_available(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "is_wait_host_available", value)

    @_builtins.property
    @pulumi.getter(name="quotaId")
    def quota_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies quota ID for host protection.
        If omitted, randomly select quota for the corresponding version.
        This field is valid only when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "quota_id")

    @quota_id.setter
    def quota_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "quota_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region to which the HSS host protection resource belongs.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _HostProtectionState:
    def __init__(__self__, *,
                 agent_id: Optional[pulumi.Input[_builtins.str]] = None,
                 agent_status: Optional[pulumi.Input[_builtins.str]] = None,
                 asset_value: Optional[pulumi.Input[_builtins.str]] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 detect_result: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 host_name: Optional[pulumi.Input[_builtins.str]] = None,
                 host_status: Optional[pulumi.Input[_builtins.str]] = None,
                 is_wait_host_available: Optional[pulumi.Input[_builtins.bool]] = None,
                 open_time: Optional[pulumi.Input[_builtins.str]] = None,
                 os_type: Optional[pulumi.Input[_builtins.str]] = None,
                 private_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 quota_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering HostProtection resources.
        :param pulumi.Input[_builtins.str] agent_id: The agent ID installed on the host.
        :param pulumi.Input[_builtins.str] agent_status: The agent status of the host. The value can be **installed**, **not_installed**, **online**,
               **offline**, **install_failed**, or **installing**.
        :param pulumi.Input[_builtins.str] asset_value: The asset importance. The value can be **important**, **common**, or **test**.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode for host protection.  
               The valid values are as follows:
               + **prePaid**: The yearly/monthly billing mode.
               + **postPaid**: The pay-per-use billing mode.
        :param pulumi.Input[_builtins.str] detect_result: The security detection result of the host. The value can be **undetected**, **clean**, **risk**,
               or **scanning**.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project to which the host
               protection belongs. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] host_id: Specifies the host ID for the host protection.
               Changing this parameter will create a new resource.
               
               > Before using host protection, it is necessary to ensure that the agent status of the host is **online**.
        :param pulumi.Input[_builtins.str] host_name: The host name.
        :param pulumi.Input[_builtins.str] host_status: The host status. The value can be **ACTIVE**, **SHUTOFF**, **BUILDING**, or **ERROR**.
        :param pulumi.Input[_builtins.bool] is_wait_host_available: Specifies whether to wait for the host agent status to become **online**.
               The value can be **true** or **false**. Defaults to **false**.
               
               > If this field is set to **true**, the program will wait for a maximum of `30` minutes until the host's agent status
               becomes **online**, and then enable host protection.
        :param pulumi.Input[_builtins.str] open_time: The time to enable host protection.
        :param pulumi.Input[_builtins.str] os_type: The operating system type of the host. The value can be **Linux** or **Windows**.
        :param pulumi.Input[_builtins.str] private_ip: The private IP address of the host.
        :param pulumi.Input[_builtins.str] quota_id: Specifies quota ID for host protection.
               If omitted, randomly select quota for the corresponding version.
               This field is valid only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] region: Specifies the region to which the HSS host protection resource belongs.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: The protection status of the host. The value can be **closed** or **opened**.
        :param pulumi.Input[_builtins.str] version: Specifies the protection version enabled by the host.  
               The valid values are as follows:
               + **hss.version.basic**: Basic version.
               + **hss.version.advanced**: Professional version.
               + **hss.version.enterprise**: Enterprise version.
               + **hss.version.premium**: Ultimate version.
        """
        if agent_id is not None:
            pulumi.set(__self__, "agent_id", agent_id)
        if agent_status is not None:
            pulumi.set(__self__, "agent_status", agent_status)
        if asset_value is not None:
            pulumi.set(__self__, "asset_value", asset_value)
        if charging_mode is not None:
            pulumi.set(__self__, "charging_mode", charging_mode)
        if detect_result is not None:
            pulumi.set(__self__, "detect_result", detect_result)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if host_id is not None:
            pulumi.set(__self__, "host_id", host_id)
        if host_name is not None:
            pulumi.set(__self__, "host_name", host_name)
        if host_status is not None:
            pulumi.set(__self__, "host_status", host_status)
        if is_wait_host_available is not None:
            pulumi.set(__self__, "is_wait_host_available", is_wait_host_available)
        if open_time is not None:
            pulumi.set(__self__, "open_time", open_time)
        if os_type is not None:
            pulumi.set(__self__, "os_type", os_type)
        if private_ip is not None:
            pulumi.set(__self__, "private_ip", private_ip)
        if quota_id is not None:
            pulumi.set(__self__, "quota_id", quota_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter(name="agentId")
    def agent_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The agent ID installed on the host.
        """
        return pulumi.get(self, "agent_id")

    @agent_id.setter
    def agent_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "agent_id", value)

    @_builtins.property
    @pulumi.getter(name="agentStatus")
    def agent_status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The agent status of the host. The value can be **installed**, **not_installed**, **online**,
        **offline**, **install_failed**, or **installing**.
        """
        return pulumi.get(self, "agent_status")

    @agent_status.setter
    def agent_status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "agent_status", value)

    @_builtins.property
    @pulumi.getter(name="assetValue")
    def asset_value(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The asset importance. The value can be **important**, **common**, or **test**.
        """
        return pulumi.get(self, "asset_value")

    @asset_value.setter
    def asset_value(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "asset_value", value)

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the charging mode for host protection.  
        The valid values are as follows:
        + **prePaid**: The yearly/monthly billing mode.
        + **postPaid**: The pay-per-use billing mode.
        """
        return pulumi.get(self, "charging_mode")

    @charging_mode.setter
    def charging_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "charging_mode", value)

    @_builtins.property
    @pulumi.getter(name="detectResult")
    def detect_result(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The security detection result of the host. The value can be **undetected**, **clean**, **risk**,
        or **scanning**.
        """
        return pulumi.get(self, "detect_result")

    @detect_result.setter
    def detect_result(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "detect_result", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the enterprise project to which the host
        protection belongs. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="hostId")
    def host_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the host ID for the host protection.
        Changing this parameter will create a new resource.

        > Before using host protection, it is necessary to ensure that the agent status of the host is **online**.
        """
        return pulumi.get(self, "host_id")

    @host_id.setter
    def host_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "host_id", value)

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The host name.
        """
        return pulumi.get(self, "host_name")

    @host_name.setter
    def host_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "host_name", value)

    @_builtins.property
    @pulumi.getter(name="hostStatus")
    def host_status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The host status. The value can be **ACTIVE**, **SHUTOFF**, **BUILDING**, or **ERROR**.
        """
        return pulumi.get(self, "host_status")

    @host_status.setter
    def host_status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "host_status", value)

    @_builtins.property
    @pulumi.getter(name="isWaitHostAvailable")
    def is_wait_host_available(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to wait for the host agent status to become **online**.
        The value can be **true** or **false**. Defaults to **false**.

        > If this field is set to **true**, the program will wait for a maximum of `30` minutes until the host's agent status
        becomes **online**, and then enable host protection.
        """
        return pulumi.get(self, "is_wait_host_available")

    @is_wait_host_available.setter
    def is_wait_host_available(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "is_wait_host_available", value)

    @_builtins.property
    @pulumi.getter(name="openTime")
    def open_time(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The time to enable host protection.
        """
        return pulumi.get(self, "open_time")

    @open_time.setter
    def open_time(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "open_time", value)

    @_builtins.property
    @pulumi.getter(name="osType")
    def os_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The operating system type of the host. The value can be **Linux** or **Windows**.
        """
        return pulumi.get(self, "os_type")

    @os_type.setter
    def os_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "os_type", value)

    @_builtins.property
    @pulumi.getter(name="privateIp")
    def private_ip(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The private IP address of the host.
        """
        return pulumi.get(self, "private_ip")

    @private_ip.setter
    def private_ip(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "private_ip", value)

    @_builtins.property
    @pulumi.getter(name="quotaId")
    def quota_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies quota ID for host protection.
        If omitted, randomly select quota for the corresponding version.
        This field is valid only when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "quota_id")

    @quota_id.setter
    def quota_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "quota_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region to which the HSS host protection resource belongs.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The protection status of the host. The value can be **closed** or **opened**.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the protection version enabled by the host.  
        The valid values are as follows:
        + **hss.version.basic**: Basic version.
        + **hss.version.advanced**: Professional version.
        + **hss.version.enterprise**: Enterprise version.
        + **hss.version.premium**: Ultimate version.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "version", value)


@pulumi.type_token("huaweicloud:hss/hostProtection:HostProtection")
class HostProtection(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 is_wait_host_available: Optional[pulumi.Input[_builtins.bool]] = None,
                 quota_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages an HSS host protection resource within HuaweiCloud.

        ## Import

        The host protection can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:hss/hostProtection:HostProtection test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `quota_id`, `is_wait_host_available`.

        It is generally recommended running `pulumi preview` after importing a resource.

        You can then decide if changes should be applied to the resource, or the resource definition

        should be updated to align with the resource. Also, you can ignore changes as below.

        hcl

        resource "huaweicloud_hss_host_protection" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              quota_id, is_wait_host_available,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode for host protection.  
               The valid values are as follows:
               + **prePaid**: The yearly/monthly billing mode.
               + **postPaid**: The pay-per-use billing mode.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project to which the host
               protection belongs. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] host_id: Specifies the host ID for the host protection.
               Changing this parameter will create a new resource.
               
               > Before using host protection, it is necessary to ensure that the agent status of the host is **online**.
        :param pulumi.Input[_builtins.bool] is_wait_host_available: Specifies whether to wait for the host agent status to become **online**.
               The value can be **true** or **false**. Defaults to **false**.
               
               > If this field is set to **true**, the program will wait for a maximum of `30` minutes until the host's agent status
               becomes **online**, and then enable host protection.
        :param pulumi.Input[_builtins.str] quota_id: Specifies quota ID for host protection.
               If omitted, randomly select quota for the corresponding version.
               This field is valid only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] region: Specifies the region to which the HSS host protection resource belongs.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] version: Specifies the protection version enabled by the host.  
               The valid values are as follows:
               + **hss.version.basic**: Basic version.
               + **hss.version.advanced**: Professional version.
               + **hss.version.enterprise**: Enterprise version.
               + **hss.version.premium**: Ultimate version.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: HostProtectionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an HSS host protection resource within HuaweiCloud.

        ## Import

        The host protection can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:hss/hostProtection:HostProtection test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `quota_id`, `is_wait_host_available`.

        It is generally recommended running `pulumi preview` after importing a resource.

        You can then decide if changes should be applied to the resource, or the resource definition

        should be updated to align with the resource. Also, you can ignore changes as below.

        hcl

        resource "huaweicloud_hss_host_protection" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              quota_id, is_wait_host_available,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param HostProtectionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(HostProtectionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 is_wait_host_available: Optional[pulumi.Input[_builtins.bool]] = None,
                 quota_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = HostProtectionArgs.__new__(HostProtectionArgs)

            if charging_mode is None and not opts.urn:
                raise TypeError("Missing required property 'charging_mode'")
            __props__.__dict__["charging_mode"] = charging_mode
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            if host_id is None and not opts.urn:
                raise TypeError("Missing required property 'host_id'")
            __props__.__dict__["host_id"] = host_id
            __props__.__dict__["is_wait_host_available"] = is_wait_host_available
            __props__.__dict__["quota_id"] = quota_id
            __props__.__dict__["region"] = region
            if version is None and not opts.urn:
                raise TypeError("Missing required property 'version'")
            __props__.__dict__["version"] = version
            __props__.__dict__["agent_id"] = None
            __props__.__dict__["agent_status"] = None
            __props__.__dict__["asset_value"] = None
            __props__.__dict__["detect_result"] = None
            __props__.__dict__["host_name"] = None
            __props__.__dict__["host_status"] = None
            __props__.__dict__["open_time"] = None
            __props__.__dict__["os_type"] = None
            __props__.__dict__["private_ip"] = None
            __props__.__dict__["status"] = None
        super(HostProtection, __self__).__init__(
            'huaweicloud:hss/hostProtection:HostProtection',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            agent_id: Optional[pulumi.Input[_builtins.str]] = None,
            agent_status: Optional[pulumi.Input[_builtins.str]] = None,
            asset_value: Optional[pulumi.Input[_builtins.str]] = None,
            charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
            detect_result: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            host_id: Optional[pulumi.Input[_builtins.str]] = None,
            host_name: Optional[pulumi.Input[_builtins.str]] = None,
            host_status: Optional[pulumi.Input[_builtins.str]] = None,
            is_wait_host_available: Optional[pulumi.Input[_builtins.bool]] = None,
            open_time: Optional[pulumi.Input[_builtins.str]] = None,
            os_type: Optional[pulumi.Input[_builtins.str]] = None,
            private_ip: Optional[pulumi.Input[_builtins.str]] = None,
            quota_id: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            version: Optional[pulumi.Input[_builtins.str]] = None) -> 'HostProtection':
        """
        Get an existing HostProtection resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] agent_id: The agent ID installed on the host.
        :param pulumi.Input[_builtins.str] agent_status: The agent status of the host. The value can be **installed**, **not_installed**, **online**,
               **offline**, **install_failed**, or **installing**.
        :param pulumi.Input[_builtins.str] asset_value: The asset importance. The value can be **important**, **common**, or **test**.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode for host protection.  
               The valid values are as follows:
               + **prePaid**: The yearly/monthly billing mode.
               + **postPaid**: The pay-per-use billing mode.
        :param pulumi.Input[_builtins.str] detect_result: The security detection result of the host. The value can be **undetected**, **clean**, **risk**,
               or **scanning**.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project to which the host
               protection belongs. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] host_id: Specifies the host ID for the host protection.
               Changing this parameter will create a new resource.
               
               > Before using host protection, it is necessary to ensure that the agent status of the host is **online**.
        :param pulumi.Input[_builtins.str] host_name: The host name.
        :param pulumi.Input[_builtins.str] host_status: The host status. The value can be **ACTIVE**, **SHUTOFF**, **BUILDING**, or **ERROR**.
        :param pulumi.Input[_builtins.bool] is_wait_host_available: Specifies whether to wait for the host agent status to become **online**.
               The value can be **true** or **false**. Defaults to **false**.
               
               > If this field is set to **true**, the program will wait for a maximum of `30` minutes until the host's agent status
               becomes **online**, and then enable host protection.
        :param pulumi.Input[_builtins.str] open_time: The time to enable host protection.
        :param pulumi.Input[_builtins.str] os_type: The operating system type of the host. The value can be **Linux** or **Windows**.
        :param pulumi.Input[_builtins.str] private_ip: The private IP address of the host.
        :param pulumi.Input[_builtins.str] quota_id: Specifies quota ID for host protection.
               If omitted, randomly select quota for the corresponding version.
               This field is valid only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] region: Specifies the region to which the HSS host protection resource belongs.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: The protection status of the host. The value can be **closed** or **opened**.
        :param pulumi.Input[_builtins.str] version: Specifies the protection version enabled by the host.  
               The valid values are as follows:
               + **hss.version.basic**: Basic version.
               + **hss.version.advanced**: Professional version.
               + **hss.version.enterprise**: Enterprise version.
               + **hss.version.premium**: Ultimate version.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _HostProtectionState.__new__(_HostProtectionState)

        __props__.__dict__["agent_id"] = agent_id
        __props__.__dict__["agent_status"] = agent_status
        __props__.__dict__["asset_value"] = asset_value
        __props__.__dict__["charging_mode"] = charging_mode
        __props__.__dict__["detect_result"] = detect_result
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["host_id"] = host_id
        __props__.__dict__["host_name"] = host_name
        __props__.__dict__["host_status"] = host_status
        __props__.__dict__["is_wait_host_available"] = is_wait_host_available
        __props__.__dict__["open_time"] = open_time
        __props__.__dict__["os_type"] = os_type
        __props__.__dict__["private_ip"] = private_ip
        __props__.__dict__["quota_id"] = quota_id
        __props__.__dict__["region"] = region
        __props__.__dict__["status"] = status
        __props__.__dict__["version"] = version
        return HostProtection(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="agentId")
    def agent_id(self) -> pulumi.Output[_builtins.str]:
        """
        The agent ID installed on the host.
        """
        return pulumi.get(self, "agent_id")

    @_builtins.property
    @pulumi.getter(name="agentStatus")
    def agent_status(self) -> pulumi.Output[_builtins.str]:
        """
        The agent status of the host. The value can be **installed**, **not_installed**, **online**,
        **offline**, **install_failed**, or **installing**.
        """
        return pulumi.get(self, "agent_status")

    @_builtins.property
    @pulumi.getter(name="assetValue")
    def asset_value(self) -> pulumi.Output[_builtins.str]:
        """
        The asset importance. The value can be **important**, **common**, or **test**.
        """
        return pulumi.get(self, "asset_value")

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the charging mode for host protection.  
        The valid values are as follows:
        + **prePaid**: The yearly/monthly billing mode.
        + **postPaid**: The pay-per-use billing mode.
        """
        return pulumi.get(self, "charging_mode")

    @_builtins.property
    @pulumi.getter(name="detectResult")
    def detect_result(self) -> pulumi.Output[_builtins.str]:
        """
        The security detection result of the host. The value can be **undetected**, **clean**, **risk**,
        or **scanning**.
        """
        return pulumi.get(self, "detect_result")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the enterprise project to which the host
        protection belongs. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="hostId")
    def host_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the host ID for the host protection.
        Changing this parameter will create a new resource.

        > Before using host protection, it is necessary to ensure that the agent status of the host is **online**.
        """
        return pulumi.get(self, "host_id")

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> pulumi.Output[_builtins.str]:
        """
        The host name.
        """
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter(name="hostStatus")
    def host_status(self) -> pulumi.Output[_builtins.str]:
        """
        The host status. The value can be **ACTIVE**, **SHUTOFF**, **BUILDING**, or **ERROR**.
        """
        return pulumi.get(self, "host_status")

    @_builtins.property
    @pulumi.getter(name="isWaitHostAvailable")
    def is_wait_host_available(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether to wait for the host agent status to become **online**.
        The value can be **true** or **false**. Defaults to **false**.

        > If this field is set to **true**, the program will wait for a maximum of `30` minutes until the host's agent status
        becomes **online**, and then enable host protection.
        """
        return pulumi.get(self, "is_wait_host_available")

    @_builtins.property
    @pulumi.getter(name="openTime")
    def open_time(self) -> pulumi.Output[_builtins.str]:
        """
        The time to enable host protection.
        """
        return pulumi.get(self, "open_time")

    @_builtins.property
    @pulumi.getter(name="osType")
    def os_type(self) -> pulumi.Output[_builtins.str]:
        """
        The operating system type of the host. The value can be **Linux** or **Windows**.
        """
        return pulumi.get(self, "os_type")

    @_builtins.property
    @pulumi.getter(name="privateIp")
    def private_ip(self) -> pulumi.Output[_builtins.str]:
        """
        The private IP address of the host.
        """
        return pulumi.get(self, "private_ip")

    @_builtins.property
    @pulumi.getter(name="quotaId")
    def quota_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies quota ID for host protection.
        If omitted, randomly select quota for the corresponding version.
        This field is valid only when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "quota_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region to which the HSS host protection resource belongs.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The protection status of the host. The value can be **closed** or **opened**.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def version(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the protection version enabled by the host.  
        The valid values are as follows:
        + **hss.version.basic**: Basic version.
        + **hss.version.advanced**: Professional version.
        + **hss.version.enterprise**: Enterprise version.
        + **hss.version.premium**: Ultimate version.
        """
        return pulumi.get(self, "version")

