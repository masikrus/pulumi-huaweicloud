# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetAntivirusCustomScanPoliciesResult',
    'AwaitableGetAntivirusCustomScanPoliciesResult',
    'get_antivirus_custom_scan_policies',
    'get_antivirus_custom_scan_policies_output',
]

@pulumi.output_type
class GetAntivirusCustomScanPoliciesResult:
    """
    A collection of values returned by getAntivirusCustomScanPolicies.
    """
    def __init__(__self__, data_lists=None, enterprise_project_id=None, id=None, policy_name=None, region=None, total_num=None):
        if data_lists and not isinstance(data_lists, list):
            raise TypeError("Expected argument 'data_lists' to be a list")
        pulumi.set(__self__, "data_lists", data_lists)
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if policy_name and not isinstance(policy_name, str):
            raise TypeError("Expected argument 'policy_name' to be a str")
        pulumi.set(__self__, "policy_name", policy_name)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if total_num and not isinstance(total_num, int):
            raise TypeError("Expected argument 'total_num' to be a int")
        pulumi.set(__self__, "total_num", total_num)

    @_builtins.property
    @pulumi.getter(name="dataLists")
    def data_lists(self) -> Sequence['outputs.GetAntivirusCustomScanPoliciesDataListResult']:
        """
        The list of custom scan policies details.
        The data_list structure is documented below.
        """
        return pulumi.get(self, "data_lists")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="policyName")
    def policy_name(self) -> Optional[_builtins.str]:
        """
        The policy name.
        """
        return pulumi.get(self, "policy_name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="totalNum")
    def total_num(self) -> _builtins.int:
        """
        The total number of custom scan policies.
        """
        return pulumi.get(self, "total_num")


class AwaitableGetAntivirusCustomScanPoliciesResult(GetAntivirusCustomScanPoliciesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAntivirusCustomScanPoliciesResult(
            data_lists=self.data_lists,
            enterprise_project_id=self.enterprise_project_id,
            id=self.id,
            policy_name=self.policy_name,
            region=self.region,
            total_num=self.total_num)


def get_antivirus_custom_scan_policies(enterprise_project_id: Optional[_builtins.str] = None,
                                       policy_name: Optional[_builtins.str] = None,
                                       region: Optional[_builtins.str] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAntivirusCustomScanPoliciesResult:
    """
    Use this data source to get the list of HSS custom scan policies within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_antivirus_custom_scan_policies()
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.  
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str policy_name: Specifies the policy name.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['policyName'] = policy_name
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:hss/getAntivirusCustomScanPolicies:getAntivirusCustomScanPolicies', __args__, opts=opts, typ=GetAntivirusCustomScanPoliciesResult).value

    return AwaitableGetAntivirusCustomScanPoliciesResult(
        data_lists=pulumi.get(__ret__, 'data_lists'),
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        id=pulumi.get(__ret__, 'id'),
        policy_name=pulumi.get(__ret__, 'policy_name'),
        region=pulumi.get(__ret__, 'region'),
        total_num=pulumi.get(__ret__, 'total_num'))
def get_antivirus_custom_scan_policies_output(enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                              policy_name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                              region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                              opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAntivirusCustomScanPoliciesResult]:
    """
    Use this data source to get the list of HSS custom scan policies within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_antivirus_custom_scan_policies()
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.  
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str policy_name: Specifies the policy name.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['policyName'] = policy_name
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:hss/getAntivirusCustomScanPolicies:getAntivirusCustomScanPolicies', __args__, opts=opts, typ=GetAntivirusCustomScanPoliciesResult)
    return __ret__.apply(lambda __response__: GetAntivirusCustomScanPoliciesResult(
        data_lists=pulumi.get(__response__, 'data_lists'),
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        id=pulumi.get(__response__, 'id'),
        policy_name=pulumi.get(__response__, 'policy_name'),
        region=pulumi.get(__response__, 'region'),
        total_num=pulumi.get(__response__, 'total_num')))
