# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['CceProtectionArgs', 'CceProtection']

@pulumi.input_type
class CceProtectionArgs:
    def __init__(__self__, *,
                 cce_protection_type: pulumi.Input[_builtins.str],
                 charging_mode: pulumi.Input[_builtins.str],
                 cluster_id: pulumi.Input[_builtins.str],
                 cluster_name: pulumi.Input[_builtins.str],
                 cluster_type: pulumi.Input[_builtins.str],
                 agent_version: Optional[pulumi.Input[_builtins.str]] = None,
                 auto_upgrade: Optional[pulumi.Input[_builtins.bool]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 invoked_service: Optional[pulumi.Input[_builtins.str]] = None,
                 prefer_packet_cycle: Optional[pulumi.Input[_builtins.bool]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 runtime_infos: Optional[pulumi.Input[Sequence[pulumi.Input['CceProtectionRuntimeInfoArgs']]]] = None,
                 schedule_info: Optional[pulumi.Input['CceProtectionScheduleInfoArgs']] = None):
        """
        The set of arguments for constructing a CceProtection resource.
        :param pulumi.Input[_builtins.str] cce_protection_type: Specifies the CCE protection type.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode.
        :param pulumi.Input[_builtins.str] cluster_id: Specifies the CCE cluster ID.
        :param pulumi.Input[_builtins.str] cluster_name: Specifies the CCE cluster name.
        :param pulumi.Input[_builtins.str] cluster_type: Specifies the CCE cluster type.
        :param pulumi.Input[_builtins.str] agent_version: Specifies the agent version.
        :param pulumi.Input[_builtins.bool] auto_upgrade: Specifies whether to enable automatic agent upgrade.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.
        :param pulumi.Input[_builtins.str] invoked_service: Specifies the invoked service.
        :param pulumi.Input[_builtins.bool] prefer_packet_cycle: Specifies whether to prefer the package period quota.
        :param pulumi.Input[Sequence[pulumi.Input['CceProtectionRuntimeInfoArgs']]] runtime_infos: Specifies the container runtime configuration.
        :param pulumi.Input['CceProtectionScheduleInfoArgs'] schedule_info: Specifies the node scheduling information.
        """
        pulumi.set(__self__, "cce_protection_type", cce_protection_type)
        pulumi.set(__self__, "charging_mode", charging_mode)
        pulumi.set(__self__, "cluster_id", cluster_id)
        pulumi.set(__self__, "cluster_name", cluster_name)
        pulumi.set(__self__, "cluster_type", cluster_type)
        if agent_version is not None:
            pulumi.set(__self__, "agent_version", agent_version)
        if auto_upgrade is not None:
            pulumi.set(__self__, "auto_upgrade", auto_upgrade)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if invoked_service is not None:
            pulumi.set(__self__, "invoked_service", invoked_service)
        if prefer_packet_cycle is not None:
            pulumi.set(__self__, "prefer_packet_cycle", prefer_packet_cycle)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if runtime_infos is not None:
            pulumi.set(__self__, "runtime_infos", runtime_infos)
        if schedule_info is not None:
            pulumi.set(__self__, "schedule_info", schedule_info)

    @_builtins.property
    @pulumi.getter(name="cceProtectionType")
    def cce_protection_type(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the CCE protection type.
        """
        return pulumi.get(self, "cce_protection_type")

    @cce_protection_type.setter
    def cce_protection_type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "cce_protection_type", value)

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the charging mode.
        """
        return pulumi.get(self, "charging_mode")

    @charging_mode.setter
    def charging_mode(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "charging_mode", value)

    @_builtins.property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the CCE cluster ID.
        """
        return pulumi.get(self, "cluster_id")

    @cluster_id.setter
    def cluster_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "cluster_id", value)

    @_builtins.property
    @pulumi.getter(name="clusterName")
    def cluster_name(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the CCE cluster name.
        """
        return pulumi.get(self, "cluster_name")

    @cluster_name.setter
    def cluster_name(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "cluster_name", value)

    @_builtins.property
    @pulumi.getter(name="clusterType")
    def cluster_type(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the CCE cluster type.
        """
        return pulumi.get(self, "cluster_type")

    @cluster_type.setter
    def cluster_type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "cluster_type", value)

    @_builtins.property
    @pulumi.getter(name="agentVersion")
    def agent_version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the agent version.
        """
        return pulumi.get(self, "agent_version")

    @agent_version.setter
    def agent_version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "agent_version", value)

    @_builtins.property
    @pulumi.getter(name="autoUpgrade")
    def auto_upgrade(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to enable automatic agent upgrade.
        """
        return pulumi.get(self, "auto_upgrade")

    @auto_upgrade.setter
    def auto_upgrade(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "auto_upgrade", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="invokedService")
    def invoked_service(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the invoked service.
        """
        return pulumi.get(self, "invoked_service")

    @invoked_service.setter
    def invoked_service(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "invoked_service", value)

    @_builtins.property
    @pulumi.getter(name="preferPacketCycle")
    def prefer_packet_cycle(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to prefer the package period quota.
        """
        return pulumi.get(self, "prefer_packet_cycle")

    @prefer_packet_cycle.setter
    def prefer_packet_cycle(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "prefer_packet_cycle", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="runtimeInfos")
    def runtime_infos(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['CceProtectionRuntimeInfoArgs']]]]:
        """
        Specifies the container runtime configuration.
        """
        return pulumi.get(self, "runtime_infos")

    @runtime_infos.setter
    def runtime_infos(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['CceProtectionRuntimeInfoArgs']]]]):
        pulumi.set(self, "runtime_infos", value)

    @_builtins.property
    @pulumi.getter(name="scheduleInfo")
    def schedule_info(self) -> Optional[pulumi.Input['CceProtectionScheduleInfoArgs']]:
        """
        Specifies the node scheduling information.
        """
        return pulumi.get(self, "schedule_info")

    @schedule_info.setter
    def schedule_info(self, value: Optional[pulumi.Input['CceProtectionScheduleInfoArgs']]):
        pulumi.set(self, "schedule_info", value)


@pulumi.input_type
class _CceProtectionState:
    def __init__(__self__, *,
                 agent_version: Optional[pulumi.Input[_builtins.str]] = None,
                 auto_upgrade: Optional[pulumi.Input[_builtins.bool]] = None,
                 cce_protection_type: Optional[pulumi.Input[_builtins.str]] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 cluster_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cluster_name: Optional[pulumi.Input[_builtins.str]] = None,
                 cluster_type: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 fail_reason: Optional[pulumi.Input[_builtins.str]] = None,
                 invoked_service: Optional[pulumi.Input[_builtins.str]] = None,
                 node_total_num: Optional[pulumi.Input[_builtins.int]] = None,
                 prefer_packet_cycle: Optional[pulumi.Input[_builtins.bool]] = None,
                 protect_interrupt_node_num: Optional[pulumi.Input[_builtins.int]] = None,
                 protect_node_num: Optional[pulumi.Input[_builtins.int]] = None,
                 protect_status: Optional[pulumi.Input[_builtins.str]] = None,
                 protect_type: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 runtime_infos: Optional[pulumi.Input[Sequence[pulumi.Input['CceProtectionRuntimeInfoArgs']]]] = None,
                 schedule_info: Optional[pulumi.Input['CceProtectionScheduleInfoArgs']] = None,
                 unprotect_node_num: Optional[pulumi.Input[_builtins.int]] = None,
                 vpc_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering CceProtection resources.
        :param pulumi.Input[_builtins.str] agent_version: Specifies the agent version.
        :param pulumi.Input[_builtins.bool] auto_upgrade: Specifies whether to enable automatic agent upgrade.
        :param pulumi.Input[_builtins.str] cce_protection_type: Specifies the CCE protection type.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode.
        :param pulumi.Input[_builtins.str] cluster_id: Specifies the CCE cluster ID.
        :param pulumi.Input[_builtins.str] cluster_name: Specifies the CCE cluster name.
        :param pulumi.Input[_builtins.str] cluster_type: Specifies the CCE cluster type.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.
        :param pulumi.Input[_builtins.str] fail_reason: The reasons for protection failure.
        :param pulumi.Input[_builtins.str] invoked_service: Specifies the invoked service.
        :param pulumi.Input[_builtins.int] node_total_num: The total number of cluster nodes.
        :param pulumi.Input[_builtins.bool] prefer_packet_cycle: Specifies whether to prefer the package period quota.
        :param pulumi.Input[_builtins.int] protect_interrupt_node_num: The number of nodes interrupted by cluster protection.
        :param pulumi.Input[_builtins.int] protect_node_num: The number of nodes in the cluster that have protection enabled.
        :param pulumi.Input[_builtins.str] protect_status: The protection status.
        :param pulumi.Input[_builtins.str] protect_type: The protection type.
        :param pulumi.Input[Sequence[pulumi.Input['CceProtectionRuntimeInfoArgs']]] runtime_infos: Specifies the container runtime configuration.
        :param pulumi.Input['CceProtectionScheduleInfoArgs'] schedule_info: Specifies the node scheduling information.
        :param pulumi.Input[_builtins.int] unprotect_node_num: The number of unprotected nodes in the cluster.
        :param pulumi.Input[_builtins.str] vpc_id: The VPC ID.
        """
        if agent_version is not None:
            pulumi.set(__self__, "agent_version", agent_version)
        if auto_upgrade is not None:
            pulumi.set(__self__, "auto_upgrade", auto_upgrade)
        if cce_protection_type is not None:
            pulumi.set(__self__, "cce_protection_type", cce_protection_type)
        if charging_mode is not None:
            pulumi.set(__self__, "charging_mode", charging_mode)
        if cluster_id is not None:
            pulumi.set(__self__, "cluster_id", cluster_id)
        if cluster_name is not None:
            pulumi.set(__self__, "cluster_name", cluster_name)
        if cluster_type is not None:
            pulumi.set(__self__, "cluster_type", cluster_type)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if fail_reason is not None:
            pulumi.set(__self__, "fail_reason", fail_reason)
        if invoked_service is not None:
            pulumi.set(__self__, "invoked_service", invoked_service)
        if node_total_num is not None:
            pulumi.set(__self__, "node_total_num", node_total_num)
        if prefer_packet_cycle is not None:
            pulumi.set(__self__, "prefer_packet_cycle", prefer_packet_cycle)
        if protect_interrupt_node_num is not None:
            pulumi.set(__self__, "protect_interrupt_node_num", protect_interrupt_node_num)
        if protect_node_num is not None:
            pulumi.set(__self__, "protect_node_num", protect_node_num)
        if protect_status is not None:
            pulumi.set(__self__, "protect_status", protect_status)
        if protect_type is not None:
            pulumi.set(__self__, "protect_type", protect_type)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if runtime_infos is not None:
            pulumi.set(__self__, "runtime_infos", runtime_infos)
        if schedule_info is not None:
            pulumi.set(__self__, "schedule_info", schedule_info)
        if unprotect_node_num is not None:
            pulumi.set(__self__, "unprotect_node_num", unprotect_node_num)
        if vpc_id is not None:
            pulumi.set(__self__, "vpc_id", vpc_id)

    @_builtins.property
    @pulumi.getter(name="agentVersion")
    def agent_version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the agent version.
        """
        return pulumi.get(self, "agent_version")

    @agent_version.setter
    def agent_version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "agent_version", value)

    @_builtins.property
    @pulumi.getter(name="autoUpgrade")
    def auto_upgrade(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to enable automatic agent upgrade.
        """
        return pulumi.get(self, "auto_upgrade")

    @auto_upgrade.setter
    def auto_upgrade(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "auto_upgrade", value)

    @_builtins.property
    @pulumi.getter(name="cceProtectionType")
    def cce_protection_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the CCE protection type.
        """
        return pulumi.get(self, "cce_protection_type")

    @cce_protection_type.setter
    def cce_protection_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cce_protection_type", value)

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the charging mode.
        """
        return pulumi.get(self, "charging_mode")

    @charging_mode.setter
    def charging_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "charging_mode", value)

    @_builtins.property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the CCE cluster ID.
        """
        return pulumi.get(self, "cluster_id")

    @cluster_id.setter
    def cluster_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cluster_id", value)

    @_builtins.property
    @pulumi.getter(name="clusterName")
    def cluster_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the CCE cluster name.
        """
        return pulumi.get(self, "cluster_name")

    @cluster_name.setter
    def cluster_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cluster_name", value)

    @_builtins.property
    @pulumi.getter(name="clusterType")
    def cluster_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the CCE cluster type.
        """
        return pulumi.get(self, "cluster_type")

    @cluster_type.setter
    def cluster_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cluster_type", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="failReason")
    def fail_reason(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The reasons for protection failure.
        """
        return pulumi.get(self, "fail_reason")

    @fail_reason.setter
    def fail_reason(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "fail_reason", value)

    @_builtins.property
    @pulumi.getter(name="invokedService")
    def invoked_service(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the invoked service.
        """
        return pulumi.get(self, "invoked_service")

    @invoked_service.setter
    def invoked_service(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "invoked_service", value)

    @_builtins.property
    @pulumi.getter(name="nodeTotalNum")
    def node_total_num(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The total number of cluster nodes.
        """
        return pulumi.get(self, "node_total_num")

    @node_total_num.setter
    def node_total_num(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "node_total_num", value)

    @_builtins.property
    @pulumi.getter(name="preferPacketCycle")
    def prefer_packet_cycle(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to prefer the package period quota.
        """
        return pulumi.get(self, "prefer_packet_cycle")

    @prefer_packet_cycle.setter
    def prefer_packet_cycle(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "prefer_packet_cycle", value)

    @_builtins.property
    @pulumi.getter(name="protectInterruptNodeNum")
    def protect_interrupt_node_num(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The number of nodes interrupted by cluster protection.
        """
        return pulumi.get(self, "protect_interrupt_node_num")

    @protect_interrupt_node_num.setter
    def protect_interrupt_node_num(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "protect_interrupt_node_num", value)

    @_builtins.property
    @pulumi.getter(name="protectNodeNum")
    def protect_node_num(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The number of nodes in the cluster that have protection enabled.
        """
        return pulumi.get(self, "protect_node_num")

    @protect_node_num.setter
    def protect_node_num(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "protect_node_num", value)

    @_builtins.property
    @pulumi.getter(name="protectStatus")
    def protect_status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The protection status.
        """
        return pulumi.get(self, "protect_status")

    @protect_status.setter
    def protect_status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "protect_status", value)

    @_builtins.property
    @pulumi.getter(name="protectType")
    def protect_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The protection type.
        """
        return pulumi.get(self, "protect_type")

    @protect_type.setter
    def protect_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "protect_type", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="runtimeInfos")
    def runtime_infos(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['CceProtectionRuntimeInfoArgs']]]]:
        """
        Specifies the container runtime configuration.
        """
        return pulumi.get(self, "runtime_infos")

    @runtime_infos.setter
    def runtime_infos(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['CceProtectionRuntimeInfoArgs']]]]):
        pulumi.set(self, "runtime_infos", value)

    @_builtins.property
    @pulumi.getter(name="scheduleInfo")
    def schedule_info(self) -> Optional[pulumi.Input['CceProtectionScheduleInfoArgs']]:
        """
        Specifies the node scheduling information.
        """
        return pulumi.get(self, "schedule_info")

    @schedule_info.setter
    def schedule_info(self, value: Optional[pulumi.Input['CceProtectionScheduleInfoArgs']]):
        pulumi.set(self, "schedule_info", value)

    @_builtins.property
    @pulumi.getter(name="unprotectNodeNum")
    def unprotect_node_num(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The number of unprotected nodes in the cluster.
        """
        return pulumi.get(self, "unprotect_node_num")

    @unprotect_node_num.setter
    def unprotect_node_num(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "unprotect_node_num", value)

    @_builtins.property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The VPC ID.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "vpc_id", value)


@pulumi.type_token("huaweicloud:hss/cceProtection:CceProtection")
class CceProtection(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 agent_version: Optional[pulumi.Input[_builtins.str]] = None,
                 auto_upgrade: Optional[pulumi.Input[_builtins.bool]] = None,
                 cce_protection_type: Optional[pulumi.Input[_builtins.str]] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 cluster_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cluster_name: Optional[pulumi.Input[_builtins.str]] = None,
                 cluster_type: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 invoked_service: Optional[pulumi.Input[_builtins.str]] = None,
                 prefer_packet_cycle: Optional[pulumi.Input[_builtins.bool]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 runtime_infos: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CceProtectionRuntimeInfoArgs', 'CceProtectionRuntimeInfoArgsDict']]]]] = None,
                 schedule_info: Optional[pulumi.Input[Union['CceProtectionScheduleInfoArgs', 'CceProtectionScheduleInfoArgsDict']]] = None,
                 __props__=None):
        """
        Create a CceProtection resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] agent_version: Specifies the agent version.
        :param pulumi.Input[_builtins.bool] auto_upgrade: Specifies whether to enable automatic agent upgrade.
        :param pulumi.Input[_builtins.str] cce_protection_type: Specifies the CCE protection type.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode.
        :param pulumi.Input[_builtins.str] cluster_id: Specifies the CCE cluster ID.
        :param pulumi.Input[_builtins.str] cluster_name: Specifies the CCE cluster name.
        :param pulumi.Input[_builtins.str] cluster_type: Specifies the CCE cluster type.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.
        :param pulumi.Input[_builtins.str] invoked_service: Specifies the invoked service.
        :param pulumi.Input[_builtins.bool] prefer_packet_cycle: Specifies whether to prefer the package period quota.
        :param pulumi.Input[Sequence[pulumi.Input[Union['CceProtectionRuntimeInfoArgs', 'CceProtectionRuntimeInfoArgsDict']]]] runtime_infos: Specifies the container runtime configuration.
        :param pulumi.Input[Union['CceProtectionScheduleInfoArgs', 'CceProtectionScheduleInfoArgsDict']] schedule_info: Specifies the node scheduling information.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CceProtectionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a CceProtection resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param CceProtectionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CceProtectionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 agent_version: Optional[pulumi.Input[_builtins.str]] = None,
                 auto_upgrade: Optional[pulumi.Input[_builtins.bool]] = None,
                 cce_protection_type: Optional[pulumi.Input[_builtins.str]] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 cluster_id: Optional[pulumi.Input[_builtins.str]] = None,
                 cluster_name: Optional[pulumi.Input[_builtins.str]] = None,
                 cluster_type: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 invoked_service: Optional[pulumi.Input[_builtins.str]] = None,
                 prefer_packet_cycle: Optional[pulumi.Input[_builtins.bool]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 runtime_infos: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CceProtectionRuntimeInfoArgs', 'CceProtectionRuntimeInfoArgsDict']]]]] = None,
                 schedule_info: Optional[pulumi.Input[Union['CceProtectionScheduleInfoArgs', 'CceProtectionScheduleInfoArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CceProtectionArgs.__new__(CceProtectionArgs)

            __props__.__dict__["agent_version"] = agent_version
            __props__.__dict__["auto_upgrade"] = auto_upgrade
            if cce_protection_type is None and not opts.urn:
                raise TypeError("Missing required property 'cce_protection_type'")
            __props__.__dict__["cce_protection_type"] = cce_protection_type
            if charging_mode is None and not opts.urn:
                raise TypeError("Missing required property 'charging_mode'")
            __props__.__dict__["charging_mode"] = charging_mode
            if cluster_id is None and not opts.urn:
                raise TypeError("Missing required property 'cluster_id'")
            __props__.__dict__["cluster_id"] = cluster_id
            if cluster_name is None and not opts.urn:
                raise TypeError("Missing required property 'cluster_name'")
            __props__.__dict__["cluster_name"] = cluster_name
            if cluster_type is None and not opts.urn:
                raise TypeError("Missing required property 'cluster_type'")
            __props__.__dict__["cluster_type"] = cluster_type
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            __props__.__dict__["invoked_service"] = invoked_service
            __props__.__dict__["prefer_packet_cycle"] = prefer_packet_cycle
            __props__.__dict__["region"] = region
            __props__.__dict__["runtime_infos"] = runtime_infos
            __props__.__dict__["schedule_info"] = schedule_info
            __props__.__dict__["fail_reason"] = None
            __props__.__dict__["node_total_num"] = None
            __props__.__dict__["protect_interrupt_node_num"] = None
            __props__.__dict__["protect_node_num"] = None
            __props__.__dict__["protect_status"] = None
            __props__.__dict__["protect_type"] = None
            __props__.__dict__["unprotect_node_num"] = None
            __props__.__dict__["vpc_id"] = None
        super(CceProtection, __self__).__init__(
            'huaweicloud:hss/cceProtection:CceProtection',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            agent_version: Optional[pulumi.Input[_builtins.str]] = None,
            auto_upgrade: Optional[pulumi.Input[_builtins.bool]] = None,
            cce_protection_type: Optional[pulumi.Input[_builtins.str]] = None,
            charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
            cluster_id: Optional[pulumi.Input[_builtins.str]] = None,
            cluster_name: Optional[pulumi.Input[_builtins.str]] = None,
            cluster_type: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            fail_reason: Optional[pulumi.Input[_builtins.str]] = None,
            invoked_service: Optional[pulumi.Input[_builtins.str]] = None,
            node_total_num: Optional[pulumi.Input[_builtins.int]] = None,
            prefer_packet_cycle: Optional[pulumi.Input[_builtins.bool]] = None,
            protect_interrupt_node_num: Optional[pulumi.Input[_builtins.int]] = None,
            protect_node_num: Optional[pulumi.Input[_builtins.int]] = None,
            protect_status: Optional[pulumi.Input[_builtins.str]] = None,
            protect_type: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            runtime_infos: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CceProtectionRuntimeInfoArgs', 'CceProtectionRuntimeInfoArgsDict']]]]] = None,
            schedule_info: Optional[pulumi.Input[Union['CceProtectionScheduleInfoArgs', 'CceProtectionScheduleInfoArgsDict']]] = None,
            unprotect_node_num: Optional[pulumi.Input[_builtins.int]] = None,
            vpc_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'CceProtection':
        """
        Get an existing CceProtection resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] agent_version: Specifies the agent version.
        :param pulumi.Input[_builtins.bool] auto_upgrade: Specifies whether to enable automatic agent upgrade.
        :param pulumi.Input[_builtins.str] cce_protection_type: Specifies the CCE protection type.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode.
        :param pulumi.Input[_builtins.str] cluster_id: Specifies the CCE cluster ID.
        :param pulumi.Input[_builtins.str] cluster_name: Specifies the CCE cluster name.
        :param pulumi.Input[_builtins.str] cluster_type: Specifies the CCE cluster type.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.
        :param pulumi.Input[_builtins.str] fail_reason: The reasons for protection failure.
        :param pulumi.Input[_builtins.str] invoked_service: Specifies the invoked service.
        :param pulumi.Input[_builtins.int] node_total_num: The total number of cluster nodes.
        :param pulumi.Input[_builtins.bool] prefer_packet_cycle: Specifies whether to prefer the package period quota.
        :param pulumi.Input[_builtins.int] protect_interrupt_node_num: The number of nodes interrupted by cluster protection.
        :param pulumi.Input[_builtins.int] protect_node_num: The number of nodes in the cluster that have protection enabled.
        :param pulumi.Input[_builtins.str] protect_status: The protection status.
        :param pulumi.Input[_builtins.str] protect_type: The protection type.
        :param pulumi.Input[Sequence[pulumi.Input[Union['CceProtectionRuntimeInfoArgs', 'CceProtectionRuntimeInfoArgsDict']]]] runtime_infos: Specifies the container runtime configuration.
        :param pulumi.Input[Union['CceProtectionScheduleInfoArgs', 'CceProtectionScheduleInfoArgsDict']] schedule_info: Specifies the node scheduling information.
        :param pulumi.Input[_builtins.int] unprotect_node_num: The number of unprotected nodes in the cluster.
        :param pulumi.Input[_builtins.str] vpc_id: The VPC ID.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CceProtectionState.__new__(_CceProtectionState)

        __props__.__dict__["agent_version"] = agent_version
        __props__.__dict__["auto_upgrade"] = auto_upgrade
        __props__.__dict__["cce_protection_type"] = cce_protection_type
        __props__.__dict__["charging_mode"] = charging_mode
        __props__.__dict__["cluster_id"] = cluster_id
        __props__.__dict__["cluster_name"] = cluster_name
        __props__.__dict__["cluster_type"] = cluster_type
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["fail_reason"] = fail_reason
        __props__.__dict__["invoked_service"] = invoked_service
        __props__.__dict__["node_total_num"] = node_total_num
        __props__.__dict__["prefer_packet_cycle"] = prefer_packet_cycle
        __props__.__dict__["protect_interrupt_node_num"] = protect_interrupt_node_num
        __props__.__dict__["protect_node_num"] = protect_node_num
        __props__.__dict__["protect_status"] = protect_status
        __props__.__dict__["protect_type"] = protect_type
        __props__.__dict__["region"] = region
        __props__.__dict__["runtime_infos"] = runtime_infos
        __props__.__dict__["schedule_info"] = schedule_info
        __props__.__dict__["unprotect_node_num"] = unprotect_node_num
        __props__.__dict__["vpc_id"] = vpc_id
        return CceProtection(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="agentVersion")
    def agent_version(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the agent version.
        """
        return pulumi.get(self, "agent_version")

    @_builtins.property
    @pulumi.getter(name="autoUpgrade")
    def auto_upgrade(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether to enable automatic agent upgrade.
        """
        return pulumi.get(self, "auto_upgrade")

    @_builtins.property
    @pulumi.getter(name="cceProtectionType")
    def cce_protection_type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the CCE protection type.
        """
        return pulumi.get(self, "cce_protection_type")

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the charging mode.
        """
        return pulumi.get(self, "charging_mode")

    @_builtins.property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the CCE cluster ID.
        """
        return pulumi.get(self, "cluster_id")

    @_builtins.property
    @pulumi.getter(name="clusterName")
    def cluster_name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the CCE cluster name.
        """
        return pulumi.get(self, "cluster_name")

    @_builtins.property
    @pulumi.getter(name="clusterType")
    def cluster_type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the CCE cluster type.
        """
        return pulumi.get(self, "cluster_type")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the enterprise project ID.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="failReason")
    def fail_reason(self) -> pulumi.Output[_builtins.str]:
        """
        The reasons for protection failure.
        """
        return pulumi.get(self, "fail_reason")

    @_builtins.property
    @pulumi.getter(name="invokedService")
    def invoked_service(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the invoked service.
        """
        return pulumi.get(self, "invoked_service")

    @_builtins.property
    @pulumi.getter(name="nodeTotalNum")
    def node_total_num(self) -> pulumi.Output[_builtins.int]:
        """
        The total number of cluster nodes.
        """
        return pulumi.get(self, "node_total_num")

    @_builtins.property
    @pulumi.getter(name="preferPacketCycle")
    def prefer_packet_cycle(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether to prefer the package period quota.
        """
        return pulumi.get(self, "prefer_packet_cycle")

    @_builtins.property
    @pulumi.getter(name="protectInterruptNodeNum")
    def protect_interrupt_node_num(self) -> pulumi.Output[_builtins.int]:
        """
        The number of nodes interrupted by cluster protection.
        """
        return pulumi.get(self, "protect_interrupt_node_num")

    @_builtins.property
    @pulumi.getter(name="protectNodeNum")
    def protect_node_num(self) -> pulumi.Output[_builtins.int]:
        """
        The number of nodes in the cluster that have protection enabled.
        """
        return pulumi.get(self, "protect_node_num")

    @_builtins.property
    @pulumi.getter(name="protectStatus")
    def protect_status(self) -> pulumi.Output[_builtins.str]:
        """
        The protection status.
        """
        return pulumi.get(self, "protect_status")

    @_builtins.property
    @pulumi.getter(name="protectType")
    def protect_type(self) -> pulumi.Output[_builtins.str]:
        """
        The protection type.
        """
        return pulumi.get(self, "protect_type")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="runtimeInfos")
    def runtime_infos(self) -> pulumi.Output[Optional[Sequence['outputs.CceProtectionRuntimeInfo']]]:
        """
        Specifies the container runtime configuration.
        """
        return pulumi.get(self, "runtime_infos")

    @_builtins.property
    @pulumi.getter(name="scheduleInfo")
    def schedule_info(self) -> pulumi.Output[Optional['outputs.CceProtectionScheduleInfo']]:
        """
        Specifies the node scheduling information.
        """
        return pulumi.get(self, "schedule_info")

    @_builtins.property
    @pulumi.getter(name="unprotectNodeNum")
    def unprotect_node_num(self) -> pulumi.Output[_builtins.int]:
        """
        The number of unprotected nodes in the cluster.
        """
        return pulumi.get(self, "unprotect_node_num")

    @_builtins.property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Output[_builtins.str]:
        """
        The VPC ID.
        """
        return pulumi.get(self, "vpc_id")

