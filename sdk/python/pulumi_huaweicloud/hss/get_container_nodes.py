# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetContainerNodesResult',
    'AwaitableGetContainerNodesResult',
    'get_container_nodes',
    'get_container_nodes_output',
]

@pulumi.output_type
class GetContainerNodesResult:
    """
    A collection of values returned by getContainerNodes.
    """
    def __init__(__self__, agent_status=None, container_tags=None, data_lists=None, enterprise_project_id=None, host_name=None, id=None, protect_status=None, region=None):
        if agent_status and not isinstance(agent_status, str):
            raise TypeError("Expected argument 'agent_status' to be a str")
        pulumi.set(__self__, "agent_status", agent_status)
        if container_tags and not isinstance(container_tags, str):
            raise TypeError("Expected argument 'container_tags' to be a str")
        pulumi.set(__self__, "container_tags", container_tags)
        if data_lists and not isinstance(data_lists, list):
            raise TypeError("Expected argument 'data_lists' to be a list")
        pulumi.set(__self__, "data_lists", data_lists)
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if host_name and not isinstance(host_name, str):
            raise TypeError("Expected argument 'host_name' to be a str")
        pulumi.set(__self__, "host_name", host_name)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if protect_status and not isinstance(protect_status, str):
            raise TypeError("Expected argument 'protect_status' to be a str")
        pulumi.set(__self__, "protect_status", protect_status)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="agentStatus")
    def agent_status(self) -> Optional[_builtins.str]:
        """
        The agent status.  
        The valid values are as follows:
        + **not_installed**
        + **online**
        + **offline**
        """
        return pulumi.get(self, "agent_status")

    @_builtins.property
    @pulumi.getter(name="containerTags")
    def container_tags(self) -> Optional[_builtins.str]:
        """
        The label used to identify CCE container nodes or self built nodes.  
        The valid values are as follows:
        + **cce**: CCE node.
        + **self**: Self built nodes.
        + **other**: Other nodes.
        """
        return pulumi.get(self, "container_tags")

    @_builtins.property
    @pulumi.getter(name="dataLists")
    def data_lists(self) -> Sequence['outputs.GetContainerNodesDataListResult']:
        """
        All container nodes that match the filter parameters.  
        The data_list structure is documented below.
        """
        return pulumi.get(self, "data_lists")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> Optional[_builtins.str]:
        """
        The host name.
        """
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="protectStatus")
    def protect_status(self) -> Optional[_builtins.str]:
        """
        The protection status.
        The valid values are as follows:
        + **closed**
        + **opened**
        """
        return pulumi.get(self, "protect_status")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetContainerNodesResult(GetContainerNodesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetContainerNodesResult(
            agent_status=self.agent_status,
            container_tags=self.container_tags,
            data_lists=self.data_lists,
            enterprise_project_id=self.enterprise_project_id,
            host_name=self.host_name,
            id=self.id,
            protect_status=self.protect_status,
            region=self.region)


def get_container_nodes(agent_status: Optional[_builtins.str] = None,
                        container_tags: Optional[_builtins.str] = None,
                        enterprise_project_id: Optional[_builtins.str] = None,
                        host_name: Optional[_builtins.str] = None,
                        protect_status: Optional[_builtins.str] = None,
                        region: Optional[_builtins.str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetContainerNodesResult:
    """
    Use this data source to get the list of HSS container nodes within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_container_nodes()
    ```


    :param _builtins.str agent_status: Specifies the agent status.  
           The valid values are as follows:
           + **not_installed**
           + **online**
           + **offline**
    :param _builtins.str container_tags: Specifies the label used to identify CCE container nodes or self built nodes.  
           The valid values are as follows:
           + **cce**: CCE nodes.
           + **self**: Self built nodes.
           + **other**: Other nodes.
    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID to which the hosts belong.  
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str host_name: Specifies the host name.
    :param _builtins.str protect_status: Specifies the protection status.  
           The valid values are as follows:
           + **closed**
           + **opened**
    :param _builtins.str region: Specifies the region in which to query the HSS container nodes.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['agentStatus'] = agent_status
    __args__['containerTags'] = container_tags
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['hostName'] = host_name
    __args__['protectStatus'] = protect_status
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:hss/getContainerNodes:getContainerNodes', __args__, opts=opts, typ=GetContainerNodesResult).value

    return AwaitableGetContainerNodesResult(
        agent_status=pulumi.get(__ret__, 'agent_status'),
        container_tags=pulumi.get(__ret__, 'container_tags'),
        data_lists=pulumi.get(__ret__, 'data_lists'),
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        host_name=pulumi.get(__ret__, 'host_name'),
        id=pulumi.get(__ret__, 'id'),
        protect_status=pulumi.get(__ret__, 'protect_status'),
        region=pulumi.get(__ret__, 'region'))
def get_container_nodes_output(agent_status: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               container_tags: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               host_name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               protect_status: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetContainerNodesResult]:
    """
    Use this data source to get the list of HSS container nodes within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_container_nodes()
    ```


    :param _builtins.str agent_status: Specifies the agent status.  
           The valid values are as follows:
           + **not_installed**
           + **online**
           + **offline**
    :param _builtins.str container_tags: Specifies the label used to identify CCE container nodes or self built nodes.  
           The valid values are as follows:
           + **cce**: CCE nodes.
           + **self**: Self built nodes.
           + **other**: Other nodes.
    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID to which the hosts belong.  
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str host_name: Specifies the host name.
    :param _builtins.str protect_status: Specifies the protection status.  
           The valid values are as follows:
           + **closed**
           + **opened**
    :param _builtins.str region: Specifies the region in which to query the HSS container nodes.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['agentStatus'] = agent_status
    __args__['containerTags'] = container_tags
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['hostName'] = host_name
    __args__['protectStatus'] = protect_status
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:hss/getContainerNodes:getContainerNodes', __args__, opts=opts, typ=GetContainerNodesResult)
    return __ret__.apply(lambda __response__: GetContainerNodesResult(
        agent_status=pulumi.get(__response__, 'agent_status'),
        container_tags=pulumi.get(__response__, 'container_tags'),
        data_lists=pulumi.get(__response__, 'data_lists'),
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        host_name=pulumi.get(__response__, 'host_name'),
        id=pulumi.get(__response__, 'id'),
        protect_status=pulumi.get(__response__, 'protect_status'),
        region=pulumi.get(__response__, 'region')))
