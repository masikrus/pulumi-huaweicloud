# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetAssetPortStatisticsResult',
    'AwaitableGetAssetPortStatisticsResult',
    'get_asset_port_statistics',
    'get_asset_port_statistics_output',
]

@pulumi.output_type
class GetAssetPortStatisticsResult:
    """
    A collection of values returned by getAssetPortStatistics.
    """
    def __init__(__self__, category=None, data_lists=None, enterprise_project_id=None, id=None, port=None, port_string=None, region=None, sort_dir=None, sort_key=None, status=None, type=None):
        if category and not isinstance(category, str):
            raise TypeError("Expected argument 'category' to be a str")
        pulumi.set(__self__, "category", category)
        if data_lists and not isinstance(data_lists, list):
            raise TypeError("Expected argument 'data_lists' to be a list")
        pulumi.set(__self__, "data_lists", data_lists)
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if port and not isinstance(port, int):
            raise TypeError("Expected argument 'port' to be a int")
        pulumi.set(__self__, "port", port)
        if port_string and not isinstance(port_string, str):
            raise TypeError("Expected argument 'port_string' to be a str")
        pulumi.set(__self__, "port_string", port_string)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if sort_dir and not isinstance(sort_dir, str):
            raise TypeError("Expected argument 'sort_dir' to be a str")
        pulumi.set(__self__, "sort_dir", sort_dir)
        if sort_key and not isinstance(sort_key, str):
            raise TypeError("Expected argument 'sort_key' to be a str")
        pulumi.set(__self__, "sort_key", sort_key)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def category(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "category")

    @_builtins.property
    @pulumi.getter(name="dataLists")
    def data_lists(self) -> Sequence['outputs.GetAssetPortStatisticsDataListResult']:
        """
        The port statistics list.
        The data_list structure is documented below.
        """
        return pulumi.get(self, "data_lists")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def port(self) -> Optional[_builtins.int]:
        """
        The port number.
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter(name="portString")
    def port_string(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "port_string")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="sortDir")
    def sort_dir(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "sort_dir")

    @_builtins.property
    @pulumi.getter(name="sortKey")
    def sort_key(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "sort_key")

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[_builtins.str]:
        """
        The port status.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[_builtins.str]:
        """
        The port type.
        """
        return pulumi.get(self, "type")


class AwaitableGetAssetPortStatisticsResult(GetAssetPortStatisticsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAssetPortStatisticsResult(
            category=self.category,
            data_lists=self.data_lists,
            enterprise_project_id=self.enterprise_project_id,
            id=self.id,
            port=self.port,
            port_string=self.port_string,
            region=self.region,
            sort_dir=self.sort_dir,
            sort_key=self.sort_key,
            status=self.status,
            type=self.type)


def get_asset_port_statistics(category: Optional[_builtins.str] = None,
                              enterprise_project_id: Optional[_builtins.str] = None,
                              port: Optional[_builtins.int] = None,
                              port_string: Optional[_builtins.str] = None,
                              region: Optional[_builtins.str] = None,
                              sort_dir: Optional[_builtins.str] = None,
                              sort_key: Optional[_builtins.str] = None,
                              status: Optional[_builtins.str] = None,
                              type: Optional[_builtins.str] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAssetPortStatisticsResult:
    """
    Use this data source to get the list of HSS asset port statistics within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_asset_port_statistics()
    ```


    :param _builtins.str category: Specifies the type. The default value is **host**.
           The valid values are as follows:
           + **host**: Host.
           + **container**: Container.
    :param _builtins.str enterprise_project_id: Specifies the ID of the enterprise project to which the resource belongs.
           This parameter is valid only when the enterprise project function is enabled.
           The value **all_granted_eps** indicates all enterprise projects.
           If omitted, the default enterprise project will be used.
    :param _builtins.int port: Specifies the port number.
    :param _builtins.str port_string: Specifies the port string used for fuzzy match.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str sort_dir: Specifies the sort direction. The default value is **asc**.
           The valid values are as follows:
           + **asc**: Ascending order.
           + **desc**: Descending order.
    :param _builtins.str sort_key: Specifies the sort key, sorting by port number is supported.
    :param _builtins.str status: Specifies the port status.
           The valid values are as follows:
           + **danger**: Dangerous ports.
           + **unknow**: No ports with known risks.
    :param _builtins.str type: Specifies the port type.
    """
    __args__ = dict()
    __args__['category'] = category
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['port'] = port
    __args__['portString'] = port_string
    __args__['region'] = region
    __args__['sortDir'] = sort_dir
    __args__['sortKey'] = sort_key
    __args__['status'] = status
    __args__['type'] = type
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:hss/getAssetPortStatistics:getAssetPortStatistics', __args__, opts=opts, typ=GetAssetPortStatisticsResult).value

    return AwaitableGetAssetPortStatisticsResult(
        category=pulumi.get(__ret__, 'category'),
        data_lists=pulumi.get(__ret__, 'data_lists'),
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        id=pulumi.get(__ret__, 'id'),
        port=pulumi.get(__ret__, 'port'),
        port_string=pulumi.get(__ret__, 'port_string'),
        region=pulumi.get(__ret__, 'region'),
        sort_dir=pulumi.get(__ret__, 'sort_dir'),
        sort_key=pulumi.get(__ret__, 'sort_key'),
        status=pulumi.get(__ret__, 'status'),
        type=pulumi.get(__ret__, 'type'))
def get_asset_port_statistics_output(category: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                     enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                     port: Optional[pulumi.Input[Optional[_builtins.int]]] = None,
                                     port_string: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                     region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                     sort_dir: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                     sort_key: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                     status: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                     type: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAssetPortStatisticsResult]:
    """
    Use this data source to get the list of HSS asset port statistics within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_asset_port_statistics()
    ```


    :param _builtins.str category: Specifies the type. The default value is **host**.
           The valid values are as follows:
           + **host**: Host.
           + **container**: Container.
    :param _builtins.str enterprise_project_id: Specifies the ID of the enterprise project to which the resource belongs.
           This parameter is valid only when the enterprise project function is enabled.
           The value **all_granted_eps** indicates all enterprise projects.
           If omitted, the default enterprise project will be used.
    :param _builtins.int port: Specifies the port number.
    :param _builtins.str port_string: Specifies the port string used for fuzzy match.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str sort_dir: Specifies the sort direction. The default value is **asc**.
           The valid values are as follows:
           + **asc**: Ascending order.
           + **desc**: Descending order.
    :param _builtins.str sort_key: Specifies the sort key, sorting by port number is supported.
    :param _builtins.str status: Specifies the port status.
           The valid values are as follows:
           + **danger**: Dangerous ports.
           + **unknow**: No ports with known risks.
    :param _builtins.str type: Specifies the port type.
    """
    __args__ = dict()
    __args__['category'] = category
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['port'] = port
    __args__['portString'] = port_string
    __args__['region'] = region
    __args__['sortDir'] = sort_dir
    __args__['sortKey'] = sort_key
    __args__['status'] = status
    __args__['type'] = type
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:hss/getAssetPortStatistics:getAssetPortStatistics', __args__, opts=opts, typ=GetAssetPortStatisticsResult)
    return __ret__.apply(lambda __response__: GetAssetPortStatisticsResult(
        category=pulumi.get(__response__, 'category'),
        data_lists=pulumi.get(__response__, 'data_lists'),
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        id=pulumi.get(__response__, 'id'),
        port=pulumi.get(__response__, 'port'),
        port_string=pulumi.get(__response__, 'port_string'),
        region=pulumi.get(__response__, 'region'),
        sort_dir=pulumi.get(__response__, 'sort_dir'),
        sort_key=pulumi.get(__response__, 'sort_key'),
        status=pulumi.get(__response__, 'status'),
        type=pulumi.get(__response__, 'type')))
