# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetAntivirusStatisticResult',
    'AwaitableGetAntivirusStatisticResult',
    'get_antivirus_statistic',
    'get_antivirus_statistic_output',
]

@pulumi.output_type
class GetAntivirusStatisticResult:
    """
    A collection of values returned by getAntivirusStatistic.
    """
    def __init__(__self__, enterprise_project_id=None, id=None, latest_scan_time=None, malware_host_num=None, region=None, scan_type=None, scanning_task_num=None, total_malware_num=None, total_task_num=None):
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if latest_scan_time and not isinstance(latest_scan_time, int):
            raise TypeError("Expected argument 'latest_scan_time' to be a int")
        pulumi.set(__self__, "latest_scan_time", latest_scan_time)
        if malware_host_num and not isinstance(malware_host_num, int):
            raise TypeError("Expected argument 'malware_host_num' to be a int")
        pulumi.set(__self__, "malware_host_num", malware_host_num)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if scan_type and not isinstance(scan_type, str):
            raise TypeError("Expected argument 'scan_type' to be a str")
        pulumi.set(__self__, "scan_type", scan_type)
        if scanning_task_num and not isinstance(scanning_task_num, int):
            raise TypeError("Expected argument 'scanning_task_num' to be a int")
        pulumi.set(__self__, "scanning_task_num", scanning_task_num)
        if total_malware_num and not isinstance(total_malware_num, int):
            raise TypeError("Expected argument 'total_malware_num' to be a int")
        pulumi.set(__self__, "total_malware_num", total_malware_num)
        if total_task_num and not isinstance(total_task_num, int):
            raise TypeError("Expected argument 'total_task_num' to be a int")
        pulumi.set(__self__, "total_task_num", total_task_num)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="latestScanTime")
    def latest_scan_time(self) -> _builtins.int:
        """
        The start time in milliseconds.
        """
        return pulumi.get(self, "latest_scan_time")

    @_builtins.property
    @pulumi.getter(name="malwareHostNum")
    def malware_host_num(self) -> _builtins.int:
        """
        Affects the number of hosts.
        """
        return pulumi.get(self, "malware_host_num")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="scanType")
    def scan_type(self) -> _builtins.str:
        """
        The scan type.  
        The valid values are as follows:
        + **quick**: Quick scan.
        + **full**: Full scan.
        + **custom**: Custom scan.
        """
        return pulumi.get(self, "scan_type")

    @_builtins.property
    @pulumi.getter(name="scanningTaskNum")
    def scanning_task_num(self) -> _builtins.int:
        """
        The number of running tasks.
        """
        return pulumi.get(self, "scanning_task_num")

    @_builtins.property
    @pulumi.getter(name="totalMalwareNum")
    def total_malware_num(self) -> _builtins.int:
        """
        The total number of viruses.
        """
        return pulumi.get(self, "total_malware_num")

    @_builtins.property
    @pulumi.getter(name="totalTaskNum")
    def total_task_num(self) -> _builtins.int:
        """
        Accumulated number of scanning tasks.
        """
        return pulumi.get(self, "total_task_num")


class AwaitableGetAntivirusStatisticResult(GetAntivirusStatisticResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAntivirusStatisticResult(
            enterprise_project_id=self.enterprise_project_id,
            id=self.id,
            latest_scan_time=self.latest_scan_time,
            malware_host_num=self.malware_host_num,
            region=self.region,
            scan_type=self.scan_type,
            scanning_task_num=self.scanning_task_num,
            total_malware_num=self.total_malware_num,
            total_task_num=self.total_task_num)


def get_antivirus_statistic(enterprise_project_id: Optional[_builtins.str] = None,
                            region: Optional[_builtins.str] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAntivirusStatisticResult:
    """
    Use this data source to get the list of HSS antivirus statistic within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_antivirus_statistic()
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.  
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:hss/getAntivirusStatistic:getAntivirusStatistic', __args__, opts=opts, typ=GetAntivirusStatisticResult).value

    return AwaitableGetAntivirusStatisticResult(
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        id=pulumi.get(__ret__, 'id'),
        latest_scan_time=pulumi.get(__ret__, 'latest_scan_time'),
        malware_host_num=pulumi.get(__ret__, 'malware_host_num'),
        region=pulumi.get(__ret__, 'region'),
        scan_type=pulumi.get(__ret__, 'scan_type'),
        scanning_task_num=pulumi.get(__ret__, 'scanning_task_num'),
        total_malware_num=pulumi.get(__ret__, 'total_malware_num'),
        total_task_num=pulumi.get(__ret__, 'total_task_num'))
def get_antivirus_statistic_output(enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                   region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                   opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAntivirusStatisticResult]:
    """
    Use this data source to get the list of HSS antivirus statistic within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_antivirus_statistic()
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.  
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:hss/getAntivirusStatistic:getAntivirusStatistic', __args__, opts=opts, typ=GetAntivirusStatisticResult)
    return __ret__.apply(lambda __response__: GetAntivirusStatisticResult(
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        id=pulumi.get(__response__, 'id'),
        latest_scan_time=pulumi.get(__response__, 'latest_scan_time'),
        malware_host_num=pulumi.get(__response__, 'malware_host_num'),
        region=pulumi.get(__response__, 'region'),
        scan_type=pulumi.get(__response__, 'scan_type'),
        scanning_task_num=pulumi.get(__response__, 'scanning_task_num'),
        total_malware_num=pulumi.get(__response__, 'total_malware_num'),
        total_task_num=pulumi.get(__response__, 'total_task_num')))
