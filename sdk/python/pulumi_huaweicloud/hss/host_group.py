# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['HostGroupArgs', 'HostGroup']

@pulumi.input_type
class HostGroupArgs:
    def __init__(__self__, *,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 host_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a HostGroup resource.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project to which the host
               group belongs.
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] host_ids: Specifies the list of host IDs.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the host group.  
               The valid length is limited from `1` to `64`, only Chinese characters, English letters, digits, hyphens (-),
               underscores (_), dots (.), pluses (+) and asterisks (*) are allowed.
               The Chinese characters must be in **UTF-8** or **Unicode** format.
        :param pulumi.Input[_builtins.str] region: The region where the host group is located.
               Changing this parameter will create a new resource.
        """
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if host_ids is not None:
            pulumi.set(__self__, "host_ids", host_ids)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the enterprise project to which the host
        group belongs.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="hostIds")
    def host_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the list of host IDs.
        """
        return pulumi.get(self, "host_ids")

    @host_ids.setter
    def host_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "host_ids", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the host group.  
        The valid length is limited from `1` to `64`, only Chinese characters, English letters, digits, hyphens (-),
        underscores (_), dots (.), pluses (+) and asterisks (*) are allowed.
        The Chinese characters must be in **UTF-8** or **Unicode** format.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The region where the host group is located.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _HostGroupState:
    def __init__(__self__, *,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 host_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 host_num: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 risk_host_num: Optional[pulumi.Input[_builtins.int]] = None,
                 unprotect_host_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 unprotect_host_num: Optional[pulumi.Input[_builtins.int]] = None):
        """
        Input properties used for looking up and filtering HostGroup resources.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project to which the host
               group belongs.
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] host_ids: Specifies the list of host IDs.
        :param pulumi.Input[_builtins.int] host_num: The total host number.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the host group.  
               The valid length is limited from `1` to `64`, only Chinese characters, English letters, digits, hyphens (-),
               underscores (_), dots (.), pluses (+) and asterisks (*) are allowed.
               The Chinese characters must be in **UTF-8** or **Unicode** format.
        :param pulumi.Input[_builtins.str] region: The region where the host group is located.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] risk_host_num: The number of hosts at risk.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] unprotect_host_ids: The ID list of the unprotect hosts.
        :param pulumi.Input[_builtins.int] unprotect_host_num: The number of unprotect hosts.
        """
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if host_ids is not None:
            pulumi.set(__self__, "host_ids", host_ids)
        if host_num is not None:
            pulumi.set(__self__, "host_num", host_num)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if risk_host_num is not None:
            pulumi.set(__self__, "risk_host_num", risk_host_num)
        if unprotect_host_ids is not None:
            pulumi.set(__self__, "unprotect_host_ids", unprotect_host_ids)
        if unprotect_host_num is not None:
            pulumi.set(__self__, "unprotect_host_num", unprotect_host_num)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the enterprise project to which the host
        group belongs.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="hostIds")
    def host_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the list of host IDs.
        """
        return pulumi.get(self, "host_ids")

    @host_ids.setter
    def host_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "host_ids", value)

    @_builtins.property
    @pulumi.getter(name="hostNum")
    def host_num(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The total host number.
        """
        return pulumi.get(self, "host_num")

    @host_num.setter
    def host_num(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "host_num", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the host group.  
        The valid length is limited from `1` to `64`, only Chinese characters, English letters, digits, hyphens (-),
        underscores (_), dots (.), pluses (+) and asterisks (*) are allowed.
        The Chinese characters must be in **UTF-8** or **Unicode** format.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The region where the host group is located.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="riskHostNum")
    def risk_host_num(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The number of hosts at risk.
        """
        return pulumi.get(self, "risk_host_num")

    @risk_host_num.setter
    def risk_host_num(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "risk_host_num", value)

    @_builtins.property
    @pulumi.getter(name="unprotectHostIds")
    def unprotect_host_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        The ID list of the unprotect hosts.
        """
        return pulumi.get(self, "unprotect_host_ids")

    @unprotect_host_ids.setter
    def unprotect_host_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "unprotect_host_ids", value)

    @_builtins.property
    @pulumi.getter(name="unprotectHostNum")
    def unprotect_host_num(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The number of unprotect hosts.
        """
        return pulumi.get(self, "unprotect_host_num")

    @unprotect_host_num.setter
    def unprotect_host_num(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "unprotect_host_num", value)


@pulumi.type_token("huaweicloud:hss/hostGroup:HostGroup")
class HostGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 host_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages an HSS host group resource within HuaweiCloud.

        ## Example Usage

        ### Create an HSS host group and bind some ECS instances

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        host_group_name = config.require_object("hostGroupName")
        host_ids = config.require_object("hostIds")
        test = huaweicloud.hss.HostGroup("test",
            name=host_group_name,
            host_ids=host_ids)
        ```

        ## Import

        ### Import resource from non default enterprise project

        bash

        ```sh
        $ pulumi import huaweicloud:hss/hostGroup:HostGroup test <enterprise_project_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project to which the host
               group belongs.
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] host_ids: Specifies the list of host IDs.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the host group.  
               The valid length is limited from `1` to `64`, only Chinese characters, English letters, digits, hyphens (-),
               underscores (_), dots (.), pluses (+) and asterisks (*) are allowed.
               The Chinese characters must be in **UTF-8** or **Unicode** format.
        :param pulumi.Input[_builtins.str] region: The region where the host group is located.
               Changing this parameter will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[HostGroupArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an HSS host group resource within HuaweiCloud.

        ## Example Usage

        ### Create an HSS host group and bind some ECS instances

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        host_group_name = config.require_object("hostGroupName")
        host_ids = config.require_object("hostIds")
        test = huaweicloud.hss.HostGroup("test",
            name=host_group_name,
            host_ids=host_ids)
        ```

        ## Import

        ### Import resource from non default enterprise project

        bash

        ```sh
        $ pulumi import huaweicloud:hss/hostGroup:HostGroup test <enterprise_project_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param HostGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(HostGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 host_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = HostGroupArgs.__new__(HostGroupArgs)

            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            __props__.__dict__["host_ids"] = host_ids
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            __props__.__dict__["host_num"] = None
            __props__.__dict__["risk_host_num"] = None
            __props__.__dict__["unprotect_host_ids"] = None
            __props__.__dict__["unprotect_host_num"] = None
        super(HostGroup, __self__).__init__(
            'huaweicloud:hss/hostGroup:HostGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            host_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            host_num: Optional[pulumi.Input[_builtins.int]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            risk_host_num: Optional[pulumi.Input[_builtins.int]] = None,
            unprotect_host_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            unprotect_host_num: Optional[pulumi.Input[_builtins.int]] = None) -> 'HostGroup':
        """
        Get an existing HostGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project to which the host
               group belongs.
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] host_ids: Specifies the list of host IDs.
        :param pulumi.Input[_builtins.int] host_num: The total host number.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the host group.  
               The valid length is limited from `1` to `64`, only Chinese characters, English letters, digits, hyphens (-),
               underscores (_), dots (.), pluses (+) and asterisks (*) are allowed.
               The Chinese characters must be in **UTF-8** or **Unicode** format.
        :param pulumi.Input[_builtins.str] region: The region where the host group is located.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] risk_host_num: The number of hosts at risk.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] unprotect_host_ids: The ID list of the unprotect hosts.
        :param pulumi.Input[_builtins.int] unprotect_host_num: The number of unprotect hosts.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _HostGroupState.__new__(_HostGroupState)

        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["host_ids"] = host_ids
        __props__.__dict__["host_num"] = host_num
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["risk_host_num"] = risk_host_num
        __props__.__dict__["unprotect_host_ids"] = unprotect_host_ids
        __props__.__dict__["unprotect_host_num"] = unprotect_host_num
        return HostGroup(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the ID of the enterprise project to which the host
        group belongs.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="hostIds")
    def host_ids(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        Specifies the list of host IDs.
        """
        return pulumi.get(self, "host_ids")

    @_builtins.property
    @pulumi.getter(name="hostNum")
    def host_num(self) -> pulumi.Output[_builtins.int]:
        """
        The total host number.
        """
        return pulumi.get(self, "host_num")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of the host group.  
        The valid length is limited from `1` to `64`, only Chinese characters, English letters, digits, hyphens (-),
        underscores (_), dots (.), pluses (+) and asterisks (*) are allowed.
        The Chinese characters must be in **UTF-8** or **Unicode** format.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        The region where the host group is located.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="riskHostNum")
    def risk_host_num(self) -> pulumi.Output[_builtins.int]:
        """
        The number of hosts at risk.
        """
        return pulumi.get(self, "risk_host_num")

    @_builtins.property
    @pulumi.getter(name="unprotectHostIds")
    def unprotect_host_ids(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        The ID list of the unprotect hosts.
        """
        return pulumi.get(self, "unprotect_host_ids")

    @_builtins.property
    @pulumi.getter(name="unprotectHostNum")
    def unprotect_host_num(self) -> pulumi.Output[_builtins.int]:
        """
        The number of unprotect hosts.
        """
        return pulumi.get(self, "unprotect_host_num")

