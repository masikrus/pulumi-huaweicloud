# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetSettingLoginCommonLocationsResult',
    'AwaitableGetSettingLoginCommonLocationsResult',
    'get_setting_login_common_locations',
    'get_setting_login_common_locations_output',
]

@pulumi.output_type
class GetSettingLoginCommonLocationsResult:
    """
    A collection of values returned by getSettingLoginCommonLocations.
    """
    def __init__(__self__, area_code=None, data_lists=None, enterprise_project_id=None, id=None, region=None, total_num=None):
        if area_code and not isinstance(area_code, int):
            raise TypeError("Expected argument 'area_code' to be a int")
        pulumi.set(__self__, "area_code", area_code)
        if data_lists and not isinstance(data_lists, list):
            raise TypeError("Expected argument 'data_lists' to be a list")
        pulumi.set(__self__, "data_lists", data_lists)
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if total_num and not isinstance(total_num, int):
            raise TypeError("Expected argument 'total_num' to be a int")
        pulumi.set(__self__, "total_num", total_num)

    @_builtins.property
    @pulumi.getter(name="areaCode")
    def area_code(self) -> Optional[_builtins.int]:
        """
        The code of countries and cities.
        """
        return pulumi.get(self, "area_code")

    @_builtins.property
    @pulumi.getter(name="dataLists")
    def data_lists(self) -> Sequence['outputs.GetSettingLoginCommonLocationsDataListResult']:
        """
        The list of common login locations information.
        The data_list structure is documented below.
        """
        return pulumi.get(self, "data_lists")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="totalNum")
    def total_num(self) -> _builtins.int:
        """
        The total number of hosts in the common login location.
        """
        return pulumi.get(self, "total_num")


class AwaitableGetSettingLoginCommonLocationsResult(GetSettingLoginCommonLocationsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSettingLoginCommonLocationsResult(
            area_code=self.area_code,
            data_lists=self.data_lists,
            enterprise_project_id=self.enterprise_project_id,
            id=self.id,
            region=self.region,
            total_num=self.total_num)


def get_setting_login_common_locations(area_code: Optional[_builtins.int] = None,
                                       enterprise_project_id: Optional[_builtins.str] = None,
                                       region: Optional[_builtins.str] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSettingLoginCommonLocationsResult:
    """
    Use this data source to get the list of common login locations.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_setting_login_common_locations()
    ```


    :param _builtins.int area_code: Specifies the code of countries and cities.
    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['areaCode'] = area_code
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:hss/getSettingLoginCommonLocations:getSettingLoginCommonLocations', __args__, opts=opts, typ=GetSettingLoginCommonLocationsResult).value

    return AwaitableGetSettingLoginCommonLocationsResult(
        area_code=pulumi.get(__ret__, 'area_code'),
        data_lists=pulumi.get(__ret__, 'data_lists'),
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'),
        total_num=pulumi.get(__ret__, 'total_num'))
def get_setting_login_common_locations_output(area_code: Optional[pulumi.Input[Optional[_builtins.int]]] = None,
                                              enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                              region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                              opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetSettingLoginCommonLocationsResult]:
    """
    Use this data source to get the list of common login locations.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_setting_login_common_locations()
    ```


    :param _builtins.int area_code: Specifies the code of countries and cities.
    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['areaCode'] = area_code
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:hss/getSettingLoginCommonLocations:getSettingLoginCommonLocations', __args__, opts=opts, typ=GetSettingLoginCommonLocationsResult)
    return __ret__.apply(lambda __response__: GetSettingLoginCommonLocationsResult(
        area_code=pulumi.get(__response__, 'area_code'),
        data_lists=pulumi.get(__response__, 'data_lists'),
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region'),
        total_num=pulumi.get(__response__, 'total_num')))
