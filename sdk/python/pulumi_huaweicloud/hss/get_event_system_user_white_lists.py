# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetEventSystemUserWhiteListsResult',
    'AwaitableGetEventSystemUserWhiteListsResult',
    'get_event_system_user_white_lists',
    'get_event_system_user_white_lists_output',
]

@pulumi.output_type
class GetEventSystemUserWhiteListsResult:
    """
    A collection of values returned by getEventSystemUserWhiteLists.
    """
    def __init__(__self__, data_lists=None, enterprise_project_id=None, host_id=None, host_name=None, id=None, limit_num=None, private_ip=None, public_ip=None, region=None, remain_num=None, system_user_name=None, total_num=None):
        if data_lists and not isinstance(data_lists, list):
            raise TypeError("Expected argument 'data_lists' to be a list")
        pulumi.set(__self__, "data_lists", data_lists)
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if host_id and not isinstance(host_id, str):
            raise TypeError("Expected argument 'host_id' to be a str")
        pulumi.set(__self__, "host_id", host_id)
        if host_name and not isinstance(host_name, str):
            raise TypeError("Expected argument 'host_name' to be a str")
        pulumi.set(__self__, "host_name", host_name)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if limit_num and not isinstance(limit_num, int):
            raise TypeError("Expected argument 'limit_num' to be a int")
        pulumi.set(__self__, "limit_num", limit_num)
        if private_ip and not isinstance(private_ip, str):
            raise TypeError("Expected argument 'private_ip' to be a str")
        pulumi.set(__self__, "private_ip", private_ip)
        if public_ip and not isinstance(public_ip, str):
            raise TypeError("Expected argument 'public_ip' to be a str")
        pulumi.set(__self__, "public_ip", public_ip)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if remain_num and not isinstance(remain_num, int):
            raise TypeError("Expected argument 'remain_num' to be a int")
        pulumi.set(__self__, "remain_num", remain_num)
        if system_user_name and not isinstance(system_user_name, str):
            raise TypeError("Expected argument 'system_user_name' to be a str")
        pulumi.set(__self__, "system_user_name", system_user_name)
        if total_num and not isinstance(total_num, int):
            raise TypeError("Expected argument 'total_num' to be a int")
        pulumi.set(__self__, "total_num", total_num)

    @_builtins.property
    @pulumi.getter(name="dataLists")
    def data_lists(self) -> Sequence['outputs.GetEventSystemUserWhiteListsDataListResult']:
        """
        The list of white lists details.
        The data_list structure is documented below.
        """
        return pulumi.get(self, "data_lists")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="hostId")
    def host_id(self) -> Optional[_builtins.str]:
        """
        The host ID.
        """
        return pulumi.get(self, "host_id")

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> Optional[_builtins.str]:
        """
        The host name.
        """
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="limitNum")
    def limit_num(self) -> _builtins.int:
        """
        The maximum number of white lists.
        """
        return pulumi.get(self, "limit_num")

    @_builtins.property
    @pulumi.getter(name="privateIp")
    def private_ip(self) -> Optional[_builtins.str]:
        """
        The private IP address.
        """
        return pulumi.get(self, "private_ip")

    @_builtins.property
    @pulumi.getter(name="publicIp")
    def public_ip(self) -> Optional[_builtins.str]:
        """
        The public IP address.
        """
        return pulumi.get(self, "public_ip")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="remainNum")
    def remain_num(self) -> _builtins.int:
        """
        The number of white lists that can continue to be added.
        """
        return pulumi.get(self, "remain_num")

    @_builtins.property
    @pulumi.getter(name="systemUserName")
    def system_user_name(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "system_user_name")

    @_builtins.property
    @pulumi.getter(name="totalNum")
    def total_num(self) -> _builtins.int:
        """
        The total number of white lists.
        """
        return pulumi.get(self, "total_num")


class AwaitableGetEventSystemUserWhiteListsResult(GetEventSystemUserWhiteListsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetEventSystemUserWhiteListsResult(
            data_lists=self.data_lists,
            enterprise_project_id=self.enterprise_project_id,
            host_id=self.host_id,
            host_name=self.host_name,
            id=self.id,
            limit_num=self.limit_num,
            private_ip=self.private_ip,
            public_ip=self.public_ip,
            region=self.region,
            remain_num=self.remain_num,
            system_user_name=self.system_user_name,
            total_num=self.total_num)


def get_event_system_user_white_lists(enterprise_project_id: Optional[_builtins.str] = None,
                                      host_id: Optional[_builtins.str] = None,
                                      host_name: Optional[_builtins.str] = None,
                                      private_ip: Optional[_builtins.str] = None,
                                      public_ip: Optional[_builtins.str] = None,
                                      region: Optional[_builtins.str] = None,
                                      system_user_name: Optional[_builtins.str] = None,
                                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetEventSystemUserWhiteListsResult:
    """
    Use this data source to get the list of HSS system user white lists within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_event_system_user_white_lists()
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.  
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str host_id: Specifies the host ID.
    :param _builtins.str host_name: Specifies the host name.
    :param _builtins.str private_ip: Specifies the private IP of the host.
    :param _builtins.str public_ip: Specifies the public IP of the host.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str system_user_name: Specifies the system user-name.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['hostId'] = host_id
    __args__['hostName'] = host_name
    __args__['privateIp'] = private_ip
    __args__['publicIp'] = public_ip
    __args__['region'] = region
    __args__['systemUserName'] = system_user_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:hss/getEventSystemUserWhiteLists:getEventSystemUserWhiteLists', __args__, opts=opts, typ=GetEventSystemUserWhiteListsResult).value

    return AwaitableGetEventSystemUserWhiteListsResult(
        data_lists=pulumi.get(__ret__, 'data_lists'),
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        host_id=pulumi.get(__ret__, 'host_id'),
        host_name=pulumi.get(__ret__, 'host_name'),
        id=pulumi.get(__ret__, 'id'),
        limit_num=pulumi.get(__ret__, 'limit_num'),
        private_ip=pulumi.get(__ret__, 'private_ip'),
        public_ip=pulumi.get(__ret__, 'public_ip'),
        region=pulumi.get(__ret__, 'region'),
        remain_num=pulumi.get(__ret__, 'remain_num'),
        system_user_name=pulumi.get(__ret__, 'system_user_name'),
        total_num=pulumi.get(__ret__, 'total_num'))
def get_event_system_user_white_lists_output(enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                             host_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                             host_name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                             private_ip: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                             public_ip: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                             region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                             system_user_name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                             opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetEventSystemUserWhiteListsResult]:
    """
    Use this data source to get the list of HSS system user white lists within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_event_system_user_white_lists()
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.  
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str host_id: Specifies the host ID.
    :param _builtins.str host_name: Specifies the host name.
    :param _builtins.str private_ip: Specifies the private IP of the host.
    :param _builtins.str public_ip: Specifies the public IP of the host.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str system_user_name: Specifies the system user-name.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['hostId'] = host_id
    __args__['hostName'] = host_name
    __args__['privateIp'] = private_ip
    __args__['publicIp'] = public_ip
    __args__['region'] = region
    __args__['systemUserName'] = system_user_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:hss/getEventSystemUserWhiteLists:getEventSystemUserWhiteLists', __args__, opts=opts, typ=GetEventSystemUserWhiteListsResult)
    return __ret__.apply(lambda __response__: GetEventSystemUserWhiteListsResult(
        data_lists=pulumi.get(__response__, 'data_lists'),
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        host_id=pulumi.get(__response__, 'host_id'),
        host_name=pulumi.get(__response__, 'host_name'),
        id=pulumi.get(__response__, 'id'),
        limit_num=pulumi.get(__response__, 'limit_num'),
        private_ip=pulumi.get(__response__, 'private_ip'),
        public_ip=pulumi.get(__response__, 'public_ip'),
        region=pulumi.get(__response__, 'region'),
        remain_num=pulumi.get(__response__, 'remain_num'),
        system_user_name=pulumi.get(__response__, 'system_user_name'),
        total_num=pulumi.get(__response__, 'total_num')))
