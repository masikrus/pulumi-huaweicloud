# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetContainerNodeStatisticsResult',
    'AwaitableGetContainerNodeStatisticsResult',
    'get_container_node_statistics',
    'get_container_node_statistics_output',
]

@pulumi.output_type
class GetContainerNodeStatisticsResult:
    """
    A collection of values returned by getContainerNodeStatistics.
    """
    def __init__(__self__, cluster_node_not_installed_num=None, enterprise_project_id=None, id=None, not_cluster_node_not_installed_num=None, protected_num=None, protected_num_on_demand=None, protected_num_packet_cycle=None, region=None, unprotected_num=None):
        if cluster_node_not_installed_num and not isinstance(cluster_node_not_installed_num, int):
            raise TypeError("Expected argument 'cluster_node_not_installed_num' to be a int")
        pulumi.set(__self__, "cluster_node_not_installed_num", cluster_node_not_installed_num)
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if not_cluster_node_not_installed_num and not isinstance(not_cluster_node_not_installed_num, int):
            raise TypeError("Expected argument 'not_cluster_node_not_installed_num' to be a int")
        pulumi.set(__self__, "not_cluster_node_not_installed_num", not_cluster_node_not_installed_num)
        if protected_num and not isinstance(protected_num, int):
            raise TypeError("Expected argument 'protected_num' to be a int")
        pulumi.set(__self__, "protected_num", protected_num)
        if protected_num_on_demand and not isinstance(protected_num_on_demand, int):
            raise TypeError("Expected argument 'protected_num_on_demand' to be a int")
        pulumi.set(__self__, "protected_num_on_demand", protected_num_on_demand)
        if protected_num_packet_cycle and not isinstance(protected_num_packet_cycle, int):
            raise TypeError("Expected argument 'protected_num_packet_cycle' to be a int")
        pulumi.set(__self__, "protected_num_packet_cycle", protected_num_packet_cycle)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if unprotected_num and not isinstance(unprotected_num, int):
            raise TypeError("Expected argument 'unprotected_num' to be a int")
        pulumi.set(__self__, "unprotected_num", unprotected_num)

    @_builtins.property
    @pulumi.getter(name="clusterNodeNotInstalledNum")
    def cluster_node_not_installed_num(self) -> _builtins.int:
        """
        The number of uninstalled cluster nodes.
        """
        return pulumi.get(self, "cluster_node_not_installed_num")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="notClusterNodeNotInstalledNum")
    def not_cluster_node_not_installed_num(self) -> _builtins.int:
        """
        The number of uninstalled non-cluster nodes.
        """
        return pulumi.get(self, "not_cluster_node_not_installed_num")

    @_builtins.property
    @pulumi.getter(name="protectedNum")
    def protected_num(self) -> _builtins.int:
        """
        The total number of protected nodes.
        """
        return pulumi.get(self, "protected_num")

    @_builtins.property
    @pulumi.getter(name="protectedNumOnDemand")
    def protected_num_on_demand(self) -> _builtins.int:
        """
        The number of nodes protected on demand.
        """
        return pulumi.get(self, "protected_num_on_demand")

    @_builtins.property
    @pulumi.getter(name="protectedNumPacketCycle")
    def protected_num_packet_cycle(self) -> _builtins.int:
        """
        The number of nodes protected by quota.
        """
        return pulumi.get(self, "protected_num_packet_cycle")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="unprotectedNum")
    def unprotected_num(self) -> _builtins.int:
        """
        The number of unprotected servers.
        """
        return pulumi.get(self, "unprotected_num")


class AwaitableGetContainerNodeStatisticsResult(GetContainerNodeStatisticsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetContainerNodeStatisticsResult(
            cluster_node_not_installed_num=self.cluster_node_not_installed_num,
            enterprise_project_id=self.enterprise_project_id,
            id=self.id,
            not_cluster_node_not_installed_num=self.not_cluster_node_not_installed_num,
            protected_num=self.protected_num,
            protected_num_on_demand=self.protected_num_on_demand,
            protected_num_packet_cycle=self.protected_num_packet_cycle,
            region=self.region,
            unprotected_num=self.unprotected_num)


def get_container_node_statistics(enterprise_project_id: Optional[_builtins.str] = None,
                                  region: Optional[_builtins.str] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetContainerNodeStatisticsResult:
    """
    Use this data source to get HSS container node protection statistics within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_container_node_statistics(enterprise_project_id="0")
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.  
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
           
           > An enterprise project can be configured only after the enterprise project function is enabled.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:hss/getContainerNodeStatistics:getContainerNodeStatistics', __args__, opts=opts, typ=GetContainerNodeStatisticsResult).value

    return AwaitableGetContainerNodeStatisticsResult(
        cluster_node_not_installed_num=pulumi.get(__ret__, 'cluster_node_not_installed_num'),
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        id=pulumi.get(__ret__, 'id'),
        not_cluster_node_not_installed_num=pulumi.get(__ret__, 'not_cluster_node_not_installed_num'),
        protected_num=pulumi.get(__ret__, 'protected_num'),
        protected_num_on_demand=pulumi.get(__ret__, 'protected_num_on_demand'),
        protected_num_packet_cycle=pulumi.get(__ret__, 'protected_num_packet_cycle'),
        region=pulumi.get(__ret__, 'region'),
        unprotected_num=pulumi.get(__ret__, 'unprotected_num'))
def get_container_node_statistics_output(enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                         region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                         opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetContainerNodeStatisticsResult]:
    """
    Use this data source to get HSS container node protection statistics within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_container_node_statistics(enterprise_project_id="0")
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.  
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
           
           > An enterprise project can be configured only after the enterprise project function is enabled.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:hss/getContainerNodeStatistics:getContainerNodeStatistics', __args__, opts=opts, typ=GetContainerNodeStatisticsResult)
    return __ret__.apply(lambda __response__: GetContainerNodeStatisticsResult(
        cluster_node_not_installed_num=pulumi.get(__response__, 'cluster_node_not_installed_num'),
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        id=pulumi.get(__response__, 'id'),
        not_cluster_node_not_installed_num=pulumi.get(__response__, 'not_cluster_node_not_installed_num'),
        protected_num=pulumi.get(__response__, 'protected_num'),
        protected_num_on_demand=pulumi.get(__response__, 'protected_num_on_demand'),
        protected_num_packet_cycle=pulumi.get(__response__, 'protected_num_packet_cycle'),
        region=pulumi.get(__response__, 'region'),
        unprotected_num=pulumi.get(__response__, 'unprotected_num')))
