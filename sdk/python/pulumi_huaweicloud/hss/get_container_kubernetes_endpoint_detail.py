# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetContainerKubernetesEndpointDetailResult',
    'AwaitableGetContainerKubernetesEndpointDetailResult',
    'get_container_kubernetes_endpoint_detail',
    'get_container_kubernetes_endpoint_detail_output',
]

@pulumi.output_type
class GetContainerKubernetesEndpointDetailResult:
    """
    A collection of values returned by getContainerKubernetesEndpointDetail.
    """
    def __init__(__self__, association_service=None, cluster_name=None, creation_timestamp=None, endpoint_id=None, endpoint_pod_lists=None, endpoint_port_lists=None, enterprise_project_id=None, id=None, labels=None, name=None, namespace=None, region=None, service_name=None):
        if association_service and not isinstance(association_service, bool):
            raise TypeError("Expected argument 'association_service' to be a bool")
        pulumi.set(__self__, "association_service", association_service)
        if cluster_name and not isinstance(cluster_name, str):
            raise TypeError("Expected argument 'cluster_name' to be a str")
        pulumi.set(__self__, "cluster_name", cluster_name)
        if creation_timestamp and not isinstance(creation_timestamp, int):
            raise TypeError("Expected argument 'creation_timestamp' to be a int")
        pulumi.set(__self__, "creation_timestamp", creation_timestamp)
        if endpoint_id and not isinstance(endpoint_id, str):
            raise TypeError("Expected argument 'endpoint_id' to be a str")
        pulumi.set(__self__, "endpoint_id", endpoint_id)
        if endpoint_pod_lists and not isinstance(endpoint_pod_lists, list):
            raise TypeError("Expected argument 'endpoint_pod_lists' to be a list")
        pulumi.set(__self__, "endpoint_pod_lists", endpoint_pod_lists)
        if endpoint_port_lists and not isinstance(endpoint_port_lists, list):
            raise TypeError("Expected argument 'endpoint_port_lists' to be a list")
        pulumi.set(__self__, "endpoint_port_lists", endpoint_port_lists)
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if labels and not isinstance(labels, str):
            raise TypeError("Expected argument 'labels' to be a str")
        pulumi.set(__self__, "labels", labels)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if namespace and not isinstance(namespace, str):
            raise TypeError("Expected argument 'namespace' to be a str")
        pulumi.set(__self__, "namespace", namespace)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if service_name and not isinstance(service_name, str):
            raise TypeError("Expected argument 'service_name' to be a str")
        pulumi.set(__self__, "service_name", service_name)

    @_builtins.property
    @pulumi.getter(name="associationService")
    def association_service(self) -> _builtins.bool:
        """
        Is it associated with a service.
        """
        return pulumi.get(self, "association_service")

    @_builtins.property
    @pulumi.getter(name="clusterName")
    def cluster_name(self) -> _builtins.str:
        """
        The cluster name.
        """
        return pulumi.get(self, "cluster_name")

    @_builtins.property
    @pulumi.getter(name="creationTimestamp")
    def creation_timestamp(self) -> _builtins.int:
        """
        Create timestamp.
        """
        return pulumi.get(self, "creation_timestamp")

    @_builtins.property
    @pulumi.getter(name="endpointId")
    def endpoint_id(self) -> _builtins.str:
        """
        The associate endpoint ID.
        """
        return pulumi.get(self, "endpoint_id")

    @_builtins.property
    @pulumi.getter(name="endpointPodLists")
    def endpoint_pod_lists(self) -> Sequence['outputs.GetContainerKubernetesEndpointDetailEndpointPodListResult']:
        """
        The endpoint associated pod mapping.
        The endpoint_pod_list structure is documented below.
        """
        return pulumi.get(self, "endpoint_pod_lists")

    @_builtins.property
    @pulumi.getter(name="endpointPortLists")
    def endpoint_port_lists(self) -> Sequence['outputs.GetContainerKubernetesEndpointDetailEndpointPortListResult']:
        """
        The endpoint associated port list.
        The endpoint_port_list structure is documented below.
        """
        return pulumi.get(self, "endpoint_port_lists")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def labels(self) -> _builtins.str:
        """
        The labels.
        """
        return pulumi.get(self, "labels")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The port name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def namespace(self) -> _builtins.str:
        """
        The namespace.
        """
        return pulumi.get(self, "namespace")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="serviceName")
    def service_name(self) -> _builtins.str:
        """
        The service name.
        """
        return pulumi.get(self, "service_name")


class AwaitableGetContainerKubernetesEndpointDetailResult(GetContainerKubernetesEndpointDetailResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetContainerKubernetesEndpointDetailResult(
            association_service=self.association_service,
            cluster_name=self.cluster_name,
            creation_timestamp=self.creation_timestamp,
            endpoint_id=self.endpoint_id,
            endpoint_pod_lists=self.endpoint_pod_lists,
            endpoint_port_lists=self.endpoint_port_lists,
            enterprise_project_id=self.enterprise_project_id,
            id=self.id,
            labels=self.labels,
            name=self.name,
            namespace=self.namespace,
            region=self.region,
            service_name=self.service_name)


def get_container_kubernetes_endpoint_detail(endpoint_id: Optional[_builtins.str] = None,
                                             enterprise_project_id: Optional[_builtins.str] = None,
                                             region: Optional[_builtins.str] = None,
                                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetContainerKubernetesEndpointDetailResult:
    """
    Use this data source to get HSS container kubernetes endpoint detail within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    endpoint_id = config.require_object("endpointId")
    test = huaweicloud.hss.get_container_kubernetes_endpoint_detail(endpoint_id=endpoint_id)
    ```


    :param _builtins.str endpoint_id: Specifies the endpoint ID.
    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.  
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str region: Specifies the region in which to query the HSS container kubernetes endpoints.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['endpointId'] = endpoint_id
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:hss/getContainerKubernetesEndpointDetail:getContainerKubernetesEndpointDetail', __args__, opts=opts, typ=GetContainerKubernetesEndpointDetailResult).value

    return AwaitableGetContainerKubernetesEndpointDetailResult(
        association_service=pulumi.get(__ret__, 'association_service'),
        cluster_name=pulumi.get(__ret__, 'cluster_name'),
        creation_timestamp=pulumi.get(__ret__, 'creation_timestamp'),
        endpoint_id=pulumi.get(__ret__, 'endpoint_id'),
        endpoint_pod_lists=pulumi.get(__ret__, 'endpoint_pod_lists'),
        endpoint_port_lists=pulumi.get(__ret__, 'endpoint_port_lists'),
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        id=pulumi.get(__ret__, 'id'),
        labels=pulumi.get(__ret__, 'labels'),
        name=pulumi.get(__ret__, 'name'),
        namespace=pulumi.get(__ret__, 'namespace'),
        region=pulumi.get(__ret__, 'region'),
        service_name=pulumi.get(__ret__, 'service_name'))
def get_container_kubernetes_endpoint_detail_output(endpoint_id: Optional[pulumi.Input[_builtins.str]] = None,
                                                    enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                    region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetContainerKubernetesEndpointDetailResult]:
    """
    Use this data source to get HSS container kubernetes endpoint detail within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    endpoint_id = config.require_object("endpointId")
    test = huaweicloud.hss.get_container_kubernetes_endpoint_detail(endpoint_id=endpoint_id)
    ```


    :param _builtins.str endpoint_id: Specifies the endpoint ID.
    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.  
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str region: Specifies the region in which to query the HSS container kubernetes endpoints.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['endpointId'] = endpoint_id
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:hss/getContainerKubernetesEndpointDetail:getContainerKubernetesEndpointDetail', __args__, opts=opts, typ=GetContainerKubernetesEndpointDetailResult)
    return __ret__.apply(lambda __response__: GetContainerKubernetesEndpointDetailResult(
        association_service=pulumi.get(__response__, 'association_service'),
        cluster_name=pulumi.get(__response__, 'cluster_name'),
        creation_timestamp=pulumi.get(__response__, 'creation_timestamp'),
        endpoint_id=pulumi.get(__response__, 'endpoint_id'),
        endpoint_pod_lists=pulumi.get(__response__, 'endpoint_pod_lists'),
        endpoint_port_lists=pulumi.get(__response__, 'endpoint_port_lists'),
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        id=pulumi.get(__response__, 'id'),
        labels=pulumi.get(__response__, 'labels'),
        name=pulumi.get(__response__, 'name'),
        namespace=pulumi.get(__response__, 'namespace'),
        region=pulumi.get(__response__, 'region'),
        service_name=pulumi.get(__response__, 'service_name')))
