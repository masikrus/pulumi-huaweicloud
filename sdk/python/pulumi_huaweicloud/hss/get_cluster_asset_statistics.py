# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetClusterAssetStatisticsResult',
    'AwaitableGetClusterAssetStatisticsResult',
    'get_cluster_asset_statistics',
    'get_cluster_asset_statistics_output',
]

@pulumi.output_type
class GetClusterAssetStatisticsResult:
    """
    A collection of values returned by getClusterAssetStatistics.
    """
    def __init__(__self__, cluster_num=None, enterprise_project_id=None, id=None, pod_num=None, region=None, service_num=None, work_load_num=None):
        if cluster_num and not isinstance(cluster_num, int):
            raise TypeError("Expected argument 'cluster_num' to be a int")
        pulumi.set(__self__, "cluster_num", cluster_num)
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if pod_num and not isinstance(pod_num, int):
            raise TypeError("Expected argument 'pod_num' to be a int")
        pulumi.set(__self__, "pod_num", pod_num)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if service_num and not isinstance(service_num, int):
            raise TypeError("Expected argument 'service_num' to be a int")
        pulumi.set(__self__, "service_num", service_num)
        if work_load_num and not isinstance(work_load_num, int):
            raise TypeError("Expected argument 'work_load_num' to be a int")
        pulumi.set(__self__, "work_load_num", work_load_num)

    @_builtins.property
    @pulumi.getter(name="clusterNum")
    def cluster_num(self) -> _builtins.int:
        """
        The number of clusters.
        """
        return pulumi.get(self, "cluster_num")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="podNum")
    def pod_num(self) -> _builtins.int:
        """
        The number of pods.
        """
        return pulumi.get(self, "pod_num")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="serviceNum")
    def service_num(self) -> _builtins.int:
        """
        The number of services.
        """
        return pulumi.get(self, "service_num")

    @_builtins.property
    @pulumi.getter(name="workLoadNum")
    def work_load_num(self) -> _builtins.int:
        """
        The number of workloads.
        """
        return pulumi.get(self, "work_load_num")


class AwaitableGetClusterAssetStatisticsResult(GetClusterAssetStatisticsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetClusterAssetStatisticsResult(
            cluster_num=self.cluster_num,
            enterprise_project_id=self.enterprise_project_id,
            id=self.id,
            pod_num=self.pod_num,
            region=self.region,
            service_num=self.service_num,
            work_load_num=self.work_load_num)


def get_cluster_asset_statistics(enterprise_project_id: Optional[_builtins.str] = None,
                                 region: Optional[_builtins.str] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetClusterAssetStatisticsResult:
    """
    Use this data source to get HSS cluster asset statistics within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_cluster_asset_statistics(enterprise_project_id="0")
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.  
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:hss/getClusterAssetStatistics:getClusterAssetStatistics', __args__, opts=opts, typ=GetClusterAssetStatisticsResult).value

    return AwaitableGetClusterAssetStatisticsResult(
        cluster_num=pulumi.get(__ret__, 'cluster_num'),
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        id=pulumi.get(__ret__, 'id'),
        pod_num=pulumi.get(__ret__, 'pod_num'),
        region=pulumi.get(__ret__, 'region'),
        service_num=pulumi.get(__ret__, 'service_num'),
        work_load_num=pulumi.get(__ret__, 'work_load_num'))
def get_cluster_asset_statistics_output(enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                        region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                        opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetClusterAssetStatisticsResult]:
    """
    Use this data source to get HSS cluster asset statistics within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_cluster_asset_statistics(enterprise_project_id="0")
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.  
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:hss/getClusterAssetStatistics:getClusterAssetStatistics', __args__, opts=opts, typ=GetClusterAssetStatisticsResult)
    return __ret__.apply(lambda __response__: GetClusterAssetStatisticsResult(
        cluster_num=pulumi.get(__response__, 'cluster_num'),
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        id=pulumi.get(__response__, 'id'),
        pod_num=pulumi.get(__response__, 'pod_num'),
        region=pulumi.get(__response__, 'region'),
        service_num=pulumi.get(__response__, 'service_num'),
        work_load_num=pulumi.get(__response__, 'work_load_num')))
