# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['EventAlarmWhiteListDeleteArgs', 'EventAlarmWhiteListDelete']

@pulumi.input_type
class EventAlarmWhiteListDeleteArgs:
    def __init__(__self__, *,
                 enterprise_project_id: pulumi.Input[_builtins.str],
                 data_lists: Optional[pulumi.Input[Sequence[pulumi.Input['EventAlarmWhiteListDeleteDataListArgs']]]] = None,
                 delete_all: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 event_type: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 restore_alarm: Optional[pulumi.Input[_builtins.bool]] = None):
        """
        The set of arguments for constructing a EventAlarmWhiteListDelete resource.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.  
               This parameter is valid only when the enterprise project is enabled.
               The default value is **0**, indicating the default enterprise project.
               If it is necessary to operate the hosts under all enterprise projects, the value is **all_granted_eps**.
               If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
               the operation may fail due to insufficient permissions.
        :param pulumi.Input[Sequence[pulumi.Input['EventAlarmWhiteListDeleteDataListArgs']]] data_lists: Specifies the details of deleting the alarm white list.
               The data_list structure is documented below.
               
               <a name="data_list_struct"></a>
               The `data_list` block supports:
        :param pulumi.Input[_builtins.bool] delete_all: Specifies whether to delete all white lists.  
               The valid values are as follows:
               + **true**
               + **false**
        :param pulumi.Input[_builtins.int] event_type: Specifies the event type.  
               The valid values are as follows:
               + **1001**: General malware.
               + **1002**: Virus.
               + **1003**: Worm.
               + **1004**: Trojan.
               + **1005**: Botnet.
               + **1006**: Backdoor.
               + **1010**: Rootkit.
               + **1011**: Ransomware.
               + **1012**: Hacker tool.
               + **1015**: Webshell.
               + **1016**: Mining.
               + **1017**: Reverse Shell.
               + **2001**: General vulnerability exploitation.
               + **2012**: Remote code execution.
               + **2047**: Redis vulnerability exploitation.
               + **2048**: Hadoop vulnerability exploitation.
               + **2049**: MySQL vulnerability exploitation.
               + **3002**: File privilege escalation.
               + **3003**: Process privilege escalation.
               + **3004**: Key file change.
               + **3005**: File/directory change.
               + **3007**: Process abnormal behavior.
               + **3015**: High-risk command execution.
               + **3018**: Abnormal Shell.
               + **3027**: Crontab suspicious task.
               + **3029**: System security protection disabled.
               + **3030**: Backup deletion.
               + **3031**: Abnormal registry operation.
               + **3036**: Container image blocking.
               + **4002**: Brute force cracking.
               + **4004**: Abnormal login.
               + **4006**: Illegal system account.
               + **4014**: User account addition.
               + **4020**: User password theft.
               + **6002**: Port scanning.
               + **6003**: Host scanning.
               + **13001**: Kubernetes event deletion.
               + **13002**: Pod abnormal behavior.
               + **13003**: Enumerate user information.
               + **13004**: Bind cluster user role.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] restore_alarm: Specifies whether to restore related alarms.  
               The valid values are as follows:
               + **true**
               + **false**
               
               Defaults to **false**.
        """
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if data_lists is not None:
            pulumi.set(__self__, "data_lists", data_lists)
        if delete_all is not None:
            pulumi.set(__self__, "delete_all", delete_all)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if event_type is not None:
            pulumi.set(__self__, "event_type", event_type)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if restore_alarm is not None:
            pulumi.set(__self__, "restore_alarm", restore_alarm)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the enterprise project ID.  
        This parameter is valid only when the enterprise project is enabled.
        The default value is **0**, indicating the default enterprise project.
        If it is necessary to operate the hosts under all enterprise projects, the value is **all_granted_eps**.
        If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
        the operation may fail due to insufficient permissions.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="dataLists")
    def data_lists(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EventAlarmWhiteListDeleteDataListArgs']]]]:
        """
        Specifies the details of deleting the alarm white list.
        The data_list structure is documented below.

        <a name="data_list_struct"></a>
        The `data_list` block supports:
        """
        return pulumi.get(self, "data_lists")

    @data_lists.setter
    def data_lists(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EventAlarmWhiteListDeleteDataListArgs']]]]):
        pulumi.set(self, "data_lists", value)

    @_builtins.property
    @pulumi.getter(name="deleteAll")
    def delete_all(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to delete all white lists.  
        The valid values are as follows:
        + **true**
        + **false**
        """
        return pulumi.get(self, "delete_all")

    @delete_all.setter
    def delete_all(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "delete_all", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="eventType")
    def event_type(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the event type.  
        The valid values are as follows:
        + **1001**: General malware.
        + **1002**: Virus.
        + **1003**: Worm.
        + **1004**: Trojan.
        + **1005**: Botnet.
        + **1006**: Backdoor.
        + **1010**: Rootkit.
        + **1011**: Ransomware.
        + **1012**: Hacker tool.
        + **1015**: Webshell.
        + **1016**: Mining.
        + **1017**: Reverse Shell.
        + **2001**: General vulnerability exploitation.
        + **2012**: Remote code execution.
        + **2047**: Redis vulnerability exploitation.
        + **2048**: Hadoop vulnerability exploitation.
        + **2049**: MySQL vulnerability exploitation.
        + **3002**: File privilege escalation.
        + **3003**: Process privilege escalation.
        + **3004**: Key file change.
        + **3005**: File/directory change.
        + **3007**: Process abnormal behavior.
        + **3015**: High-risk command execution.
        + **3018**: Abnormal Shell.
        + **3027**: Crontab suspicious task.
        + **3029**: System security protection disabled.
        + **3030**: Backup deletion.
        + **3031**: Abnormal registry operation.
        + **3036**: Container image blocking.
        + **4002**: Brute force cracking.
        + **4004**: Abnormal login.
        + **4006**: Illegal system account.
        + **4014**: User account addition.
        + **4020**: User password theft.
        + **6002**: Port scanning.
        + **6003**: Host scanning.
        + **13001**: Kubernetes event deletion.
        + **13002**: Pod abnormal behavior.
        + **13003**: Enumerate user information.
        + **13004**: Bind cluster user role.
        """
        return pulumi.get(self, "event_type")

    @event_type.setter
    def event_type(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "event_type", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="restoreAlarm")
    def restore_alarm(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to restore related alarms.  
        The valid values are as follows:
        + **true**
        + **false**

        Defaults to **false**.
        """
        return pulumi.get(self, "restore_alarm")

    @restore_alarm.setter
    def restore_alarm(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "restore_alarm", value)


@pulumi.input_type
class _EventAlarmWhiteListDeleteState:
    def __init__(__self__, *,
                 data_lists: Optional[pulumi.Input[Sequence[pulumi.Input['EventAlarmWhiteListDeleteDataListArgs']]]] = None,
                 delete_all: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 event_type: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 restore_alarm: Optional[pulumi.Input[_builtins.bool]] = None):
        """
        Input properties used for looking up and filtering EventAlarmWhiteListDelete resources.
        :param pulumi.Input[Sequence[pulumi.Input['EventAlarmWhiteListDeleteDataListArgs']]] data_lists: Specifies the details of deleting the alarm white list.
               The data_list structure is documented below.
               
               <a name="data_list_struct"></a>
               The `data_list` block supports:
        :param pulumi.Input[_builtins.bool] delete_all: Specifies whether to delete all white lists.  
               The valid values are as follows:
               + **true**
               + **false**
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.  
               This parameter is valid only when the enterprise project is enabled.
               The default value is **0**, indicating the default enterprise project.
               If it is necessary to operate the hosts under all enterprise projects, the value is **all_granted_eps**.
               If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
               the operation may fail due to insufficient permissions.
        :param pulumi.Input[_builtins.int] event_type: Specifies the event type.  
               The valid values are as follows:
               + **1001**: General malware.
               + **1002**: Virus.
               + **1003**: Worm.
               + **1004**: Trojan.
               + **1005**: Botnet.
               + **1006**: Backdoor.
               + **1010**: Rootkit.
               + **1011**: Ransomware.
               + **1012**: Hacker tool.
               + **1015**: Webshell.
               + **1016**: Mining.
               + **1017**: Reverse Shell.
               + **2001**: General vulnerability exploitation.
               + **2012**: Remote code execution.
               + **2047**: Redis vulnerability exploitation.
               + **2048**: Hadoop vulnerability exploitation.
               + **2049**: MySQL vulnerability exploitation.
               + **3002**: File privilege escalation.
               + **3003**: Process privilege escalation.
               + **3004**: Key file change.
               + **3005**: File/directory change.
               + **3007**: Process abnormal behavior.
               + **3015**: High-risk command execution.
               + **3018**: Abnormal Shell.
               + **3027**: Crontab suspicious task.
               + **3029**: System security protection disabled.
               + **3030**: Backup deletion.
               + **3031**: Abnormal registry operation.
               + **3036**: Container image blocking.
               + **4002**: Brute force cracking.
               + **4004**: Abnormal login.
               + **4006**: Illegal system account.
               + **4014**: User account addition.
               + **4020**: User password theft.
               + **6002**: Port scanning.
               + **6003**: Host scanning.
               + **13001**: Kubernetes event deletion.
               + **13002**: Pod abnormal behavior.
               + **13003**: Enumerate user information.
               + **13004**: Bind cluster user role.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] restore_alarm: Specifies whether to restore related alarms.  
               The valid values are as follows:
               + **true**
               + **false**
               
               Defaults to **false**.
        """
        if data_lists is not None:
            pulumi.set(__self__, "data_lists", data_lists)
        if delete_all is not None:
            pulumi.set(__self__, "delete_all", delete_all)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if event_type is not None:
            pulumi.set(__self__, "event_type", event_type)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if restore_alarm is not None:
            pulumi.set(__self__, "restore_alarm", restore_alarm)

    @_builtins.property
    @pulumi.getter(name="dataLists")
    def data_lists(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EventAlarmWhiteListDeleteDataListArgs']]]]:
        """
        Specifies the details of deleting the alarm white list.
        The data_list structure is documented below.

        <a name="data_list_struct"></a>
        The `data_list` block supports:
        """
        return pulumi.get(self, "data_lists")

    @data_lists.setter
    def data_lists(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EventAlarmWhiteListDeleteDataListArgs']]]]):
        pulumi.set(self, "data_lists", value)

    @_builtins.property
    @pulumi.getter(name="deleteAll")
    def delete_all(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to delete all white lists.  
        The valid values are as follows:
        + **true**
        + **false**
        """
        return pulumi.get(self, "delete_all")

    @delete_all.setter
    def delete_all(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "delete_all", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID.  
        This parameter is valid only when the enterprise project is enabled.
        The default value is **0**, indicating the default enterprise project.
        If it is necessary to operate the hosts under all enterprise projects, the value is **all_granted_eps**.
        If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
        the operation may fail due to insufficient permissions.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="eventType")
    def event_type(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the event type.  
        The valid values are as follows:
        + **1001**: General malware.
        + **1002**: Virus.
        + **1003**: Worm.
        + **1004**: Trojan.
        + **1005**: Botnet.
        + **1006**: Backdoor.
        + **1010**: Rootkit.
        + **1011**: Ransomware.
        + **1012**: Hacker tool.
        + **1015**: Webshell.
        + **1016**: Mining.
        + **1017**: Reverse Shell.
        + **2001**: General vulnerability exploitation.
        + **2012**: Remote code execution.
        + **2047**: Redis vulnerability exploitation.
        + **2048**: Hadoop vulnerability exploitation.
        + **2049**: MySQL vulnerability exploitation.
        + **3002**: File privilege escalation.
        + **3003**: Process privilege escalation.
        + **3004**: Key file change.
        + **3005**: File/directory change.
        + **3007**: Process abnormal behavior.
        + **3015**: High-risk command execution.
        + **3018**: Abnormal Shell.
        + **3027**: Crontab suspicious task.
        + **3029**: System security protection disabled.
        + **3030**: Backup deletion.
        + **3031**: Abnormal registry operation.
        + **3036**: Container image blocking.
        + **4002**: Brute force cracking.
        + **4004**: Abnormal login.
        + **4006**: Illegal system account.
        + **4014**: User account addition.
        + **4020**: User password theft.
        + **6002**: Port scanning.
        + **6003**: Host scanning.
        + **13001**: Kubernetes event deletion.
        + **13002**: Pod abnormal behavior.
        + **13003**: Enumerate user information.
        + **13004**: Bind cluster user role.
        """
        return pulumi.get(self, "event_type")

    @event_type.setter
    def event_type(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "event_type", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="restoreAlarm")
    def restore_alarm(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to restore related alarms.  
        The valid values are as follows:
        + **true**
        + **false**

        Defaults to **false**.
        """
        return pulumi.get(self, "restore_alarm")

    @restore_alarm.setter
    def restore_alarm(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "restore_alarm", value)


@pulumi.type_token("huaweicloud:hss/eventAlarmWhiteListDelete:EventAlarmWhiteListDelete")
class EventAlarmWhiteListDelete(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 data_lists: Optional[pulumi.Input[Sequence[pulumi.Input[Union['EventAlarmWhiteListDeleteDataListArgs', 'EventAlarmWhiteListDeleteDataListArgsDict']]]]] = None,
                 delete_all: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 event_type: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 restore_alarm: Optional[pulumi.Input[_builtins.bool]] = None,
                 __props__=None):
        """
        Manages an HSS event alarm white list deletion resource within HuaweiCloud.

        > This resource is a one-time action resource using to delete HSS alarm white list. Deleting this resource will not
          clear the corresponding request record, but will only remove the resource information from the tf state file.

        ## Delete All alarm white lists

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        enterprise_project_id = config.require_object("enterpriseProjectId")
        restore_alarm = config.require_object("restoreAlarm")
        event_type = config.require_object("eventType")
        test = huaweicloud.hss.EventAlarmWhiteListDelete("test",
            enterprise_project_id=enterprise_project_id,
            restore_alarm=restore_alarm,
            delete_all=True,
            event_type=event_type)
        ```

        ## Delete an alarm white list

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        enterprise_project_id = config.require_object("enterpriseProjectId")
        event_type = config.require_object("eventType")
        hash = config.require_object("hash")
        description = config.require_object("description")
        test = huaweicloud.hss.EventAlarmWhiteListDelete("test",
            enterprise_project_id=enterprise_project_id,
            data_lists=[{
                "event_type": event_type,
                "hash": hash,
                "description": description,
            }])
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['EventAlarmWhiteListDeleteDataListArgs', 'EventAlarmWhiteListDeleteDataListArgsDict']]]] data_lists: Specifies the details of deleting the alarm white list.
               The data_list structure is documented below.
               
               <a name="data_list_struct"></a>
               The `data_list` block supports:
        :param pulumi.Input[_builtins.bool] delete_all: Specifies whether to delete all white lists.  
               The valid values are as follows:
               + **true**
               + **false**
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.  
               This parameter is valid only when the enterprise project is enabled.
               The default value is **0**, indicating the default enterprise project.
               If it is necessary to operate the hosts under all enterprise projects, the value is **all_granted_eps**.
               If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
               the operation may fail due to insufficient permissions.
        :param pulumi.Input[_builtins.int] event_type: Specifies the event type.  
               The valid values are as follows:
               + **1001**: General malware.
               + **1002**: Virus.
               + **1003**: Worm.
               + **1004**: Trojan.
               + **1005**: Botnet.
               + **1006**: Backdoor.
               + **1010**: Rootkit.
               + **1011**: Ransomware.
               + **1012**: Hacker tool.
               + **1015**: Webshell.
               + **1016**: Mining.
               + **1017**: Reverse Shell.
               + **2001**: General vulnerability exploitation.
               + **2012**: Remote code execution.
               + **2047**: Redis vulnerability exploitation.
               + **2048**: Hadoop vulnerability exploitation.
               + **2049**: MySQL vulnerability exploitation.
               + **3002**: File privilege escalation.
               + **3003**: Process privilege escalation.
               + **3004**: Key file change.
               + **3005**: File/directory change.
               + **3007**: Process abnormal behavior.
               + **3015**: High-risk command execution.
               + **3018**: Abnormal Shell.
               + **3027**: Crontab suspicious task.
               + **3029**: System security protection disabled.
               + **3030**: Backup deletion.
               + **3031**: Abnormal registry operation.
               + **3036**: Container image blocking.
               + **4002**: Brute force cracking.
               + **4004**: Abnormal login.
               + **4006**: Illegal system account.
               + **4014**: User account addition.
               + **4020**: User password theft.
               + **6002**: Port scanning.
               + **6003**: Host scanning.
               + **13001**: Kubernetes event deletion.
               + **13002**: Pod abnormal behavior.
               + **13003**: Enumerate user information.
               + **13004**: Bind cluster user role.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] restore_alarm: Specifies whether to restore related alarms.  
               The valid values are as follows:
               + **true**
               + **false**
               
               Defaults to **false**.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: EventAlarmWhiteListDeleteArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an HSS event alarm white list deletion resource within HuaweiCloud.

        > This resource is a one-time action resource using to delete HSS alarm white list. Deleting this resource will not
          clear the corresponding request record, but will only remove the resource information from the tf state file.

        ## Delete All alarm white lists

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        enterprise_project_id = config.require_object("enterpriseProjectId")
        restore_alarm = config.require_object("restoreAlarm")
        event_type = config.require_object("eventType")
        test = huaweicloud.hss.EventAlarmWhiteListDelete("test",
            enterprise_project_id=enterprise_project_id,
            restore_alarm=restore_alarm,
            delete_all=True,
            event_type=event_type)
        ```

        ## Delete an alarm white list

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        enterprise_project_id = config.require_object("enterpriseProjectId")
        event_type = config.require_object("eventType")
        hash = config.require_object("hash")
        description = config.require_object("description")
        test = huaweicloud.hss.EventAlarmWhiteListDelete("test",
            enterprise_project_id=enterprise_project_id,
            data_lists=[{
                "event_type": event_type,
                "hash": hash,
                "description": description,
            }])
        ```

        :param str resource_name: The name of the resource.
        :param EventAlarmWhiteListDeleteArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(EventAlarmWhiteListDeleteArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 data_lists: Optional[pulumi.Input[Sequence[pulumi.Input[Union['EventAlarmWhiteListDeleteDataListArgs', 'EventAlarmWhiteListDeleteDataListArgsDict']]]]] = None,
                 delete_all: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 event_type: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 restore_alarm: Optional[pulumi.Input[_builtins.bool]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = EventAlarmWhiteListDeleteArgs.__new__(EventAlarmWhiteListDeleteArgs)

            __props__.__dict__["data_lists"] = data_lists
            __props__.__dict__["delete_all"] = delete_all
            __props__.__dict__["enable_force_new"] = enable_force_new
            if enterprise_project_id is None and not opts.urn:
                raise TypeError("Missing required property 'enterprise_project_id'")
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            __props__.__dict__["event_type"] = event_type
            __props__.__dict__["region"] = region
            __props__.__dict__["restore_alarm"] = restore_alarm
        super(EventAlarmWhiteListDelete, __self__).__init__(
            'huaweicloud:hss/eventAlarmWhiteListDelete:EventAlarmWhiteListDelete',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            data_lists: Optional[pulumi.Input[Sequence[pulumi.Input[Union['EventAlarmWhiteListDeleteDataListArgs', 'EventAlarmWhiteListDeleteDataListArgsDict']]]]] = None,
            delete_all: Optional[pulumi.Input[_builtins.bool]] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            event_type: Optional[pulumi.Input[_builtins.int]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            restore_alarm: Optional[pulumi.Input[_builtins.bool]] = None) -> 'EventAlarmWhiteListDelete':
        """
        Get an existing EventAlarmWhiteListDelete resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['EventAlarmWhiteListDeleteDataListArgs', 'EventAlarmWhiteListDeleteDataListArgsDict']]]] data_lists: Specifies the details of deleting the alarm white list.
               The data_list structure is documented below.
               
               <a name="data_list_struct"></a>
               The `data_list` block supports:
        :param pulumi.Input[_builtins.bool] delete_all: Specifies whether to delete all white lists.  
               The valid values are as follows:
               + **true**
               + **false**
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.  
               This parameter is valid only when the enterprise project is enabled.
               The default value is **0**, indicating the default enterprise project.
               If it is necessary to operate the hosts under all enterprise projects, the value is **all_granted_eps**.
               If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
               the operation may fail due to insufficient permissions.
        :param pulumi.Input[_builtins.int] event_type: Specifies the event type.  
               The valid values are as follows:
               + **1001**: General malware.
               + **1002**: Virus.
               + **1003**: Worm.
               + **1004**: Trojan.
               + **1005**: Botnet.
               + **1006**: Backdoor.
               + **1010**: Rootkit.
               + **1011**: Ransomware.
               + **1012**: Hacker tool.
               + **1015**: Webshell.
               + **1016**: Mining.
               + **1017**: Reverse Shell.
               + **2001**: General vulnerability exploitation.
               + **2012**: Remote code execution.
               + **2047**: Redis vulnerability exploitation.
               + **2048**: Hadoop vulnerability exploitation.
               + **2049**: MySQL vulnerability exploitation.
               + **3002**: File privilege escalation.
               + **3003**: Process privilege escalation.
               + **3004**: Key file change.
               + **3005**: File/directory change.
               + **3007**: Process abnormal behavior.
               + **3015**: High-risk command execution.
               + **3018**: Abnormal Shell.
               + **3027**: Crontab suspicious task.
               + **3029**: System security protection disabled.
               + **3030**: Backup deletion.
               + **3031**: Abnormal registry operation.
               + **3036**: Container image blocking.
               + **4002**: Brute force cracking.
               + **4004**: Abnormal login.
               + **4006**: Illegal system account.
               + **4014**: User account addition.
               + **4020**: User password theft.
               + **6002**: Port scanning.
               + **6003**: Host scanning.
               + **13001**: Kubernetes event deletion.
               + **13002**: Pod abnormal behavior.
               + **13003**: Enumerate user information.
               + **13004**: Bind cluster user role.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] restore_alarm: Specifies whether to restore related alarms.  
               The valid values are as follows:
               + **true**
               + **false**
               
               Defaults to **false**.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _EventAlarmWhiteListDeleteState.__new__(_EventAlarmWhiteListDeleteState)

        __props__.__dict__["data_lists"] = data_lists
        __props__.__dict__["delete_all"] = delete_all
        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["event_type"] = event_type
        __props__.__dict__["region"] = region
        __props__.__dict__["restore_alarm"] = restore_alarm
        return EventAlarmWhiteListDelete(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="dataLists")
    def data_lists(self) -> pulumi.Output[Optional[Sequence['outputs.EventAlarmWhiteListDeleteDataList']]]:
        """
        Specifies the details of deleting the alarm white list.
        The data_list structure is documented below.

        <a name="data_list_struct"></a>
        The `data_list` block supports:
        """
        return pulumi.get(self, "data_lists")

    @_builtins.property
    @pulumi.getter(name="deleteAll")
    def delete_all(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether to delete all white lists.  
        The valid values are as follows:
        + **true**
        + **false**
        """
        return pulumi.get(self, "delete_all")

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the enterprise project ID.  
        This parameter is valid only when the enterprise project is enabled.
        The default value is **0**, indicating the default enterprise project.
        If it is necessary to operate the hosts under all enterprise projects, the value is **all_granted_eps**.
        If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
        the operation may fail due to insufficient permissions.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="eventType")
    def event_type(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        Specifies the event type.  
        The valid values are as follows:
        + **1001**: General malware.
        + **1002**: Virus.
        + **1003**: Worm.
        + **1004**: Trojan.
        + **1005**: Botnet.
        + **1006**: Backdoor.
        + **1010**: Rootkit.
        + **1011**: Ransomware.
        + **1012**: Hacker tool.
        + **1015**: Webshell.
        + **1016**: Mining.
        + **1017**: Reverse Shell.
        + **2001**: General vulnerability exploitation.
        + **2012**: Remote code execution.
        + **2047**: Redis vulnerability exploitation.
        + **2048**: Hadoop vulnerability exploitation.
        + **2049**: MySQL vulnerability exploitation.
        + **3002**: File privilege escalation.
        + **3003**: Process privilege escalation.
        + **3004**: Key file change.
        + **3005**: File/directory change.
        + **3007**: Process abnormal behavior.
        + **3015**: High-risk command execution.
        + **3018**: Abnormal Shell.
        + **3027**: Crontab suspicious task.
        + **3029**: System security protection disabled.
        + **3030**: Backup deletion.
        + **3031**: Abnormal registry operation.
        + **3036**: Container image blocking.
        + **4002**: Brute force cracking.
        + **4004**: Abnormal login.
        + **4006**: Illegal system account.
        + **4014**: User account addition.
        + **4020**: User password theft.
        + **6002**: Port scanning.
        + **6003**: Host scanning.
        + **13001**: Kubernetes event deletion.
        + **13002**: Pod abnormal behavior.
        + **13003**: Enumerate user information.
        + **13004**: Bind cluster user role.
        """
        return pulumi.get(self, "event_type")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="restoreAlarm")
    def restore_alarm(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether to restore related alarms.  
        The valid values are as follows:
        + **true**
        + **false**

        Defaults to **false**.
        """
        return pulumi.get(self, "restore_alarm")

