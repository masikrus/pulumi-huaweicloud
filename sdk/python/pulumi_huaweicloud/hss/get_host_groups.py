# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetHostGroupsResult',
    'AwaitableGetHostGroupsResult',
    'get_host_groups',
    'get_host_groups_output',
]

@pulumi.output_type
class GetHostGroupsResult:
    """
    A collection of values returned by getHostGroups.
    """
    def __init__(__self__, enterprise_project_id=None, group_id=None, groups=None, host_num=None, id=None, name=None, region=None, risk_host_num=None, unprotect_host_num=None):
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if group_id and not isinstance(group_id, str):
            raise TypeError("Expected argument 'group_id' to be a str")
        pulumi.set(__self__, "group_id", group_id)
        if groups and not isinstance(groups, list):
            raise TypeError("Expected argument 'groups' to be a list")
        pulumi.set(__self__, "groups", groups)
        if host_num and not isinstance(host_num, str):
            raise TypeError("Expected argument 'host_num' to be a str")
        pulumi.set(__self__, "host_num", host_num)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if risk_host_num and not isinstance(risk_host_num, str):
            raise TypeError("Expected argument 'risk_host_num' to be a str")
        pulumi.set(__self__, "risk_host_num", risk_host_num)
        if unprotect_host_num and not isinstance(unprotect_host_num, str):
            raise TypeError("Expected argument 'unprotect_host_num' to be a str")
        pulumi.set(__self__, "unprotect_host_num", unprotect_host_num)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "group_id")

    @_builtins.property
    @pulumi.getter
    def groups(self) -> Sequence['outputs.GetHostGroupsGroupResult']:
        """
        All host groups that match the filter parameters.
        """
        return pulumi.get(self, "groups")

    @_builtins.property
    @pulumi.getter(name="hostNum")
    def host_num(self) -> Optional[_builtins.str]:
        """
        The number of hosts in the host group.
        """
        return pulumi.get(self, "host_num")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The name of the host group.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="riskHostNum")
    def risk_host_num(self) -> Optional[_builtins.str]:
        """
        The number of risky hosts in the host group.
        """
        return pulumi.get(self, "risk_host_num")

    @_builtins.property
    @pulumi.getter(name="unprotectHostNum")
    def unprotect_host_num(self) -> Optional[_builtins.str]:
        """
        The number of unprotected hosts in the host group.
        """
        return pulumi.get(self, "unprotect_host_num")


class AwaitableGetHostGroupsResult(GetHostGroupsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetHostGroupsResult(
            enterprise_project_id=self.enterprise_project_id,
            group_id=self.group_id,
            groups=self.groups,
            host_num=self.host_num,
            id=self.id,
            name=self.name,
            region=self.region,
            risk_host_num=self.risk_host_num,
            unprotect_host_num=self.unprotect_host_num)


def get_host_groups(enterprise_project_id: Optional[_builtins.str] = None,
                    group_id: Optional[_builtins.str] = None,
                    host_num: Optional[_builtins.str] = None,
                    name: Optional[_builtins.str] = None,
                    region: Optional[_builtins.str] = None,
                    risk_host_num: Optional[_builtins.str] = None,
                    unprotect_host_num: Optional[_builtins.str] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetHostGroupsResult:
    """
    Use this data source to get the list of HSS host groups within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    group_id = config.require_object("groupId")
    test = huaweicloud.hss.get_host_groups(group_id=group_id)
    ```


    :param _builtins.str enterprise_project_id: Specifies the ID of the enterprise project to which the host groups
           belong. If omitted, will query the values under the default enterprise project.
    :param _builtins.str group_id: Specifies the ID of the host group to be queried.
    :param _builtins.str host_num: Specifies the number of hosts in the host groups to be queried.
    :param _builtins.str name: Specifies the name of the host group to be queried. This field will undergo a fuzzy
           matching query, the query result is for all host groups whose names contain this value.
    :param _builtins.str region: Specifies the region in which to query the HSS host groups.
           If omitted, the provider-level region will be used.
    :param _builtins.str risk_host_num: Specifies the number of risky hosts in the host groups to be queried.
    :param _builtins.str unprotect_host_num: Specifies the number of unprotected hosts in the host groups to be queried.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['groupId'] = group_id
    __args__['hostNum'] = host_num
    __args__['name'] = name
    __args__['region'] = region
    __args__['riskHostNum'] = risk_host_num
    __args__['unprotectHostNum'] = unprotect_host_num
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:hss/getHostGroups:getHostGroups', __args__, opts=opts, typ=GetHostGroupsResult).value

    return AwaitableGetHostGroupsResult(
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        group_id=pulumi.get(__ret__, 'group_id'),
        groups=pulumi.get(__ret__, 'groups'),
        host_num=pulumi.get(__ret__, 'host_num'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        region=pulumi.get(__ret__, 'region'),
        risk_host_num=pulumi.get(__ret__, 'risk_host_num'),
        unprotect_host_num=pulumi.get(__ret__, 'unprotect_host_num'))
def get_host_groups_output(enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                           group_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                           host_num: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                           name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                           region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                           risk_host_num: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                           unprotect_host_num: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                           opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetHostGroupsResult]:
    """
    Use this data source to get the list of HSS host groups within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    group_id = config.require_object("groupId")
    test = huaweicloud.hss.get_host_groups(group_id=group_id)
    ```


    :param _builtins.str enterprise_project_id: Specifies the ID of the enterprise project to which the host groups
           belong. If omitted, will query the values under the default enterprise project.
    :param _builtins.str group_id: Specifies the ID of the host group to be queried.
    :param _builtins.str host_num: Specifies the number of hosts in the host groups to be queried.
    :param _builtins.str name: Specifies the name of the host group to be queried. This field will undergo a fuzzy
           matching query, the query result is for all host groups whose names contain this value.
    :param _builtins.str region: Specifies the region in which to query the HSS host groups.
           If omitted, the provider-level region will be used.
    :param _builtins.str risk_host_num: Specifies the number of risky hosts in the host groups to be queried.
    :param _builtins.str unprotect_host_num: Specifies the number of unprotected hosts in the host groups to be queried.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['groupId'] = group_id
    __args__['hostNum'] = host_num
    __args__['name'] = name
    __args__['region'] = region
    __args__['riskHostNum'] = risk_host_num
    __args__['unprotectHostNum'] = unprotect_host_num
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:hss/getHostGroups:getHostGroups', __args__, opts=opts, typ=GetHostGroupsResult)
    return __ret__.apply(lambda __response__: GetHostGroupsResult(
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        group_id=pulumi.get(__response__, 'group_id'),
        groups=pulumi.get(__response__, 'groups'),
        host_num=pulumi.get(__response__, 'host_num'),
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        region=pulumi.get(__response__, 'region'),
        risk_host_num=pulumi.get(__response__, 'risk_host_num'),
        unprotect_host_num=pulumi.get(__response__, 'unprotect_host_num')))
