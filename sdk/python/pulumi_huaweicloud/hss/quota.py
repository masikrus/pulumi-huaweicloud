# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['QuotaArgs', 'Quota']

@pulumi.input_type
class QuotaArgs:
    def __init__(__self__, *,
                 period: pulumi.Input[_builtins.int],
                 period_unit: pulumi.Input[_builtins.str],
                 version: pulumi.Input[_builtins.str],
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None):
        """
        The set of arguments for constructing a Quota resource.
        :param pulumi.Input[_builtins.int] period: Specifies the charging period of the quota. Changing this parameter will
               create a new resource.
               If `period_unit` is set to **month**, the value ranges from `1` to `9`.
               If `period_unit` is set to **year**, the valid values are `1`, `2`, `3`, or `5`.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the charging period unit of the quota.
               Valid values are **month** and **year**. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] version: Specifies protection quota version. Changing this parameter will create a
               new resource.
               The valid values are as follows:
               + **hss.version.basic**: Basic version.
               + **hss.version.advanced**: Professional version.
               + **hss.version.enterprise**: Enterprise version.
               + **hss.version.premium**: Ultimate version.
               + **hss.version.wtp**: Web page tamper prevention version.
               + **hss.version.container.enterprise**: Container version.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether auto-renew is enabled.
               Valid values are **true** and **false**. Defaults to **false**.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID to which the HSS quota belongs.
               For enterprise users, if omitted, default enterprise project will be used.
        :param pulumi.Input[_builtins.str] region: Specifies the region to which the HSS quota resource belongs.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the HSS quota.
        """
        pulumi.set(__self__, "period", period)
        pulumi.set(__self__, "period_unit", period_unit)
        pulumi.set(__self__, "version", version)
        if auto_renew is not None:
            pulumi.set(__self__, "auto_renew", auto_renew)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter
    def period(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the charging period of the quota. Changing this parameter will
        create a new resource.
        If `period_unit` is set to **month**, the value ranges from `1` to `9`.
        If `period_unit` is set to **year**, the valid values are `1`, `2`, `3`, or `5`.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "period", value)

    @_builtins.property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the charging period unit of the quota.
        Valid values are **month** and **year**. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "period_unit")

    @period_unit.setter
    def period_unit(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "period_unit", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies protection quota version. Changing this parameter will create a
        new resource.
        The valid values are as follows:
        + **hss.version.basic**: Basic version.
        + **hss.version.advanced**: Professional version.
        + **hss.version.enterprise**: Enterprise version.
        + **hss.version.premium**: Ultimate version.
        + **hss.version.wtp**: Web page tamper prevention version.
        + **hss.version.container.enterprise**: Container version.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "version", value)

    @_builtins.property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies whether auto-renew is enabled.
        Valid values are **true** and **false**. Defaults to **false**.
        """
        return pulumi.get(self, "auto_renew")

    @auto_renew.setter
    def auto_renew(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "auto_renew", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID to which the HSS quota belongs.
        For enterprise users, if omitted, default enterprise project will be used.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region to which the HSS quota resource belongs.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the key/value pairs to associate with the HSS quota.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _QuotaState:
    def __init__(__self__, *,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_name: Optional[pulumi.Input[_builtins.str]] = None,
                 expire_time: Optional[pulumi.Input[_builtins.int]] = None,
                 host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 host_name: Optional[pulumi.Input[_builtins.str]] = None,
                 is_trial_quota: Optional[pulumi.Input[_builtins.bool]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 shared_quota: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 used_status: Optional[pulumi.Input[_builtins.str]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering Quota resources.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether auto-renew is enabled.
               Valid values are **true** and **false**. Defaults to **false**.
        :param pulumi.Input[_builtins.str] charging_mode: The charging mode of quota.  
               The valid values are as follows:
               + **prePaid**: The yearly/monthly billing mode.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID to which the HSS quota belongs.
               For enterprise users, if omitted, default enterprise project will be used.
        :param pulumi.Input[_builtins.str] enterprise_project_name: The enterprise project name to which the quota belongs.
        :param pulumi.Input[_builtins.int] expire_time: The expiration time of quota, `-1` indicates no expiration date.
        :param pulumi.Input[_builtins.str] host_id: The host ID for quota binding.
        :param pulumi.Input[_builtins.str] host_name: The host name for quota binding.
        :param pulumi.Input[_builtins.bool] is_trial_quota: Is it a trial quota. The value can be **true** or **false**.
        :param pulumi.Input[_builtins.int] period: Specifies the charging period of the quota. Changing this parameter will
               create a new resource.
               If `period_unit` is set to **month**, the value ranges from `1` to `9`.
               If `period_unit` is set to **year**, the valid values are `1`, `2`, `3`, or `5`.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the charging period unit of the quota.
               Valid values are **month** and **year**. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region to which the HSS quota resource belongs.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] shared_quota: Is it a shared quota. The value can be **shared** or **unshared**.
        :param pulumi.Input[_builtins.str] status: The status of quota. The value can be **normal**, **expired**, or **freeze**.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the HSS quota.
        :param pulumi.Input[_builtins.str] used_status: The usage status of quota. The value can be **idle** or **used**.
        :param pulumi.Input[_builtins.str] version: Specifies protection quota version. Changing this parameter will create a
               new resource.
               The valid values are as follows:
               + **hss.version.basic**: Basic version.
               + **hss.version.advanced**: Professional version.
               + **hss.version.enterprise**: Enterprise version.
               + **hss.version.premium**: Ultimate version.
               + **hss.version.wtp**: Web page tamper prevention version.
               + **hss.version.container.enterprise**: Container version.
        """
        if auto_renew is not None:
            pulumi.set(__self__, "auto_renew", auto_renew)
        if charging_mode is not None:
            pulumi.set(__self__, "charging_mode", charging_mode)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if enterprise_project_name is not None:
            pulumi.set(__self__, "enterprise_project_name", enterprise_project_name)
        if expire_time is not None:
            pulumi.set(__self__, "expire_time", expire_time)
        if host_id is not None:
            pulumi.set(__self__, "host_id", host_id)
        if host_name is not None:
            pulumi.set(__self__, "host_name", host_name)
        if is_trial_quota is not None:
            pulumi.set(__self__, "is_trial_quota", is_trial_quota)
        if period is not None:
            pulumi.set(__self__, "period", period)
        if period_unit is not None:
            pulumi.set(__self__, "period_unit", period_unit)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if shared_quota is not None:
            pulumi.set(__self__, "shared_quota", shared_quota)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if used_status is not None:
            pulumi.set(__self__, "used_status", used_status)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies whether auto-renew is enabled.
        Valid values are **true** and **false**. Defaults to **false**.
        """
        return pulumi.get(self, "auto_renew")

    @auto_renew.setter
    def auto_renew(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "auto_renew", value)

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The charging mode of quota.  
        The valid values are as follows:
        + **prePaid**: The yearly/monthly billing mode.
        """
        return pulumi.get(self, "charging_mode")

    @charging_mode.setter
    def charging_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "charging_mode", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID to which the HSS quota belongs.
        For enterprise users, if omitted, default enterprise project will be used.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectName")
    def enterprise_project_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The enterprise project name to which the quota belongs.
        """
        return pulumi.get(self, "enterprise_project_name")

    @enterprise_project_name.setter
    def enterprise_project_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_name", value)

    @_builtins.property
    @pulumi.getter(name="expireTime")
    def expire_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The expiration time of quota, `-1` indicates no expiration date.
        """
        return pulumi.get(self, "expire_time")

    @expire_time.setter
    def expire_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "expire_time", value)

    @_builtins.property
    @pulumi.getter(name="hostId")
    def host_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The host ID for quota binding.
        """
        return pulumi.get(self, "host_id")

    @host_id.setter
    def host_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "host_id", value)

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The host name for quota binding.
        """
        return pulumi.get(self, "host_name")

    @host_name.setter
    def host_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "host_name", value)

    @_builtins.property
    @pulumi.getter(name="isTrialQuota")
    def is_trial_quota(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Is it a trial quota. The value can be **true** or **false**.
        """
        return pulumi.get(self, "is_trial_quota")

    @is_trial_quota.setter
    def is_trial_quota(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "is_trial_quota", value)

    @_builtins.property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the charging period of the quota. Changing this parameter will
        create a new resource.
        If `period_unit` is set to **month**, the value ranges from `1` to `9`.
        If `period_unit` is set to **year**, the valid values are `1`, `2`, `3`, or `5`.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "period", value)

    @_builtins.property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the charging period unit of the quota.
        Valid values are **month** and **year**. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "period_unit")

    @period_unit.setter
    def period_unit(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "period_unit", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region to which the HSS quota resource belongs.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="sharedQuota")
    def shared_quota(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Is it a shared quota. The value can be **shared** or **unshared**.
        """
        return pulumi.get(self, "shared_quota")

    @shared_quota.setter
    def shared_quota(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "shared_quota", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The status of quota. The value can be **normal**, **expired**, or **freeze**.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the key/value pairs to associate with the HSS quota.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter(name="usedStatus")
    def used_status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The usage status of quota. The value can be **idle** or **used**.
        """
        return pulumi.get(self, "used_status")

    @used_status.setter
    def used_status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "used_status", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies protection quota version. Changing this parameter will create a
        new resource.
        The valid values are as follows:
        + **hss.version.basic**: Basic version.
        + **hss.version.advanced**: Professional version.
        + **hss.version.enterprise**: Enterprise version.
        + **hss.version.premium**: Ultimate version.
        + **hss.version.wtp**: Web page tamper prevention version.
        + **hss.version.container.enterprise**: Container version.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "version", value)


@pulumi.type_token("huaweicloud:hss/quota:Quota")
class Quota(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages an HSS quota resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        quota_version = config.require_object("quotaVersion")
        test = huaweicloud.hss.Quota("test",
            version=quota_version,
            period_unit="month",
            period=1)
        ```

        ## Import

        The quota can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:hss/quota:Quota test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `period_unit`, `period`, `auto_renew`.

        It is generally recommended running `pulumi preview` after importing a resource.

        You can then decide if changes should be applied to the resource, or the resource definition

        should be updated to align with the resource. Also, you can ignore changes as below.

        hcl

        resource "huaweicloud_hss_quota" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              period_unit, period, auto_renew,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether auto-renew is enabled.
               Valid values are **true** and **false**. Defaults to **false**.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID to which the HSS quota belongs.
               For enterprise users, if omitted, default enterprise project will be used.
        :param pulumi.Input[_builtins.int] period: Specifies the charging period of the quota. Changing this parameter will
               create a new resource.
               If `period_unit` is set to **month**, the value ranges from `1` to `9`.
               If `period_unit` is set to **year**, the valid values are `1`, `2`, `3`, or `5`.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the charging period unit of the quota.
               Valid values are **month** and **year**. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region to which the HSS quota resource belongs.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the HSS quota.
        :param pulumi.Input[_builtins.str] version: Specifies protection quota version. Changing this parameter will create a
               new resource.
               The valid values are as follows:
               + **hss.version.basic**: Basic version.
               + **hss.version.advanced**: Professional version.
               + **hss.version.enterprise**: Enterprise version.
               + **hss.version.premium**: Ultimate version.
               + **hss.version.wtp**: Web page tamper prevention version.
               + **hss.version.container.enterprise**: Container version.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: QuotaArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an HSS quota resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        quota_version = config.require_object("quotaVersion")
        test = huaweicloud.hss.Quota("test",
            version=quota_version,
            period_unit="month",
            period=1)
        ```

        ## Import

        The quota can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:hss/quota:Quota test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `period_unit`, `period`, `auto_renew`.

        It is generally recommended running `pulumi preview` after importing a resource.

        You can then decide if changes should be applied to the resource, or the resource definition

        should be updated to align with the resource. Also, you can ignore changes as below.

        hcl

        resource "huaweicloud_hss_quota" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              period_unit, period, auto_renew,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param QuotaArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(QuotaArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = QuotaArgs.__new__(QuotaArgs)

            __props__.__dict__["auto_renew"] = auto_renew
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            if period is None and not opts.urn:
                raise TypeError("Missing required property 'period'")
            __props__.__dict__["period"] = period
            if period_unit is None and not opts.urn:
                raise TypeError("Missing required property 'period_unit'")
            __props__.__dict__["period_unit"] = period_unit
            __props__.__dict__["region"] = region
            __props__.__dict__["tags"] = tags
            if version is None and not opts.urn:
                raise TypeError("Missing required property 'version'")
            __props__.__dict__["version"] = version
            __props__.__dict__["charging_mode"] = None
            __props__.__dict__["enterprise_project_name"] = None
            __props__.__dict__["expire_time"] = None
            __props__.__dict__["host_id"] = None
            __props__.__dict__["host_name"] = None
            __props__.__dict__["is_trial_quota"] = None
            __props__.__dict__["shared_quota"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["used_status"] = None
        super(Quota, __self__).__init__(
            'huaweicloud:hss/quota:Quota',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
            charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_project_name: Optional[pulumi.Input[_builtins.str]] = None,
            expire_time: Optional[pulumi.Input[_builtins.int]] = None,
            host_id: Optional[pulumi.Input[_builtins.str]] = None,
            host_name: Optional[pulumi.Input[_builtins.str]] = None,
            is_trial_quota: Optional[pulumi.Input[_builtins.bool]] = None,
            period: Optional[pulumi.Input[_builtins.int]] = None,
            period_unit: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            shared_quota: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            used_status: Optional[pulumi.Input[_builtins.str]] = None,
            version: Optional[pulumi.Input[_builtins.str]] = None) -> 'Quota':
        """
        Get an existing Quota resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether auto-renew is enabled.
               Valid values are **true** and **false**. Defaults to **false**.
        :param pulumi.Input[_builtins.str] charging_mode: The charging mode of quota.  
               The valid values are as follows:
               + **prePaid**: The yearly/monthly billing mode.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID to which the HSS quota belongs.
               For enterprise users, if omitted, default enterprise project will be used.
        :param pulumi.Input[_builtins.str] enterprise_project_name: The enterprise project name to which the quota belongs.
        :param pulumi.Input[_builtins.int] expire_time: The expiration time of quota, `-1` indicates no expiration date.
        :param pulumi.Input[_builtins.str] host_id: The host ID for quota binding.
        :param pulumi.Input[_builtins.str] host_name: The host name for quota binding.
        :param pulumi.Input[_builtins.bool] is_trial_quota: Is it a trial quota. The value can be **true** or **false**.
        :param pulumi.Input[_builtins.int] period: Specifies the charging period of the quota. Changing this parameter will
               create a new resource.
               If `period_unit` is set to **month**, the value ranges from `1` to `9`.
               If `period_unit` is set to **year**, the valid values are `1`, `2`, `3`, or `5`.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the charging period unit of the quota.
               Valid values are **month** and **year**. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region to which the HSS quota resource belongs.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] shared_quota: Is it a shared quota. The value can be **shared** or **unshared**.
        :param pulumi.Input[_builtins.str] status: The status of quota. The value can be **normal**, **expired**, or **freeze**.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the HSS quota.
        :param pulumi.Input[_builtins.str] used_status: The usage status of quota. The value can be **idle** or **used**.
        :param pulumi.Input[_builtins.str] version: Specifies protection quota version. Changing this parameter will create a
               new resource.
               The valid values are as follows:
               + **hss.version.basic**: Basic version.
               + **hss.version.advanced**: Professional version.
               + **hss.version.enterprise**: Enterprise version.
               + **hss.version.premium**: Ultimate version.
               + **hss.version.wtp**: Web page tamper prevention version.
               + **hss.version.container.enterprise**: Container version.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _QuotaState.__new__(_QuotaState)

        __props__.__dict__["auto_renew"] = auto_renew
        __props__.__dict__["charging_mode"] = charging_mode
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["enterprise_project_name"] = enterprise_project_name
        __props__.__dict__["expire_time"] = expire_time
        __props__.__dict__["host_id"] = host_id
        __props__.__dict__["host_name"] = host_name
        __props__.__dict__["is_trial_quota"] = is_trial_quota
        __props__.__dict__["period"] = period
        __props__.__dict__["period_unit"] = period_unit
        __props__.__dict__["region"] = region
        __props__.__dict__["shared_quota"] = shared_quota
        __props__.__dict__["status"] = status
        __props__.__dict__["tags"] = tags
        __props__.__dict__["used_status"] = used_status
        __props__.__dict__["version"] = version
        return Quota(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies whether auto-renew is enabled.
        Valid values are **true** and **false**. Defaults to **false**.
        """
        return pulumi.get(self, "auto_renew")

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> pulumi.Output[_builtins.str]:
        """
        The charging mode of quota.  
        The valid values are as follows:
        + **prePaid**: The yearly/monthly billing mode.
        """
        return pulumi.get(self, "charging_mode")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the enterprise project ID to which the HSS quota belongs.
        For enterprise users, if omitted, default enterprise project will be used.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectName")
    def enterprise_project_name(self) -> pulumi.Output[_builtins.str]:
        """
        The enterprise project name to which the quota belongs.
        """
        return pulumi.get(self, "enterprise_project_name")

    @_builtins.property
    @pulumi.getter(name="expireTime")
    def expire_time(self) -> pulumi.Output[_builtins.int]:
        """
        The expiration time of quota, `-1` indicates no expiration date.
        """
        return pulumi.get(self, "expire_time")

    @_builtins.property
    @pulumi.getter(name="hostId")
    def host_id(self) -> pulumi.Output[_builtins.str]:
        """
        The host ID for quota binding.
        """
        return pulumi.get(self, "host_id")

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> pulumi.Output[_builtins.str]:
        """
        The host name for quota binding.
        """
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter(name="isTrialQuota")
    def is_trial_quota(self) -> pulumi.Output[_builtins.bool]:
        """
        Is it a trial quota. The value can be **true** or **false**.
        """
        return pulumi.get(self, "is_trial_quota")

    @_builtins.property
    @pulumi.getter
    def period(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the charging period of the quota. Changing this parameter will
        create a new resource.
        If `period_unit` is set to **month**, the value ranges from `1` to `9`.
        If `period_unit` is set to **year**, the valid values are `1`, `2`, `3`, or `5`.
        """
        return pulumi.get(self, "period")

    @_builtins.property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the charging period unit of the quota.
        Valid values are **month** and **year**. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "period_unit")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region to which the HSS quota resource belongs.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="sharedQuota")
    def shared_quota(self) -> pulumi.Output[_builtins.str]:
        """
        Is it a shared quota. The value can be **shared** or **unshared**.
        """
        return pulumi.get(self, "shared_quota")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The status of quota. The value can be **normal**, **expired**, or **freeze**.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Mapping[str, _builtins.str]]:
        """
        Specifies the key/value pairs to associate with the HSS quota.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter(name="usedStatus")
    def used_status(self) -> pulumi.Output[_builtins.str]:
        """
        The usage status of quota. The value can be **idle** or **used**.
        """
        return pulumi.get(self, "used_status")

    @_builtins.property
    @pulumi.getter
    def version(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies protection quota version. Changing this parameter will create a
        new resource.
        The valid values are as follows:
        + **hss.version.basic**: Basic version.
        + **hss.version.advanced**: Professional version.
        + **hss.version.enterprise**: Enterprise version.
        + **hss.version.premium**: Ultimate version.
        + **hss.version.wtp**: Web page tamper prevention version.
        + **hss.version.container.enterprise**: Container version.
        """
        return pulumi.get(self, "version")

