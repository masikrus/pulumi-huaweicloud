# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetAssetPortInfoResult',
    'AwaitableGetAssetPortInfoResult',
    'get_asset_port_info',
    'get_asset_port_info_output',
]

@pulumi.output_type
class GetAssetPortInfoResult:
    """
    A collection of values returned by getAssetPortInfo.
    """
    def __init__(__self__, category=None, description=None, description_en=None, enterprise_project_id=None, id=None, port=None, region=None, status=None, type=None):
        if category and not isinstance(category, str):
            raise TypeError("Expected argument 'category' to be a str")
        pulumi.set(__self__, "category", category)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if description_en and not isinstance(description_en, str):
            raise TypeError("Expected argument 'description_en' to be a str")
        pulumi.set(__self__, "description_en", description_en)
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if port and not isinstance(port, int):
            raise TypeError("Expected argument 'port' to be a int")
        pulumi.set(__self__, "port", port)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def category(self) -> _builtins.str:
        return pulumi.get(self, "category")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The description of the port in Chinese.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="descriptionEn")
    def description_en(self) -> _builtins.str:
        """
        The description of the port in English.
        """
        return pulumi.get(self, "description_en")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def port(self) -> _builtins.int:
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        The status of the port.
        The valid values are as follows:
        + **normal**: Normal.
        + **danger**: Dangerous.
        + **unknow**: Unknown.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The port type.
        """
        return pulumi.get(self, "type")


class AwaitableGetAssetPortInfoResult(GetAssetPortInfoResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAssetPortInfoResult(
            category=self.category,
            description=self.description,
            description_en=self.description_en,
            enterprise_project_id=self.enterprise_project_id,
            id=self.id,
            port=self.port,
            region=self.region,
            status=self.status,
            type=self.type)


def get_asset_port_info(category: Optional[_builtins.str] = None,
                        enterprise_project_id: Optional[_builtins.str] = None,
                        port: Optional[_builtins.int] = None,
                        region: Optional[_builtins.str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAssetPortInfoResult:
    """
    Use this data source to get the detailed information of a specifies port.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_asset_port_info(port=8080,
        category="0")
    ```


    :param _builtins.str category: Specifies the asset type.
           The valid values are as follows:
           + **0**: Host.
           + **1**: Container.
    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.int port: Specifies the port number.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['category'] = category
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['port'] = port
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:hss/getAssetPortInfo:getAssetPortInfo', __args__, opts=opts, typ=GetAssetPortInfoResult).value

    return AwaitableGetAssetPortInfoResult(
        category=pulumi.get(__ret__, 'category'),
        description=pulumi.get(__ret__, 'description'),
        description_en=pulumi.get(__ret__, 'description_en'),
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        id=pulumi.get(__ret__, 'id'),
        port=pulumi.get(__ret__, 'port'),
        region=pulumi.get(__ret__, 'region'),
        status=pulumi.get(__ret__, 'status'),
        type=pulumi.get(__ret__, 'type'))
def get_asset_port_info_output(category: Optional[pulumi.Input[_builtins.str]] = None,
                               enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               port: Optional[pulumi.Input[_builtins.int]] = None,
                               region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                               opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAssetPortInfoResult]:
    """
    Use this data source to get the detailed information of a specifies port.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.hss.get_asset_port_info(port=8080,
        category="0")
    ```


    :param _builtins.str category: Specifies the asset type.
           The valid values are as follows:
           + **0**: Host.
           + **1**: Container.
    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.int port: Specifies the port number.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['category'] = category
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['port'] = port
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:hss/getAssetPortInfo:getAssetPortInfo', __args__, opts=opts, typ=GetAssetPortInfoResult)
    return __ret__.apply(lambda __response__: GetAssetPortInfoResult(
        category=pulumi.get(__response__, 'category'),
        description=pulumi.get(__response__, 'description'),
        description_en=pulumi.get(__response__, 'description_en'),
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        id=pulumi.get(__response__, 'id'),
        port=pulumi.get(__response__, 'port'),
        region=pulumi.get(__response__, 'region'),
        status=pulumi.get(__response__, 'status'),
        type=pulumi.get(__response__, 'type')))
