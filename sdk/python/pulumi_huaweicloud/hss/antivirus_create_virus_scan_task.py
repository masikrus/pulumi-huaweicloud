# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['AntivirusCreateVirusScanTaskArgs', 'AntivirusCreateVirusScanTask']

@pulumi.input_type
class AntivirusCreateVirusScanTaskArgs:
    def __init__(__self__, *,
                 action: pulumi.Input[_builtins.str],
                 host_ids: pulumi.Input[Sequence[pulumi.Input[_builtins.str]]],
                 scan_type: pulumi.Input[_builtins.str],
                 task_name: pulumi.Input[_builtins.str],
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 task_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a AntivirusCreateVirusScanTask resource.
        :param pulumi.Input[_builtins.str] action: Specifies disposal action.  
               The valid values are as follows:
               + **auto**: Automatic disposal.
               + **manual**: Manual disposal.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] host_ids: Specifies the host IDs.
        :param pulumi.Input[_builtins.str] scan_type: Specifies the task type.
               The valid values are as follows:
               + **quick**: Quick scan.
               + **full**: Full scan.
               + **custom**: Custom scan.
        :param pulumi.Input[_builtins.str] task_name: Specifies the task name.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.  
               This parameter is valid only when the enterprise project is enabled.
               The default value is **0**, indicating the default enterprise project.
               If it is necessary to operate the hosts under all enterprise projects, the value is **all_granted_eps**.
               If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
               the operation may fail due to insufficient permissions.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] task_id: Specifies the task ID. When creating a virus scanning task, the `task_id`
               is null, when rescanning, the `task_id` is not null, it is the ID of the current task.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "host_ids", host_ids)
        pulumi.set(__self__, "scan_type", scan_type)
        pulumi.set(__self__, "task_name", task_name)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if task_id is not None:
            pulumi.set(__self__, "task_id", task_id)

    @_builtins.property
    @pulumi.getter
    def action(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies disposal action.  
        The valid values are as follows:
        + **auto**: Automatic disposal.
        + **manual**: Manual disposal.
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "action", value)

    @_builtins.property
    @pulumi.getter(name="hostIds")
    def host_ids(self) -> pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]:
        """
        Specifies the host IDs.
        """
        return pulumi.get(self, "host_ids")

    @host_ids.setter
    def host_ids(self, value: pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]):
        pulumi.set(self, "host_ids", value)

    @_builtins.property
    @pulumi.getter(name="scanType")
    def scan_type(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the task type.
        The valid values are as follows:
        + **quick**: Quick scan.
        + **full**: Full scan.
        + **custom**: Custom scan.
        """
        return pulumi.get(self, "scan_type")

    @scan_type.setter
    def scan_type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "scan_type", value)

    @_builtins.property
    @pulumi.getter(name="taskName")
    def task_name(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the task name.
        """
        return pulumi.get(self, "task_name")

    @task_name.setter
    def task_name(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "task_name", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID.  
        This parameter is valid only when the enterprise project is enabled.
        The default value is **0**, indicating the default enterprise project.
        If it is necessary to operate the hosts under all enterprise projects, the value is **all_granted_eps**.
        If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
        the operation may fail due to insufficient permissions.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="taskId")
    def task_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the task ID. When creating a virus scanning task, the `task_id`
        is null, when rescanning, the `task_id` is not null, it is the ID of the current task.
        """
        return pulumi.get(self, "task_id")

    @task_id.setter
    def task_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "task_id", value)


@pulumi.input_type
class _AntivirusCreateVirusScanTaskState:
    def __init__(__self__, *,
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 host_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 scan_type: Optional[pulumi.Input[_builtins.str]] = None,
                 task_id: Optional[pulumi.Input[_builtins.str]] = None,
                 task_name: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering AntivirusCreateVirusScanTask resources.
        :param pulumi.Input[_builtins.str] action: Specifies disposal action.  
               The valid values are as follows:
               + **auto**: Automatic disposal.
               + **manual**: Manual disposal.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.  
               This parameter is valid only when the enterprise project is enabled.
               The default value is **0**, indicating the default enterprise project.
               If it is necessary to operate the hosts under all enterprise projects, the value is **all_granted_eps**.
               If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
               the operation may fail due to insufficient permissions.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] host_ids: Specifies the host IDs.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] scan_type: Specifies the task type.
               The valid values are as follows:
               + **quick**: Quick scan.
               + **full**: Full scan.
               + **custom**: Custom scan.
        :param pulumi.Input[_builtins.str] task_id: Specifies the task ID. When creating a virus scanning task, the `task_id`
               is null, when rescanning, the `task_id` is not null, it is the ID of the current task.
        :param pulumi.Input[_builtins.str] task_name: Specifies the task name.
        """
        if action is not None:
            pulumi.set(__self__, "action", action)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if host_ids is not None:
            pulumi.set(__self__, "host_ids", host_ids)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if scan_type is not None:
            pulumi.set(__self__, "scan_type", scan_type)
        if task_id is not None:
            pulumi.set(__self__, "task_id", task_id)
        if task_name is not None:
            pulumi.set(__self__, "task_name", task_name)

    @_builtins.property
    @pulumi.getter
    def action(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies disposal action.  
        The valid values are as follows:
        + **auto**: Automatic disposal.
        + **manual**: Manual disposal.
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "action", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID.  
        This parameter is valid only when the enterprise project is enabled.
        The default value is **0**, indicating the default enterprise project.
        If it is necessary to operate the hosts under all enterprise projects, the value is **all_granted_eps**.
        If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
        the operation may fail due to insufficient permissions.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="hostIds")
    def host_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the host IDs.
        """
        return pulumi.get(self, "host_ids")

    @host_ids.setter
    def host_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "host_ids", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="scanType")
    def scan_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the task type.
        The valid values are as follows:
        + **quick**: Quick scan.
        + **full**: Full scan.
        + **custom**: Custom scan.
        """
        return pulumi.get(self, "scan_type")

    @scan_type.setter
    def scan_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "scan_type", value)

    @_builtins.property
    @pulumi.getter(name="taskId")
    def task_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the task ID. When creating a virus scanning task, the `task_id`
        is null, when rescanning, the `task_id` is not null, it is the ID of the current task.
        """
        return pulumi.get(self, "task_id")

    @task_id.setter
    def task_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "task_id", value)

    @_builtins.property
    @pulumi.getter(name="taskName")
    def task_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the task name.
        """
        return pulumi.get(self, "task_name")

    @task_name.setter
    def task_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "task_name", value)


@pulumi.type_token("huaweicloud:hss/antivirusCreateVirusScanTask:AntivirusCreateVirusScanTask")
class AntivirusCreateVirusScanTask(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 host_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 scan_type: Optional[pulumi.Input[_builtins.str]] = None,
                 task_id: Optional[pulumi.Input[_builtins.str]] = None,
                 task_name: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages an HSS virus scan task creation resource within HuaweiCloud.

        > This resource is a one-time action resource using to create HSS virus scan task. Deleting this resource will not
          clear the corresponding request record, but will only remove the resource information from the tf state file.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        task_name = config.require_object("taskName")
        scan_type = config.require_object("scanType")
        action = config.require_object("action")
        host_ids = config.require_object("hostIds")
        test = huaweicloud.hss.AntivirusCreateVirusScanTask("test",
            task_name=task_name,
            scan_type=scan_type,
            action=action,
            host_ids=host_ids)
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] action: Specifies disposal action.  
               The valid values are as follows:
               + **auto**: Automatic disposal.
               + **manual**: Manual disposal.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.  
               This parameter is valid only when the enterprise project is enabled.
               The default value is **0**, indicating the default enterprise project.
               If it is necessary to operate the hosts under all enterprise projects, the value is **all_granted_eps**.
               If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
               the operation may fail due to insufficient permissions.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] host_ids: Specifies the host IDs.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] scan_type: Specifies the task type.
               The valid values are as follows:
               + **quick**: Quick scan.
               + **full**: Full scan.
               + **custom**: Custom scan.
        :param pulumi.Input[_builtins.str] task_id: Specifies the task ID. When creating a virus scanning task, the `task_id`
               is null, when rescanning, the `task_id` is not null, it is the ID of the current task.
        :param pulumi.Input[_builtins.str] task_name: Specifies the task name.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AntivirusCreateVirusScanTaskArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an HSS virus scan task creation resource within HuaweiCloud.

        > This resource is a one-time action resource using to create HSS virus scan task. Deleting this resource will not
          clear the corresponding request record, but will only remove the resource information from the tf state file.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        task_name = config.require_object("taskName")
        scan_type = config.require_object("scanType")
        action = config.require_object("action")
        host_ids = config.require_object("hostIds")
        test = huaweicloud.hss.AntivirusCreateVirusScanTask("test",
            task_name=task_name,
            scan_type=scan_type,
            action=action,
            host_ids=host_ids)
        ```

        :param str resource_name: The name of the resource.
        :param AntivirusCreateVirusScanTaskArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AntivirusCreateVirusScanTaskArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 host_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 scan_type: Optional[pulumi.Input[_builtins.str]] = None,
                 task_id: Optional[pulumi.Input[_builtins.str]] = None,
                 task_name: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AntivirusCreateVirusScanTaskArgs.__new__(AntivirusCreateVirusScanTaskArgs)

            if action is None and not opts.urn:
                raise TypeError("Missing required property 'action'")
            __props__.__dict__["action"] = action
            __props__.__dict__["enable_force_new"] = enable_force_new
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            if host_ids is None and not opts.urn:
                raise TypeError("Missing required property 'host_ids'")
            __props__.__dict__["host_ids"] = host_ids
            __props__.__dict__["region"] = region
            if scan_type is None and not opts.urn:
                raise TypeError("Missing required property 'scan_type'")
            __props__.__dict__["scan_type"] = scan_type
            __props__.__dict__["task_id"] = task_id
            if task_name is None and not opts.urn:
                raise TypeError("Missing required property 'task_name'")
            __props__.__dict__["task_name"] = task_name
        super(AntivirusCreateVirusScanTask, __self__).__init__(
            'huaweicloud:hss/antivirusCreateVirusScanTask:AntivirusCreateVirusScanTask',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            action: Optional[pulumi.Input[_builtins.str]] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            host_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            scan_type: Optional[pulumi.Input[_builtins.str]] = None,
            task_id: Optional[pulumi.Input[_builtins.str]] = None,
            task_name: Optional[pulumi.Input[_builtins.str]] = None) -> 'AntivirusCreateVirusScanTask':
        """
        Get an existing AntivirusCreateVirusScanTask resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] action: Specifies disposal action.  
               The valid values are as follows:
               + **auto**: Automatic disposal.
               + **manual**: Manual disposal.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.  
               This parameter is valid only when the enterprise project is enabled.
               The default value is **0**, indicating the default enterprise project.
               If it is necessary to operate the hosts under all enterprise projects, the value is **all_granted_eps**.
               If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
               the operation may fail due to insufficient permissions.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] host_ids: Specifies the host IDs.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] scan_type: Specifies the task type.
               The valid values are as follows:
               + **quick**: Quick scan.
               + **full**: Full scan.
               + **custom**: Custom scan.
        :param pulumi.Input[_builtins.str] task_id: Specifies the task ID. When creating a virus scanning task, the `task_id`
               is null, when rescanning, the `task_id` is not null, it is the ID of the current task.
        :param pulumi.Input[_builtins.str] task_name: Specifies the task name.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AntivirusCreateVirusScanTaskState.__new__(_AntivirusCreateVirusScanTaskState)

        __props__.__dict__["action"] = action
        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["host_ids"] = host_ids
        __props__.__dict__["region"] = region
        __props__.__dict__["scan_type"] = scan_type
        __props__.__dict__["task_id"] = task_id
        __props__.__dict__["task_name"] = task_name
        return AntivirusCreateVirusScanTask(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def action(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies disposal action.  
        The valid values are as follows:
        + **auto**: Automatic disposal.
        + **manual**: Manual disposal.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the enterprise project ID.  
        This parameter is valid only when the enterprise project is enabled.
        The default value is **0**, indicating the default enterprise project.
        If it is necessary to operate the hosts under all enterprise projects, the value is **all_granted_eps**.
        If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
        the operation may fail due to insufficient permissions.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="hostIds")
    def host_ids(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        Specifies the host IDs.
        """
        return pulumi.get(self, "host_ids")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="scanType")
    def scan_type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the task type.
        The valid values are as follows:
        + **quick**: Quick scan.
        + **full**: Full scan.
        + **custom**: Custom scan.
        """
        return pulumi.get(self, "scan_type")

    @_builtins.property
    @pulumi.getter(name="taskId")
    def task_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the task ID. When creating a virus scanning task, the `task_id`
        is null, when rescanning, the `task_id` is not null, it is the ID of the current task.
        """
        return pulumi.get(self, "task_id")

    @_builtins.property
    @pulumi.getter(name="taskName")
    def task_name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the task name.
        """
        return pulumi.get(self, "task_name")

