# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetAssetPortsResult',
    'AwaitableGetAssetPortsResult',
    'get_asset_ports',
    'get_asset_ports_output',
]

@pulumi.output_type
class GetAssetPortsResult:
    """
    A collection of values returned by getAssetPorts.
    """
    def __init__(__self__, category=None, data_lists=None, enterprise_project_id=None, host_id=None, host_ip=None, host_name=None, id=None, port=None, region=None, status=None, type=None):
        if category and not isinstance(category, str):
            raise TypeError("Expected argument 'category' to be a str")
        pulumi.set(__self__, "category", category)
        if data_lists and not isinstance(data_lists, list):
            raise TypeError("Expected argument 'data_lists' to be a list")
        pulumi.set(__self__, "data_lists", data_lists)
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if host_id and not isinstance(host_id, str):
            raise TypeError("Expected argument 'host_id' to be a str")
        pulumi.set(__self__, "host_id", host_id)
        if host_ip and not isinstance(host_ip, str):
            raise TypeError("Expected argument 'host_ip' to be a str")
        pulumi.set(__self__, "host_ip", host_ip)
        if host_name and not isinstance(host_name, str):
            raise TypeError("Expected argument 'host_name' to be a str")
        pulumi.set(__self__, "host_name", host_name)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if port and not isinstance(port, int):
            raise TypeError("Expected argument 'port' to be a int")
        pulumi.set(__self__, "port", port)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def category(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "category")

    @_builtins.property
    @pulumi.getter(name="dataLists")
    def data_lists(self) -> Sequence['outputs.GetAssetPortsDataListResult']:
        """
        All ports that match the filter parameters.
        The data_list structure is documented below.
        """
        return pulumi.get(self, "data_lists")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="hostId")
    def host_id(self) -> _builtins.str:
        """
        The host ID.
        """
        return pulumi.get(self, "host_id")

    @_builtins.property
    @pulumi.getter(name="hostIp")
    def host_ip(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "host_ip")

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def port(self) -> Optional[_builtins.int]:
        """
        The port number.
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[_builtins.str]:
        """
        The port status.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[_builtins.str]:
        """
        The port type.
        """
        return pulumi.get(self, "type")


class AwaitableGetAssetPortsResult(GetAssetPortsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAssetPortsResult(
            category=self.category,
            data_lists=self.data_lists,
            enterprise_project_id=self.enterprise_project_id,
            host_id=self.host_id,
            host_ip=self.host_ip,
            host_name=self.host_name,
            id=self.id,
            port=self.port,
            region=self.region,
            status=self.status,
            type=self.type)


def get_asset_ports(category: Optional[_builtins.str] = None,
                    enterprise_project_id: Optional[_builtins.str] = None,
                    host_id: Optional[_builtins.str] = None,
                    host_ip: Optional[_builtins.str] = None,
                    host_name: Optional[_builtins.str] = None,
                    port: Optional[_builtins.int] = None,
                    region: Optional[_builtins.str] = None,
                    status: Optional[_builtins.str] = None,
                    type: Optional[_builtins.str] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAssetPortsResult:
    """
    Use this data source to get the list of open ports for a specifies host.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    host_id = config.require_object("hostId")
    test = huaweicloud.hss.get_asset_ports(host_id=host_id)
    ```


    :param _builtins.str category: Specifies the category.
           The valid values are as follows:
           + **host**: Host (default).
           + **container**: Container.
    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID to which the hosts belong.
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str host_id: Specifies the host ID.
    :param _builtins.str host_ip: Specifies the host IP address.
    :param _builtins.str host_name: Specifies the host name.
    :param _builtins.int port: Specifies the port number.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str status: Specifies the port status.
           The valid values are as follows:
           + **normal**: Normal.
           + **danger**: Dangerous.
           + **unknow**: Unknown.
    :param _builtins.str type: Specifies the port type.
           The valid values are as follows:
           + **TCP**
           + **UDP**
    """
    __args__ = dict()
    __args__['category'] = category
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['hostId'] = host_id
    __args__['hostIp'] = host_ip
    __args__['hostName'] = host_name
    __args__['port'] = port
    __args__['region'] = region
    __args__['status'] = status
    __args__['type'] = type
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:hss/getAssetPorts:getAssetPorts', __args__, opts=opts, typ=GetAssetPortsResult).value

    return AwaitableGetAssetPortsResult(
        category=pulumi.get(__ret__, 'category'),
        data_lists=pulumi.get(__ret__, 'data_lists'),
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        host_id=pulumi.get(__ret__, 'host_id'),
        host_ip=pulumi.get(__ret__, 'host_ip'),
        host_name=pulumi.get(__ret__, 'host_name'),
        id=pulumi.get(__ret__, 'id'),
        port=pulumi.get(__ret__, 'port'),
        region=pulumi.get(__ret__, 'region'),
        status=pulumi.get(__ret__, 'status'),
        type=pulumi.get(__ret__, 'type'))
def get_asset_ports_output(category: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                           enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                           host_id: Optional[pulumi.Input[_builtins.str]] = None,
                           host_ip: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                           host_name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                           port: Optional[pulumi.Input[Optional[_builtins.int]]] = None,
                           region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                           status: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                           type: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                           opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAssetPortsResult]:
    """
    Use this data source to get the list of open ports for a specifies host.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    host_id = config.require_object("hostId")
    test = huaweicloud.hss.get_asset_ports(host_id=host_id)
    ```


    :param _builtins.str category: Specifies the category.
           The valid values are as follows:
           + **host**: Host (default).
           + **container**: Container.
    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID to which the hosts belong.
           This parameter is valid only when the enterprise project is enabled.
           The default value is **0**, indicating the default enterprise project.
           If you need to query data for all enterprise projects, the value is **all_granted_eps**.
           If you only have permissions for a specific enterprise project, you need set the enterprise project ID. Otherwise,
           the operation may fail due to insufficient permissions.
    :param _builtins.str host_id: Specifies the host ID.
    :param _builtins.str host_ip: Specifies the host IP address.
    :param _builtins.str host_name: Specifies the host name.
    :param _builtins.int port: Specifies the port number.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str status: Specifies the port status.
           The valid values are as follows:
           + **normal**: Normal.
           + **danger**: Dangerous.
           + **unknow**: Unknown.
    :param _builtins.str type: Specifies the port type.
           The valid values are as follows:
           + **TCP**
           + **UDP**
    """
    __args__ = dict()
    __args__['category'] = category
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['hostId'] = host_id
    __args__['hostIp'] = host_ip
    __args__['hostName'] = host_name
    __args__['port'] = port
    __args__['region'] = region
    __args__['status'] = status
    __args__['type'] = type
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:hss/getAssetPorts:getAssetPorts', __args__, opts=opts, typ=GetAssetPortsResult)
    return __ret__.apply(lambda __response__: GetAssetPortsResult(
        category=pulumi.get(__response__, 'category'),
        data_lists=pulumi.get(__response__, 'data_lists'),
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        host_id=pulumi.get(__response__, 'host_id'),
        host_ip=pulumi.get(__response__, 'host_ip'),
        host_name=pulumi.get(__response__, 'host_name'),
        id=pulumi.get(__response__, 'id'),
        port=pulumi.get(__response__, 'port'),
        region=pulumi.get(__response__, 'region'),
        status=pulumi.get(__response__, 'status'),
        type=pulumi.get(__response__, 'type')))
