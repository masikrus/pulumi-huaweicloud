# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetCentralNetworkCapabilitiesResult',
    'AwaitableGetCentralNetworkCapabilitiesResult',
    'get_central_network_capabilities',
    'get_central_network_capabilities_output',
]

@pulumi.output_type
class GetCentralNetworkCapabilitiesResult:
    """
    A collection of values returned by getCentralNetworkCapabilities.
    """
    def __init__(__self__, capabilities=None, capability=None, id=None, region=None):
        if capabilities and not isinstance(capabilities, list):
            raise TypeError("Expected argument 'capabilities' to be a list")
        pulumi.set(__self__, "capabilities", capabilities)
        if capability and not isinstance(capability, str):
            raise TypeError("Expected argument 'capability' to be a str")
        pulumi.set(__self__, "capability", capability)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter
    def capabilities(self) -> Sequence['outputs.GetCentralNetworkCapabilitiesCapabilityResult']:
        """
        Central network capability list.
        The capabilities structure is documented below.
        """
        return pulumi.get(self, "capabilities")

    @_builtins.property
    @pulumi.getter
    def capability(self) -> Optional[_builtins.str]:
        """
        The capability of the central network.
        """
        return pulumi.get(self, "capability")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetCentralNetworkCapabilitiesResult(GetCentralNetworkCapabilitiesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCentralNetworkCapabilitiesResult(
            capabilities=self.capabilities,
            capability=self.capability,
            id=self.id,
            region=self.region)


def get_central_network_capabilities(capability: Optional[_builtins.str] = None,
                                     region: Optional[_builtins.str] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCentralNetworkCapabilitiesResult:
    """
    Use this data source to get the list of CC central network capabilities.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    capability = config.require_object("capability")
    test = huaweicloud.Cc.get_central_network_capabilities(capability=capability)
    ```


    :param _builtins.str capability: Specifies the capability of the central network.
           The valid values are as follows:
           + **central-network.is-support**: Whether the central network is supported.
           + **central-network.is-support-enterprise-project**: Whether the central network supports enterprise projects.
           + **central-network.is-support-tag**: Whether the central network supports tags.
           + **connection-bandwidth.size-range**: The bandwidth range for a cross-site connection.
           + **connection-bandwidth.charge-mode**: The Billing mode of the global private bandwidth for assigning cross-site
           connection bandwidths.
           + **er-instance.support-regions**: The list of the regions where Enterprise Router is available.
           + **er-instance.support-ipv6-regions**: The list of the regions where Enterprise Router supports IPv6.
           + **er-instance.support-dscp-regions**: The list of the regions that support gold, silver, and bronze global private
           bandwidths.
           + **er-instance.support-sites**: The list of the sites where Enterprise Router is available.
           + **gdgw-attachment.is-support**: Whether global DC gateways as attachments are supported.
           + **gdgw-attachment.support-regions**: The list of the regions where global DC gateways are available.
           + **gdgw-attachment.support-sites**: The list of the sites where global DC gateways are available.
           + **er-route-table-attachment.is-support**: Whether The enterprise router route tables as attachments are supported.
           + **er-route-table-attachment.support-regions**: The list of regions where enterprise router route tables can be added
           as attachments.
           + **er-route-table-attachment.support-sites**: The list of sites where enterprise router route tables can be added as
           attachments.
           + **cloud-alliance.support-regions**: The list of regions that support Cloud Alliance.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['capability'] = capability
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Cc/getCentralNetworkCapabilities:getCentralNetworkCapabilities', __args__, opts=opts, typ=GetCentralNetworkCapabilitiesResult).value

    return AwaitableGetCentralNetworkCapabilitiesResult(
        capabilities=pulumi.get(__ret__, 'capabilities'),
        capability=pulumi.get(__ret__, 'capability'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'))
def get_central_network_capabilities_output(capability: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                            region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                            opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetCentralNetworkCapabilitiesResult]:
    """
    Use this data source to get the list of CC central network capabilities.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    capability = config.require_object("capability")
    test = huaweicloud.Cc.get_central_network_capabilities(capability=capability)
    ```


    :param _builtins.str capability: Specifies the capability of the central network.
           The valid values are as follows:
           + **central-network.is-support**: Whether the central network is supported.
           + **central-network.is-support-enterprise-project**: Whether the central network supports enterprise projects.
           + **central-network.is-support-tag**: Whether the central network supports tags.
           + **connection-bandwidth.size-range**: The bandwidth range for a cross-site connection.
           + **connection-bandwidth.charge-mode**: The Billing mode of the global private bandwidth for assigning cross-site
           connection bandwidths.
           + **er-instance.support-regions**: The list of the regions where Enterprise Router is available.
           + **er-instance.support-ipv6-regions**: The list of the regions where Enterprise Router supports IPv6.
           + **er-instance.support-dscp-regions**: The list of the regions that support gold, silver, and bronze global private
           bandwidths.
           + **er-instance.support-sites**: The list of the sites where Enterprise Router is available.
           + **gdgw-attachment.is-support**: Whether global DC gateways as attachments are supported.
           + **gdgw-attachment.support-regions**: The list of the regions where global DC gateways are available.
           + **gdgw-attachment.support-sites**: The list of the sites where global DC gateways are available.
           + **er-route-table-attachment.is-support**: Whether The enterprise router route tables as attachments are supported.
           + **er-route-table-attachment.support-regions**: The list of regions where enterprise router route tables can be added
           as attachments.
           + **er-route-table-attachment.support-sites**: The list of sites where enterprise router route tables can be added as
           attachments.
           + **cloud-alliance.support-regions**: The list of regions that support Cloud Alliance.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['capability'] = capability
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Cc/getCentralNetworkCapabilities:getCentralNetworkCapabilities', __args__, opts=opts, typ=GetCentralNetworkCapabilitiesResult)
    return __ret__.apply(lambda __response__: GetCentralNetworkCapabilitiesResult(
        capabilities=pulumi.get(__response__, 'capabilities'),
        capability=pulumi.get(__response__, 'capability'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region')))
