# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetCentralNetworkQuotasResult',
    'AwaitableGetCentralNetworkQuotasResult',
    'get_central_network_quotas',
    'get_central_network_quotas_output',
]

@pulumi.output_type
class GetCentralNetworkQuotasResult:
    """
    A collection of values returned by getCentralNetworkQuotas.
    """
    def __init__(__self__, id=None, quota_types=None, quotas=None, region=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if quota_types and not isinstance(quota_types, list):
            raise TypeError("Expected argument 'quota_types' to be a list")
        pulumi.set(__self__, "quota_types", quota_types)
        if quotas and not isinstance(quotas, list):
            raise TypeError("Expected argument 'quotas' to be a list")
        pulumi.set(__self__, "quotas", quotas)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="quotaTypes")
    def quota_types(self) -> Optional[Sequence[_builtins.str]]:
        return pulumi.get(self, "quota_types")

    @_builtins.property
    @pulumi.getter
    def quotas(self) -> Sequence['outputs.GetCentralNetworkQuotasQuotaResult']:
        """
        The quota list.
        """
        return pulumi.get(self, "quotas")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetCentralNetworkQuotasResult(GetCentralNetworkQuotasResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCentralNetworkQuotasResult(
            id=self.id,
            quota_types=self.quota_types,
            quotas=self.quotas,
            region=self.region)


def get_central_network_quotas(quota_types: Optional[Sequence[_builtins.str]] = None,
                               region: Optional[_builtins.str] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCentralNetworkQuotasResult:
    """
    Use this data source to get the list of CC central network quotas.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Cc.get_central_network_quotas()
    ```


    :param Sequence[_builtins.str] quota_types: Specifies the quota type.
           The valid values are as follows:
           + **central_networks_per_account**
           + **policy_versions_per_central_network**
           + **size_of_document_per_central_network_policy_version**
           + **planes_per_central_network**
           + **er_instances_per_region_per_central_network**
           + **connections_per_central_network**
           + **attachments_per_central_network**
           + **GDGW_attachments_per_region_per_central_network**
           + **ER_ROUTE_TABLE_attachments_per_region_per_central_network**
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['quotaTypes'] = quota_types
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Cc/getCentralNetworkQuotas:getCentralNetworkQuotas', __args__, opts=opts, typ=GetCentralNetworkQuotasResult).value

    return AwaitableGetCentralNetworkQuotasResult(
        id=pulumi.get(__ret__, 'id'),
        quota_types=pulumi.get(__ret__, 'quota_types'),
        quotas=pulumi.get(__ret__, 'quotas'),
        region=pulumi.get(__ret__, 'region'))
def get_central_network_quotas_output(quota_types: Optional[pulumi.Input[Optional[Sequence[_builtins.str]]]] = None,
                                      region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                      opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetCentralNetworkQuotasResult]:
    """
    Use this data source to get the list of CC central network quotas.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Cc.get_central_network_quotas()
    ```


    :param Sequence[_builtins.str] quota_types: Specifies the quota type.
           The valid values are as follows:
           + **central_networks_per_account**
           + **policy_versions_per_central_network**
           + **size_of_document_per_central_network_policy_version**
           + **planes_per_central_network**
           + **er_instances_per_region_per_central_network**
           + **connections_per_central_network**
           + **attachments_per_central_network**
           + **GDGW_attachments_per_region_per_central_network**
           + **ER_ROUTE_TABLE_attachments_per_region_per_central_network**
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['quotaTypes'] = quota_types
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Cc/getCentralNetworkQuotas:getCentralNetworkQuotas', __args__, opts=opts, typ=GetCentralNetworkQuotasResult)
    return __ret__.apply(lambda __response__: GetCentralNetworkQuotasResult(
        id=pulumi.get(__response__, 'id'),
        quota_types=pulumi.get(__response__, 'quota_types'),
        quotas=pulumi.get(__response__, 'quotas'),
        region=pulumi.get(__response__, 'region')))
