# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['GlobalConnectionBandwidthArgs', 'GlobalConnectionBandwidth']

@pulumi.input_type
class GlobalConnectionBandwidthArgs:
    def __init__(__self__, *,
                 bordercross: pulumi.Input[_builtins.bool],
                 charge_mode: pulumi.Input[_builtins.str],
                 size: pulumi.Input[_builtins.int],
                 type: pulumi.Input[_builtins.str],
                 binding_service: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 local_area: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 remote_area: Optional[pulumi.Input[_builtins.str]] = None,
                 sla_level: Optional[pulumi.Input[_builtins.str]] = None,
                 spec_code_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None):
        """
        The set of arguments for constructing a GlobalConnectionBandwidth resource.
        :param pulumi.Input[_builtins.bool] bordercross: Specifies whether the GCB involves traveling from Chinese mainland to other
               countries. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] charge_mode: Specifies the GCB charge mode.
               
               Valid values are as follows:
               + **bwd**: Billed by bandwidth.
               + **95**: Billed by 95th percentile bandwidth.
               
               Only support changing **bwd** to **95**.
        :param pulumi.Input[_builtins.int] size: Specifies the GCB size. If `charge_mode` is **bwd**, value ranges from `2` to `300` Mbit/s. If
               `charge_mode` is **95**, value ranges from `100` to `300` Mbit/s.
        :param pulumi.Input[_builtins.str] type: Specifies the GCB type.
               
               Valid values are as follows:
               + **TrsArea**: Cross geographic region.
               + **Area**: Geographic region.
               + **SubArea**: Homezones region.
               + **Region**: Multi-city region.
               
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] binding_service: Specifies whether to limit the GCB only bind with specific instance. Default is
               **ALL**.
               
               Valid values are as follows:
               + **CC**: Cloud Connection.
               + **GEIP**: Global EIP.
               + **GCN**: Central Network.
               + **GSN**: Site Network.
               + **ALL**: All.
        :param pulumi.Input[_builtins.str] description: Specifies the description of GCB. Not support angle brackets (<>).
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID to which the GCB belongs.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] local_area: Specifies the local access point. The valid length is limited between `1`
               to `64`, Only Chinese and English letters, digits, hyphens (-), underscores (_) and dots (.) are allowed. If `type` is
               **Region**, it is **optional**, otherwise it is **Required**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the GCB name.
        :param pulumi.Input[_builtins.str] remote_area: Specifies the remote access point. The valid length is limited between `1`
               to `64`, Only Chinese and English letters, digits, hyphens (-), underscores (_) and dots (.) are allowed. If `type` is
               **Region**, it is **optional**, otherwise it is **Required**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] sla_level: Specifies the network level. From high to low, divided into **Pt**(platinum),
               **Au**(gold), and **Ag**(silver). The default is **Au**.
        :param pulumi.Input[_builtins.str] spec_code_id: Specifies the line specification code UUID.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the tags of GCB.
        """
        pulumi.set(__self__, "bordercross", bordercross)
        pulumi.set(__self__, "charge_mode", charge_mode)
        pulumi.set(__self__, "size", size)
        pulumi.set(__self__, "type", type)
        if binding_service is not None:
            pulumi.set(__self__, "binding_service", binding_service)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if local_area is not None:
            pulumi.set(__self__, "local_area", local_area)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if remote_area is not None:
            pulumi.set(__self__, "remote_area", remote_area)
        if sla_level is not None:
            pulumi.set(__self__, "sla_level", sla_level)
        if spec_code_id is not None:
            pulumi.set(__self__, "spec_code_id", spec_code_id)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter
    def bordercross(self) -> pulumi.Input[_builtins.bool]:
        """
        Specifies whether the GCB involves traveling from Chinese mainland to other
        countries. Changing this creates a new resource.
        """
        return pulumi.get(self, "bordercross")

    @bordercross.setter
    def bordercross(self, value: pulumi.Input[_builtins.bool]):
        pulumi.set(self, "bordercross", value)

    @_builtins.property
    @pulumi.getter(name="chargeMode")
    def charge_mode(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the GCB charge mode.

        Valid values are as follows:
        + **bwd**: Billed by bandwidth.
        + **95**: Billed by 95th percentile bandwidth.

        Only support changing **bwd** to **95**.
        """
        return pulumi.get(self, "charge_mode")

    @charge_mode.setter
    def charge_mode(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "charge_mode", value)

    @_builtins.property
    @pulumi.getter
    def size(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the GCB size. If `charge_mode` is **bwd**, value ranges from `2` to `300` Mbit/s. If
        `charge_mode` is **95**, value ranges from `100` to `300` Mbit/s.
        """
        return pulumi.get(self, "size")

    @size.setter
    def size(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "size", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the GCB type.

        Valid values are as follows:
        + **TrsArea**: Cross geographic region.
        + **Area**: Geographic region.
        + **SubArea**: Homezones region.
        + **Region**: Multi-city region.

        Changing this creates a new resource.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="bindingService")
    def binding_service(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies whether to limit the GCB only bind with specific instance. Default is
        **ALL**.

        Valid values are as follows:
        + **CC**: Cloud Connection.
        + **GEIP**: Global EIP.
        + **GCN**: Central Network.
        + **GSN**: Site Network.
        + **ALL**: All.
        """
        return pulumi.get(self, "binding_service")

    @binding_service.setter
    def binding_service(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "binding_service", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of GCB. Not support angle brackets (<>).
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID to which the GCB belongs.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="localArea")
    def local_area(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the local access point. The valid length is limited between `1`
        to `64`, Only Chinese and English letters, digits, hyphens (-), underscores (_) and dots (.) are allowed. If `type` is
        **Region**, it is **optional**, otherwise it is **Required**.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "local_area")

    @local_area.setter
    def local_area(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "local_area", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the GCB name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="remoteArea")
    def remote_area(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the remote access point. The valid length is limited between `1`
        to `64`, Only Chinese and English letters, digits, hyphens (-), underscores (_) and dots (.) are allowed. If `type` is
        **Region**, it is **optional**, otherwise it is **Required**.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "remote_area")

    @remote_area.setter
    def remote_area(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "remote_area", value)

    @_builtins.property
    @pulumi.getter(name="slaLevel")
    def sla_level(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the network level. From high to low, divided into **Pt**(platinum),
        **Au**(gold), and **Ag**(silver). The default is **Au**.
        """
        return pulumi.get(self, "sla_level")

    @sla_level.setter
    def sla_level(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "sla_level", value)

    @_builtins.property
    @pulumi.getter(name="specCodeId")
    def spec_code_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the line specification code UUID.
        """
        return pulumi.get(self, "spec_code_id")

    @spec_code_id.setter
    def spec_code_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "spec_code_id", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the tags of GCB.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _GlobalConnectionBandwidthState:
    def __init__(__self__, *,
                 binding_service: Optional[pulumi.Input[_builtins.str]] = None,
                 bordercross: Optional[pulumi.Input[_builtins.bool]] = None,
                 charge_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_share: Optional[pulumi.Input[_builtins.bool]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 frozen: Optional[pulumi.Input[_builtins.bool]] = None,
                 instances: Optional[pulumi.Input[Sequence[pulumi.Input['GlobalConnectionBandwidthInstanceArgs']]]] = None,
                 local_area: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 remote_area: Optional[pulumi.Input[_builtins.str]] = None,
                 size: Optional[pulumi.Input[_builtins.int]] = None,
                 sla_level: Optional[pulumi.Input[_builtins.str]] = None,
                 spec_code_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering GlobalConnectionBandwidth resources.
        :param pulumi.Input[_builtins.str] binding_service: Specifies whether to limit the GCB only bind with specific instance. Default is
               **ALL**.
               
               Valid values are as follows:
               + **CC**: Cloud Connection.
               + **GEIP**: Global EIP.
               + **GCN**: Central Network.
               + **GSN**: Site Network.
               + **ALL**: All.
        :param pulumi.Input[_builtins.bool] bordercross: Specifies whether the GCB involves traveling from Chinese mainland to other
               countries. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] charge_mode: Specifies the GCB charge mode.
               
               Valid values are as follows:
               + **bwd**: Billed by bandwidth.
               + **95**: Billed by 95th percentile bandwidth.
               
               Only support changing **bwd** to **95**.
        :param pulumi.Input[_builtins.str] created_at: The create time of GCB.
        :param pulumi.Input[_builtins.str] description: Specifies the description of GCB. Not support angle brackets (<>).
        :param pulumi.Input[_builtins.bool] enable_share: Indicates the GCB whether to support binding multiple instances.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID to which the GCB belongs.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] frozen: Indicates the GCB is frozen or not.
        :param pulumi.Input[Sequence[pulumi.Input['GlobalConnectionBandwidthInstanceArgs']]] instances: The instances which the GCB binding with.
               The instances structure is documented below.
        :param pulumi.Input[_builtins.str] local_area: Specifies the local access point. The valid length is limited between `1`
               to `64`, Only Chinese and English letters, digits, hyphens (-), underscores (_) and dots (.) are allowed. If `type` is
               **Region**, it is **optional**, otherwise it is **Required**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the GCB name.
        :param pulumi.Input[_builtins.str] remote_area: Specifies the remote access point. The valid length is limited between `1`
               to `64`, Only Chinese and English letters, digits, hyphens (-), underscores (_) and dots (.) are allowed. If `type` is
               **Region**, it is **optional**, otherwise it is **Required**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] size: Specifies the GCB size. If `charge_mode` is **bwd**, value ranges from `2` to `300` Mbit/s. If
               `charge_mode` is **95**, value ranges from `100` to `300` Mbit/s.
        :param pulumi.Input[_builtins.str] sla_level: Specifies the network level. From high to low, divided into **Pt**(platinum),
               **Au**(gold), and **Ag**(silver). The default is **Au**.
        :param pulumi.Input[_builtins.str] spec_code_id: Specifies the line specification code UUID.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the tags of GCB.
        :param pulumi.Input[_builtins.str] type: Specifies the GCB type.
               
               Valid values are as follows:
               + **TrsArea**: Cross geographic region.
               + **Area**: Geographic region.
               + **SubArea**: Homezones region.
               + **Region**: Multi-city region.
               
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] updated_at: The update time of GCB.
        """
        if binding_service is not None:
            pulumi.set(__self__, "binding_service", binding_service)
        if bordercross is not None:
            pulumi.set(__self__, "bordercross", bordercross)
        if charge_mode is not None:
            pulumi.set(__self__, "charge_mode", charge_mode)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enable_share is not None:
            pulumi.set(__self__, "enable_share", enable_share)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if frozen is not None:
            pulumi.set(__self__, "frozen", frozen)
        if instances is not None:
            pulumi.set(__self__, "instances", instances)
        if local_area is not None:
            pulumi.set(__self__, "local_area", local_area)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if remote_area is not None:
            pulumi.set(__self__, "remote_area", remote_area)
        if size is not None:
            pulumi.set(__self__, "size", size)
        if sla_level is not None:
            pulumi.set(__self__, "sla_level", sla_level)
        if spec_code_id is not None:
            pulumi.set(__self__, "spec_code_id", spec_code_id)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="bindingService")
    def binding_service(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies whether to limit the GCB only bind with specific instance. Default is
        **ALL**.

        Valid values are as follows:
        + **CC**: Cloud Connection.
        + **GEIP**: Global EIP.
        + **GCN**: Central Network.
        + **GSN**: Site Network.
        + **ALL**: All.
        """
        return pulumi.get(self, "binding_service")

    @binding_service.setter
    def binding_service(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "binding_service", value)

    @_builtins.property
    @pulumi.getter
    def bordercross(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether the GCB involves traveling from Chinese mainland to other
        countries. Changing this creates a new resource.
        """
        return pulumi.get(self, "bordercross")

    @bordercross.setter
    def bordercross(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "bordercross", value)

    @_builtins.property
    @pulumi.getter(name="chargeMode")
    def charge_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the GCB charge mode.

        Valid values are as follows:
        + **bwd**: Billed by bandwidth.
        + **95**: Billed by 95th percentile bandwidth.

        Only support changing **bwd** to **95**.
        """
        return pulumi.get(self, "charge_mode")

    @charge_mode.setter
    def charge_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "charge_mode", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The create time of GCB.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of GCB. Not support angle brackets (<>).
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enableShare")
    def enable_share(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Indicates the GCB whether to support binding multiple instances.
        """
        return pulumi.get(self, "enable_share")

    @enable_share.setter
    def enable_share(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_share", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID to which the GCB belongs.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def frozen(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Indicates the GCB is frozen or not.
        """
        return pulumi.get(self, "frozen")

    @frozen.setter
    def frozen(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "frozen", value)

    @_builtins.property
    @pulumi.getter
    def instances(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['GlobalConnectionBandwidthInstanceArgs']]]]:
        """
        The instances which the GCB binding with.
        The instances structure is documented below.
        """
        return pulumi.get(self, "instances")

    @instances.setter
    def instances(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['GlobalConnectionBandwidthInstanceArgs']]]]):
        pulumi.set(self, "instances", value)

    @_builtins.property
    @pulumi.getter(name="localArea")
    def local_area(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the local access point. The valid length is limited between `1`
        to `64`, Only Chinese and English letters, digits, hyphens (-), underscores (_) and dots (.) are allowed. If `type` is
        **Region**, it is **optional**, otherwise it is **Required**.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "local_area")

    @local_area.setter
    def local_area(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "local_area", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the GCB name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="remoteArea")
    def remote_area(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the remote access point. The valid length is limited between `1`
        to `64`, Only Chinese and English letters, digits, hyphens (-), underscores (_) and dots (.) are allowed. If `type` is
        **Region**, it is **optional**, otherwise it is **Required**.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "remote_area")

    @remote_area.setter
    def remote_area(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "remote_area", value)

    @_builtins.property
    @pulumi.getter
    def size(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the GCB size. If `charge_mode` is **bwd**, value ranges from `2` to `300` Mbit/s. If
        `charge_mode` is **95**, value ranges from `100` to `300` Mbit/s.
        """
        return pulumi.get(self, "size")

    @size.setter
    def size(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "size", value)

    @_builtins.property
    @pulumi.getter(name="slaLevel")
    def sla_level(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the network level. From high to low, divided into **Pt**(platinum),
        **Au**(gold), and **Ag**(silver). The default is **Au**.
        """
        return pulumi.get(self, "sla_level")

    @sla_level.setter
    def sla_level(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "sla_level", value)

    @_builtins.property
    @pulumi.getter(name="specCodeId")
    def spec_code_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the line specification code UUID.
        """
        return pulumi.get(self, "spec_code_id")

    @spec_code_id.setter
    def spec_code_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "spec_code_id", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the tags of GCB.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the GCB type.

        Valid values are as follows:
        + **TrsArea**: Cross geographic region.
        + **Area**: Geographic region.
        + **SubArea**: Homezones region.
        + **Region**: Multi-city region.

        Changing this creates a new resource.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The update time of GCB.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("huaweicloud:Cc/globalConnectionBandwidth:GlobalConnectionBandwidth")
class GlobalConnectionBandwidth(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 binding_service: Optional[pulumi.Input[_builtins.str]] = None,
                 bordercross: Optional[pulumi.Input[_builtins.bool]] = None,
                 charge_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 local_area: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 remote_area: Optional[pulumi.Input[_builtins.str]] = None,
                 size: Optional[pulumi.Input[_builtins.int]] = None,
                 sla_level: Optional[pulumi.Input[_builtins.str]] = None,
                 spec_code_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a CC global connection bandwidth within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        gcb_name = config.require_object("gcbName")
        test = huaweicloud.cc.GlobalConnectionBandwidth("test",
            name=gcb_name,
            type="Region",
            bordercross=False,
            charge_mode="bwd",
            size=5)
        ```

        ## Import

        The global connection bandwidth can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Cc/globalConnectionBandwidth:GlobalConnectionBandwidth test <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] binding_service: Specifies whether to limit the GCB only bind with specific instance. Default is
               **ALL**.
               
               Valid values are as follows:
               + **CC**: Cloud Connection.
               + **GEIP**: Global EIP.
               + **GCN**: Central Network.
               + **GSN**: Site Network.
               + **ALL**: All.
        :param pulumi.Input[_builtins.bool] bordercross: Specifies whether the GCB involves traveling from Chinese mainland to other
               countries. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] charge_mode: Specifies the GCB charge mode.
               
               Valid values are as follows:
               + **bwd**: Billed by bandwidth.
               + **95**: Billed by 95th percentile bandwidth.
               
               Only support changing **bwd** to **95**.
        :param pulumi.Input[_builtins.str] description: Specifies the description of GCB. Not support angle brackets (<>).
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID to which the GCB belongs.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] local_area: Specifies the local access point. The valid length is limited between `1`
               to `64`, Only Chinese and English letters, digits, hyphens (-), underscores (_) and dots (.) are allowed. If `type` is
               **Region**, it is **optional**, otherwise it is **Required**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the GCB name.
        :param pulumi.Input[_builtins.str] remote_area: Specifies the remote access point. The valid length is limited between `1`
               to `64`, Only Chinese and English letters, digits, hyphens (-), underscores (_) and dots (.) are allowed. If `type` is
               **Region**, it is **optional**, otherwise it is **Required**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] size: Specifies the GCB size. If `charge_mode` is **bwd**, value ranges from `2` to `300` Mbit/s. If
               `charge_mode` is **95**, value ranges from `100` to `300` Mbit/s.
        :param pulumi.Input[_builtins.str] sla_level: Specifies the network level. From high to low, divided into **Pt**(platinum),
               **Au**(gold), and **Ag**(silver). The default is **Au**.
        :param pulumi.Input[_builtins.str] spec_code_id: Specifies the line specification code UUID.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the tags of GCB.
        :param pulumi.Input[_builtins.str] type: Specifies the GCB type.
               
               Valid values are as follows:
               + **TrsArea**: Cross geographic region.
               + **Area**: Geographic region.
               + **SubArea**: Homezones region.
               + **Region**: Multi-city region.
               
               Changing this creates a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: GlobalConnectionBandwidthArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a CC global connection bandwidth within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        gcb_name = config.require_object("gcbName")
        test = huaweicloud.cc.GlobalConnectionBandwidth("test",
            name=gcb_name,
            type="Region",
            bordercross=False,
            charge_mode="bwd",
            size=5)
        ```

        ## Import

        The global connection bandwidth can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Cc/globalConnectionBandwidth:GlobalConnectionBandwidth test <id>
        ```

        :param str resource_name: The name of the resource.
        :param GlobalConnectionBandwidthArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(GlobalConnectionBandwidthArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 binding_service: Optional[pulumi.Input[_builtins.str]] = None,
                 bordercross: Optional[pulumi.Input[_builtins.bool]] = None,
                 charge_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 local_area: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 remote_area: Optional[pulumi.Input[_builtins.str]] = None,
                 size: Optional[pulumi.Input[_builtins.int]] = None,
                 sla_level: Optional[pulumi.Input[_builtins.str]] = None,
                 spec_code_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = GlobalConnectionBandwidthArgs.__new__(GlobalConnectionBandwidthArgs)

            __props__.__dict__["binding_service"] = binding_service
            if bordercross is None and not opts.urn:
                raise TypeError("Missing required property 'bordercross'")
            __props__.__dict__["bordercross"] = bordercross
            if charge_mode is None and not opts.urn:
                raise TypeError("Missing required property 'charge_mode'")
            __props__.__dict__["charge_mode"] = charge_mode
            __props__.__dict__["description"] = description
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            __props__.__dict__["local_area"] = local_area
            __props__.__dict__["name"] = name
            __props__.__dict__["remote_area"] = remote_area
            if size is None and not opts.urn:
                raise TypeError("Missing required property 'size'")
            __props__.__dict__["size"] = size
            __props__.__dict__["sla_level"] = sla_level
            __props__.__dict__["spec_code_id"] = spec_code_id
            __props__.__dict__["tags"] = tags
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
            __props__.__dict__["created_at"] = None
            __props__.__dict__["enable_share"] = None
            __props__.__dict__["frozen"] = None
            __props__.__dict__["instances"] = None
            __props__.__dict__["updated_at"] = None
        super(GlobalConnectionBandwidth, __self__).__init__(
            'huaweicloud:Cc/globalConnectionBandwidth:GlobalConnectionBandwidth',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            binding_service: Optional[pulumi.Input[_builtins.str]] = None,
            bordercross: Optional[pulumi.Input[_builtins.bool]] = None,
            charge_mode: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            enable_share: Optional[pulumi.Input[_builtins.bool]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            frozen: Optional[pulumi.Input[_builtins.bool]] = None,
            instances: Optional[pulumi.Input[Sequence[pulumi.Input[Union['GlobalConnectionBandwidthInstanceArgs', 'GlobalConnectionBandwidthInstanceArgsDict']]]]] = None,
            local_area: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            remote_area: Optional[pulumi.Input[_builtins.str]] = None,
            size: Optional[pulumi.Input[_builtins.int]] = None,
            sla_level: Optional[pulumi.Input[_builtins.str]] = None,
            spec_code_id: Optional[pulumi.Input[_builtins.str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            type: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'GlobalConnectionBandwidth':
        """
        Get an existing GlobalConnectionBandwidth resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] binding_service: Specifies whether to limit the GCB only bind with specific instance. Default is
               **ALL**.
               
               Valid values are as follows:
               + **CC**: Cloud Connection.
               + **GEIP**: Global EIP.
               + **GCN**: Central Network.
               + **GSN**: Site Network.
               + **ALL**: All.
        :param pulumi.Input[_builtins.bool] bordercross: Specifies whether the GCB involves traveling from Chinese mainland to other
               countries. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] charge_mode: Specifies the GCB charge mode.
               
               Valid values are as follows:
               + **bwd**: Billed by bandwidth.
               + **95**: Billed by 95th percentile bandwidth.
               
               Only support changing **bwd** to **95**.
        :param pulumi.Input[_builtins.str] created_at: The create time of GCB.
        :param pulumi.Input[_builtins.str] description: Specifies the description of GCB. Not support angle brackets (<>).
        :param pulumi.Input[_builtins.bool] enable_share: Indicates the GCB whether to support binding multiple instances.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID to which the GCB belongs.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.bool] frozen: Indicates the GCB is frozen or not.
        :param pulumi.Input[Sequence[pulumi.Input[Union['GlobalConnectionBandwidthInstanceArgs', 'GlobalConnectionBandwidthInstanceArgsDict']]]] instances: The instances which the GCB binding with.
               The instances structure is documented below.
        :param pulumi.Input[_builtins.str] local_area: Specifies the local access point. The valid length is limited between `1`
               to `64`, Only Chinese and English letters, digits, hyphens (-), underscores (_) and dots (.) are allowed. If `type` is
               **Region**, it is **optional**, otherwise it is **Required**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the GCB name.
        :param pulumi.Input[_builtins.str] remote_area: Specifies the remote access point. The valid length is limited between `1`
               to `64`, Only Chinese and English letters, digits, hyphens (-), underscores (_) and dots (.) are allowed. If `type` is
               **Region**, it is **optional**, otherwise it is **Required**.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] size: Specifies the GCB size. If `charge_mode` is **bwd**, value ranges from `2` to `300` Mbit/s. If
               `charge_mode` is **95**, value ranges from `100` to `300` Mbit/s.
        :param pulumi.Input[_builtins.str] sla_level: Specifies the network level. From high to low, divided into **Pt**(platinum),
               **Au**(gold), and **Ag**(silver). The default is **Au**.
        :param pulumi.Input[_builtins.str] spec_code_id: Specifies the line specification code UUID.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the tags of GCB.
        :param pulumi.Input[_builtins.str] type: Specifies the GCB type.
               
               Valid values are as follows:
               + **TrsArea**: Cross geographic region.
               + **Area**: Geographic region.
               + **SubArea**: Homezones region.
               + **Region**: Multi-city region.
               
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] updated_at: The update time of GCB.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _GlobalConnectionBandwidthState.__new__(_GlobalConnectionBandwidthState)

        __props__.__dict__["binding_service"] = binding_service
        __props__.__dict__["bordercross"] = bordercross
        __props__.__dict__["charge_mode"] = charge_mode
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["description"] = description
        __props__.__dict__["enable_share"] = enable_share
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["frozen"] = frozen
        __props__.__dict__["instances"] = instances
        __props__.__dict__["local_area"] = local_area
        __props__.__dict__["name"] = name
        __props__.__dict__["remote_area"] = remote_area
        __props__.__dict__["size"] = size
        __props__.__dict__["sla_level"] = sla_level
        __props__.__dict__["spec_code_id"] = spec_code_id
        __props__.__dict__["tags"] = tags
        __props__.__dict__["type"] = type
        __props__.__dict__["updated_at"] = updated_at
        return GlobalConnectionBandwidth(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="bindingService")
    def binding_service(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies whether to limit the GCB only bind with specific instance. Default is
        **ALL**.

        Valid values are as follows:
        + **CC**: Cloud Connection.
        + **GEIP**: Global EIP.
        + **GCN**: Central Network.
        + **GSN**: Site Network.
        + **ALL**: All.
        """
        return pulumi.get(self, "binding_service")

    @_builtins.property
    @pulumi.getter
    def bordercross(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether the GCB involves traveling from Chinese mainland to other
        countries. Changing this creates a new resource.
        """
        return pulumi.get(self, "bordercross")

    @_builtins.property
    @pulumi.getter(name="chargeMode")
    def charge_mode(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the GCB charge mode.

        Valid values are as follows:
        + **bwd**: Billed by bandwidth.
        + **95**: Billed by 95th percentile bandwidth.

        Only support changing **bwd** to **95**.
        """
        return pulumi.get(self, "charge_mode")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The create time of GCB.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the description of GCB. Not support angle brackets (<>).
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="enableShare")
    def enable_share(self) -> pulumi.Output[_builtins.bool]:
        """
        Indicates the GCB whether to support binding multiple instances.
        """
        return pulumi.get(self, "enable_share")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the enterprise project ID to which the GCB belongs.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def frozen(self) -> pulumi.Output[_builtins.bool]:
        """
        Indicates the GCB is frozen or not.
        """
        return pulumi.get(self, "frozen")

    @_builtins.property
    @pulumi.getter
    def instances(self) -> pulumi.Output[Sequence['outputs.GlobalConnectionBandwidthInstance']]:
        """
        The instances which the GCB binding with.
        The instances structure is documented below.
        """
        return pulumi.get(self, "instances")

    @_builtins.property
    @pulumi.getter(name="localArea")
    def local_area(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the local access point. The valid length is limited between `1`
        to `64`, Only Chinese and English letters, digits, hyphens (-), underscores (_) and dots (.) are allowed. If `type` is
        **Region**, it is **optional**, otherwise it is **Required**.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "local_area")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the GCB name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="remoteArea")
    def remote_area(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the remote access point. The valid length is limited between `1`
        to `64`, Only Chinese and English letters, digits, hyphens (-), underscores (_) and dots (.) are allowed. If `type` is
        **Region**, it is **optional**, otherwise it is **Required**.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "remote_area")

    @_builtins.property
    @pulumi.getter
    def size(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the GCB size. If `charge_mode` is **bwd**, value ranges from `2` to `300` Mbit/s. If
        `charge_mode` is **95**, value ranges from `100` to `300` Mbit/s.
        """
        return pulumi.get(self, "size")

    @_builtins.property
    @pulumi.getter(name="slaLevel")
    def sla_level(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the network level. From high to low, divided into **Pt**(platinum),
        **Au**(gold), and **Ag**(silver). The default is **Au**.
        """
        return pulumi.get(self, "sla_level")

    @_builtins.property
    @pulumi.getter(name="specCodeId")
    def spec_code_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the line specification code UUID.
        """
        return pulumi.get(self, "spec_code_id")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Mapping[str, _builtins.str]]:
        """
        Specifies the tags of GCB.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the GCB type.

        Valid values are as follows:
        + **TrsArea**: Cross geographic region.
        + **Area**: Geographic region.
        + **SubArea**: Homezones region.
        + **Region**: Multi-city region.

        Changing this creates a new resource.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The update time of GCB.
        """
        return pulumi.get(self, "updated_at")

