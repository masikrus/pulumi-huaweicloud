# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['CentralNetworkAttachmentArgs', 'CentralNetworkAttachment']

@pulumi.input_type
class CentralNetworkAttachmentArgs:
    def __init__(__self__, *,
                 central_network_id: pulumi.Input[_builtins.str],
                 enterprise_router_id: pulumi.Input[_builtins.str],
                 enterprise_router_project_id: pulumi.Input[_builtins.str],
                 enterprise_router_region_id: pulumi.Input[_builtins.str],
                 global_dc_gateway_id: pulumi.Input[_builtins.str],
                 global_dc_gateway_project_id: pulumi.Input[_builtins.str],
                 global_dc_gateway_region_id: pulumi.Input[_builtins.str],
                 central_network_plane_id: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a CentralNetworkAttachment resource.
        :param pulumi.Input[_builtins.str] central_network_id: The central network ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] enterprise_router_id: The enterprise router ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] enterprise_router_project_id: The project ID to which the enterprise router belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] enterprise_router_region_id: The region ID to which the enterprise router belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] global_dc_gateway_id: The global DC gateway ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] global_dc_gateway_project_id: The project ID to which the global DC gateway belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] global_dc_gateway_region_id: The region ID to which the global DC gateway belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] central_network_plane_id: The central network plane ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] description: The description of the attachment.
        :param pulumi.Input[_builtins.str] name: The name of the attachment.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "central_network_id", central_network_id)
        pulumi.set(__self__, "enterprise_router_id", enterprise_router_id)
        pulumi.set(__self__, "enterprise_router_project_id", enterprise_router_project_id)
        pulumi.set(__self__, "enterprise_router_region_id", enterprise_router_region_id)
        pulumi.set(__self__, "global_dc_gateway_id", global_dc_gateway_id)
        pulumi.set(__self__, "global_dc_gateway_project_id", global_dc_gateway_project_id)
        pulumi.set(__self__, "global_dc_gateway_region_id", global_dc_gateway_region_id)
        if central_network_plane_id is not None:
            pulumi.set(__self__, "central_network_plane_id", central_network_plane_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="centralNetworkId")
    def central_network_id(self) -> pulumi.Input[_builtins.str]:
        """
        The central network ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "central_network_id")

    @central_network_id.setter
    def central_network_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "central_network_id", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseRouterId")
    def enterprise_router_id(self) -> pulumi.Input[_builtins.str]:
        """
        The enterprise router ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_router_id")

    @enterprise_router_id.setter
    def enterprise_router_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "enterprise_router_id", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseRouterProjectId")
    def enterprise_router_project_id(self) -> pulumi.Input[_builtins.str]:
        """
        The project ID to which the enterprise router belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_router_project_id")

    @enterprise_router_project_id.setter
    def enterprise_router_project_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "enterprise_router_project_id", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseRouterRegionId")
    def enterprise_router_region_id(self) -> pulumi.Input[_builtins.str]:
        """
        The region ID to which the enterprise router belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_router_region_id")

    @enterprise_router_region_id.setter
    def enterprise_router_region_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "enterprise_router_region_id", value)

    @_builtins.property
    @pulumi.getter(name="globalDcGatewayId")
    def global_dc_gateway_id(self) -> pulumi.Input[_builtins.str]:
        """
        The global DC gateway ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "global_dc_gateway_id")

    @global_dc_gateway_id.setter
    def global_dc_gateway_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "global_dc_gateway_id", value)

    @_builtins.property
    @pulumi.getter(name="globalDcGatewayProjectId")
    def global_dc_gateway_project_id(self) -> pulumi.Input[_builtins.str]:
        """
        The project ID to which the global DC gateway belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "global_dc_gateway_project_id")

    @global_dc_gateway_project_id.setter
    def global_dc_gateway_project_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "global_dc_gateway_project_id", value)

    @_builtins.property
    @pulumi.getter(name="globalDcGatewayRegionId")
    def global_dc_gateway_region_id(self) -> pulumi.Input[_builtins.str]:
        """
        The region ID to which the global DC gateway belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "global_dc_gateway_region_id")

    @global_dc_gateway_region_id.setter
    def global_dc_gateway_region_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "global_dc_gateway_region_id", value)

    @_builtins.property
    @pulumi.getter(name="centralNetworkPlaneId")
    def central_network_plane_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The central network plane ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "central_network_plane_id")

    @central_network_plane_id.setter
    def central_network_plane_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "central_network_plane_id", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description of the attachment.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the attachment.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _CentralNetworkAttachmentState:
    def __init__(__self__, *,
                 central_network_id: Optional[pulumi.Input[_builtins.str]] = None,
                 central_network_plane_id: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_router_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_router_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_router_region_id: Optional[pulumi.Input[_builtins.str]] = None,
                 global_dc_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
                 global_dc_gateway_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 global_dc_gateway_region_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 state: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering CentralNetworkAttachment resources.
        :param pulumi.Input[_builtins.str] central_network_id: The central network ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] central_network_plane_id: The central network plane ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] description: The description of the attachment.
        :param pulumi.Input[_builtins.str] enterprise_router_id: The enterprise router ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] enterprise_router_project_id: The project ID to which the enterprise router belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] enterprise_router_region_id: The region ID to which the enterprise router belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] global_dc_gateway_id: The global DC gateway ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] global_dc_gateway_project_id: The project ID to which the global DC gateway belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] global_dc_gateway_region_id: The region ID to which the global DC gateway belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: The name of the attachment.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] state: Central network attachment status.
               The valid values are as follows:
               - **AVAILABLE**
               - **CREATING**
               - **UPDATING**
               - **DELETING**
               - **FREEZING**
               - **UNFREEZING**
               - **RECOVERING**
               - **FAILED**
               - **DELETED**
        """
        if central_network_id is not None:
            pulumi.set(__self__, "central_network_id", central_network_id)
        if central_network_plane_id is not None:
            pulumi.set(__self__, "central_network_plane_id", central_network_plane_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enterprise_router_id is not None:
            pulumi.set(__self__, "enterprise_router_id", enterprise_router_id)
        if enterprise_router_project_id is not None:
            pulumi.set(__self__, "enterprise_router_project_id", enterprise_router_project_id)
        if enterprise_router_region_id is not None:
            pulumi.set(__self__, "enterprise_router_region_id", enterprise_router_region_id)
        if global_dc_gateway_id is not None:
            pulumi.set(__self__, "global_dc_gateway_id", global_dc_gateway_id)
        if global_dc_gateway_project_id is not None:
            pulumi.set(__self__, "global_dc_gateway_project_id", global_dc_gateway_project_id)
        if global_dc_gateway_region_id is not None:
            pulumi.set(__self__, "global_dc_gateway_region_id", global_dc_gateway_region_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if state is not None:
            pulumi.set(__self__, "state", state)

    @_builtins.property
    @pulumi.getter(name="centralNetworkId")
    def central_network_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The central network ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "central_network_id")

    @central_network_id.setter
    def central_network_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "central_network_id", value)

    @_builtins.property
    @pulumi.getter(name="centralNetworkPlaneId")
    def central_network_plane_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The central network plane ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "central_network_plane_id")

    @central_network_plane_id.setter
    def central_network_plane_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "central_network_plane_id", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description of the attachment.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseRouterId")
    def enterprise_router_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The enterprise router ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_router_id")

    @enterprise_router_id.setter
    def enterprise_router_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_router_id", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseRouterProjectId")
    def enterprise_router_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The project ID to which the enterprise router belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_router_project_id")

    @enterprise_router_project_id.setter
    def enterprise_router_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_router_project_id", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseRouterRegionId")
    def enterprise_router_region_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The region ID to which the enterprise router belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_router_region_id")

    @enterprise_router_region_id.setter
    def enterprise_router_region_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_router_region_id", value)

    @_builtins.property
    @pulumi.getter(name="globalDcGatewayId")
    def global_dc_gateway_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The global DC gateway ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "global_dc_gateway_id")

    @global_dc_gateway_id.setter
    def global_dc_gateway_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "global_dc_gateway_id", value)

    @_builtins.property
    @pulumi.getter(name="globalDcGatewayProjectId")
    def global_dc_gateway_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The project ID to which the global DC gateway belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "global_dc_gateway_project_id")

    @global_dc_gateway_project_id.setter
    def global_dc_gateway_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "global_dc_gateway_project_id", value)

    @_builtins.property
    @pulumi.getter(name="globalDcGatewayRegionId")
    def global_dc_gateway_region_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The region ID to which the global DC gateway belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "global_dc_gateway_region_id")

    @global_dc_gateway_region_id.setter
    def global_dc_gateway_region_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "global_dc_gateway_region_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the attachment.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Central network attachment status.
        The valid values are as follows:
        - **AVAILABLE**
        - **CREATING**
        - **UPDATING**
        - **DELETING**
        - **FREEZING**
        - **UNFREEZING**
        - **RECOVERING**
        - **FAILED**
        - **DELETED**
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "state", value)


@pulumi.type_token("huaweicloud:Cc/centralNetworkAttachment:CentralNetworkAttachment")
class CentralNetworkAttachment(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 central_network_id: Optional[pulumi.Input[_builtins.str]] = None,
                 central_network_plane_id: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_router_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_router_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_router_region_id: Optional[pulumi.Input[_builtins.str]] = None,
                 global_dc_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
                 global_dc_gateway_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 global_dc_gateway_region_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a central network attachment resource of Cloud Connect within HuaweiCloud.

        To allow network instances such as enterprise routers and global DC gateways to communicate with each other
        across regions, you need to add these network instances to the central network.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        central_network_id = config.require_object("centralNetworkId")
        enterprise_router_id = config.require_object("enterpriseRouterId")
        enterprise_router_project_id = config.require_object("enterpriseRouterProjectId")
        enterprise_router_region_id = config.require_object("enterpriseRouterRegionId")
        global_dc_gateway_id = config.require_object("globalDcGatewayId")
        global_dc_gateway_project_id = config.require_object("globalDcGatewayProjectId")
        global_dc_gateway_region_id = config.require_object("globalDcGatewayRegionId")
        test = huaweicloud.cc.CentralNetworkAttachment("test",
            name="demo",
            description="This is a demo",
            central_network_id=central_network_id,
            enterprise_router_id=enterprise_router_id,
            enterprise_router_project_id=enterprise_router_project_id,
            enterprise_router_region_id=enterprise_router_region_id,
            global_dc_gateway_id=global_dc_gateway_id,
            global_dc_gateway_project_id=global_dc_gateway_project_id,
            global_dc_gateway_region_id=global_dc_gateway_region_id)
        ```

        ## Import

        The central network attachment can be imported using `central_network_id`, `id`, separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Cc/centralNetworkAttachment:CentralNetworkAttachment test <central_network_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] central_network_id: The central network ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] central_network_plane_id: The central network plane ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] description: The description of the attachment.
        :param pulumi.Input[_builtins.str] enterprise_router_id: The enterprise router ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] enterprise_router_project_id: The project ID to which the enterprise router belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] enterprise_router_region_id: The region ID to which the enterprise router belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] global_dc_gateway_id: The global DC gateway ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] global_dc_gateway_project_id: The project ID to which the global DC gateway belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] global_dc_gateway_region_id: The region ID to which the global DC gateway belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: The name of the attachment.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CentralNetworkAttachmentArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a central network attachment resource of Cloud Connect within HuaweiCloud.

        To allow network instances such as enterprise routers and global DC gateways to communicate with each other
        across regions, you need to add these network instances to the central network.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        central_network_id = config.require_object("centralNetworkId")
        enterprise_router_id = config.require_object("enterpriseRouterId")
        enterprise_router_project_id = config.require_object("enterpriseRouterProjectId")
        enterprise_router_region_id = config.require_object("enterpriseRouterRegionId")
        global_dc_gateway_id = config.require_object("globalDcGatewayId")
        global_dc_gateway_project_id = config.require_object("globalDcGatewayProjectId")
        global_dc_gateway_region_id = config.require_object("globalDcGatewayRegionId")
        test = huaweicloud.cc.CentralNetworkAttachment("test",
            name="demo",
            description="This is a demo",
            central_network_id=central_network_id,
            enterprise_router_id=enterprise_router_id,
            enterprise_router_project_id=enterprise_router_project_id,
            enterprise_router_region_id=enterprise_router_region_id,
            global_dc_gateway_id=global_dc_gateway_id,
            global_dc_gateway_project_id=global_dc_gateway_project_id,
            global_dc_gateway_region_id=global_dc_gateway_region_id)
        ```

        ## Import

        The central network attachment can be imported using `central_network_id`, `id`, separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Cc/centralNetworkAttachment:CentralNetworkAttachment test <central_network_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param CentralNetworkAttachmentArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CentralNetworkAttachmentArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 central_network_id: Optional[pulumi.Input[_builtins.str]] = None,
                 central_network_plane_id: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_router_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_router_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_router_region_id: Optional[pulumi.Input[_builtins.str]] = None,
                 global_dc_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
                 global_dc_gateway_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 global_dc_gateway_region_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CentralNetworkAttachmentArgs.__new__(CentralNetworkAttachmentArgs)

            if central_network_id is None and not opts.urn:
                raise TypeError("Missing required property 'central_network_id'")
            __props__.__dict__["central_network_id"] = central_network_id
            __props__.__dict__["central_network_plane_id"] = central_network_plane_id
            __props__.__dict__["description"] = description
            if enterprise_router_id is None and not opts.urn:
                raise TypeError("Missing required property 'enterprise_router_id'")
            __props__.__dict__["enterprise_router_id"] = enterprise_router_id
            if enterprise_router_project_id is None and not opts.urn:
                raise TypeError("Missing required property 'enterprise_router_project_id'")
            __props__.__dict__["enterprise_router_project_id"] = enterprise_router_project_id
            if enterprise_router_region_id is None and not opts.urn:
                raise TypeError("Missing required property 'enterprise_router_region_id'")
            __props__.__dict__["enterprise_router_region_id"] = enterprise_router_region_id
            if global_dc_gateway_id is None and not opts.urn:
                raise TypeError("Missing required property 'global_dc_gateway_id'")
            __props__.__dict__["global_dc_gateway_id"] = global_dc_gateway_id
            if global_dc_gateway_project_id is None and not opts.urn:
                raise TypeError("Missing required property 'global_dc_gateway_project_id'")
            __props__.__dict__["global_dc_gateway_project_id"] = global_dc_gateway_project_id
            if global_dc_gateway_region_id is None and not opts.urn:
                raise TypeError("Missing required property 'global_dc_gateway_region_id'")
            __props__.__dict__["global_dc_gateway_region_id"] = global_dc_gateway_region_id
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            __props__.__dict__["state"] = None
        super(CentralNetworkAttachment, __self__).__init__(
            'huaweicloud:Cc/centralNetworkAttachment:CentralNetworkAttachment',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            central_network_id: Optional[pulumi.Input[_builtins.str]] = None,
            central_network_plane_id: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_router_id: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_router_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_router_region_id: Optional[pulumi.Input[_builtins.str]] = None,
            global_dc_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
            global_dc_gateway_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            global_dc_gateway_region_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            state: Optional[pulumi.Input[_builtins.str]] = None) -> 'CentralNetworkAttachment':
        """
        Get an existing CentralNetworkAttachment resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] central_network_id: The central network ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] central_network_plane_id: The central network plane ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] description: The description of the attachment.
        :param pulumi.Input[_builtins.str] enterprise_router_id: The enterprise router ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] enterprise_router_project_id: The project ID to which the enterprise router belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] enterprise_router_region_id: The region ID to which the enterprise router belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] global_dc_gateway_id: The global DC gateway ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] global_dc_gateway_project_id: The project ID to which the global DC gateway belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] global_dc_gateway_region_id: The region ID to which the global DC gateway belongs.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: The name of the attachment.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] state: Central network attachment status.
               The valid values are as follows:
               - **AVAILABLE**
               - **CREATING**
               - **UPDATING**
               - **DELETING**
               - **FREEZING**
               - **UNFREEZING**
               - **RECOVERING**
               - **FAILED**
               - **DELETED**
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CentralNetworkAttachmentState.__new__(_CentralNetworkAttachmentState)

        __props__.__dict__["central_network_id"] = central_network_id
        __props__.__dict__["central_network_plane_id"] = central_network_plane_id
        __props__.__dict__["description"] = description
        __props__.__dict__["enterprise_router_id"] = enterprise_router_id
        __props__.__dict__["enterprise_router_project_id"] = enterprise_router_project_id
        __props__.__dict__["enterprise_router_region_id"] = enterprise_router_region_id
        __props__.__dict__["global_dc_gateway_id"] = global_dc_gateway_id
        __props__.__dict__["global_dc_gateway_project_id"] = global_dc_gateway_project_id
        __props__.__dict__["global_dc_gateway_region_id"] = global_dc_gateway_region_id
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["state"] = state
        return CentralNetworkAttachment(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="centralNetworkId")
    def central_network_id(self) -> pulumi.Output[_builtins.str]:
        """
        The central network ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "central_network_id")

    @_builtins.property
    @pulumi.getter(name="centralNetworkPlaneId")
    def central_network_plane_id(self) -> pulumi.Output[_builtins.str]:
        """
        The central network plane ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "central_network_plane_id")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[_builtins.str]:
        """
        The description of the attachment.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="enterpriseRouterId")
    def enterprise_router_id(self) -> pulumi.Output[_builtins.str]:
        """
        The enterprise router ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_router_id")

    @_builtins.property
    @pulumi.getter(name="enterpriseRouterProjectId")
    def enterprise_router_project_id(self) -> pulumi.Output[_builtins.str]:
        """
        The project ID to which the enterprise router belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_router_project_id")

    @_builtins.property
    @pulumi.getter(name="enterpriseRouterRegionId")
    def enterprise_router_region_id(self) -> pulumi.Output[_builtins.str]:
        """
        The region ID to which the enterprise router belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_router_region_id")

    @_builtins.property
    @pulumi.getter(name="globalDcGatewayId")
    def global_dc_gateway_id(self) -> pulumi.Output[_builtins.str]:
        """
        The global DC gateway ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "global_dc_gateway_id")

    @_builtins.property
    @pulumi.getter(name="globalDcGatewayProjectId")
    def global_dc_gateway_project_id(self) -> pulumi.Output[_builtins.str]:
        """
        The project ID to which the global DC gateway belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "global_dc_gateway_project_id")

    @_builtins.property
    @pulumi.getter(name="globalDcGatewayRegionId")
    def global_dc_gateway_region_id(self) -> pulumi.Output[_builtins.str]:
        """
        The region ID to which the global DC gateway belongs.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "global_dc_gateway_region_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the attachment.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def state(self) -> pulumi.Output[_builtins.str]:
        """
        Central network attachment status.
        The valid values are as follows:
        - **AVAILABLE**
        - **CREATING**
        - **UPDATING**
        - **DELETING**
        - **FREEZING**
        - **UNFREEZING**
        - **RECOVERING**
        - **FAILED**
        - **DELETED**
        """
        return pulumi.get(self, "state")

