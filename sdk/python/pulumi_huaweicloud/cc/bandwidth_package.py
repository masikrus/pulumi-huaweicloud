# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['BandwidthPackageArgs', 'BandwidthPackage']

@pulumi.input_type
class BandwidthPackageArgs:
    def __init__(__self__, *,
                 bandwidth: pulumi.Input[_builtins.int],
                 billing_mode: pulumi.Input[_builtins.str],
                 charge_mode: pulumi.Input[_builtins.str],
                 local_area_id: pulumi.Input[_builtins.str],
                 remote_area_id: pulumi.Input[_builtins.str],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 interflow_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_id: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_type: Optional[pulumi.Input[_builtins.str]] = None,
                 spec_code: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None):
        """
        The set of arguments for constructing a BandwidthPackage resource.
        :param pulumi.Input[_builtins.int] bandwidth: Bandwidth in the bandwidth package.
        :param pulumi.Input[_builtins.str] billing_mode: Billing mode of the bandwidth package.  
               The options are as follows:
               + **3**: pay-per-use for the Chinese Mainland website.
               + **4**: pay-per-use for the International website.
               + **5**: 95th percentile bandwidth billing for the Chinese Mainland website.
               + **6**: 95th percentile bandwidth billing for the International website.
               
               > This argument can only be modified to **5** and **6**.
        :param pulumi.Input[_builtins.str] charge_mode: Billing option of the bandwidth package.  
               Valid value is **bandwidth**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] local_area_id: The local area ID.  
               Valid values are **Chinese-Mainland**, **Asia-Pacific**, **Africa**, **Western-Latin-America**,
               **Eastern-Latin-America** and **Northern-Latin-America**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] remote_area_id: The remote area ID.  
               Valid values are **Chinese-Mainland**, **Asia-Pacific**, **Africa**, **Western-Latin-America**,
               **Eastern-Latin-America** and **Northern-Latin-America**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] description: The description about the bandwidth package.  
               The description can contain a maximum of 85 characters.
        :param pulumi.Input[_builtins.str] enterprise_project_id: ID of the enterprise project that the bandwidth package
               belongs to. Value 0 indicates the default enterprise project.
        :param pulumi.Input[_builtins.str] interflow_mode: Interflow mode of the bandwidth package.
               Valid values are **Area** and **Region**, defaults to **Area**. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: The bandwidth package name.  
               The name can contain a maximum of `64` characters.
        :param pulumi.Input[_builtins.str] project_id: Project ID.
               If omitted, the provider-level project ID will be used.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_id: ID of the resource that the bandwidth package is bound to.
        :param pulumi.Input[_builtins.str] resource_type: Type of the resource that the bandwidth package is bound to.  
               Valid value is **cloud_connection**.
        :param pulumi.Input[_builtins.str] spec_code: Specification code of the bandwidth package.
               Changing this parameter will create a new resource.
               If the value of `interflow_mode` is **Area**, the values are as follows:
               + **bandwidth.aftoela**: Southern Africa-Eastern Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.aftonla**: Southern Africa-Northern Latin America on both the Chinese Mainland website and International
               website.
               + **bandwidth.aftowla**: Southern Africa-Western Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.aptoaf**: Asia Pacific-Southern Africa on the International website.
               + **bandwidth.aptoap**: Asia Pacific on the International website.
               + **bandwidth.aptoela**: Asia Pacific-Eastern Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.aptonla**: Asia Pacific-Northern Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.aptowla**: Asia Pacific-Western Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.cmtoaf**: Chinese mainland-Southern Africa on the International website.
               + **bandwidth.cmtoap**: Chinese mainland-Asia Pacific on the International website.
               + **bandwidth.cmtocm**: Chinese mainland on the International website.
               + **bandwidth.cmtoela**: Chinese mainland-Eastern Latin America on both the Chinese Mainland website and International
               website.
               + **bandwidth.cmtonla**: Chinese mainland-Northern Latin America on both the Chinese Mainland website and International
               website.
               + **bandwidth.cmtowla**: Chinese mainland-Western Latin America on both the Chinese Mainland website and International
               website.
               + **bandwidth.elatoela**: Eastern Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.elatonla**: Eastern Latin America–Northern Latin America on both the Chinese Mainland website and
               International website.
               + **bandwidth.wlatoela**: Western Latin America-Eastern Latin America on both the Chinese Mainland website and
               International website.
               + **bandwidth.wlatonla**: Western Latin America–Northern Latin America on both the Chinese Mainland website and
               International website.
               + **bandwidth.wlatowla**: Western Latin America on both the Chinese Mainland website and International website.
               
               If the value of `interflow_mode` is **Region**, the value depends on the specified interflow regions, e.g. **Beijing4toGuangzhou**.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: The key/value pairs to associate with the bandwidth package.
        """
        pulumi.set(__self__, "bandwidth", bandwidth)
        pulumi.set(__self__, "billing_mode", billing_mode)
        pulumi.set(__self__, "charge_mode", charge_mode)
        pulumi.set(__self__, "local_area_id", local_area_id)
        pulumi.set(__self__, "remote_area_id", remote_area_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if interflow_mode is not None:
            pulumi.set(__self__, "interflow_mode", interflow_mode)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if resource_id is not None:
            pulumi.set(__self__, "resource_id", resource_id)
        if resource_type is not None:
            pulumi.set(__self__, "resource_type", resource_type)
        if spec_code is not None:
            pulumi.set(__self__, "spec_code", spec_code)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter
    def bandwidth(self) -> pulumi.Input[_builtins.int]:
        """
        Bandwidth in the bandwidth package.
        """
        return pulumi.get(self, "bandwidth")

    @bandwidth.setter
    def bandwidth(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "bandwidth", value)

    @_builtins.property
    @pulumi.getter(name="billingMode")
    def billing_mode(self) -> pulumi.Input[_builtins.str]:
        """
        Billing mode of the bandwidth package.  
        The options are as follows:
        + **3**: pay-per-use for the Chinese Mainland website.
        + **4**: pay-per-use for the International website.
        + **5**: 95th percentile bandwidth billing for the Chinese Mainland website.
        + **6**: 95th percentile bandwidth billing for the International website.

        > This argument can only be modified to **5** and **6**.
        """
        return pulumi.get(self, "billing_mode")

    @billing_mode.setter
    def billing_mode(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "billing_mode", value)

    @_builtins.property
    @pulumi.getter(name="chargeMode")
    def charge_mode(self) -> pulumi.Input[_builtins.str]:
        """
        Billing option of the bandwidth package.  
        Valid value is **bandwidth**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "charge_mode")

    @charge_mode.setter
    def charge_mode(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "charge_mode", value)

    @_builtins.property
    @pulumi.getter(name="localAreaId")
    def local_area_id(self) -> pulumi.Input[_builtins.str]:
        """
        The local area ID.  
        Valid values are **Chinese-Mainland**, **Asia-Pacific**, **Africa**, **Western-Latin-America**,
        **Eastern-Latin-America** and **Northern-Latin-America**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "local_area_id")

    @local_area_id.setter
    def local_area_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "local_area_id", value)

    @_builtins.property
    @pulumi.getter(name="remoteAreaId")
    def remote_area_id(self) -> pulumi.Input[_builtins.str]:
        """
        The remote area ID.  
        Valid values are **Chinese-Mainland**, **Asia-Pacific**, **Africa**, **Western-Latin-America**,
        **Eastern-Latin-America** and **Northern-Latin-America**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "remote_area_id")

    @remote_area_id.setter
    def remote_area_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "remote_area_id", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description about the bandwidth package.  
        The description can contain a maximum of 85 characters.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        ID of the enterprise project that the bandwidth package
        belongs to. Value 0 indicates the default enterprise project.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="interflowMode")
    def interflow_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Interflow mode of the bandwidth package.
        Valid values are **Area** and **Region**, defaults to **Area**. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "interflow_mode")

    @interflow_mode.setter
    def interflow_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "interflow_mode", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The bandwidth package name.  
        The name can contain a maximum of `64` characters.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Project ID.
        If omitted, the provider-level project ID will be used.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "project_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        ID of the resource that the bandwidth package is bound to.
        """
        return pulumi.get(self, "resource_id")

    @resource_id.setter
    def resource_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_id", value)

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Type of the resource that the bandwidth package is bound to.  
        Valid value is **cloud_connection**.
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_type", value)

    @_builtins.property
    @pulumi.getter(name="specCode")
    def spec_code(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specification code of the bandwidth package.
        Changing this parameter will create a new resource.
        If the value of `interflow_mode` is **Area**, the values are as follows:
        + **bandwidth.aftoela**: Southern Africa-Eastern Latin America on both the Chinese Mainland website and International website.
        + **bandwidth.aftonla**: Southern Africa-Northern Latin America on both the Chinese Mainland website and International
        website.
        + **bandwidth.aftowla**: Southern Africa-Western Latin America on both the Chinese Mainland website and International website.
        + **bandwidth.aptoaf**: Asia Pacific-Southern Africa on the International website.
        + **bandwidth.aptoap**: Asia Pacific on the International website.
        + **bandwidth.aptoela**: Asia Pacific-Eastern Latin America on both the Chinese Mainland website and International website.
        + **bandwidth.aptonla**: Asia Pacific-Northern Latin America on both the Chinese Mainland website and International website.
        + **bandwidth.aptowla**: Asia Pacific-Western Latin America on both the Chinese Mainland website and International website.
        + **bandwidth.cmtoaf**: Chinese mainland-Southern Africa on the International website.
        + **bandwidth.cmtoap**: Chinese mainland-Asia Pacific on the International website.
        + **bandwidth.cmtocm**: Chinese mainland on the International website.
        + **bandwidth.cmtoela**: Chinese mainland-Eastern Latin America on both the Chinese Mainland website and International
        website.
        + **bandwidth.cmtonla**: Chinese mainland-Northern Latin America on both the Chinese Mainland website and International
        website.
        + **bandwidth.cmtowla**: Chinese mainland-Western Latin America on both the Chinese Mainland website and International
        website.
        + **bandwidth.elatoela**: Eastern Latin America on both the Chinese Mainland website and International website.
        + **bandwidth.elatonla**: Eastern Latin America–Northern Latin America on both the Chinese Mainland website and
        International website.
        + **bandwidth.wlatoela**: Western Latin America-Eastern Latin America on both the Chinese Mainland website and
        International website.
        + **bandwidth.wlatonla**: Western Latin America–Northern Latin America on both the Chinese Mainland website and
        International website.
        + **bandwidth.wlatowla**: Western Latin America on both the Chinese Mainland website and International website.

        If the value of `interflow_mode` is **Region**, the value depends on the specified interflow regions, e.g. **Beijing4toGuangzhou**.
        """
        return pulumi.get(self, "spec_code")

    @spec_code.setter
    def spec_code(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "spec_code", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        The key/value pairs to associate with the bandwidth package.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _BandwidthPackageState:
    def __init__(__self__, *,
                 bandwidth: Optional[pulumi.Input[_builtins.int]] = None,
                 billing_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 charge_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 interflow_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 local_area_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 remote_area_id: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_id: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_type: Optional[pulumi.Input[_builtins.str]] = None,
                 spec_code: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None):
        """
        Input properties used for looking up and filtering BandwidthPackage resources.
        :param pulumi.Input[_builtins.int] bandwidth: Bandwidth in the bandwidth package.
        :param pulumi.Input[_builtins.str] billing_mode: Billing mode of the bandwidth package.  
               The options are as follows:
               + **3**: pay-per-use for the Chinese Mainland website.
               + **4**: pay-per-use for the International website.
               + **5**: 95th percentile bandwidth billing for the Chinese Mainland website.
               + **6**: 95th percentile bandwidth billing for the International website.
               
               > This argument can only be modified to **5** and **6**.
        :param pulumi.Input[_builtins.str] charge_mode: Billing option of the bandwidth package.  
               Valid value is **bandwidth**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] description: The description about the bandwidth package.  
               The description can contain a maximum of 85 characters.
        :param pulumi.Input[_builtins.str] enterprise_project_id: ID of the enterprise project that the bandwidth package
               belongs to. Value 0 indicates the default enterprise project.
        :param pulumi.Input[_builtins.str] interflow_mode: Interflow mode of the bandwidth package.
               Valid values are **Area** and **Region**, defaults to **Area**. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] local_area_id: The local area ID.  
               Valid values are **Chinese-Mainland**, **Asia-Pacific**, **Africa**, **Western-Latin-America**,
               **Eastern-Latin-America** and **Northern-Latin-America**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: The bandwidth package name.  
               The name can contain a maximum of `64` characters.
        :param pulumi.Input[_builtins.str] project_id: Project ID.
               If omitted, the provider-level project ID will be used.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] remote_area_id: The remote area ID.  
               Valid values are **Chinese-Mainland**, **Asia-Pacific**, **Africa**, **Western-Latin-America**,
               **Eastern-Latin-America** and **Northern-Latin-America**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_id: ID of the resource that the bandwidth package is bound to.
        :param pulumi.Input[_builtins.str] resource_type: Type of the resource that the bandwidth package is bound to.  
               Valid value is **cloud_connection**.
        :param pulumi.Input[_builtins.str] spec_code: Specification code of the bandwidth package.
               Changing this parameter will create a new resource.
               If the value of `interflow_mode` is **Area**, the values are as follows:
               + **bandwidth.aftoela**: Southern Africa-Eastern Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.aftonla**: Southern Africa-Northern Latin America on both the Chinese Mainland website and International
               website.
               + **bandwidth.aftowla**: Southern Africa-Western Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.aptoaf**: Asia Pacific-Southern Africa on the International website.
               + **bandwidth.aptoap**: Asia Pacific on the International website.
               + **bandwidth.aptoela**: Asia Pacific-Eastern Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.aptonla**: Asia Pacific-Northern Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.aptowla**: Asia Pacific-Western Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.cmtoaf**: Chinese mainland-Southern Africa on the International website.
               + **bandwidth.cmtoap**: Chinese mainland-Asia Pacific on the International website.
               + **bandwidth.cmtocm**: Chinese mainland on the International website.
               + **bandwidth.cmtoela**: Chinese mainland-Eastern Latin America on both the Chinese Mainland website and International
               website.
               + **bandwidth.cmtonla**: Chinese mainland-Northern Latin America on both the Chinese Mainland website and International
               website.
               + **bandwidth.cmtowla**: Chinese mainland-Western Latin America on both the Chinese Mainland website and International
               website.
               + **bandwidth.elatoela**: Eastern Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.elatonla**: Eastern Latin America–Northern Latin America on both the Chinese Mainland website and
               International website.
               + **bandwidth.wlatoela**: Western Latin America-Eastern Latin America on both the Chinese Mainland website and
               International website.
               + **bandwidth.wlatonla**: Western Latin America–Northern Latin America on both the Chinese Mainland website and
               International website.
               + **bandwidth.wlatowla**: Western Latin America on both the Chinese Mainland website and International website.
               
               If the value of `interflow_mode` is **Region**, the value depends on the specified interflow regions, e.g. **Beijing4toGuangzhou**.
        :param pulumi.Input[_builtins.str] status: Bandwidth package status.  
               The valid value are as follows:
               + **ACTIVE**: Bandwidth packages are available.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: The key/value pairs to associate with the bandwidth package.
        """
        if bandwidth is not None:
            pulumi.set(__self__, "bandwidth", bandwidth)
        if billing_mode is not None:
            pulumi.set(__self__, "billing_mode", billing_mode)
        if charge_mode is not None:
            pulumi.set(__self__, "charge_mode", charge_mode)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if interflow_mode is not None:
            pulumi.set(__self__, "interflow_mode", interflow_mode)
        if local_area_id is not None:
            pulumi.set(__self__, "local_area_id", local_area_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if remote_area_id is not None:
            pulumi.set(__self__, "remote_area_id", remote_area_id)
        if resource_id is not None:
            pulumi.set(__self__, "resource_id", resource_id)
        if resource_type is not None:
            pulumi.set(__self__, "resource_type", resource_type)
        if spec_code is not None:
            pulumi.set(__self__, "spec_code", spec_code)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter
    def bandwidth(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Bandwidth in the bandwidth package.
        """
        return pulumi.get(self, "bandwidth")

    @bandwidth.setter
    def bandwidth(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "bandwidth", value)

    @_builtins.property
    @pulumi.getter(name="billingMode")
    def billing_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Billing mode of the bandwidth package.  
        The options are as follows:
        + **3**: pay-per-use for the Chinese Mainland website.
        + **4**: pay-per-use for the International website.
        + **5**: 95th percentile bandwidth billing for the Chinese Mainland website.
        + **6**: 95th percentile bandwidth billing for the International website.

        > This argument can only be modified to **5** and **6**.
        """
        return pulumi.get(self, "billing_mode")

    @billing_mode.setter
    def billing_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "billing_mode", value)

    @_builtins.property
    @pulumi.getter(name="chargeMode")
    def charge_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Billing option of the bandwidth package.  
        Valid value is **bandwidth**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "charge_mode")

    @charge_mode.setter
    def charge_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "charge_mode", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description about the bandwidth package.  
        The description can contain a maximum of 85 characters.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        ID of the enterprise project that the bandwidth package
        belongs to. Value 0 indicates the default enterprise project.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="interflowMode")
    def interflow_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Interflow mode of the bandwidth package.
        Valid values are **Area** and **Region**, defaults to **Area**. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "interflow_mode")

    @interflow_mode.setter
    def interflow_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "interflow_mode", value)

    @_builtins.property
    @pulumi.getter(name="localAreaId")
    def local_area_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The local area ID.  
        Valid values are **Chinese-Mainland**, **Asia-Pacific**, **Africa**, **Western-Latin-America**,
        **Eastern-Latin-America** and **Northern-Latin-America**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "local_area_id")

    @local_area_id.setter
    def local_area_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "local_area_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The bandwidth package name.  
        The name can contain a maximum of `64` characters.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Project ID.
        If omitted, the provider-level project ID will be used.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "project_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="remoteAreaId")
    def remote_area_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The remote area ID.  
        Valid values are **Chinese-Mainland**, **Asia-Pacific**, **Africa**, **Western-Latin-America**,
        **Eastern-Latin-America** and **Northern-Latin-America**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "remote_area_id")

    @remote_area_id.setter
    def remote_area_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "remote_area_id", value)

    @_builtins.property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        ID of the resource that the bandwidth package is bound to.
        """
        return pulumi.get(self, "resource_id")

    @resource_id.setter
    def resource_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_id", value)

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Type of the resource that the bandwidth package is bound to.  
        Valid value is **cloud_connection**.
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_type", value)

    @_builtins.property
    @pulumi.getter(name="specCode")
    def spec_code(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specification code of the bandwidth package.
        Changing this parameter will create a new resource.
        If the value of `interflow_mode` is **Area**, the values are as follows:
        + **bandwidth.aftoela**: Southern Africa-Eastern Latin America on both the Chinese Mainland website and International website.
        + **bandwidth.aftonla**: Southern Africa-Northern Latin America on both the Chinese Mainland website and International
        website.
        + **bandwidth.aftowla**: Southern Africa-Western Latin America on both the Chinese Mainland website and International website.
        + **bandwidth.aptoaf**: Asia Pacific-Southern Africa on the International website.
        + **bandwidth.aptoap**: Asia Pacific on the International website.
        + **bandwidth.aptoela**: Asia Pacific-Eastern Latin America on both the Chinese Mainland website and International website.
        + **bandwidth.aptonla**: Asia Pacific-Northern Latin America on both the Chinese Mainland website and International website.
        + **bandwidth.aptowla**: Asia Pacific-Western Latin America on both the Chinese Mainland website and International website.
        + **bandwidth.cmtoaf**: Chinese mainland-Southern Africa on the International website.
        + **bandwidth.cmtoap**: Chinese mainland-Asia Pacific on the International website.
        + **bandwidth.cmtocm**: Chinese mainland on the International website.
        + **bandwidth.cmtoela**: Chinese mainland-Eastern Latin America on both the Chinese Mainland website and International
        website.
        + **bandwidth.cmtonla**: Chinese mainland-Northern Latin America on both the Chinese Mainland website and International
        website.
        + **bandwidth.cmtowla**: Chinese mainland-Western Latin America on both the Chinese Mainland website and International
        website.
        + **bandwidth.elatoela**: Eastern Latin America on both the Chinese Mainland website and International website.
        + **bandwidth.elatonla**: Eastern Latin America–Northern Latin America on both the Chinese Mainland website and
        International website.
        + **bandwidth.wlatoela**: Western Latin America-Eastern Latin America on both the Chinese Mainland website and
        International website.
        + **bandwidth.wlatonla**: Western Latin America–Northern Latin America on both the Chinese Mainland website and
        International website.
        + **bandwidth.wlatowla**: Western Latin America on both the Chinese Mainland website and International website.

        If the value of `interflow_mode` is **Region**, the value depends on the specified interflow regions, e.g. **Beijing4toGuangzhou**.
        """
        return pulumi.get(self, "spec_code")

    @spec_code.setter
    def spec_code(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "spec_code", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Bandwidth package status.  
        The valid value are as follows:
        + **ACTIVE**: Bandwidth packages are available.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        The key/value pairs to associate with the bandwidth package.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.type_token("huaweicloud:Cc/bandwidthPackage:BandwidthPackage")
class BandwidthPackage(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bandwidth: Optional[pulumi.Input[_builtins.int]] = None,
                 billing_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 charge_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 interflow_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 local_area_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 remote_area_id: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_id: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_type: Optional[pulumi.Input[_builtins.str]] = None,
                 spec_code: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        """
        Manages a bandwidth package resource of Cloud Connect within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        test = huaweicloud.cc.BandwidthPackage("test",
            name="demo",
            local_area_id="Chinese-Mainland",
            remote_area_id="Chinese-Mainland",
            charge_mode="bandwidth",
            billing_mode="3",
            bandwidth=5,
            description="This is a demo",
            tags={
                "foo": "bar",
                "key": "value",
            })
        ```

        ## Import

        The bandwidth package can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Cc/bandwidthPackage:BandwidthPackage test 0ce123456a00f2591fabc00385ff1234
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.int] bandwidth: Bandwidth in the bandwidth package.
        :param pulumi.Input[_builtins.str] billing_mode: Billing mode of the bandwidth package.  
               The options are as follows:
               + **3**: pay-per-use for the Chinese Mainland website.
               + **4**: pay-per-use for the International website.
               + **5**: 95th percentile bandwidth billing for the Chinese Mainland website.
               + **6**: 95th percentile bandwidth billing for the International website.
               
               > This argument can only be modified to **5** and **6**.
        :param pulumi.Input[_builtins.str] charge_mode: Billing option of the bandwidth package.  
               Valid value is **bandwidth**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] description: The description about the bandwidth package.  
               The description can contain a maximum of 85 characters.
        :param pulumi.Input[_builtins.str] enterprise_project_id: ID of the enterprise project that the bandwidth package
               belongs to. Value 0 indicates the default enterprise project.
        :param pulumi.Input[_builtins.str] interflow_mode: Interflow mode of the bandwidth package.
               Valid values are **Area** and **Region**, defaults to **Area**. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] local_area_id: The local area ID.  
               Valid values are **Chinese-Mainland**, **Asia-Pacific**, **Africa**, **Western-Latin-America**,
               **Eastern-Latin-America** and **Northern-Latin-America**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: The bandwidth package name.  
               The name can contain a maximum of `64` characters.
        :param pulumi.Input[_builtins.str] project_id: Project ID.
               If omitted, the provider-level project ID will be used.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] remote_area_id: The remote area ID.  
               Valid values are **Chinese-Mainland**, **Asia-Pacific**, **Africa**, **Western-Latin-America**,
               **Eastern-Latin-America** and **Northern-Latin-America**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_id: ID of the resource that the bandwidth package is bound to.
        :param pulumi.Input[_builtins.str] resource_type: Type of the resource that the bandwidth package is bound to.  
               Valid value is **cloud_connection**.
        :param pulumi.Input[_builtins.str] spec_code: Specification code of the bandwidth package.
               Changing this parameter will create a new resource.
               If the value of `interflow_mode` is **Area**, the values are as follows:
               + **bandwidth.aftoela**: Southern Africa-Eastern Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.aftonla**: Southern Africa-Northern Latin America on both the Chinese Mainland website and International
               website.
               + **bandwidth.aftowla**: Southern Africa-Western Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.aptoaf**: Asia Pacific-Southern Africa on the International website.
               + **bandwidth.aptoap**: Asia Pacific on the International website.
               + **bandwidth.aptoela**: Asia Pacific-Eastern Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.aptonla**: Asia Pacific-Northern Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.aptowla**: Asia Pacific-Western Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.cmtoaf**: Chinese mainland-Southern Africa on the International website.
               + **bandwidth.cmtoap**: Chinese mainland-Asia Pacific on the International website.
               + **bandwidth.cmtocm**: Chinese mainland on the International website.
               + **bandwidth.cmtoela**: Chinese mainland-Eastern Latin America on both the Chinese Mainland website and International
               website.
               + **bandwidth.cmtonla**: Chinese mainland-Northern Latin America on both the Chinese Mainland website and International
               website.
               + **bandwidth.cmtowla**: Chinese mainland-Western Latin America on both the Chinese Mainland website and International
               website.
               + **bandwidth.elatoela**: Eastern Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.elatonla**: Eastern Latin America–Northern Latin America on both the Chinese Mainland website and
               International website.
               + **bandwidth.wlatoela**: Western Latin America-Eastern Latin America on both the Chinese Mainland website and
               International website.
               + **bandwidth.wlatonla**: Western Latin America–Northern Latin America on both the Chinese Mainland website and
               International website.
               + **bandwidth.wlatowla**: Western Latin America on both the Chinese Mainland website and International website.
               
               If the value of `interflow_mode` is **Region**, the value depends on the specified interflow regions, e.g. **Beijing4toGuangzhou**.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: The key/value pairs to associate with the bandwidth package.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: BandwidthPackageArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a bandwidth package resource of Cloud Connect within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        test = huaweicloud.cc.BandwidthPackage("test",
            name="demo",
            local_area_id="Chinese-Mainland",
            remote_area_id="Chinese-Mainland",
            charge_mode="bandwidth",
            billing_mode="3",
            bandwidth=5,
            description="This is a demo",
            tags={
                "foo": "bar",
                "key": "value",
            })
        ```

        ## Import

        The bandwidth package can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Cc/bandwidthPackage:BandwidthPackage test 0ce123456a00f2591fabc00385ff1234
        ```

        :param str resource_name: The name of the resource.
        :param BandwidthPackageArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(BandwidthPackageArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bandwidth: Optional[pulumi.Input[_builtins.int]] = None,
                 billing_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 charge_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 interflow_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 local_area_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 remote_area_id: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_id: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_type: Optional[pulumi.Input[_builtins.str]] = None,
                 spec_code: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = BandwidthPackageArgs.__new__(BandwidthPackageArgs)

            if bandwidth is None and not opts.urn:
                raise TypeError("Missing required property 'bandwidth'")
            __props__.__dict__["bandwidth"] = bandwidth
            if billing_mode is None and not opts.urn:
                raise TypeError("Missing required property 'billing_mode'")
            __props__.__dict__["billing_mode"] = billing_mode
            if charge_mode is None and not opts.urn:
                raise TypeError("Missing required property 'charge_mode'")
            __props__.__dict__["charge_mode"] = charge_mode
            __props__.__dict__["description"] = description
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            __props__.__dict__["interflow_mode"] = interflow_mode
            if local_area_id is None and not opts.urn:
                raise TypeError("Missing required property 'local_area_id'")
            __props__.__dict__["local_area_id"] = local_area_id
            __props__.__dict__["name"] = name
            __props__.__dict__["project_id"] = project_id
            __props__.__dict__["region"] = region
            if remote_area_id is None and not opts.urn:
                raise TypeError("Missing required property 'remote_area_id'")
            __props__.__dict__["remote_area_id"] = remote_area_id
            __props__.__dict__["resource_id"] = resource_id
            __props__.__dict__["resource_type"] = resource_type
            __props__.__dict__["spec_code"] = spec_code
            __props__.__dict__["tags"] = tags
            __props__.__dict__["status"] = None
        super(BandwidthPackage, __self__).__init__(
            'huaweicloud:Cc/bandwidthPackage:BandwidthPackage',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            bandwidth: Optional[pulumi.Input[_builtins.int]] = None,
            billing_mode: Optional[pulumi.Input[_builtins.str]] = None,
            charge_mode: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            interflow_mode: Optional[pulumi.Input[_builtins.str]] = None,
            local_area_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            project_id: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            remote_area_id: Optional[pulumi.Input[_builtins.str]] = None,
            resource_id: Optional[pulumi.Input[_builtins.str]] = None,
            resource_type: Optional[pulumi.Input[_builtins.str]] = None,
            spec_code: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None) -> 'BandwidthPackage':
        """
        Get an existing BandwidthPackage resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.int] bandwidth: Bandwidth in the bandwidth package.
        :param pulumi.Input[_builtins.str] billing_mode: Billing mode of the bandwidth package.  
               The options are as follows:
               + **3**: pay-per-use for the Chinese Mainland website.
               + **4**: pay-per-use for the International website.
               + **5**: 95th percentile bandwidth billing for the Chinese Mainland website.
               + **6**: 95th percentile bandwidth billing for the International website.
               
               > This argument can only be modified to **5** and **6**.
        :param pulumi.Input[_builtins.str] charge_mode: Billing option of the bandwidth package.  
               Valid value is **bandwidth**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] description: The description about the bandwidth package.  
               The description can contain a maximum of 85 characters.
        :param pulumi.Input[_builtins.str] enterprise_project_id: ID of the enterprise project that the bandwidth package
               belongs to. Value 0 indicates the default enterprise project.
        :param pulumi.Input[_builtins.str] interflow_mode: Interflow mode of the bandwidth package.
               Valid values are **Area** and **Region**, defaults to **Area**. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] local_area_id: The local area ID.  
               Valid values are **Chinese-Mainland**, **Asia-Pacific**, **Africa**, **Western-Latin-America**,
               **Eastern-Latin-America** and **Northern-Latin-America**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: The bandwidth package name.  
               The name can contain a maximum of `64` characters.
        :param pulumi.Input[_builtins.str] project_id: Project ID.
               If omitted, the provider-level project ID will be used.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] remote_area_id: The remote area ID.  
               Valid values are **Chinese-Mainland**, **Asia-Pacific**, **Africa**, **Western-Latin-America**,
               **Eastern-Latin-America** and **Northern-Latin-America**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] resource_id: ID of the resource that the bandwidth package is bound to.
        :param pulumi.Input[_builtins.str] resource_type: Type of the resource that the bandwidth package is bound to.  
               Valid value is **cloud_connection**.
        :param pulumi.Input[_builtins.str] spec_code: Specification code of the bandwidth package.
               Changing this parameter will create a new resource.
               If the value of `interflow_mode` is **Area**, the values are as follows:
               + **bandwidth.aftoela**: Southern Africa-Eastern Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.aftonla**: Southern Africa-Northern Latin America on both the Chinese Mainland website and International
               website.
               + **bandwidth.aftowla**: Southern Africa-Western Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.aptoaf**: Asia Pacific-Southern Africa on the International website.
               + **bandwidth.aptoap**: Asia Pacific on the International website.
               + **bandwidth.aptoela**: Asia Pacific-Eastern Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.aptonla**: Asia Pacific-Northern Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.aptowla**: Asia Pacific-Western Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.cmtoaf**: Chinese mainland-Southern Africa on the International website.
               + **bandwidth.cmtoap**: Chinese mainland-Asia Pacific on the International website.
               + **bandwidth.cmtocm**: Chinese mainland on the International website.
               + **bandwidth.cmtoela**: Chinese mainland-Eastern Latin America on both the Chinese Mainland website and International
               website.
               + **bandwidth.cmtonla**: Chinese mainland-Northern Latin America on both the Chinese Mainland website and International
               website.
               + **bandwidth.cmtowla**: Chinese mainland-Western Latin America on both the Chinese Mainland website and International
               website.
               + **bandwidth.elatoela**: Eastern Latin America on both the Chinese Mainland website and International website.
               + **bandwidth.elatonla**: Eastern Latin America–Northern Latin America on both the Chinese Mainland website and
               International website.
               + **bandwidth.wlatoela**: Western Latin America-Eastern Latin America on both the Chinese Mainland website and
               International website.
               + **bandwidth.wlatonla**: Western Latin America–Northern Latin America on both the Chinese Mainland website and
               International website.
               + **bandwidth.wlatowla**: Western Latin America on both the Chinese Mainland website and International website.
               
               If the value of `interflow_mode` is **Region**, the value depends on the specified interflow regions, e.g. **Beijing4toGuangzhou**.
        :param pulumi.Input[_builtins.str] status: Bandwidth package status.  
               The valid value are as follows:
               + **ACTIVE**: Bandwidth packages are available.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: The key/value pairs to associate with the bandwidth package.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _BandwidthPackageState.__new__(_BandwidthPackageState)

        __props__.__dict__["bandwidth"] = bandwidth
        __props__.__dict__["billing_mode"] = billing_mode
        __props__.__dict__["charge_mode"] = charge_mode
        __props__.__dict__["description"] = description
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["interflow_mode"] = interflow_mode
        __props__.__dict__["local_area_id"] = local_area_id
        __props__.__dict__["name"] = name
        __props__.__dict__["project_id"] = project_id
        __props__.__dict__["region"] = region
        __props__.__dict__["remote_area_id"] = remote_area_id
        __props__.__dict__["resource_id"] = resource_id
        __props__.__dict__["resource_type"] = resource_type
        __props__.__dict__["spec_code"] = spec_code
        __props__.__dict__["status"] = status
        __props__.__dict__["tags"] = tags
        return BandwidthPackage(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def bandwidth(self) -> pulumi.Output[_builtins.int]:
        """
        Bandwidth in the bandwidth package.
        """
        return pulumi.get(self, "bandwidth")

    @_builtins.property
    @pulumi.getter(name="billingMode")
    def billing_mode(self) -> pulumi.Output[_builtins.str]:
        """
        Billing mode of the bandwidth package.  
        The options are as follows:
        + **3**: pay-per-use for the Chinese Mainland website.
        + **4**: pay-per-use for the International website.
        + **5**: 95th percentile bandwidth billing for the Chinese Mainland website.
        + **6**: 95th percentile bandwidth billing for the International website.

        > This argument can only be modified to **5** and **6**.
        """
        return pulumi.get(self, "billing_mode")

    @_builtins.property
    @pulumi.getter(name="chargeMode")
    def charge_mode(self) -> pulumi.Output[_builtins.str]:
        """
        Billing option of the bandwidth package.  
        Valid value is **bandwidth**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "charge_mode")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[_builtins.str]:
        """
        The description about the bandwidth package.  
        The description can contain a maximum of 85 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[_builtins.str]:
        """
        ID of the enterprise project that the bandwidth package
        belongs to. Value 0 indicates the default enterprise project.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="interflowMode")
    def interflow_mode(self) -> pulumi.Output[_builtins.str]:
        """
        Interflow mode of the bandwidth package.
        Valid values are **Area** and **Region**, defaults to **Area**. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "interflow_mode")

    @_builtins.property
    @pulumi.getter(name="localAreaId")
    def local_area_id(self) -> pulumi.Output[_builtins.str]:
        """
        The local area ID.  
        Valid values are **Chinese-Mainland**, **Asia-Pacific**, **Africa**, **Western-Latin-America**,
        **Eastern-Latin-America** and **Northern-Latin-America**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "local_area_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The bandwidth package name.  
        The name can contain a maximum of `64` characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Output[_builtins.str]:
        """
        Project ID.
        If omitted, the provider-level project ID will be used.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "project_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="remoteAreaId")
    def remote_area_id(self) -> pulumi.Output[_builtins.str]:
        """
        The remote area ID.  
        Valid values are **Chinese-Mainland**, **Asia-Pacific**, **Africa**, **Western-Latin-America**,
        **Eastern-Latin-America** and **Northern-Latin-America**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "remote_area_id")

    @_builtins.property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> pulumi.Output[_builtins.str]:
        """
        ID of the resource that the bandwidth package is bound to.
        """
        return pulumi.get(self, "resource_id")

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> pulumi.Output[_builtins.str]:
        """
        Type of the resource that the bandwidth package is bound to.  
        Valid value is **cloud_connection**.
        """
        return pulumi.get(self, "resource_type")

    @_builtins.property
    @pulumi.getter(name="specCode")
    def spec_code(self) -> pulumi.Output[_builtins.str]:
        """
        Specification code of the bandwidth package.
        Changing this parameter will create a new resource.
        If the value of `interflow_mode` is **Area**, the values are as follows:
        + **bandwidth.aftoela**: Southern Africa-Eastern Latin America on both the Chinese Mainland website and International website.
        + **bandwidth.aftonla**: Southern Africa-Northern Latin America on both the Chinese Mainland website and International
        website.
        + **bandwidth.aftowla**: Southern Africa-Western Latin America on both the Chinese Mainland website and International website.
        + **bandwidth.aptoaf**: Asia Pacific-Southern Africa on the International website.
        + **bandwidth.aptoap**: Asia Pacific on the International website.
        + **bandwidth.aptoela**: Asia Pacific-Eastern Latin America on both the Chinese Mainland website and International website.
        + **bandwidth.aptonla**: Asia Pacific-Northern Latin America on both the Chinese Mainland website and International website.
        + **bandwidth.aptowla**: Asia Pacific-Western Latin America on both the Chinese Mainland website and International website.
        + **bandwidth.cmtoaf**: Chinese mainland-Southern Africa on the International website.
        + **bandwidth.cmtoap**: Chinese mainland-Asia Pacific on the International website.
        + **bandwidth.cmtocm**: Chinese mainland on the International website.
        + **bandwidth.cmtoela**: Chinese mainland-Eastern Latin America on both the Chinese Mainland website and International
        website.
        + **bandwidth.cmtonla**: Chinese mainland-Northern Latin America on both the Chinese Mainland website and International
        website.
        + **bandwidth.cmtowla**: Chinese mainland-Western Latin America on both the Chinese Mainland website and International
        website.
        + **bandwidth.elatoela**: Eastern Latin America on both the Chinese Mainland website and International website.
        + **bandwidth.elatonla**: Eastern Latin America–Northern Latin America on both the Chinese Mainland website and
        International website.
        + **bandwidth.wlatoela**: Western Latin America-Eastern Latin America on both the Chinese Mainland website and
        International website.
        + **bandwidth.wlatonla**: Western Latin America–Northern Latin America on both the Chinese Mainland website and
        International website.
        + **bandwidth.wlatowla**: Western Latin America on both the Chinese Mainland website and International website.

        If the value of `interflow_mode` is **Region**, the value depends on the specified interflow regions, e.g. **Beijing4toGuangzhou**.
        """
        return pulumi.get(self, "spec_code")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        Bandwidth package status.  
        The valid value are as follows:
        + **ACTIVE**: Bandwidth packages are available.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Mapping[str, _builtins.str]]:
        """
        The key/value pairs to associate with the bandwidth package.
        """
        return pulumi.get(self, "tags")

