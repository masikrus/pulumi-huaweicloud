# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['AccountArgs', 'Account']

@pulumi.input_type
class AccountArgs:
    def __init__(__self__, *,
                 instance_id: pulumi.Input[_builtins.str],
                 password: pulumi.Input[_builtins.str],
                 permissions: pulumi.Input[Sequence[pulumi.Input[_builtins.str]]],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 schemas: Optional[pulumi.Input[Sequence[pulumi.Input['AccountSchemaArgs']]]] = None):
        """
        The set of arguments for constructing a Account resource.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of a DDM instance.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] password: Specifies the DDM account password.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] permissions: Specifies the basic permissions of the DDM account. Value options: **CREATE**
               **DROP**、**ALTER**、**INDEX**、**INSERT**、**DELETE**、**UPDATE**、**SELECT**.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the DDM account.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the associated schema.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input['AccountSchemaArgs']]] schemas: Specifies the schemas that associated with the account.
               The Schema structure is documented below.
               
               <a name="DdmAccount_Schema"></a>
               The `Schema` block supports:
        """
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "permissions", permissions)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if schemas is not None:
            pulumi.set(__self__, "schemas", schemas)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of a DDM instance.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter
    def password(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the DDM account password.
        """
        return pulumi.get(self, "password")

    @password.setter
    def password(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "password", value)

    @_builtins.property
    @pulumi.getter
    def permissions(self) -> pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]:
        """
        Specifies the basic permissions of the DDM account. Value options: **CREATE**
        **DROP**、**ALTER**、**INDEX**、**INSERT**、**DELETE**、**UPDATE**、**SELECT**.
        """
        return pulumi.get(self, "permissions")

    @permissions.setter
    def permissions(self, value: pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]):
        pulumi.set(self, "permissions", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the DDM account.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the associated schema.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def schemas(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AccountSchemaArgs']]]]:
        """
        Specifies the schemas that associated with the account.
        The Schema structure is documented below.

        <a name="DdmAccount_Schema"></a>
        The `Schema` block supports:
        """
        return pulumi.get(self, "schemas")

    @schemas.setter
    def schemas(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AccountSchemaArgs']]]]):
        pulumi.set(self, "schemas", value)


@pulumi.input_type
class _AccountState:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 password: Optional[pulumi.Input[_builtins.str]] = None,
                 permissions: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 schemas: Optional[pulumi.Input[Sequence[pulumi.Input['AccountSchemaArgs']]]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering Account resources.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the DDM account.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of a DDM instance.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the associated schema.
        :param pulumi.Input[_builtins.str] password: Specifies the DDM account password.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] permissions: Specifies the basic permissions of the DDM account. Value options: **CREATE**
               **DROP**、**ALTER**、**INDEX**、**INSERT**、**DELETE**、**UPDATE**、**SELECT**.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input['AccountSchemaArgs']]] schemas: Specifies the schemas that associated with the account.
               The Schema structure is documented below.
               
               <a name="DdmAccount_Schema"></a>
               The `Schema` block supports:
        :param pulumi.Input[_builtins.str] status: Indicates the status of the DDM account.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if password is not None:
            pulumi.set(__self__, "password", password)
        if permissions is not None:
            pulumi.set(__self__, "permissions", permissions)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if schemas is not None:
            pulumi.set(__self__, "schemas", schemas)
        if status is not None:
            pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the DDM account.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of a DDM instance.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the associated schema.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def password(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the DDM account password.
        """
        return pulumi.get(self, "password")

    @password.setter
    def password(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "password", value)

    @_builtins.property
    @pulumi.getter
    def permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the basic permissions of the DDM account. Value options: **CREATE**
        **DROP**、**ALTER**、**INDEX**、**INSERT**、**DELETE**、**UPDATE**、**SELECT**.
        """
        return pulumi.get(self, "permissions")

    @permissions.setter
    def permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "permissions", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def schemas(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AccountSchemaArgs']]]]:
        """
        Specifies the schemas that associated with the account.
        The Schema structure is documented below.

        <a name="DdmAccount_Schema"></a>
        The `Schema` block supports:
        """
        return pulumi.get(self, "schemas")

    @schemas.setter
    def schemas(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AccountSchemaArgs']]]]):
        pulumi.set(self, "schemas", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the status of the DDM account.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)


@pulumi.type_token("huaweicloud:ddm/account:Account")
class Account(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 password: Optional[pulumi.Input[_builtins.str]] = None,
                 permissions: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 schemas: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AccountSchemaArgs', 'AccountSchemaArgsDict']]]]] = None,
                 __props__=None):
        """
        Manages a DDM account resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        ddm_instance_id = config.require_object("ddmInstanceId")
        name = config.require_object("name")
        password = config.require_object("password")
        schema_name = config.require_object("schemaName")
        test = huaweicloud.ddm.Account("test",
            instance_id=ddm_instance_id,
            name=name,
            password=password,
            permissions=[
                "CREATE",
                "SELECT",
            ],
            schemas=[{
                "name": schema_name,
            }])
        ```

        ## Import

        The DDM account can be imported using the instance ID and account name separated by a slash, e.g.:

        bash

        ```sh
        $ pulumi import huaweicloud:ddm/account:Account test 0a8f1c6baa124e99853719d9257324dfin09/account_name
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the DDM account.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of a DDM instance.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the associated schema.
        :param pulumi.Input[_builtins.str] password: Specifies the DDM account password.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] permissions: Specifies the basic permissions of the DDM account. Value options: **CREATE**
               **DROP**、**ALTER**、**INDEX**、**INSERT**、**DELETE**、**UPDATE**、**SELECT**.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['AccountSchemaArgs', 'AccountSchemaArgsDict']]]] schemas: Specifies the schemas that associated with the account.
               The Schema structure is documented below.
               
               <a name="DdmAccount_Schema"></a>
               The `Schema` block supports:
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AccountArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a DDM account resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        ddm_instance_id = config.require_object("ddmInstanceId")
        name = config.require_object("name")
        password = config.require_object("password")
        schema_name = config.require_object("schemaName")
        test = huaweicloud.ddm.Account("test",
            instance_id=ddm_instance_id,
            name=name,
            password=password,
            permissions=[
                "CREATE",
                "SELECT",
            ],
            schemas=[{
                "name": schema_name,
            }])
        ```

        ## Import

        The DDM account can be imported using the instance ID and account name separated by a slash, e.g.:

        bash

        ```sh
        $ pulumi import huaweicloud:ddm/account:Account test 0a8f1c6baa124e99853719d9257324dfin09/account_name
        ```

        :param str resource_name: The name of the resource.
        :param AccountArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AccountArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 password: Optional[pulumi.Input[_builtins.str]] = None,
                 permissions: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 schemas: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AccountSchemaArgs', 'AccountSchemaArgsDict']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AccountArgs.__new__(AccountArgs)

            __props__.__dict__["description"] = description
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["name"] = name
            if password is None and not opts.urn:
                raise TypeError("Missing required property 'password'")
            __props__.__dict__["password"] = None if password is None else pulumi.Output.secret(password)
            if permissions is None and not opts.urn:
                raise TypeError("Missing required property 'permissions'")
            __props__.__dict__["permissions"] = permissions
            __props__.__dict__["region"] = region
            __props__.__dict__["schemas"] = schemas
            __props__.__dict__["status"] = None
        secret_opts = pulumi.ResourceOptions(additional_secret_outputs=["password"])
        opts = pulumi.ResourceOptions.merge(opts, secret_opts)
        super(Account, __self__).__init__(
            'huaweicloud:ddm/account:Account',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            password: Optional[pulumi.Input[_builtins.str]] = None,
            permissions: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            schemas: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AccountSchemaArgs', 'AccountSchemaArgsDict']]]]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None) -> 'Account':
        """
        Get an existing Account resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the DDM account.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of a DDM instance.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the associated schema.
        :param pulumi.Input[_builtins.str] password: Specifies the DDM account password.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] permissions: Specifies the basic permissions of the DDM account. Value options: **CREATE**
               **DROP**、**ALTER**、**INDEX**、**INSERT**、**DELETE**、**UPDATE**、**SELECT**.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['AccountSchemaArgs', 'AccountSchemaArgsDict']]]] schemas: Specifies the schemas that associated with the account.
               The Schema structure is documented below.
               
               <a name="DdmAccount_Schema"></a>
               The `Schema` block supports:
        :param pulumi.Input[_builtins.str] status: Indicates the status of the DDM account.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AccountState.__new__(_AccountState)

        __props__.__dict__["description"] = description
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["name"] = name
        __props__.__dict__["password"] = password
        __props__.__dict__["permissions"] = permissions
        __props__.__dict__["region"] = region
        __props__.__dict__["schemas"] = schemas
        __props__.__dict__["status"] = status
        return Account(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the description of the DDM account.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of a DDM instance.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of the associated schema.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def password(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the DDM account password.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def permissions(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        Specifies the basic permissions of the DDM account. Value options: **CREATE**
        **DROP**、**ALTER**、**INDEX**、**INSERT**、**DELETE**、**UPDATE**、**SELECT**.
        """
        return pulumi.get(self, "permissions")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def schemas(self) -> pulumi.Output[Sequence['outputs.AccountSchema']]:
        """
        Specifies the schemas that associated with the account.
        The Schema structure is documented below.

        <a name="DdmAccount_Schema"></a>
        The `Schema` block supports:
        """
        return pulumi.get(self, "schemas")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the status of the DDM account.
        """
        return pulumi.get(self, "status")

