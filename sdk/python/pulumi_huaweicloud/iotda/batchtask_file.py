# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['BatchtaskFileArgs', 'BatchtaskFile']

@pulumi.input_type
class BatchtaskFileArgs:
    def __init__(__self__, *,
                 content: pulumi.Input[_builtins.str],
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a BatchtaskFile resource.
        :param pulumi.Input[_builtins.str] content: Specifies the path to the batch task file to be uploaded.
               Currently, only the **xlsx/xls** file format is supported, and the maximum number of lines in the file is `30000`.
               The file name cannot be duplicated. Changing this parameter will create a new resource.
               Please following [reference](https://support.huaweicloud.com/intl/en-us/usermanual-iothub/iot_01_0032.html),
               download the template file and fill it out.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the IoTDA batch task file resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "content", content)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter
    def content(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the path to the batch task file to be uploaded.
        Currently, only the **xlsx/xls** file format is supported, and the maximum number of lines in the file is `30000`.
        The file name cannot be duplicated. Changing this parameter will create a new resource.
        Please following [reference](https://support.huaweicloud.com/intl/en-us/usermanual-iothub/iot_01_0032.html),
        download the template file and fill it out.
        """
        return pulumi.get(self, "content")

    @content.setter
    def content(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "content", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the IoTDA batch task file resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _BatchtaskFileState:
    def __init__(__self__, *,
                 content: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering BatchtaskFile resources.
        :param pulumi.Input[_builtins.str] content: Specifies the path to the batch task file to be uploaded.
               Currently, only the **xlsx/xls** file format is supported, and the maximum number of lines in the file is `30000`.
               The file name cannot be duplicated. Changing this parameter will create a new resource.
               Please following [reference](https://support.huaweicloud.com/intl/en-us/usermanual-iothub/iot_01_0032.html),
               download the template file and fill it out.
        :param pulumi.Input[_builtins.str] created_at: The time of file upload. The format is **yyyyMMdd'T'HHmmss'Z**. e.g. **20190528T153000Z**.
        :param pulumi.Input[_builtins.str] name: The resource name.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the IoTDA batch task file resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        if content is not None:
            pulumi.set(__self__, "content", content)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter
    def content(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the path to the batch task file to be uploaded.
        Currently, only the **xlsx/xls** file format is supported, and the maximum number of lines in the file is `30000`.
        The file name cannot be duplicated. Changing this parameter will create a new resource.
        Please following [reference](https://support.huaweicloud.com/intl/en-us/usermanual-iothub/iot_01_0032.html),
        download the template file and fill it out.
        """
        return pulumi.get(self, "content")

    @content.setter
    def content(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "content", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The time of file upload. The format is **yyyyMMdd'T'HHmmss'Z**. e.g. **20190528T153000Z**.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The resource name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the IoTDA batch task file resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.type_token("huaweicloud:IoTDA/batchtaskFile:BatchtaskFile")
class BatchtaskFile(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 content: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        !> **WARNING:** It has been deprecated.

        Manages an IoTDA batch task file within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        test = huaweicloud.iotda.BatchtaskFile("test", content="./BatchCreateDevices_Template.xlsx")
        ```

        ## Import

        The batch task file can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:IoTDA/batchtaskFile:BatchtaskFile test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `content`.

        It is generally recommended running `pulumi preview` after importing a resource.

        You can then decide if changes should be applied to the resource, or the resource definition

        should be updated to align with the resource. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_iotda_batchtask_file" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              content,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] content: Specifies the path to the batch task file to be uploaded.
               Currently, only the **xlsx/xls** file format is supported, and the maximum number of lines in the file is `30000`.
               The file name cannot be duplicated. Changing this parameter will create a new resource.
               Please following [reference](https://support.huaweicloud.com/intl/en-us/usermanual-iothub/iot_01_0032.html),
               download the template file and fill it out.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the IoTDA batch task file resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: BatchtaskFileArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        !> **WARNING:** It has been deprecated.

        Manages an IoTDA batch task file within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        test = huaweicloud.iotda.BatchtaskFile("test", content="./BatchCreateDevices_Template.xlsx")
        ```

        ## Import

        The batch task file can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:IoTDA/batchtaskFile:BatchtaskFile test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `content`.

        It is generally recommended running `pulumi preview` after importing a resource.

        You can then decide if changes should be applied to the resource, or the resource definition

        should be updated to align with the resource. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_iotda_batchtask_file" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              content,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param BatchtaskFileArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(BatchtaskFileArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 content: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = BatchtaskFileArgs.__new__(BatchtaskFileArgs)

            if content is None and not opts.urn:
                raise TypeError("Missing required property 'content'")
            __props__.__dict__["content"] = content
            __props__.__dict__["region"] = region
            __props__.__dict__["created_at"] = None
            __props__.__dict__["name"] = None
        super(BatchtaskFile, __self__).__init__(
            'huaweicloud:IoTDA/batchtaskFile:BatchtaskFile',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            content: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None) -> 'BatchtaskFile':
        """
        Get an existing BatchtaskFile resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] content: Specifies the path to the batch task file to be uploaded.
               Currently, only the **xlsx/xls** file format is supported, and the maximum number of lines in the file is `30000`.
               The file name cannot be duplicated. Changing this parameter will create a new resource.
               Please following [reference](https://support.huaweicloud.com/intl/en-us/usermanual-iothub/iot_01_0032.html),
               download the template file and fill it out.
        :param pulumi.Input[_builtins.str] created_at: The time of file upload. The format is **yyyyMMdd'T'HHmmss'Z**. e.g. **20190528T153000Z**.
        :param pulumi.Input[_builtins.str] name: The resource name.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the IoTDA batch task file resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _BatchtaskFileState.__new__(_BatchtaskFileState)

        __props__.__dict__["content"] = content
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        return BatchtaskFile(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def content(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the path to the batch task file to be uploaded.
        Currently, only the **xlsx/xls** file format is supported, and the maximum number of lines in the file is `30000`.
        The file name cannot be duplicated. Changing this parameter will create a new resource.
        Please following [reference](https://support.huaweicloud.com/intl/en-us/usermanual-iothub/iot_01_0032.html),
        download the template file and fill it out.
        """
        return pulumi.get(self, "content")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The time of file upload. The format is **yyyyMMdd'T'HHmmss'Z**. e.g. **20190528T153000Z**.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The resource name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the IoTDA batch task file resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

