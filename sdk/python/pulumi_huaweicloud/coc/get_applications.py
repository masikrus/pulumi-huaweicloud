# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetApplicationsResult',
    'AwaitableGetApplicationsResult',
    'get_applications',
    'get_applications_output',
]

@pulumi.output_type
class GetApplicationsResult:
    """
    A collection of values returned by getApplications.
    """
    def __init__(__self__, code=None, datas=None, id=None, id_lists=None, name_like=None, parent_id=None):
        if code and not isinstance(code, str):
            raise TypeError("Expected argument 'code' to be a str")
        pulumi.set(__self__, "code", code)
        if datas and not isinstance(datas, list):
            raise TypeError("Expected argument 'datas' to be a list")
        pulumi.set(__self__, "datas", datas)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if id_lists and not isinstance(id_lists, list):
            raise TypeError("Expected argument 'id_lists' to be a list")
        pulumi.set(__self__, "id_lists", id_lists)
        if name_like and not isinstance(name_like, str):
            raise TypeError("Expected argument 'name_like' to be a str")
        pulumi.set(__self__, "name_like", name_like)
        if parent_id and not isinstance(parent_id, str):
            raise TypeError("Expected argument 'parent_id' to be a str")
        pulumi.set(__self__, "parent_id", parent_id)

    @_builtins.property
    @pulumi.getter
    def code(self) -> Optional[_builtins.str]:
        """
        Indicates the application code.
        """
        return pulumi.get(self, "code")

    @_builtins.property
    @pulumi.getter
    def datas(self) -> Sequence['outputs.GetApplicationsDataResult']:
        """
        Indicates the application list.
        """
        return pulumi.get(self, "datas")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="idLists")
    def id_lists(self) -> Optional[Sequence[_builtins.str]]:
        return pulumi.get(self, "id_lists")

    @_builtins.property
    @pulumi.getter(name="nameLike")
    def name_like(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "name_like")

    @_builtins.property
    @pulumi.getter(name="parentId")
    def parent_id(self) -> Optional[_builtins.str]:
        """
        Indicates the parent application ID.
        """
        return pulumi.get(self, "parent_id")


class AwaitableGetApplicationsResult(GetApplicationsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetApplicationsResult(
            code=self.code,
            datas=self.datas,
            id=self.id,
            id_lists=self.id_lists,
            name_like=self.name_like,
            parent_id=self.parent_id)


def get_applications(code: Optional[_builtins.str] = None,
                     id_lists: Optional[Sequence[_builtins.str]] = None,
                     name_like: Optional[_builtins.str] = None,
                     parent_id: Optional[_builtins.str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetApplicationsResult:
    """
    Use this data source to get the list of COC applications.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.coc.get_applications()
    ```


    :param _builtins.str code: Specifies the application code.
    :param Sequence[_builtins.str] id_lists: Specifies the ID list.
    :param _builtins.str name_like: Specifies the fuzzy query the application name.
    :param _builtins.str parent_id: Specifies the parent application ID.
    """
    __args__ = dict()
    __args__['code'] = code
    __args__['idLists'] = id_lists
    __args__['nameLike'] = name_like
    __args__['parentId'] = parent_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:coc/getApplications:getApplications', __args__, opts=opts, typ=GetApplicationsResult).value

    return AwaitableGetApplicationsResult(
        code=pulumi.get(__ret__, 'code'),
        datas=pulumi.get(__ret__, 'datas'),
        id=pulumi.get(__ret__, 'id'),
        id_lists=pulumi.get(__ret__, 'id_lists'),
        name_like=pulumi.get(__ret__, 'name_like'),
        parent_id=pulumi.get(__ret__, 'parent_id'))
def get_applications_output(code: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                            id_lists: Optional[pulumi.Input[Optional[Sequence[_builtins.str]]]] = None,
                            name_like: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                            parent_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                            opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetApplicationsResult]:
    """
    Use this data source to get the list of COC applications.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.coc.get_applications()
    ```


    :param _builtins.str code: Specifies the application code.
    :param Sequence[_builtins.str] id_lists: Specifies the ID list.
    :param _builtins.str name_like: Specifies the fuzzy query the application name.
    :param _builtins.str parent_id: Specifies the parent application ID.
    """
    __args__ = dict()
    __args__['code'] = code
    __args__['idLists'] = id_lists
    __args__['nameLike'] = name_like
    __args__['parentId'] = parent_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:coc/getApplications:getApplications', __args__, opts=opts, typ=GetApplicationsResult)
    return __ret__.apply(lambda __response__: GetApplicationsResult(
        code=pulumi.get(__response__, 'code'),
        datas=pulumi.get(__response__, 'datas'),
        id=pulumi.get(__response__, 'id'),
        id_lists=pulumi.get(__response__, 'id_lists'),
        name_like=pulumi.get(__response__, 'name_like'),
        parent_id=pulumi.get(__response__, 'parent_id')))
