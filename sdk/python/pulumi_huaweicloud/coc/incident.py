# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['IncidentArgs', 'Incident']

@pulumi.input_type
class IncidentArgs:
    def __init__(__self__, *,
                 creator: pulumi.Input[_builtins.str],
                 incident_level: pulumi.Input[_builtins.str],
                 incident_source: pulumi.Input[_builtins.str],
                 incident_title: pulumi.Input[_builtins.str],
                 incident_type: pulumi.Input[_builtins.str],
                 is_service_interrupt: pulumi.Input[_builtins.bool],
                 assignee_role: Optional[pulumi.Input[_builtins.str]] = None,
                 assignee_scene: Optional[pulumi.Input[_builtins.str]] = None,
                 current_cloud_services: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_projects: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 incident_assignees: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 incident_description: Optional[pulumi.Input[_builtins.str]] = None,
                 incident_ownership: Optional[pulumi.Input[_builtins.str]] = None,
                 regions: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 start_time: Optional[pulumi.Input[_builtins.int]] = None):
        """
        The set of arguments for constructing a Incident resource.
        :param pulumi.Input[_builtins.str] creator: Specifies the user ID of the creator.
        :param pulumi.Input[_builtins.str] incident_level: Specifies the incident level.
               For details, see [incident_level](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_01.html)
        :param pulumi.Input[_builtins.str] incident_source: Specifies the incident source.
               For details, see [incident_source](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_03.html)
        :param pulumi.Input[_builtins.str] incident_title: Specifies the incident title.
        :param pulumi.Input[_builtins.str] incident_type: Specifies the incident type.
               For details, see [incident_type](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_02.html)
        :param pulumi.Input[_builtins.bool] is_service_interrupt: Specifies whether the service is interrupted.
        :param pulumi.Input[_builtins.str] assignee_role: Specifies the scheduling role.
               
               > Only one of `incident_assignee` and `assignee_scene` can be specified, and `assignee_scene` and `assignee_role` must
               be specified st the same time.
        :param pulumi.Input[_builtins.str] assignee_scene: Specifies the scheduling scenario.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] current_cloud_services: Specifies the application ID.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] enterprise_projects: Specifies the enterprise project ID.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] incident_assignees: Specifies the incident assignee.
        :param pulumi.Input[_builtins.str] incident_description: Specifies the incident description.
        :param pulumi.Input[_builtins.str] incident_ownership: Specifies the incident ownership.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] regions: Specifies the region.
               This parameter is mandatory if a war room is automatically started.
        :param pulumi.Input[_builtins.int] start_time: Specifies the fault occurrence timestamp.
        """
        pulumi.set(__self__, "creator", creator)
        pulumi.set(__self__, "incident_level", incident_level)
        pulumi.set(__self__, "incident_source", incident_source)
        pulumi.set(__self__, "incident_title", incident_title)
        pulumi.set(__self__, "incident_type", incident_type)
        pulumi.set(__self__, "is_service_interrupt", is_service_interrupt)
        if assignee_role is not None:
            pulumi.set(__self__, "assignee_role", assignee_role)
        if assignee_scene is not None:
            pulumi.set(__self__, "assignee_scene", assignee_scene)
        if current_cloud_services is not None:
            pulumi.set(__self__, "current_cloud_services", current_cloud_services)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if enterprise_projects is not None:
            pulumi.set(__self__, "enterprise_projects", enterprise_projects)
        if incident_assignees is not None:
            pulumi.set(__self__, "incident_assignees", incident_assignees)
        if incident_description is not None:
            pulumi.set(__self__, "incident_description", incident_description)
        if incident_ownership is not None:
            pulumi.set(__self__, "incident_ownership", incident_ownership)
        if regions is not None:
            pulumi.set(__self__, "regions", regions)
        if start_time is not None:
            pulumi.set(__self__, "start_time", start_time)

    @_builtins.property
    @pulumi.getter
    def creator(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the user ID of the creator.
        """
        return pulumi.get(self, "creator")

    @creator.setter
    def creator(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "creator", value)

    @_builtins.property
    @pulumi.getter(name="incidentLevel")
    def incident_level(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the incident level.
        For details, see [incident_level](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_01.html)
        """
        return pulumi.get(self, "incident_level")

    @incident_level.setter
    def incident_level(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "incident_level", value)

    @_builtins.property
    @pulumi.getter(name="incidentSource")
    def incident_source(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the incident source.
        For details, see [incident_source](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_03.html)
        """
        return pulumi.get(self, "incident_source")

    @incident_source.setter
    def incident_source(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "incident_source", value)

    @_builtins.property
    @pulumi.getter(name="incidentTitle")
    def incident_title(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the incident title.
        """
        return pulumi.get(self, "incident_title")

    @incident_title.setter
    def incident_title(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "incident_title", value)

    @_builtins.property
    @pulumi.getter(name="incidentType")
    def incident_type(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the incident type.
        For details, see [incident_type](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_02.html)
        """
        return pulumi.get(self, "incident_type")

    @incident_type.setter
    def incident_type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "incident_type", value)

    @_builtins.property
    @pulumi.getter(name="isServiceInterrupt")
    def is_service_interrupt(self) -> pulumi.Input[_builtins.bool]:
        """
        Specifies whether the service is interrupted.
        """
        return pulumi.get(self, "is_service_interrupt")

    @is_service_interrupt.setter
    def is_service_interrupt(self, value: pulumi.Input[_builtins.bool]):
        pulumi.set(self, "is_service_interrupt", value)

    @_builtins.property
    @pulumi.getter(name="assigneeRole")
    def assignee_role(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the scheduling role.

        > Only one of `incident_assignee` and `assignee_scene` can be specified, and `assignee_scene` and `assignee_role` must
        be specified st the same time.
        """
        return pulumi.get(self, "assignee_role")

    @assignee_role.setter
    def assignee_role(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "assignee_role", value)

    @_builtins.property
    @pulumi.getter(name="assigneeScene")
    def assignee_scene(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the scheduling scenario.
        """
        return pulumi.get(self, "assignee_scene")

    @assignee_scene.setter
    def assignee_scene(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "assignee_scene", value)

    @_builtins.property
    @pulumi.getter(name="currentCloudServices")
    def current_cloud_services(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the application ID.
        """
        return pulumi.get(self, "current_cloud_services")

    @current_cloud_services.setter
    def current_cloud_services(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "current_cloud_services", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjects")
    def enterprise_projects(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the enterprise project ID.
        """
        return pulumi.get(self, "enterprise_projects")

    @enterprise_projects.setter
    def enterprise_projects(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "enterprise_projects", value)

    @_builtins.property
    @pulumi.getter(name="incidentAssignees")
    def incident_assignees(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the incident assignee.
        """
        return pulumi.get(self, "incident_assignees")

    @incident_assignees.setter
    def incident_assignees(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "incident_assignees", value)

    @_builtins.property
    @pulumi.getter(name="incidentDescription")
    def incident_description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the incident description.
        """
        return pulumi.get(self, "incident_description")

    @incident_description.setter
    def incident_description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "incident_description", value)

    @_builtins.property
    @pulumi.getter(name="incidentOwnership")
    def incident_ownership(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the incident ownership.
        """
        return pulumi.get(self, "incident_ownership")

    @incident_ownership.setter
    def incident_ownership(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "incident_ownership", value)

    @_builtins.property
    @pulumi.getter
    def regions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the region.
        This parameter is mandatory if a war room is automatically started.
        """
        return pulumi.get(self, "regions")

    @regions.setter
    def regions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "regions", value)

    @_builtins.property
    @pulumi.getter(name="startTime")
    def start_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the fault occurrence timestamp.
        """
        return pulumi.get(self, "start_time")

    @start_time.setter
    def start_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "start_time", value)


@pulumi.input_type
class _IncidentState:
    def __init__(__self__, *,
                 assignee_role: Optional[pulumi.Input[_builtins.str]] = None,
                 assignee_scene: Optional[pulumi.Input[_builtins.str]] = None,
                 create_time: Optional[pulumi.Input[_builtins.int]] = None,
                 creator: Optional[pulumi.Input[_builtins.str]] = None,
                 current_cloud_services: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_projects: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 enum_data_lists: Optional[pulumi.Input[Sequence[pulumi.Input['IncidentEnumDataListArgs']]]] = None,
                 handle_time: Optional[pulumi.Input[_builtins.int]] = None,
                 incident_assignees: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 incident_description: Optional[pulumi.Input[_builtins.str]] = None,
                 incident_level: Optional[pulumi.Input[_builtins.str]] = None,
                 incident_ownership: Optional[pulumi.Input[_builtins.str]] = None,
                 incident_source: Optional[pulumi.Input[_builtins.str]] = None,
                 incident_title: Optional[pulumi.Input[_builtins.str]] = None,
                 incident_type: Optional[pulumi.Input[_builtins.str]] = None,
                 is_service_interrupt: Optional[pulumi.Input[_builtins.bool]] = None,
                 regions: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 start_time: Optional[pulumi.Input[_builtins.int]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 warroom_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering Incident resources.
        :param pulumi.Input[_builtins.str] assignee_role: Specifies the scheduling role.
               
               > Only one of `incident_assignee` and `assignee_scene` can be specified, and `assignee_scene` and `assignee_role` must
               be specified st the same time.
        :param pulumi.Input[_builtins.str] assignee_scene: Specifies the scheduling scenario.
        :param pulumi.Input[_builtins.int] create_time: Indicates the incident create time.
        :param pulumi.Input[_builtins.str] creator: Specifies the user ID of the creator.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] current_cloud_services: Specifies the application ID.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] enterprise_projects: Specifies the enterprise project ID.
        :param pulumi.Input[Sequence[pulumi.Input['IncidentEnumDataListArgs']]] enum_data_lists: Indicates the enumeration list.
               The enum_data_list structure is documented below.
        :param pulumi.Input[_builtins.int] handle_time: Indicates the timestamp of the last solution submission.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] incident_assignees: Specifies the incident assignee.
        :param pulumi.Input[_builtins.str] incident_description: Specifies the incident description.
        :param pulumi.Input[_builtins.str] incident_level: Specifies the incident level.
               For details, see [incident_level](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_01.html)
        :param pulumi.Input[_builtins.str] incident_ownership: Specifies the incident ownership.
        :param pulumi.Input[_builtins.str] incident_source: Specifies the incident source.
               For details, see [incident_source](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_03.html)
        :param pulumi.Input[_builtins.str] incident_title: Specifies the incident title.
        :param pulumi.Input[_builtins.str] incident_type: Specifies the incident type.
               For details, see [incident_type](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_02.html)
        :param pulumi.Input[_builtins.bool] is_service_interrupt: Specifies whether the service is interrupted.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] regions: Specifies the region.
               This parameter is mandatory if a war room is automatically started.
        :param pulumi.Input[_builtins.int] start_time: Specifies the fault occurrence timestamp.
        :param pulumi.Input[_builtins.str] status: Indicates the incident status.
        :param pulumi.Input[_builtins.str] warroom_id: Indicates the war room ID.
        """
        if assignee_role is not None:
            pulumi.set(__self__, "assignee_role", assignee_role)
        if assignee_scene is not None:
            pulumi.set(__self__, "assignee_scene", assignee_scene)
        if create_time is not None:
            pulumi.set(__self__, "create_time", create_time)
        if creator is not None:
            pulumi.set(__self__, "creator", creator)
        if current_cloud_services is not None:
            pulumi.set(__self__, "current_cloud_services", current_cloud_services)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if enterprise_projects is not None:
            pulumi.set(__self__, "enterprise_projects", enterprise_projects)
        if enum_data_lists is not None:
            pulumi.set(__self__, "enum_data_lists", enum_data_lists)
        if handle_time is not None:
            pulumi.set(__self__, "handle_time", handle_time)
        if incident_assignees is not None:
            pulumi.set(__self__, "incident_assignees", incident_assignees)
        if incident_description is not None:
            pulumi.set(__self__, "incident_description", incident_description)
        if incident_level is not None:
            pulumi.set(__self__, "incident_level", incident_level)
        if incident_ownership is not None:
            pulumi.set(__self__, "incident_ownership", incident_ownership)
        if incident_source is not None:
            pulumi.set(__self__, "incident_source", incident_source)
        if incident_title is not None:
            pulumi.set(__self__, "incident_title", incident_title)
        if incident_type is not None:
            pulumi.set(__self__, "incident_type", incident_type)
        if is_service_interrupt is not None:
            pulumi.set(__self__, "is_service_interrupt", is_service_interrupt)
        if regions is not None:
            pulumi.set(__self__, "regions", regions)
        if start_time is not None:
            pulumi.set(__self__, "start_time", start_time)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if warroom_id is not None:
            pulumi.set(__self__, "warroom_id", warroom_id)

    @_builtins.property
    @pulumi.getter(name="assigneeRole")
    def assignee_role(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the scheduling role.

        > Only one of `incident_assignee` and `assignee_scene` can be specified, and `assignee_scene` and `assignee_role` must
        be specified st the same time.
        """
        return pulumi.get(self, "assignee_role")

    @assignee_role.setter
    def assignee_role(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "assignee_role", value)

    @_builtins.property
    @pulumi.getter(name="assigneeScene")
    def assignee_scene(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the scheduling scenario.
        """
        return pulumi.get(self, "assignee_scene")

    @assignee_scene.setter
    def assignee_scene(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "assignee_scene", value)

    @_builtins.property
    @pulumi.getter(name="createTime")
    def create_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Indicates the incident create time.
        """
        return pulumi.get(self, "create_time")

    @create_time.setter
    def create_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "create_time", value)

    @_builtins.property
    @pulumi.getter
    def creator(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the user ID of the creator.
        """
        return pulumi.get(self, "creator")

    @creator.setter
    def creator(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "creator", value)

    @_builtins.property
    @pulumi.getter(name="currentCloudServices")
    def current_cloud_services(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the application ID.
        """
        return pulumi.get(self, "current_cloud_services")

    @current_cloud_services.setter
    def current_cloud_services(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "current_cloud_services", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjects")
    def enterprise_projects(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the enterprise project ID.
        """
        return pulumi.get(self, "enterprise_projects")

    @enterprise_projects.setter
    def enterprise_projects(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "enterprise_projects", value)

    @_builtins.property
    @pulumi.getter(name="enumDataLists")
    def enum_data_lists(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IncidentEnumDataListArgs']]]]:
        """
        Indicates the enumeration list.
        The enum_data_list structure is documented below.
        """
        return pulumi.get(self, "enum_data_lists")

    @enum_data_lists.setter
    def enum_data_lists(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IncidentEnumDataListArgs']]]]):
        pulumi.set(self, "enum_data_lists", value)

    @_builtins.property
    @pulumi.getter(name="handleTime")
    def handle_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Indicates the timestamp of the last solution submission.
        """
        return pulumi.get(self, "handle_time")

    @handle_time.setter
    def handle_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "handle_time", value)

    @_builtins.property
    @pulumi.getter(name="incidentAssignees")
    def incident_assignees(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the incident assignee.
        """
        return pulumi.get(self, "incident_assignees")

    @incident_assignees.setter
    def incident_assignees(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "incident_assignees", value)

    @_builtins.property
    @pulumi.getter(name="incidentDescription")
    def incident_description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the incident description.
        """
        return pulumi.get(self, "incident_description")

    @incident_description.setter
    def incident_description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "incident_description", value)

    @_builtins.property
    @pulumi.getter(name="incidentLevel")
    def incident_level(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the incident level.
        For details, see [incident_level](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_01.html)
        """
        return pulumi.get(self, "incident_level")

    @incident_level.setter
    def incident_level(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "incident_level", value)

    @_builtins.property
    @pulumi.getter(name="incidentOwnership")
    def incident_ownership(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the incident ownership.
        """
        return pulumi.get(self, "incident_ownership")

    @incident_ownership.setter
    def incident_ownership(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "incident_ownership", value)

    @_builtins.property
    @pulumi.getter(name="incidentSource")
    def incident_source(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the incident source.
        For details, see [incident_source](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_03.html)
        """
        return pulumi.get(self, "incident_source")

    @incident_source.setter
    def incident_source(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "incident_source", value)

    @_builtins.property
    @pulumi.getter(name="incidentTitle")
    def incident_title(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the incident title.
        """
        return pulumi.get(self, "incident_title")

    @incident_title.setter
    def incident_title(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "incident_title", value)

    @_builtins.property
    @pulumi.getter(name="incidentType")
    def incident_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the incident type.
        For details, see [incident_type](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_02.html)
        """
        return pulumi.get(self, "incident_type")

    @incident_type.setter
    def incident_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "incident_type", value)

    @_builtins.property
    @pulumi.getter(name="isServiceInterrupt")
    def is_service_interrupt(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether the service is interrupted.
        """
        return pulumi.get(self, "is_service_interrupt")

    @is_service_interrupt.setter
    def is_service_interrupt(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "is_service_interrupt", value)

    @_builtins.property
    @pulumi.getter
    def regions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the region.
        This parameter is mandatory if a war room is automatically started.
        """
        return pulumi.get(self, "regions")

    @regions.setter
    def regions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "regions", value)

    @_builtins.property
    @pulumi.getter(name="startTime")
    def start_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the fault occurrence timestamp.
        """
        return pulumi.get(self, "start_time")

    @start_time.setter
    def start_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "start_time", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the incident status.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="warroomId")
    def warroom_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the war room ID.
        """
        return pulumi.get(self, "warroom_id")

    @warroom_id.setter
    def warroom_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "warroom_id", value)


@pulumi.type_token("huaweicloud:coc/incident:Incident")
class Incident(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 assignee_role: Optional[pulumi.Input[_builtins.str]] = None,
                 assignee_scene: Optional[pulumi.Input[_builtins.str]] = None,
                 creator: Optional[pulumi.Input[_builtins.str]] = None,
                 current_cloud_services: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_projects: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 incident_assignees: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 incident_description: Optional[pulumi.Input[_builtins.str]] = None,
                 incident_level: Optional[pulumi.Input[_builtins.str]] = None,
                 incident_ownership: Optional[pulumi.Input[_builtins.str]] = None,
                 incident_source: Optional[pulumi.Input[_builtins.str]] = None,
                 incident_title: Optional[pulumi.Input[_builtins.str]] = None,
                 incident_type: Optional[pulumi.Input[_builtins.str]] = None,
                 is_service_interrupt: Optional[pulumi.Input[_builtins.bool]] = None,
                 regions: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 start_time: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        """
        Manages a COC incident resource within HuaweiCloud.

        > Deleting incident resource is not supported, it will only be removed from the state.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        incident_title = config.require_object("incidentTitle")
        user_id = config.require_object("userId")
        assignee = config.require_object("assignee")
        application_id = config.require_object("applicationId")
        test = huaweicloud.coc.Incident("test",
            incident_level="level_50",
            is_service_interrupt=False,
            incident_type="inc_type_p_security_issues",
            incident_title=incident_title,
            incident_source="incident_source_forwarding",
            creator=user_id,
            incident_assignees=assignee,
            current_cloud_services=[application_id],
            incident_description="description")
        ```

        ## Import

        The COC incident can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:coc/incident:Incident test <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] assignee_role: Specifies the scheduling role.
               
               > Only one of `incident_assignee` and `assignee_scene` can be specified, and `assignee_scene` and `assignee_role` must
               be specified st the same time.
        :param pulumi.Input[_builtins.str] assignee_scene: Specifies the scheduling scenario.
        :param pulumi.Input[_builtins.str] creator: Specifies the user ID of the creator.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] current_cloud_services: Specifies the application ID.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] enterprise_projects: Specifies the enterprise project ID.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] incident_assignees: Specifies the incident assignee.
        :param pulumi.Input[_builtins.str] incident_description: Specifies the incident description.
        :param pulumi.Input[_builtins.str] incident_level: Specifies the incident level.
               For details, see [incident_level](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_01.html)
        :param pulumi.Input[_builtins.str] incident_ownership: Specifies the incident ownership.
        :param pulumi.Input[_builtins.str] incident_source: Specifies the incident source.
               For details, see [incident_source](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_03.html)
        :param pulumi.Input[_builtins.str] incident_title: Specifies the incident title.
        :param pulumi.Input[_builtins.str] incident_type: Specifies the incident type.
               For details, see [incident_type](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_02.html)
        :param pulumi.Input[_builtins.bool] is_service_interrupt: Specifies whether the service is interrupted.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] regions: Specifies the region.
               This parameter is mandatory if a war room is automatically started.
        :param pulumi.Input[_builtins.int] start_time: Specifies the fault occurrence timestamp.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: IncidentArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a COC incident resource within HuaweiCloud.

        > Deleting incident resource is not supported, it will only be removed from the state.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        incident_title = config.require_object("incidentTitle")
        user_id = config.require_object("userId")
        assignee = config.require_object("assignee")
        application_id = config.require_object("applicationId")
        test = huaweicloud.coc.Incident("test",
            incident_level="level_50",
            is_service_interrupt=False,
            incident_type="inc_type_p_security_issues",
            incident_title=incident_title,
            incident_source="incident_source_forwarding",
            creator=user_id,
            incident_assignees=assignee,
            current_cloud_services=[application_id],
            incident_description="description")
        ```

        ## Import

        The COC incident can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:coc/incident:Incident test <id>
        ```

        :param str resource_name: The name of the resource.
        :param IncidentArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IncidentArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 assignee_role: Optional[pulumi.Input[_builtins.str]] = None,
                 assignee_scene: Optional[pulumi.Input[_builtins.str]] = None,
                 creator: Optional[pulumi.Input[_builtins.str]] = None,
                 current_cloud_services: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_projects: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 incident_assignees: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 incident_description: Optional[pulumi.Input[_builtins.str]] = None,
                 incident_level: Optional[pulumi.Input[_builtins.str]] = None,
                 incident_ownership: Optional[pulumi.Input[_builtins.str]] = None,
                 incident_source: Optional[pulumi.Input[_builtins.str]] = None,
                 incident_title: Optional[pulumi.Input[_builtins.str]] = None,
                 incident_type: Optional[pulumi.Input[_builtins.str]] = None,
                 is_service_interrupt: Optional[pulumi.Input[_builtins.bool]] = None,
                 regions: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 start_time: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IncidentArgs.__new__(IncidentArgs)

            __props__.__dict__["assignee_role"] = assignee_role
            __props__.__dict__["assignee_scene"] = assignee_scene
            if creator is None and not opts.urn:
                raise TypeError("Missing required property 'creator'")
            __props__.__dict__["creator"] = creator
            __props__.__dict__["current_cloud_services"] = current_cloud_services
            __props__.__dict__["enable_force_new"] = enable_force_new
            __props__.__dict__["enterprise_projects"] = enterprise_projects
            __props__.__dict__["incident_assignees"] = incident_assignees
            __props__.__dict__["incident_description"] = incident_description
            if incident_level is None and not opts.urn:
                raise TypeError("Missing required property 'incident_level'")
            __props__.__dict__["incident_level"] = incident_level
            __props__.__dict__["incident_ownership"] = incident_ownership
            if incident_source is None and not opts.urn:
                raise TypeError("Missing required property 'incident_source'")
            __props__.__dict__["incident_source"] = incident_source
            if incident_title is None and not opts.urn:
                raise TypeError("Missing required property 'incident_title'")
            __props__.__dict__["incident_title"] = incident_title
            if incident_type is None and not opts.urn:
                raise TypeError("Missing required property 'incident_type'")
            __props__.__dict__["incident_type"] = incident_type
            if is_service_interrupt is None and not opts.urn:
                raise TypeError("Missing required property 'is_service_interrupt'")
            __props__.__dict__["is_service_interrupt"] = is_service_interrupt
            __props__.__dict__["regions"] = regions
            __props__.__dict__["start_time"] = start_time
            __props__.__dict__["create_time"] = None
            __props__.__dict__["enum_data_lists"] = None
            __props__.__dict__["handle_time"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["warroom_id"] = None
        super(Incident, __self__).__init__(
            'huaweicloud:coc/incident:Incident',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            assignee_role: Optional[pulumi.Input[_builtins.str]] = None,
            assignee_scene: Optional[pulumi.Input[_builtins.str]] = None,
            create_time: Optional[pulumi.Input[_builtins.int]] = None,
            creator: Optional[pulumi.Input[_builtins.str]] = None,
            current_cloud_services: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_projects: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            enum_data_lists: Optional[pulumi.Input[Sequence[pulumi.Input[Union['IncidentEnumDataListArgs', 'IncidentEnumDataListArgsDict']]]]] = None,
            handle_time: Optional[pulumi.Input[_builtins.int]] = None,
            incident_assignees: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            incident_description: Optional[pulumi.Input[_builtins.str]] = None,
            incident_level: Optional[pulumi.Input[_builtins.str]] = None,
            incident_ownership: Optional[pulumi.Input[_builtins.str]] = None,
            incident_source: Optional[pulumi.Input[_builtins.str]] = None,
            incident_title: Optional[pulumi.Input[_builtins.str]] = None,
            incident_type: Optional[pulumi.Input[_builtins.str]] = None,
            is_service_interrupt: Optional[pulumi.Input[_builtins.bool]] = None,
            regions: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            start_time: Optional[pulumi.Input[_builtins.int]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            warroom_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'Incident':
        """
        Get an existing Incident resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] assignee_role: Specifies the scheduling role.
               
               > Only one of `incident_assignee` and `assignee_scene` can be specified, and `assignee_scene` and `assignee_role` must
               be specified st the same time.
        :param pulumi.Input[_builtins.str] assignee_scene: Specifies the scheduling scenario.
        :param pulumi.Input[_builtins.int] create_time: Indicates the incident create time.
        :param pulumi.Input[_builtins.str] creator: Specifies the user ID of the creator.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] current_cloud_services: Specifies the application ID.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] enterprise_projects: Specifies the enterprise project ID.
        :param pulumi.Input[Sequence[pulumi.Input[Union['IncidentEnumDataListArgs', 'IncidentEnumDataListArgsDict']]]] enum_data_lists: Indicates the enumeration list.
               The enum_data_list structure is documented below.
        :param pulumi.Input[_builtins.int] handle_time: Indicates the timestamp of the last solution submission.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] incident_assignees: Specifies the incident assignee.
        :param pulumi.Input[_builtins.str] incident_description: Specifies the incident description.
        :param pulumi.Input[_builtins.str] incident_level: Specifies the incident level.
               For details, see [incident_level](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_01.html)
        :param pulumi.Input[_builtins.str] incident_ownership: Specifies the incident ownership.
        :param pulumi.Input[_builtins.str] incident_source: Specifies the incident source.
               For details, see [incident_source](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_03.html)
        :param pulumi.Input[_builtins.str] incident_title: Specifies the incident title.
        :param pulumi.Input[_builtins.str] incident_type: Specifies the incident type.
               For details, see [incident_type](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_02.html)
        :param pulumi.Input[_builtins.bool] is_service_interrupt: Specifies whether the service is interrupted.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] regions: Specifies the region.
               This parameter is mandatory if a war room is automatically started.
        :param pulumi.Input[_builtins.int] start_time: Specifies the fault occurrence timestamp.
        :param pulumi.Input[_builtins.str] status: Indicates the incident status.
        :param pulumi.Input[_builtins.str] warroom_id: Indicates the war room ID.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IncidentState.__new__(_IncidentState)

        __props__.__dict__["assignee_role"] = assignee_role
        __props__.__dict__["assignee_scene"] = assignee_scene
        __props__.__dict__["create_time"] = create_time
        __props__.__dict__["creator"] = creator
        __props__.__dict__["current_cloud_services"] = current_cloud_services
        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["enterprise_projects"] = enterprise_projects
        __props__.__dict__["enum_data_lists"] = enum_data_lists
        __props__.__dict__["handle_time"] = handle_time
        __props__.__dict__["incident_assignees"] = incident_assignees
        __props__.__dict__["incident_description"] = incident_description
        __props__.__dict__["incident_level"] = incident_level
        __props__.__dict__["incident_ownership"] = incident_ownership
        __props__.__dict__["incident_source"] = incident_source
        __props__.__dict__["incident_title"] = incident_title
        __props__.__dict__["incident_type"] = incident_type
        __props__.__dict__["is_service_interrupt"] = is_service_interrupt
        __props__.__dict__["regions"] = regions
        __props__.__dict__["start_time"] = start_time
        __props__.__dict__["status"] = status
        __props__.__dict__["warroom_id"] = warroom_id
        return Incident(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="assigneeRole")
    def assignee_role(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the scheduling role.

        > Only one of `incident_assignee` and `assignee_scene` can be specified, and `assignee_scene` and `assignee_role` must
        be specified st the same time.
        """
        return pulumi.get(self, "assignee_role")

    @_builtins.property
    @pulumi.getter(name="assigneeScene")
    def assignee_scene(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the scheduling scenario.
        """
        return pulumi.get(self, "assignee_scene")

    @_builtins.property
    @pulumi.getter(name="createTime")
    def create_time(self) -> pulumi.Output[_builtins.int]:
        """
        Indicates the incident create time.
        """
        return pulumi.get(self, "create_time")

    @_builtins.property
    @pulumi.getter
    def creator(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the user ID of the creator.
        """
        return pulumi.get(self, "creator")

    @_builtins.property
    @pulumi.getter(name="currentCloudServices")
    def current_cloud_services(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        Specifies the application ID.
        """
        return pulumi.get(self, "current_cloud_services")

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjects")
    def enterprise_projects(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        Specifies the enterprise project ID.
        """
        return pulumi.get(self, "enterprise_projects")

    @_builtins.property
    @pulumi.getter(name="enumDataLists")
    def enum_data_lists(self) -> pulumi.Output[Sequence['outputs.IncidentEnumDataList']]:
        """
        Indicates the enumeration list.
        The enum_data_list structure is documented below.
        """
        return pulumi.get(self, "enum_data_lists")

    @_builtins.property
    @pulumi.getter(name="handleTime")
    def handle_time(self) -> pulumi.Output[_builtins.int]:
        """
        Indicates the timestamp of the last solution submission.
        """
        return pulumi.get(self, "handle_time")

    @_builtins.property
    @pulumi.getter(name="incidentAssignees")
    def incident_assignees(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        Specifies the incident assignee.
        """
        return pulumi.get(self, "incident_assignees")

    @_builtins.property
    @pulumi.getter(name="incidentDescription")
    def incident_description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the incident description.
        """
        return pulumi.get(self, "incident_description")

    @_builtins.property
    @pulumi.getter(name="incidentLevel")
    def incident_level(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the incident level.
        For details, see [incident_level](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_01.html)
        """
        return pulumi.get(self, "incident_level")

    @_builtins.property
    @pulumi.getter(name="incidentOwnership")
    def incident_ownership(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the incident ownership.
        """
        return pulumi.get(self, "incident_ownership")

    @_builtins.property
    @pulumi.getter(name="incidentSource")
    def incident_source(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the incident source.
        For details, see [incident_source](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_03.html)
        """
        return pulumi.get(self, "incident_source")

    @_builtins.property
    @pulumi.getter(name="incidentTitle")
    def incident_title(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the incident title.
        """
        return pulumi.get(self, "incident_title")

    @_builtins.property
    @pulumi.getter(name="incidentType")
    def incident_type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the incident type.
        For details, see [incident_type](https://support.huaweicloud.com/intl/en-us/api-coc/coc_api_04_03_001_006_02.html)
        """
        return pulumi.get(self, "incident_type")

    @_builtins.property
    @pulumi.getter(name="isServiceInterrupt")
    def is_service_interrupt(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether the service is interrupted.
        """
        return pulumi.get(self, "is_service_interrupt")

    @_builtins.property
    @pulumi.getter
    def regions(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        Specifies the region.
        This parameter is mandatory if a war room is automatically started.
        """
        return pulumi.get(self, "regions")

    @_builtins.property
    @pulumi.getter(name="startTime")
    def start_time(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        Specifies the fault occurrence timestamp.
        """
        return pulumi.get(self, "start_time")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the incident status.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="warroomId")
    def warroom_id(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the war room ID.
        """
        return pulumi.get(self, "warroom_id")

