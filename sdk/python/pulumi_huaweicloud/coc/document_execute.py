# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['DocumentExecuteArgs', 'DocumentExecute']

@pulumi.input_type
class DocumentExecuteArgs:
    def __init__(__self__, *,
                 document_id: pulumi.Input[_builtins.str],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 document_type: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 parameters: Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteParameterArgs']]]] = None,
                 sys_tags: Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteSysTagArgs']]]] = None,
                 target_parameter_name: Optional[pulumi.Input[_builtins.str]] = None,
                 targets: Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteTargetArgs']]]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a DocumentExecute resource.
        :param pulumi.Input[_builtins.str] document_id: Specifies the document ID.
        :param pulumi.Input[_builtins.str] description: Specifies the execution description.
               
               <a name="key_value_struct"></a>
               The `parameters`, `sys_tags` blocks support:
        :param pulumi.Input[_builtins.str] document_type: Specifies the type of document to perform.
               The value can be **PRIVATE** or **PUBLIC**.
        :param pulumi.Input[Sequence[pulumi.Input['DocumentExecuteParameterArgs']]] parameters: Specifies the global parameters.
               The parameters structure is documented below.
        :param pulumi.Input[Sequence[pulumi.Input['DocumentExecuteSysTagArgs']]] sys_tags: Specifies the list of system tags.
               The sys_tags structure is documented below.
        :param pulumi.Input[_builtins.str] target_parameter_name: Specifies the parameter name of the batch execution object
               in rate control mode.
        :param pulumi.Input[Sequence[pulumi.Input['DocumentExecuteTargetArgs']]] targets: Specifies the method to use with `target_parameter_name`.
               The targets structure is documented below.
        :param pulumi.Input[_builtins.str] version: Specifies the document version number. If not specified, the default is
               the latest version.
        """
        pulumi.set(__self__, "document_id", document_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if document_type is not None:
            pulumi.set(__self__, "document_type", document_type)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if parameters is not None:
            pulumi.set(__self__, "parameters", parameters)
        if sys_tags is not None:
            pulumi.set(__self__, "sys_tags", sys_tags)
        if target_parameter_name is not None:
            pulumi.set(__self__, "target_parameter_name", target_parameter_name)
        if targets is not None:
            pulumi.set(__self__, "targets", targets)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter(name="documentId")
    def document_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the document ID.
        """
        return pulumi.get(self, "document_id")

    @document_id.setter
    def document_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "document_id", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the execution description.

        <a name="key_value_struct"></a>
        The `parameters`, `sys_tags` blocks support:
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="documentType")
    def document_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the type of document to perform.
        The value can be **PRIVATE** or **PUBLIC**.
        """
        return pulumi.get(self, "document_type")

    @document_type.setter
    def document_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "document_type", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter
    def parameters(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteParameterArgs']]]]:
        """
        Specifies the global parameters.
        The parameters structure is documented below.
        """
        return pulumi.get(self, "parameters")

    @parameters.setter
    def parameters(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteParameterArgs']]]]):
        pulumi.set(self, "parameters", value)

    @_builtins.property
    @pulumi.getter(name="sysTags")
    def sys_tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteSysTagArgs']]]]:
        """
        Specifies the list of system tags.
        The sys_tags structure is documented below.
        """
        return pulumi.get(self, "sys_tags")

    @sys_tags.setter
    def sys_tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteSysTagArgs']]]]):
        pulumi.set(self, "sys_tags", value)

    @_builtins.property
    @pulumi.getter(name="targetParameterName")
    def target_parameter_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the parameter name of the batch execution object
        in rate control mode.
        """
        return pulumi.get(self, "target_parameter_name")

    @target_parameter_name.setter
    def target_parameter_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_parameter_name", value)

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteTargetArgs']]]]:
        """
        Specifies the method to use with `target_parameter_name`.
        The targets structure is documented below.
        """
        return pulumi.get(self, "targets")

    @targets.setter
    def targets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteTargetArgs']]]]):
        pulumi.set(self, "targets", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the document version number. If not specified, the default is
        the latest version.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class _DocumentExecuteState:
    def __init__(__self__, *,
                 creator: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 document_id: Optional[pulumi.Input[_builtins.str]] = None,
                 document_name: Optional[pulumi.Input[_builtins.str]] = None,
                 document_type: Optional[pulumi.Input[_builtins.str]] = None,
                 document_version_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 end_time: Optional[pulumi.Input[_builtins.int]] = None,
                 execution_parameters: Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteExecutionParameterArgs']]]] = None,
                 parameters: Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteParameterArgs']]]] = None,
                 start_time: Optional[pulumi.Input[_builtins.int]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 sys_tags: Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteSysTagArgs']]]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 target_parameter_name: Optional[pulumi.Input[_builtins.str]] = None,
                 targets: Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteTargetArgs']]]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 update_time: Optional[pulumi.Input[_builtins.int]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering DocumentExecute resources.
        :param pulumi.Input[_builtins.str] creator: Indicates the work order creator.
        :param pulumi.Input[_builtins.str] description: Specifies the execution description.
               
               <a name="key_value_struct"></a>
               The `parameters`, `sys_tags` blocks support:
        :param pulumi.Input[_builtins.str] document_id: Specifies the document ID.
        :param pulumi.Input[_builtins.str] document_name: Indicates the document name.
        :param pulumi.Input[_builtins.str] document_type: Specifies the type of document to perform.
               The value can be **PRIVATE** or **PUBLIC**.
        :param pulumi.Input[_builtins.str] document_version_id: Indicates the document version ID.
        :param pulumi.Input[_builtins.int] end_time: Indicates the work order execution end time.
        :param pulumi.Input[Sequence[pulumi.Input['DocumentExecuteExecutionParameterArgs']]] execution_parameters: Indicates the global parameters for work order execution.
        :param pulumi.Input[Sequence[pulumi.Input['DocumentExecuteParameterArgs']]] parameters: Specifies the global parameters.
               The parameters structure is documented below.
        :param pulumi.Input[_builtins.int] start_time: Indicates the work order execution start time.
        :param pulumi.Input[_builtins.str] status: Indicates the work order status.
        :param pulumi.Input[Sequence[pulumi.Input['DocumentExecuteSysTagArgs']]] sys_tags: Specifies the list of system tags.
               The sys_tags structure is documented below.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Indicates the key/value tags of the work order.
        :param pulumi.Input[_builtins.str] target_parameter_name: Specifies the parameter name of the batch execution object
               in rate control mode.
        :param pulumi.Input[Sequence[pulumi.Input['DocumentExecuteTargetArgs']]] targets: Specifies the method to use with `target_parameter_name`.
               The targets structure is documented below.
        :param pulumi.Input[_builtins.str] type: Indicates the work order type.
        :param pulumi.Input[_builtins.int] update_time: Indicates the work order update time.
        :param pulumi.Input[_builtins.str] version: Specifies the document version number. If not specified, the default is
               the latest version.
        """
        if creator is not None:
            pulumi.set(__self__, "creator", creator)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if document_id is not None:
            pulumi.set(__self__, "document_id", document_id)
        if document_name is not None:
            pulumi.set(__self__, "document_name", document_name)
        if document_type is not None:
            pulumi.set(__self__, "document_type", document_type)
        if document_version_id is not None:
            pulumi.set(__self__, "document_version_id", document_version_id)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if end_time is not None:
            pulumi.set(__self__, "end_time", end_time)
        if execution_parameters is not None:
            pulumi.set(__self__, "execution_parameters", execution_parameters)
        if parameters is not None:
            pulumi.set(__self__, "parameters", parameters)
        if start_time is not None:
            pulumi.set(__self__, "start_time", start_time)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if sys_tags is not None:
            pulumi.set(__self__, "sys_tags", sys_tags)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if target_parameter_name is not None:
            pulumi.set(__self__, "target_parameter_name", target_parameter_name)
        if targets is not None:
            pulumi.set(__self__, "targets", targets)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if update_time is not None:
            pulumi.set(__self__, "update_time", update_time)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter
    def creator(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the work order creator.
        """
        return pulumi.get(self, "creator")

    @creator.setter
    def creator(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "creator", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the execution description.

        <a name="key_value_struct"></a>
        The `parameters`, `sys_tags` blocks support:
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="documentId")
    def document_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the document ID.
        """
        return pulumi.get(self, "document_id")

    @document_id.setter
    def document_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "document_id", value)

    @_builtins.property
    @pulumi.getter(name="documentName")
    def document_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the document name.
        """
        return pulumi.get(self, "document_name")

    @document_name.setter
    def document_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "document_name", value)

    @_builtins.property
    @pulumi.getter(name="documentType")
    def document_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the type of document to perform.
        The value can be **PRIVATE** or **PUBLIC**.
        """
        return pulumi.get(self, "document_type")

    @document_type.setter
    def document_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "document_type", value)

    @_builtins.property
    @pulumi.getter(name="documentVersionId")
    def document_version_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the document version ID.
        """
        return pulumi.get(self, "document_version_id")

    @document_version_id.setter
    def document_version_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "document_version_id", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="endTime")
    def end_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Indicates the work order execution end time.
        """
        return pulumi.get(self, "end_time")

    @end_time.setter
    def end_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "end_time", value)

    @_builtins.property
    @pulumi.getter(name="executionParameters")
    def execution_parameters(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteExecutionParameterArgs']]]]:
        """
        Indicates the global parameters for work order execution.
        """
        return pulumi.get(self, "execution_parameters")

    @execution_parameters.setter
    def execution_parameters(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteExecutionParameterArgs']]]]):
        pulumi.set(self, "execution_parameters", value)

    @_builtins.property
    @pulumi.getter
    def parameters(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteParameterArgs']]]]:
        """
        Specifies the global parameters.
        The parameters structure is documented below.
        """
        return pulumi.get(self, "parameters")

    @parameters.setter
    def parameters(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteParameterArgs']]]]):
        pulumi.set(self, "parameters", value)

    @_builtins.property
    @pulumi.getter(name="startTime")
    def start_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Indicates the work order execution start time.
        """
        return pulumi.get(self, "start_time")

    @start_time.setter
    def start_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "start_time", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the work order status.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="sysTags")
    def sys_tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteSysTagArgs']]]]:
        """
        Specifies the list of system tags.
        The sys_tags structure is documented below.
        """
        return pulumi.get(self, "sys_tags")

    @sys_tags.setter
    def sys_tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteSysTagArgs']]]]):
        pulumi.set(self, "sys_tags", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Indicates the key/value tags of the work order.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter(name="targetParameterName")
    def target_parameter_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the parameter name of the batch execution object
        in rate control mode.
        """
        return pulumi.get(self, "target_parameter_name")

    @target_parameter_name.setter
    def target_parameter_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_parameter_name", value)

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteTargetArgs']]]]:
        """
        Specifies the method to use with `target_parameter_name`.
        The targets structure is documented below.
        """
        return pulumi.get(self, "targets")

    @targets.setter
    def targets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['DocumentExecuteTargetArgs']]]]):
        pulumi.set(self, "targets", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the work order type.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Indicates the work order update time.
        """
        return pulumi.get(self, "update_time")

    @update_time.setter
    def update_time(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "update_time", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the document version number. If not specified, the default is
        the latest version.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "version", value)


@pulumi.type_token("huaweicloud:coc/documentExecute:DocumentExecute")
class DocumentExecute(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 document_id: Optional[pulumi.Input[_builtins.str]] = None,
                 document_type: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 parameters: Optional[pulumi.Input[Sequence[pulumi.Input[Union['DocumentExecuteParameterArgs', 'DocumentExecuteParameterArgsDict']]]]] = None,
                 sys_tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['DocumentExecuteSysTagArgs', 'DocumentExecuteSysTagArgsDict']]]]] = None,
                 target_parameter_name: Optional[pulumi.Input[_builtins.str]] = None,
                 targets: Optional[pulumi.Input[Sequence[pulumi.Input[Union['DocumentExecuteTargetArgs', 'DocumentExecuteTargetArgsDict']]]]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a COC document execute resource within HuaweiCloud.

        > Deleting document execute resource is not supported, it will only be removed from the state.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        document_id = config.require_object("documentId")
        project_id = config.require_object("projectId")
        domain_id = config.require_object("domainId")
        test = huaweicloud.coc.DocumentExecute("test",
            document_id=document_id,
            parameters=[
                {
                    "key": "project_id",
                    "value": project_id,
                },
                {
                    "key": "agency_urn",
                    "value": f"iam::{domain_id}:agency:ServiceAgencyForCOC",
                },
            ])
        ```

        ## Import

        The COC document execution can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:coc/documentExecute:DocumentExecute test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason.

        The missing attributes include: `parameters`, `sys_tags` and `document_type`.

        It is generally recommended running `pulumi preview` after importing a document execution.

        You can then decide if changes should be applied to the document execution, or the resource definition should be updated

        to align with the document execution. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_coc_document_execute" "test" {

            ...

          lifecycle {

            ignore_changes = [
            
              parameters, sys_tags, document_type,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: Specifies the execution description.
               
               <a name="key_value_struct"></a>
               The `parameters`, `sys_tags` blocks support:
        :param pulumi.Input[_builtins.str] document_id: Specifies the document ID.
        :param pulumi.Input[_builtins.str] document_type: Specifies the type of document to perform.
               The value can be **PRIVATE** or **PUBLIC**.
        :param pulumi.Input[Sequence[pulumi.Input[Union['DocumentExecuteParameterArgs', 'DocumentExecuteParameterArgsDict']]]] parameters: Specifies the global parameters.
               The parameters structure is documented below.
        :param pulumi.Input[Sequence[pulumi.Input[Union['DocumentExecuteSysTagArgs', 'DocumentExecuteSysTagArgsDict']]]] sys_tags: Specifies the list of system tags.
               The sys_tags structure is documented below.
        :param pulumi.Input[_builtins.str] target_parameter_name: Specifies the parameter name of the batch execution object
               in rate control mode.
        :param pulumi.Input[Sequence[pulumi.Input[Union['DocumentExecuteTargetArgs', 'DocumentExecuteTargetArgsDict']]]] targets: Specifies the method to use with `target_parameter_name`.
               The targets structure is documented below.
        :param pulumi.Input[_builtins.str] version: Specifies the document version number. If not specified, the default is
               the latest version.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: DocumentExecuteArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a COC document execute resource within HuaweiCloud.

        > Deleting document execute resource is not supported, it will only be removed from the state.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        document_id = config.require_object("documentId")
        project_id = config.require_object("projectId")
        domain_id = config.require_object("domainId")
        test = huaweicloud.coc.DocumentExecute("test",
            document_id=document_id,
            parameters=[
                {
                    "key": "project_id",
                    "value": project_id,
                },
                {
                    "key": "agency_urn",
                    "value": f"iam::{domain_id}:agency:ServiceAgencyForCOC",
                },
            ])
        ```

        ## Import

        The COC document execution can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:coc/documentExecute:DocumentExecute test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason.

        The missing attributes include: `parameters`, `sys_tags` and `document_type`.

        It is generally recommended running `pulumi preview` after importing a document execution.

        You can then decide if changes should be applied to the document execution, or the resource definition should be updated

        to align with the document execution. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_coc_document_execute" "test" {

            ...

          lifecycle {

            ignore_changes = [
            
              parameters, sys_tags, document_type,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param DocumentExecuteArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(DocumentExecuteArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 document_id: Optional[pulumi.Input[_builtins.str]] = None,
                 document_type: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 parameters: Optional[pulumi.Input[Sequence[pulumi.Input[Union['DocumentExecuteParameterArgs', 'DocumentExecuteParameterArgsDict']]]]] = None,
                 sys_tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['DocumentExecuteSysTagArgs', 'DocumentExecuteSysTagArgsDict']]]]] = None,
                 target_parameter_name: Optional[pulumi.Input[_builtins.str]] = None,
                 targets: Optional[pulumi.Input[Sequence[pulumi.Input[Union['DocumentExecuteTargetArgs', 'DocumentExecuteTargetArgsDict']]]]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = DocumentExecuteArgs.__new__(DocumentExecuteArgs)

            __props__.__dict__["description"] = description
            if document_id is None and not opts.urn:
                raise TypeError("Missing required property 'document_id'")
            __props__.__dict__["document_id"] = document_id
            __props__.__dict__["document_type"] = document_type
            __props__.__dict__["enable_force_new"] = enable_force_new
            __props__.__dict__["parameters"] = parameters
            __props__.__dict__["sys_tags"] = sys_tags
            __props__.__dict__["target_parameter_name"] = target_parameter_name
            __props__.__dict__["targets"] = targets
            __props__.__dict__["version"] = version
            __props__.__dict__["creator"] = None
            __props__.__dict__["document_name"] = None
            __props__.__dict__["document_version_id"] = None
            __props__.__dict__["end_time"] = None
            __props__.__dict__["execution_parameters"] = None
            __props__.__dict__["start_time"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["tags"] = None
            __props__.__dict__["type"] = None
            __props__.__dict__["update_time"] = None
        super(DocumentExecute, __self__).__init__(
            'huaweicloud:coc/documentExecute:DocumentExecute',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            creator: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            document_id: Optional[pulumi.Input[_builtins.str]] = None,
            document_name: Optional[pulumi.Input[_builtins.str]] = None,
            document_type: Optional[pulumi.Input[_builtins.str]] = None,
            document_version_id: Optional[pulumi.Input[_builtins.str]] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            end_time: Optional[pulumi.Input[_builtins.int]] = None,
            execution_parameters: Optional[pulumi.Input[Sequence[pulumi.Input[Union['DocumentExecuteExecutionParameterArgs', 'DocumentExecuteExecutionParameterArgsDict']]]]] = None,
            parameters: Optional[pulumi.Input[Sequence[pulumi.Input[Union['DocumentExecuteParameterArgs', 'DocumentExecuteParameterArgsDict']]]]] = None,
            start_time: Optional[pulumi.Input[_builtins.int]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            sys_tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['DocumentExecuteSysTagArgs', 'DocumentExecuteSysTagArgsDict']]]]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            target_parameter_name: Optional[pulumi.Input[_builtins.str]] = None,
            targets: Optional[pulumi.Input[Sequence[pulumi.Input[Union['DocumentExecuteTargetArgs', 'DocumentExecuteTargetArgsDict']]]]] = None,
            type: Optional[pulumi.Input[_builtins.str]] = None,
            update_time: Optional[pulumi.Input[_builtins.int]] = None,
            version: Optional[pulumi.Input[_builtins.str]] = None) -> 'DocumentExecute':
        """
        Get an existing DocumentExecute resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] creator: Indicates the work order creator.
        :param pulumi.Input[_builtins.str] description: Specifies the execution description.
               
               <a name="key_value_struct"></a>
               The `parameters`, `sys_tags` blocks support:
        :param pulumi.Input[_builtins.str] document_id: Specifies the document ID.
        :param pulumi.Input[_builtins.str] document_name: Indicates the document name.
        :param pulumi.Input[_builtins.str] document_type: Specifies the type of document to perform.
               The value can be **PRIVATE** or **PUBLIC**.
        :param pulumi.Input[_builtins.str] document_version_id: Indicates the document version ID.
        :param pulumi.Input[_builtins.int] end_time: Indicates the work order execution end time.
        :param pulumi.Input[Sequence[pulumi.Input[Union['DocumentExecuteExecutionParameterArgs', 'DocumentExecuteExecutionParameterArgsDict']]]] execution_parameters: Indicates the global parameters for work order execution.
        :param pulumi.Input[Sequence[pulumi.Input[Union['DocumentExecuteParameterArgs', 'DocumentExecuteParameterArgsDict']]]] parameters: Specifies the global parameters.
               The parameters structure is documented below.
        :param pulumi.Input[_builtins.int] start_time: Indicates the work order execution start time.
        :param pulumi.Input[_builtins.str] status: Indicates the work order status.
        :param pulumi.Input[Sequence[pulumi.Input[Union['DocumentExecuteSysTagArgs', 'DocumentExecuteSysTagArgsDict']]]] sys_tags: Specifies the list of system tags.
               The sys_tags structure is documented below.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Indicates the key/value tags of the work order.
        :param pulumi.Input[_builtins.str] target_parameter_name: Specifies the parameter name of the batch execution object
               in rate control mode.
        :param pulumi.Input[Sequence[pulumi.Input[Union['DocumentExecuteTargetArgs', 'DocumentExecuteTargetArgsDict']]]] targets: Specifies the method to use with `target_parameter_name`.
               The targets structure is documented below.
        :param pulumi.Input[_builtins.str] type: Indicates the work order type.
        :param pulumi.Input[_builtins.int] update_time: Indicates the work order update time.
        :param pulumi.Input[_builtins.str] version: Specifies the document version number. If not specified, the default is
               the latest version.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _DocumentExecuteState.__new__(_DocumentExecuteState)

        __props__.__dict__["creator"] = creator
        __props__.__dict__["description"] = description
        __props__.__dict__["document_id"] = document_id
        __props__.__dict__["document_name"] = document_name
        __props__.__dict__["document_type"] = document_type
        __props__.__dict__["document_version_id"] = document_version_id
        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["end_time"] = end_time
        __props__.__dict__["execution_parameters"] = execution_parameters
        __props__.__dict__["parameters"] = parameters
        __props__.__dict__["start_time"] = start_time
        __props__.__dict__["status"] = status
        __props__.__dict__["sys_tags"] = sys_tags
        __props__.__dict__["tags"] = tags
        __props__.__dict__["target_parameter_name"] = target_parameter_name
        __props__.__dict__["targets"] = targets
        __props__.__dict__["type"] = type
        __props__.__dict__["update_time"] = update_time
        __props__.__dict__["version"] = version
        return DocumentExecute(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def creator(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the work order creator.
        """
        return pulumi.get(self, "creator")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the execution description.

        <a name="key_value_struct"></a>
        The `parameters`, `sys_tags` blocks support:
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="documentId")
    def document_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the document ID.
        """
        return pulumi.get(self, "document_id")

    @_builtins.property
    @pulumi.getter(name="documentName")
    def document_name(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the document name.
        """
        return pulumi.get(self, "document_name")

    @_builtins.property
    @pulumi.getter(name="documentType")
    def document_type(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the type of document to perform.
        The value can be **PRIVATE** or **PUBLIC**.
        """
        return pulumi.get(self, "document_type")

    @_builtins.property
    @pulumi.getter(name="documentVersionId")
    def document_version_id(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the document version ID.
        """
        return pulumi.get(self, "document_version_id")

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter(name="endTime")
    def end_time(self) -> pulumi.Output[_builtins.int]:
        """
        Indicates the work order execution end time.
        """
        return pulumi.get(self, "end_time")

    @_builtins.property
    @pulumi.getter(name="executionParameters")
    def execution_parameters(self) -> pulumi.Output[Sequence['outputs.DocumentExecuteExecutionParameter']]:
        """
        Indicates the global parameters for work order execution.
        """
        return pulumi.get(self, "execution_parameters")

    @_builtins.property
    @pulumi.getter
    def parameters(self) -> pulumi.Output[Optional[Sequence['outputs.DocumentExecuteParameter']]]:
        """
        Specifies the global parameters.
        The parameters structure is documented below.
        """
        return pulumi.get(self, "parameters")

    @_builtins.property
    @pulumi.getter(name="startTime")
    def start_time(self) -> pulumi.Output[_builtins.int]:
        """
        Indicates the work order execution start time.
        """
        return pulumi.get(self, "start_time")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the work order status.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="sysTags")
    def sys_tags(self) -> pulumi.Output[Optional[Sequence['outputs.DocumentExecuteSysTag']]]:
        """
        Specifies the list of system tags.
        The sys_tags structure is documented below.
        """
        return pulumi.get(self, "sys_tags")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Mapping[str, _builtins.str]]:
        """
        Indicates the key/value tags of the work order.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter(name="targetParameterName")
    def target_parameter_name(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the parameter name of the batch execution object
        in rate control mode.
        """
        return pulumi.get(self, "target_parameter_name")

    @_builtins.property
    @pulumi.getter
    def targets(self) -> pulumi.Output[Optional[Sequence['outputs.DocumentExecuteTarget']]]:
        """
        Specifies the method to use with `target_parameter_name`.
        The targets structure is documented below.
        """
        return pulumi.get(self, "targets")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the work order type.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> pulumi.Output[_builtins.int]:
        """
        Indicates the work order update time.
        """
        return pulumi.get(self, "update_time")

    @_builtins.property
    @pulumi.getter
    def version(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the document version number. If not specified, the default is
        the latest version.
        """
        return pulumi.get(self, "version")

