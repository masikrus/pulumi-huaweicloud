# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['GroupDomainAssociateArgs', 'GroupDomainAssociate']

@pulumi.input_type
class GroupDomainAssociateArgs:
    def __init__(__self__, *,
                 group_id: pulumi.Input[_builtins.str],
                 instance_id: pulumi.Input[_builtins.str],
                 url_domain: pulumi.Input[_builtins.str],
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 ingress_http_port: Optional[pulumi.Input[_builtins.int]] = None,
                 ingress_https_port: Optional[pulumi.Input[_builtins.int]] = None,
                 is_http_redirect_to_https: Optional[pulumi.Input[_builtins.bool]] = None,
                 min_ssl_version: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a GroupDomainAssociate resource.
        :param pulumi.Input[_builtins.str] group_id: Specifies the ID of the group to associate with the domain name.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the dedicated instance to which the group belongs.
        :param pulumi.Input[_builtins.str] url_domain: Specifies the associated domain name.
               The maximum valid length is `255` characters and the value must conform to the domain name specifications (the regular
               expression **^(a-zA-Z0-9?\\.){1,7}\\[a-zA-Z\\]{2,64}\\.?$** or the regular expression
               **^*{1,6}\\.\\[a-zA-Z\\]{2,64}.?$**).
        :param pulumi.Input[_builtins.int] ingress_http_port: Specifies the HTTP protocol inbound access port bound to the domain name.  
               The valid value is `-1` (disable), `80` or custom HTTP inbound access port (must be opened by the instance, ranges
               from `1,024` to `49,151`).
        :param pulumi.Input[_builtins.int] ingress_https_port: Specifies the HTTPS protocol inbound access port bound to the domain name.  
               The valid value is `-1` (disable), `443` or custom HTTPS inbound access port (must be opened by the instance, ranges
               from `1,024` to `49,151`).
               
               > `ingress_http_port` and `ingress_https_port` cannot be disabled at the same time.
        :param pulumi.Input[_builtins.bool] is_http_redirect_to_https: Specifies whether to enable redirection from `HTTP` to `HTTPS`.
               Defaults to `false`.
        :param pulumi.Input[_builtins.str] min_ssl_version: Specifies the minimum SSL protocol version.  
               The valid values are as follows:
               + **TLSv1.1**
               + **TLSv1.2**
               
               The default value is different in different regions. For the specific default value, please consult the corresponding
               service OnCall through the [service ticket](https://support.huaweicloud.com/intl/en-us/usermanual-ticket/topic_0065264094.html).
        :param pulumi.Input[_builtins.str] region: Specifies the region where the APIG (API) group is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        pulumi.set(__self__, "group_id", group_id)
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "url_domain", url_domain)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if ingress_http_port is not None:
            pulumi.set(__self__, "ingress_http_port", ingress_http_port)
        if ingress_https_port is not None:
            pulumi.set(__self__, "ingress_https_port", ingress_https_port)
        if is_http_redirect_to_https is not None:
            pulumi.set(__self__, "is_http_redirect_to_https", is_http_redirect_to_https)
        if min_ssl_version is not None:
            pulumi.set(__self__, "min_ssl_version", min_ssl_version)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the group to associate with the domain name.
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the dedicated instance to which the group belongs.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="urlDomain")
    def url_domain(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the associated domain name.
        The maximum valid length is `255` characters and the value must conform to the domain name specifications (the regular
        expression **^(a-zA-Z0-9?\\.){1,7}\\[a-zA-Z\\]{2,64}\\.?$** or the regular expression
        **^*{1,6}\\.\\[a-zA-Z\\]{2,64}.?$**).
        """
        return pulumi.get(self, "url_domain")

    @url_domain.setter
    def url_domain(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "url_domain", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="ingressHttpPort")
    def ingress_http_port(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the HTTP protocol inbound access port bound to the domain name.  
        The valid value is `-1` (disable), `80` or custom HTTP inbound access port (must be opened by the instance, ranges
        from `1,024` to `49,151`).
        """
        return pulumi.get(self, "ingress_http_port")

    @ingress_http_port.setter
    def ingress_http_port(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ingress_http_port", value)

    @_builtins.property
    @pulumi.getter(name="ingressHttpsPort")
    def ingress_https_port(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the HTTPS protocol inbound access port bound to the domain name.  
        The valid value is `-1` (disable), `443` or custom HTTPS inbound access port (must be opened by the instance, ranges
        from `1,024` to `49,151`).

        > `ingress_http_port` and `ingress_https_port` cannot be disabled at the same time.
        """
        return pulumi.get(self, "ingress_https_port")

    @ingress_https_port.setter
    def ingress_https_port(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ingress_https_port", value)

    @_builtins.property
    @pulumi.getter(name="isHttpRedirectToHttps")
    def is_http_redirect_to_https(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to enable redirection from `HTTP` to `HTTPS`.
        Defaults to `false`.
        """
        return pulumi.get(self, "is_http_redirect_to_https")

    @is_http_redirect_to_https.setter
    def is_http_redirect_to_https(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "is_http_redirect_to_https", value)

    @_builtins.property
    @pulumi.getter(name="minSslVersion")
    def min_ssl_version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the minimum SSL protocol version.  
        The valid values are as follows:
        + **TLSv1.1**
        + **TLSv1.2**

        The default value is different in different regions. For the specific default value, please consult the corresponding
        service OnCall through the [service ticket](https://support.huaweicloud.com/intl/en-us/usermanual-ticket/topic_0065264094.html).
        """
        return pulumi.get(self, "min_ssl_version")

    @min_ssl_version.setter
    def min_ssl_version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "min_ssl_version", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the APIG (API) group is located.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _GroupDomainAssociateState:
    def __init__(__self__, *,
                 domain_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ingress_http_port: Optional[pulumi.Input[_builtins.int]] = None,
                 ingress_https_port: Optional[pulumi.Input[_builtins.int]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 is_http_redirect_to_https: Optional[pulumi.Input[_builtins.bool]] = None,
                 min_ssl_version: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 url_domain: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering GroupDomainAssociate resources.
        :param pulumi.Input[_builtins.str] domain_id: The associated domain ID.
        :param pulumi.Input[_builtins.str] group_id: Specifies the ID of the group to associate with the domain name.
        :param pulumi.Input[_builtins.int] ingress_http_port: Specifies the HTTP protocol inbound access port bound to the domain name.  
               The valid value is `-1` (disable), `80` or custom HTTP inbound access port (must be opened by the instance, ranges
               from `1,024` to `49,151`).
        :param pulumi.Input[_builtins.int] ingress_https_port: Specifies the HTTPS protocol inbound access port bound to the domain name.  
               The valid value is `-1` (disable), `443` or custom HTTPS inbound access port (must be opened by the instance, ranges
               from `1,024` to `49,151`).
               
               > `ingress_http_port` and `ingress_https_port` cannot be disabled at the same time.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the dedicated instance to which the group belongs.
        :param pulumi.Input[_builtins.bool] is_http_redirect_to_https: Specifies whether to enable redirection from `HTTP` to `HTTPS`.
               Defaults to `false`.
        :param pulumi.Input[_builtins.str] min_ssl_version: Specifies the minimum SSL protocol version.  
               The valid values are as follows:
               + **TLSv1.1**
               + **TLSv1.2**
               
               The default value is different in different regions. For the specific default value, please consult the corresponding
               service OnCall through the [service ticket](https://support.huaweicloud.com/intl/en-us/usermanual-ticket/topic_0065264094.html).
        :param pulumi.Input[_builtins.str] region: Specifies the region where the APIG (API) group is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] url_domain: Specifies the associated domain name.
               The maximum valid length is `255` characters and the value must conform to the domain name specifications (the regular
               expression **^(a-zA-Z0-9?\\.){1,7}\\[a-zA-Z\\]{2,64}\\.?$** or the regular expression
               **^*{1,6}\\.\\[a-zA-Z\\]{2,64}.?$**).
        """
        if domain_id is not None:
            pulumi.set(__self__, "domain_id", domain_id)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if group_id is not None:
            pulumi.set(__self__, "group_id", group_id)
        if ingress_http_port is not None:
            pulumi.set(__self__, "ingress_http_port", ingress_http_port)
        if ingress_https_port is not None:
            pulumi.set(__self__, "ingress_https_port", ingress_https_port)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if is_http_redirect_to_https is not None:
            pulumi.set(__self__, "is_http_redirect_to_https", is_http_redirect_to_https)
        if min_ssl_version is not None:
            pulumi.set(__self__, "min_ssl_version", min_ssl_version)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if url_domain is not None:
            pulumi.set(__self__, "url_domain", url_domain)

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The associated domain ID.
        """
        return pulumi.get(self, "domain_id")

    @domain_id.setter
    def domain_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "domain_id", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the group to associate with the domain name.
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter(name="ingressHttpPort")
    def ingress_http_port(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the HTTP protocol inbound access port bound to the domain name.  
        The valid value is `-1` (disable), `80` or custom HTTP inbound access port (must be opened by the instance, ranges
        from `1,024` to `49,151`).
        """
        return pulumi.get(self, "ingress_http_port")

    @ingress_http_port.setter
    def ingress_http_port(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ingress_http_port", value)

    @_builtins.property
    @pulumi.getter(name="ingressHttpsPort")
    def ingress_https_port(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the HTTPS protocol inbound access port bound to the domain name.  
        The valid value is `-1` (disable), `443` or custom HTTPS inbound access port (must be opened by the instance, ranges
        from `1,024` to `49,151`).

        > `ingress_http_port` and `ingress_https_port` cannot be disabled at the same time.
        """
        return pulumi.get(self, "ingress_https_port")

    @ingress_https_port.setter
    def ingress_https_port(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ingress_https_port", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the dedicated instance to which the group belongs.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="isHttpRedirectToHttps")
    def is_http_redirect_to_https(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to enable redirection from `HTTP` to `HTTPS`.
        Defaults to `false`.
        """
        return pulumi.get(self, "is_http_redirect_to_https")

    @is_http_redirect_to_https.setter
    def is_http_redirect_to_https(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "is_http_redirect_to_https", value)

    @_builtins.property
    @pulumi.getter(name="minSslVersion")
    def min_ssl_version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the minimum SSL protocol version.  
        The valid values are as follows:
        + **TLSv1.1**
        + **TLSv1.2**

        The default value is different in different regions. For the specific default value, please consult the corresponding
        service OnCall through the [service ticket](https://support.huaweicloud.com/intl/en-us/usermanual-ticket/topic_0065264094.html).
        """
        return pulumi.get(self, "min_ssl_version")

    @min_ssl_version.setter
    def min_ssl_version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "min_ssl_version", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the APIG (API) group is located.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="urlDomain")
    def url_domain(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the associated domain name.
        The maximum valid length is `255` characters and the value must conform to the domain name specifications (the regular
        expression **^(a-zA-Z0-9?\\.){1,7}\\[a-zA-Z\\]{2,64}\\.?$** or the regular expression
        **^*{1,6}\\.\\[a-zA-Z\\]{2,64}.?$**).
        """
        return pulumi.get(self, "url_domain")

    @url_domain.setter
    def url_domain(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "url_domain", value)


@pulumi.type_token("huaweicloud:DedicatedApig/groupDomainAssociate:GroupDomainAssociate")
class GroupDomainAssociate(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ingress_http_port: Optional[pulumi.Input[_builtins.int]] = None,
                 ingress_https_port: Optional[pulumi.Input[_builtins.int]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 is_http_redirect_to_https: Optional[pulumi.Input[_builtins.bool]] = None,
                 min_ssl_version: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 url_domain: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Use this resource to associate a domain name with an API group.

        > This resource cannot be used simultaneously with the domain name management parameter (`url_domains`) of the group
           resource.<br>Using `lifecycle.ignore_changes` to ignore changes for the corresponding group when using this resource.

        > Different groups under the same dedicated instance cannot be bound to the same independent domain name.
           Each API group can be associated with up to `5` domain names.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        group_id = config.require_object("groupId")
        domain_name = config.require_object("domainName")
        test = huaweicloud.dedicatedapig.GroupDomainAssociate("test",
            instance_id=instance_id,
            group_id=group_id,
            url_domain=domain_name,
            min_ssl_version="TLSv1.1",
            ingress_http_port=80,
            ingress_https_port=-1,
            is_http_redirect_to_https=True)
        ```

        ## Import

        Associated information for the specified domain and group can be imported using resource `id` (consists of

        `instance_id`, `group_id` and `url_domain`, separated by the slashes (/)), e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:DedicatedApig/groupDomainAssociate:GroupDomainAssociate test <instance_id>/<group_id>/<url_domain>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response.

        The missing attributes includes: `is_http_redirect_to_https`.

        It is generally recommended running `pulumi preview` after importing this resource.

        You can then decide if changes should be applied to the resource, or the definition should be updated to align with the

        resource. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_apig_group_domain_associate" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              is_http_redirect_to_https,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] group_id: Specifies the ID of the group to associate with the domain name.
        :param pulumi.Input[_builtins.int] ingress_http_port: Specifies the HTTP protocol inbound access port bound to the domain name.  
               The valid value is `-1` (disable), `80` or custom HTTP inbound access port (must be opened by the instance, ranges
               from `1,024` to `49,151`).
        :param pulumi.Input[_builtins.int] ingress_https_port: Specifies the HTTPS protocol inbound access port bound to the domain name.  
               The valid value is `-1` (disable), `443` or custom HTTPS inbound access port (must be opened by the instance, ranges
               from `1,024` to `49,151`).
               
               > `ingress_http_port` and `ingress_https_port` cannot be disabled at the same time.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the dedicated instance to which the group belongs.
        :param pulumi.Input[_builtins.bool] is_http_redirect_to_https: Specifies whether to enable redirection from `HTTP` to `HTTPS`.
               Defaults to `false`.
        :param pulumi.Input[_builtins.str] min_ssl_version: Specifies the minimum SSL protocol version.  
               The valid values are as follows:
               + **TLSv1.1**
               + **TLSv1.2**
               
               The default value is different in different regions. For the specific default value, please consult the corresponding
               service OnCall through the [service ticket](https://support.huaweicloud.com/intl/en-us/usermanual-ticket/topic_0065264094.html).
        :param pulumi.Input[_builtins.str] region: Specifies the region where the APIG (API) group is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] url_domain: Specifies the associated domain name.
               The maximum valid length is `255` characters and the value must conform to the domain name specifications (the regular
               expression **^(a-zA-Z0-9?\\.){1,7}\\[a-zA-Z\\]{2,64}\\.?$** or the regular expression
               **^*{1,6}\\.\\[a-zA-Z\\]{2,64}.?$**).
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: GroupDomainAssociateArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Use this resource to associate a domain name with an API group.

        > This resource cannot be used simultaneously with the domain name management parameter (`url_domains`) of the group
           resource.<br>Using `lifecycle.ignore_changes` to ignore changes for the corresponding group when using this resource.

        > Different groups under the same dedicated instance cannot be bound to the same independent domain name.
           Each API group can be associated with up to `5` domain names.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        group_id = config.require_object("groupId")
        domain_name = config.require_object("domainName")
        test = huaweicloud.dedicatedapig.GroupDomainAssociate("test",
            instance_id=instance_id,
            group_id=group_id,
            url_domain=domain_name,
            min_ssl_version="TLSv1.1",
            ingress_http_port=80,
            ingress_https_port=-1,
            is_http_redirect_to_https=True)
        ```

        ## Import

        Associated information for the specified domain and group can be imported using resource `id` (consists of

        `instance_id`, `group_id` and `url_domain`, separated by the slashes (/)), e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:DedicatedApig/groupDomainAssociate:GroupDomainAssociate test <instance_id>/<group_id>/<url_domain>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response.

        The missing attributes includes: `is_http_redirect_to_https`.

        It is generally recommended running `pulumi preview` after importing this resource.

        You can then decide if changes should be applied to the resource, or the definition should be updated to align with the

        resource. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_apig_group_domain_associate" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              is_http_redirect_to_https,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param GroupDomainAssociateArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(GroupDomainAssociateArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ingress_http_port: Optional[pulumi.Input[_builtins.int]] = None,
                 ingress_https_port: Optional[pulumi.Input[_builtins.int]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 is_http_redirect_to_https: Optional[pulumi.Input[_builtins.bool]] = None,
                 min_ssl_version: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 url_domain: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = GroupDomainAssociateArgs.__new__(GroupDomainAssociateArgs)

            __props__.__dict__["enable_force_new"] = enable_force_new
            if group_id is None and not opts.urn:
                raise TypeError("Missing required property 'group_id'")
            __props__.__dict__["group_id"] = group_id
            __props__.__dict__["ingress_http_port"] = ingress_http_port
            __props__.__dict__["ingress_https_port"] = ingress_https_port
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["is_http_redirect_to_https"] = is_http_redirect_to_https
            __props__.__dict__["min_ssl_version"] = min_ssl_version
            __props__.__dict__["region"] = region
            if url_domain is None and not opts.urn:
                raise TypeError("Missing required property 'url_domain'")
            __props__.__dict__["url_domain"] = url_domain
            __props__.__dict__["domain_id"] = None
        super(GroupDomainAssociate, __self__).__init__(
            'huaweicloud:DedicatedApig/groupDomainAssociate:GroupDomainAssociate',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            domain_id: Optional[pulumi.Input[_builtins.str]] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            group_id: Optional[pulumi.Input[_builtins.str]] = None,
            ingress_http_port: Optional[pulumi.Input[_builtins.int]] = None,
            ingress_https_port: Optional[pulumi.Input[_builtins.int]] = None,
            instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            is_http_redirect_to_https: Optional[pulumi.Input[_builtins.bool]] = None,
            min_ssl_version: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            url_domain: Optional[pulumi.Input[_builtins.str]] = None) -> 'GroupDomainAssociate':
        """
        Get an existing GroupDomainAssociate resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] domain_id: The associated domain ID.
        :param pulumi.Input[_builtins.str] group_id: Specifies the ID of the group to associate with the domain name.
        :param pulumi.Input[_builtins.int] ingress_http_port: Specifies the HTTP protocol inbound access port bound to the domain name.  
               The valid value is `-1` (disable), `80` or custom HTTP inbound access port (must be opened by the instance, ranges
               from `1,024` to `49,151`).
        :param pulumi.Input[_builtins.int] ingress_https_port: Specifies the HTTPS protocol inbound access port bound to the domain name.  
               The valid value is `-1` (disable), `443` or custom HTTPS inbound access port (must be opened by the instance, ranges
               from `1,024` to `49,151`).
               
               > `ingress_http_port` and `ingress_https_port` cannot be disabled at the same time.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the dedicated instance to which the group belongs.
        :param pulumi.Input[_builtins.bool] is_http_redirect_to_https: Specifies whether to enable redirection from `HTTP` to `HTTPS`.
               Defaults to `false`.
        :param pulumi.Input[_builtins.str] min_ssl_version: Specifies the minimum SSL protocol version.  
               The valid values are as follows:
               + **TLSv1.1**
               + **TLSv1.2**
               
               The default value is different in different regions. For the specific default value, please consult the corresponding
               service OnCall through the [service ticket](https://support.huaweicloud.com/intl/en-us/usermanual-ticket/topic_0065264094.html).
        :param pulumi.Input[_builtins.str] region: Specifies the region where the APIG (API) group is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] url_domain: Specifies the associated domain name.
               The maximum valid length is `255` characters and the value must conform to the domain name specifications (the regular
               expression **^(a-zA-Z0-9?\\.){1,7}\\[a-zA-Z\\]{2,64}\\.?$** or the regular expression
               **^*{1,6}\\.\\[a-zA-Z\\]{2,64}.?$**).
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _GroupDomainAssociateState.__new__(_GroupDomainAssociateState)

        __props__.__dict__["domain_id"] = domain_id
        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["group_id"] = group_id
        __props__.__dict__["ingress_http_port"] = ingress_http_port
        __props__.__dict__["ingress_https_port"] = ingress_https_port
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["is_http_redirect_to_https"] = is_http_redirect_to_https
        __props__.__dict__["min_ssl_version"] = min_ssl_version
        __props__.__dict__["region"] = region
        __props__.__dict__["url_domain"] = url_domain
        return GroupDomainAssociate(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> pulumi.Output[_builtins.str]:
        """
        The associated domain ID.
        """
        return pulumi.get(self, "domain_id")

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the group to associate with the domain name.
        """
        return pulumi.get(self, "group_id")

    @_builtins.property
    @pulumi.getter(name="ingressHttpPort")
    def ingress_http_port(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the HTTP protocol inbound access port bound to the domain name.  
        The valid value is `-1` (disable), `80` or custom HTTP inbound access port (must be opened by the instance, ranges
        from `1,024` to `49,151`).
        """
        return pulumi.get(self, "ingress_http_port")

    @_builtins.property
    @pulumi.getter(name="ingressHttpsPort")
    def ingress_https_port(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the HTTPS protocol inbound access port bound to the domain name.  
        The valid value is `-1` (disable), `443` or custom HTTPS inbound access port (must be opened by the instance, ranges
        from `1,024` to `49,151`).

        > `ingress_http_port` and `ingress_https_port` cannot be disabled at the same time.
        """
        return pulumi.get(self, "ingress_https_port")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the dedicated instance to which the group belongs.
        """
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter(name="isHttpRedirectToHttps")
    def is_http_redirect_to_https(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether to enable redirection from `HTTP` to `HTTPS`.
        Defaults to `false`.
        """
        return pulumi.get(self, "is_http_redirect_to_https")

    @_builtins.property
    @pulumi.getter(name="minSslVersion")
    def min_ssl_version(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the minimum SSL protocol version.  
        The valid values are as follows:
        + **TLSv1.1**
        + **TLSv1.2**

        The default value is different in different regions. For the specific default value, please consult the corresponding
        service OnCall through the [service ticket](https://support.huaweicloud.com/intl/en-us/usermanual-ticket/topic_0065264094.html).
        """
        return pulumi.get(self, "min_ssl_version")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region where the APIG (API) group is located.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="urlDomain")
    def url_domain(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the associated domain name.
        The maximum valid length is `255` characters and the value must conform to the domain name specifications (the regular
        expression **^(a-zA-Z0-9?\\.){1,7}\\[a-zA-Z\\]{2,64}\\.?$** or the regular expression
        **^*{1,6}\\.\\[a-zA-Z\\]{2,64}.?$**).
        """
        return pulumi.get(self, "url_domain")

