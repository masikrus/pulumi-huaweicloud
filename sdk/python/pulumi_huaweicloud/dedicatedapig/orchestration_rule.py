# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['OrchestrationRuleArgs', 'OrchestrationRule']

@pulumi.input_type
class OrchestrationRuleArgs:
    def __init__(__self__, *,
                 instance_id: pulumi.Input[_builtins.str],
                 strategy: pulumi.Input[_builtins.str],
                 is_preprocessing: Optional[pulumi.Input[_builtins.bool]] = None,
                 mapped_param: Optional[pulumi.Input[_builtins.str]] = None,
                 maps: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a OrchestrationRule resource.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the dedicated instance to which the orchestration
               rule belongs.
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] strategy: Specifies the type of the orchestration rule.  
               The valid values are as follows:
               + **list**: Maps the values ​​in the list to new values.
               + **range**: Maps the values ​​in the range to new values.
               + **hash**: The value of the request header is directly mapped to the new request header after hash calculation.
               + **hash_range**: Use the request parameter to generate a hash value, and then use the hash value to perform range
               arrangement.
               + **none_value**: Value returned when the request parameter is empty.
               + **default**: When the request parameters exist but no orchestration rule can match them, the orchestration
               mapping value of the default rule is returned.
               + **head_n**: Try to intercept the first N characters of the string as the new value.
               + **tail_n**: Try to intercept the last N characters of the string as the new value.
        :param pulumi.Input[_builtins.bool] is_preprocessing: Specifies whether rule is a preprocessing rule.  
               Defaults to **false**. Changing this will create a new resource.
               
               > Type **none_value** and type **default** do not have this configuration.
        :param pulumi.Input[_builtins.str] mapped_param: Specifies the parameter configuration after orchestration, in JSON
               format.
               Changing this will create a new resource.
               For the parameter configuration, please refer to the [document](https://support.huaweicloud.com/intl/en-us/api-apig/CreateOrchestration.html#CreateOrchestration__request_OrchestrationMappedParam).
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] maps: Specifies the list of orchestration mapping rules, each item should be in JSON format.
               For the parameter configuration of list items, please refer to the [document](https://support.huaweicloud.com/intl/en-us/api-apig/CreateOrchestration.html#CreateOrchestration__request_OrchestrationMap).
        :param pulumi.Input[_builtins.str] name: Specifies the name of the orchestration rule.  
               The valid length is limited from `3` to `64`, only letters, digits and underscores (_) are allowed.
               The name must start with a letter and must be unique.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the orchestration rule is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "strategy", strategy)
        if is_preprocessing is not None:
            pulumi.set(__self__, "is_preprocessing", is_preprocessing)
        if mapped_param is not None:
            pulumi.set(__self__, "mapped_param", mapped_param)
        if maps is not None:
            pulumi.set(__self__, "maps", maps)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the dedicated instance to which the orchestration
        rule belongs.
        Changing this will create a new resource.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter
    def strategy(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the type of the orchestration rule.  
        The valid values are as follows:
        + **list**: Maps the values ​​in the list to new values.
        + **range**: Maps the values ​​in the range to new values.
        + **hash**: The value of the request header is directly mapped to the new request header after hash calculation.
        + **hash_range**: Use the request parameter to generate a hash value, and then use the hash value to perform range
        arrangement.
        + **none_value**: Value returned when the request parameter is empty.
        + **default**: When the request parameters exist but no orchestration rule can match them, the orchestration
        mapping value of the default rule is returned.
        + **head_n**: Try to intercept the first N characters of the string as the new value.
        + **tail_n**: Try to intercept the last N characters of the string as the new value.
        """
        return pulumi.get(self, "strategy")

    @strategy.setter
    def strategy(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "strategy", value)

    @_builtins.property
    @pulumi.getter(name="isPreprocessing")
    def is_preprocessing(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether rule is a preprocessing rule.  
        Defaults to **false**. Changing this will create a new resource.

        > Type **none_value** and type **default** do not have this configuration.
        """
        return pulumi.get(self, "is_preprocessing")

    @is_preprocessing.setter
    def is_preprocessing(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "is_preprocessing", value)

    @_builtins.property
    @pulumi.getter(name="mappedParam")
    def mapped_param(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the parameter configuration after orchestration, in JSON
        format.
        Changing this will create a new resource.
        For the parameter configuration, please refer to the [document](https://support.huaweicloud.com/intl/en-us/api-apig/CreateOrchestration.html#CreateOrchestration__request_OrchestrationMappedParam).
        """
        return pulumi.get(self, "mapped_param")

    @mapped_param.setter
    def mapped_param(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "mapped_param", value)

    @_builtins.property
    @pulumi.getter
    def maps(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the list of orchestration mapping rules, each item should be in JSON format.
        For the parameter configuration of list items, please refer to the [document](https://support.huaweicloud.com/intl/en-us/api-apig/CreateOrchestration.html#CreateOrchestration__request_OrchestrationMap).
        """
        return pulumi.get(self, "maps")

    @maps.setter
    def maps(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "maps", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the orchestration rule.  
        The valid length is limited from `3` to `64`, only letters, digits and underscores (_) are allowed.
        The name must start with a letter and must be unique.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the orchestration rule is located.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _OrchestrationRuleState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 is_preprocessing: Optional[pulumi.Input[_builtins.bool]] = None,
                 mapped_param: Optional[pulumi.Input[_builtins.str]] = None,
                 maps: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 strategy: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering OrchestrationRule resources.
        :param pulumi.Input[_builtins.str] created_at: The creation time of the orchestration rule, in RFC3339 format.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the dedicated instance to which the orchestration
               rule belongs.
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.bool] is_preprocessing: Specifies whether rule is a preprocessing rule.  
               Defaults to **false**. Changing this will create a new resource.
               
               > Type **none_value** and type **default** do not have this configuration.
        :param pulumi.Input[_builtins.str] mapped_param: Specifies the parameter configuration after orchestration, in JSON
               format.
               Changing this will create a new resource.
               For the parameter configuration, please refer to the [document](https://support.huaweicloud.com/intl/en-us/api-apig/CreateOrchestration.html#CreateOrchestration__request_OrchestrationMappedParam).
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] maps: Specifies the list of orchestration mapping rules, each item should be in JSON format.
               For the parameter configuration of list items, please refer to the [document](https://support.huaweicloud.com/intl/en-us/api-apig/CreateOrchestration.html#CreateOrchestration__request_OrchestrationMap).
        :param pulumi.Input[_builtins.str] name: Specifies the name of the orchestration rule.  
               The valid length is limited from `3` to `64`, only letters, digits and underscores (_) are allowed.
               The name must start with a letter and must be unique.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the orchestration rule is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] strategy: Specifies the type of the orchestration rule.  
               The valid values are as follows:
               + **list**: Maps the values ​​in the list to new values.
               + **range**: Maps the values ​​in the range to new values.
               + **hash**: The value of the request header is directly mapped to the new request header after hash calculation.
               + **hash_range**: Use the request parameter to generate a hash value, and then use the hash value to perform range
               arrangement.
               + **none_value**: Value returned when the request parameter is empty.
               + **default**: When the request parameters exist but no orchestration rule can match them, the orchestration
               mapping value of the default rule is returned.
               + **head_n**: Try to intercept the first N characters of the string as the new value.
               + **tail_n**: Try to intercept the last N characters of the string as the new value.
        :param pulumi.Input[_builtins.str] updated_at: The latest update time of the orchestration rule, in RFC3339 format.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if is_preprocessing is not None:
            pulumi.set(__self__, "is_preprocessing", is_preprocessing)
        if mapped_param is not None:
            pulumi.set(__self__, "mapped_param", mapped_param)
        if maps is not None:
            pulumi.set(__self__, "maps", maps)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if strategy is not None:
            pulumi.set(__self__, "strategy", strategy)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The creation time of the orchestration rule, in RFC3339 format.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the dedicated instance to which the orchestration
        rule belongs.
        Changing this will create a new resource.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="isPreprocessing")
    def is_preprocessing(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether rule is a preprocessing rule.  
        Defaults to **false**. Changing this will create a new resource.

        > Type **none_value** and type **default** do not have this configuration.
        """
        return pulumi.get(self, "is_preprocessing")

    @is_preprocessing.setter
    def is_preprocessing(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "is_preprocessing", value)

    @_builtins.property
    @pulumi.getter(name="mappedParam")
    def mapped_param(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the parameter configuration after orchestration, in JSON
        format.
        Changing this will create a new resource.
        For the parameter configuration, please refer to the [document](https://support.huaweicloud.com/intl/en-us/api-apig/CreateOrchestration.html#CreateOrchestration__request_OrchestrationMappedParam).
        """
        return pulumi.get(self, "mapped_param")

    @mapped_param.setter
    def mapped_param(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "mapped_param", value)

    @_builtins.property
    @pulumi.getter
    def maps(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the list of orchestration mapping rules, each item should be in JSON format.
        For the parameter configuration of list items, please refer to the [document](https://support.huaweicloud.com/intl/en-us/api-apig/CreateOrchestration.html#CreateOrchestration__request_OrchestrationMap).
        """
        return pulumi.get(self, "maps")

    @maps.setter
    def maps(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "maps", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the orchestration rule.  
        The valid length is limited from `3` to `64`, only letters, digits and underscores (_) are allowed.
        The name must start with a letter and must be unique.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the orchestration rule is located.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def strategy(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the type of the orchestration rule.  
        The valid values are as follows:
        + **list**: Maps the values ​​in the list to new values.
        + **range**: Maps the values ​​in the range to new values.
        + **hash**: The value of the request header is directly mapped to the new request header after hash calculation.
        + **hash_range**: Use the request parameter to generate a hash value, and then use the hash value to perform range
        arrangement.
        + **none_value**: Value returned when the request parameter is empty.
        + **default**: When the request parameters exist but no orchestration rule can match them, the orchestration
        mapping value of the default rule is returned.
        + **head_n**: Try to intercept the first N characters of the string as the new value.
        + **tail_n**: Try to intercept the last N characters of the string as the new value.
        """
        return pulumi.get(self, "strategy")

    @strategy.setter
    def strategy(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "strategy", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The latest update time of the orchestration rule, in RFC3339 format.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("huaweicloud:DedicatedApig/orchestrationRule:OrchestrationRule")
class OrchestrationRule(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 is_preprocessing: Optional[pulumi.Input[_builtins.bool]] = None,
                 mapped_param: Optional[pulumi.Input[_builtins.str]] = None,
                 maps: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 strategy: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages an orchestration rule under the dedicated instance within HuaweiCloud.

        ## Example Usage

        ### Manages an orchestration rule with list type and no preprocessing

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        orchestration_rule_name = config.require_object("orchestrationRuleName")
        test = huaweicloud.dedicatedapig.OrchestrationRule("test",
            instance_id=instance_id,
            name=orchestration_rule_name,
            strategy="list",
            mapped_param=json.dumps({
                "mapped_param_name": "listParam",
                "mapped_param_type": "string",
                "mapped_param_location": "header",
            }),
            maps=[
                json.dumps({
                    "mapped_param_value": "ValueAA",
                    "map_param_list": ["ValueA"],
                }),
                json.dumps({
                    "mapped_param_value": "ValueBB",
                    "map_param_list": ["ValueB"],
                }),
            ])
        ```

        ### Manages an preprocessing orchestration rule with list type

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        orchestration_rule_name = config.require_object("orchestrationRuleName")
        test = huaweicloud.dedicatedapig.OrchestrationRule("test",
            instance_id=instance_id,
            name=orchestration_rule_name,
            strategy="list",
            is_preprocessing=True,
            maps=[
                json.dumps({
                    "mapped_param_value": "ValueAA",
                    "map_param_list": ["ValueA"],
                }),
                json.dumps({
                    "mapped_param_value": "ValueBB",
                    "map_param_list": ["ValueB"],
                }),
            ])
        ```

        ### Manages an orchestration rule with range type and no preprocessing

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        orchestration_rule_name = config.require_object("orchestrationRuleName")
        test = huaweicloud.dedicatedapig.OrchestrationRule("test",
            instance_id=instance_id,
            name=orchestration_rule_name,
            strategy="range",
            mapped_param=json.dumps({
                "mapped_param_name": "rangeParam",
                "mapped_param_type": "number",
                "mapped_param_location": "query",
            }),
            maps=[
                json.dumps({
                    "mapped_param_value": "10001",
                    "map_param_range": {
                        "range_start": "1000",
                        "range_end": "1999",
                    },
                }),
                json.dumps({
                    "mapped_param_value": "10002",
                    "map_param_range": {
                        "range_start": "2000",
                        "range_end": "2999",
                    },
                }),
                json.dumps({
                    "mapped_param_value": "10003",
                    "map_param_range": {
                        "range_start": "3000",
                        "range_end": "3999",
                    },
                }),
            ])
        ```

        ### Manages an orchestration rule with hash type and no preprocessing

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        orchestration_rule_name = config.require_object("orchestrationRuleName")
        test = huaweicloud.dedicatedapig.OrchestrationRule("test",
            instance_id=instance_id,
            name=orchestration_rule_name,
            strategy="hash",
            mapped_param=json.dumps({
                "mapped_param_name": "hashParam",
                "mapped_param_type": "string",
                "mapped_param_location": "header",
            }))
        ```

        ### Manages an orchestration rule with hash range type and no preprocessing

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        orchestration_rule_name = config.require_object("orchestrationRuleName")
        test = huaweicloud.dedicatedapig.OrchestrationRule("test",
            instance_id=instance_id,
            name=orchestration_rule_name,
            strategy="hash_range",
            mapped_param=json.dumps({
                "mapped_param_name": "hashParam",
                "mapped_param_type": "number",
                "mapped_param_location": "header",
            }),
            maps=[
                json.dumps({
                    "mapped_param_value": "10001",
                    "map_param_range": {
                        "range_start": "1000",
                        "range_end": "1999",
                    },
                }),
                json.dumps({
                    "mapped_param_value": "10002",
                    "map_param_range": {
                        "range_start": "2000",
                        "range_end": "2999",
                    },
                }),
                json.dumps({
                    "mapped_param_value": "10003",
                    "map_param_range": {
                        "range_start": "3000",
                        "range_end": "3999",
                    },
                }),
            ])
        ```

        ### Manages an orchestration rule with none value type

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        orchestration_rule_name = config.require_object("orchestrationRuleName")
        test = huaweicloud.dedicatedapig.OrchestrationRule("test",
            instance_id=instance_id,
            name=orchestration_rule_name,
            strategy="none_value",
            mapped_param=json.dumps({
                "mapped_param_name": "noneValueParam",
                "mapped_param_type": "string",
                "mapped_param_location": "header",
            }),
            maps=[json.dumps({
                "mapped_param_value": "NoneValueReturnedForExample",
            })])
        ```

        ### Manages an orchestration rule with default type

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        orchestration_rule_name = config.require_object("orchestrationRuleName")
        test = huaweicloud.dedicatedapig.OrchestrationRule("test",
            instance_id=instance_id,
            name=orchestration_rule_name,
            strategy="default",
            mapped_param=json.dumps({
                "mapped_param_name": "defaultParam",
                "mapped_param_type": "string",
                "mapped_param_location": "header",
            }),
            maps=[json.dumps({
                "mapped_param_value": "DefaultValueReturnedForExample",
            })])
        ```

        ### Manages an orchestration rule with head N type

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        orchestration_rule_name = config.require_object("orchestrationRuleName")
        test = huaweicloud.dedicatedapig.OrchestrationRule("test",
            instance_id=instance_id,
            name=orchestration_rule_name,
            strategy="head_n",
            mapped_param=json.dumps({
                "mapped_param_name": "headNParam",
                "mapped_param_type": "string",
                "mapped_param_location": "header",
            }),
            maps=[json.dumps({
                "intercept_length": 5,
                "mapped_param_value": "",
            })])
        ```

        ### Manages an orchestration rule with tail N type

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        orchestration_rule_name = config.require_object("orchestrationRuleName")
        test = huaweicloud.dedicatedapig.OrchestrationRule("test",
            instance_id=instance_id,
            name=orchestration_rule_name,
            strategy="tail_n",
            mapped_param=json.dumps({
                "mapped_param_name": "tailNParam",
                "mapped_param_type": "string",
                "mapped_param_location": "header",
            }),
            maps=[json.dumps({
                "intercept_length": 5,
                "mapped_param_value": "",
            })])
        ```

        ## Import

        Orchestration rules be imported using related `instance_id` and their `id`, separated by a slash (/), e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:DedicatedApig/orchestrationRule:OrchestrationRule test <instance_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the dedicated instance to which the orchestration
               rule belongs.
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.bool] is_preprocessing: Specifies whether rule is a preprocessing rule.  
               Defaults to **false**. Changing this will create a new resource.
               
               > Type **none_value** and type **default** do not have this configuration.
        :param pulumi.Input[_builtins.str] mapped_param: Specifies the parameter configuration after orchestration, in JSON
               format.
               Changing this will create a new resource.
               For the parameter configuration, please refer to the [document](https://support.huaweicloud.com/intl/en-us/api-apig/CreateOrchestration.html#CreateOrchestration__request_OrchestrationMappedParam).
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] maps: Specifies the list of orchestration mapping rules, each item should be in JSON format.
               For the parameter configuration of list items, please refer to the [document](https://support.huaweicloud.com/intl/en-us/api-apig/CreateOrchestration.html#CreateOrchestration__request_OrchestrationMap).
        :param pulumi.Input[_builtins.str] name: Specifies the name of the orchestration rule.  
               The valid length is limited from `3` to `64`, only letters, digits and underscores (_) are allowed.
               The name must start with a letter and must be unique.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the orchestration rule is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] strategy: Specifies the type of the orchestration rule.  
               The valid values are as follows:
               + **list**: Maps the values ​​in the list to new values.
               + **range**: Maps the values ​​in the range to new values.
               + **hash**: The value of the request header is directly mapped to the new request header after hash calculation.
               + **hash_range**: Use the request parameter to generate a hash value, and then use the hash value to perform range
               arrangement.
               + **none_value**: Value returned when the request parameter is empty.
               + **default**: When the request parameters exist but no orchestration rule can match them, the orchestration
               mapping value of the default rule is returned.
               + **head_n**: Try to intercept the first N characters of the string as the new value.
               + **tail_n**: Try to intercept the last N characters of the string as the new value.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OrchestrationRuleArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an orchestration rule under the dedicated instance within HuaweiCloud.

        ## Example Usage

        ### Manages an orchestration rule with list type and no preprocessing

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        orchestration_rule_name = config.require_object("orchestrationRuleName")
        test = huaweicloud.dedicatedapig.OrchestrationRule("test",
            instance_id=instance_id,
            name=orchestration_rule_name,
            strategy="list",
            mapped_param=json.dumps({
                "mapped_param_name": "listParam",
                "mapped_param_type": "string",
                "mapped_param_location": "header",
            }),
            maps=[
                json.dumps({
                    "mapped_param_value": "ValueAA",
                    "map_param_list": ["ValueA"],
                }),
                json.dumps({
                    "mapped_param_value": "ValueBB",
                    "map_param_list": ["ValueB"],
                }),
            ])
        ```

        ### Manages an preprocessing orchestration rule with list type

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        orchestration_rule_name = config.require_object("orchestrationRuleName")
        test = huaweicloud.dedicatedapig.OrchestrationRule("test",
            instance_id=instance_id,
            name=orchestration_rule_name,
            strategy="list",
            is_preprocessing=True,
            maps=[
                json.dumps({
                    "mapped_param_value": "ValueAA",
                    "map_param_list": ["ValueA"],
                }),
                json.dumps({
                    "mapped_param_value": "ValueBB",
                    "map_param_list": ["ValueB"],
                }),
            ])
        ```

        ### Manages an orchestration rule with range type and no preprocessing

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        orchestration_rule_name = config.require_object("orchestrationRuleName")
        test = huaweicloud.dedicatedapig.OrchestrationRule("test",
            instance_id=instance_id,
            name=orchestration_rule_name,
            strategy="range",
            mapped_param=json.dumps({
                "mapped_param_name": "rangeParam",
                "mapped_param_type": "number",
                "mapped_param_location": "query",
            }),
            maps=[
                json.dumps({
                    "mapped_param_value": "10001",
                    "map_param_range": {
                        "range_start": "1000",
                        "range_end": "1999",
                    },
                }),
                json.dumps({
                    "mapped_param_value": "10002",
                    "map_param_range": {
                        "range_start": "2000",
                        "range_end": "2999",
                    },
                }),
                json.dumps({
                    "mapped_param_value": "10003",
                    "map_param_range": {
                        "range_start": "3000",
                        "range_end": "3999",
                    },
                }),
            ])
        ```

        ### Manages an orchestration rule with hash type and no preprocessing

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        orchestration_rule_name = config.require_object("orchestrationRuleName")
        test = huaweicloud.dedicatedapig.OrchestrationRule("test",
            instance_id=instance_id,
            name=orchestration_rule_name,
            strategy="hash",
            mapped_param=json.dumps({
                "mapped_param_name": "hashParam",
                "mapped_param_type": "string",
                "mapped_param_location": "header",
            }))
        ```

        ### Manages an orchestration rule with hash range type and no preprocessing

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        orchestration_rule_name = config.require_object("orchestrationRuleName")
        test = huaweicloud.dedicatedapig.OrchestrationRule("test",
            instance_id=instance_id,
            name=orchestration_rule_name,
            strategy="hash_range",
            mapped_param=json.dumps({
                "mapped_param_name": "hashParam",
                "mapped_param_type": "number",
                "mapped_param_location": "header",
            }),
            maps=[
                json.dumps({
                    "mapped_param_value": "10001",
                    "map_param_range": {
                        "range_start": "1000",
                        "range_end": "1999",
                    },
                }),
                json.dumps({
                    "mapped_param_value": "10002",
                    "map_param_range": {
                        "range_start": "2000",
                        "range_end": "2999",
                    },
                }),
                json.dumps({
                    "mapped_param_value": "10003",
                    "map_param_range": {
                        "range_start": "3000",
                        "range_end": "3999",
                    },
                }),
            ])
        ```

        ### Manages an orchestration rule with none value type

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        orchestration_rule_name = config.require_object("orchestrationRuleName")
        test = huaweicloud.dedicatedapig.OrchestrationRule("test",
            instance_id=instance_id,
            name=orchestration_rule_name,
            strategy="none_value",
            mapped_param=json.dumps({
                "mapped_param_name": "noneValueParam",
                "mapped_param_type": "string",
                "mapped_param_location": "header",
            }),
            maps=[json.dumps({
                "mapped_param_value": "NoneValueReturnedForExample",
            })])
        ```

        ### Manages an orchestration rule with default type

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        orchestration_rule_name = config.require_object("orchestrationRuleName")
        test = huaweicloud.dedicatedapig.OrchestrationRule("test",
            instance_id=instance_id,
            name=orchestration_rule_name,
            strategy="default",
            mapped_param=json.dumps({
                "mapped_param_name": "defaultParam",
                "mapped_param_type": "string",
                "mapped_param_location": "header",
            }),
            maps=[json.dumps({
                "mapped_param_value": "DefaultValueReturnedForExample",
            })])
        ```

        ### Manages an orchestration rule with head N type

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        orchestration_rule_name = config.require_object("orchestrationRuleName")
        test = huaweicloud.dedicatedapig.OrchestrationRule("test",
            instance_id=instance_id,
            name=orchestration_rule_name,
            strategy="head_n",
            mapped_param=json.dumps({
                "mapped_param_name": "headNParam",
                "mapped_param_type": "string",
                "mapped_param_location": "header",
            }),
            maps=[json.dumps({
                "intercept_length": 5,
                "mapped_param_value": "",
            })])
        ```

        ### Manages an orchestration rule with tail N type

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        orchestration_rule_name = config.require_object("orchestrationRuleName")
        test = huaweicloud.dedicatedapig.OrchestrationRule("test",
            instance_id=instance_id,
            name=orchestration_rule_name,
            strategy="tail_n",
            mapped_param=json.dumps({
                "mapped_param_name": "tailNParam",
                "mapped_param_type": "string",
                "mapped_param_location": "header",
            }),
            maps=[json.dumps({
                "intercept_length": 5,
                "mapped_param_value": "",
            })])
        ```

        ## Import

        Orchestration rules be imported using related `instance_id` and their `id`, separated by a slash (/), e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:DedicatedApig/orchestrationRule:OrchestrationRule test <instance_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param OrchestrationRuleArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OrchestrationRuleArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 is_preprocessing: Optional[pulumi.Input[_builtins.bool]] = None,
                 mapped_param: Optional[pulumi.Input[_builtins.str]] = None,
                 maps: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 strategy: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OrchestrationRuleArgs.__new__(OrchestrationRuleArgs)

            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["is_preprocessing"] = is_preprocessing
            __props__.__dict__["mapped_param"] = mapped_param
            __props__.__dict__["maps"] = maps
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            if strategy is None and not opts.urn:
                raise TypeError("Missing required property 'strategy'")
            __props__.__dict__["strategy"] = strategy
            __props__.__dict__["created_at"] = None
            __props__.__dict__["updated_at"] = None
        super(OrchestrationRule, __self__).__init__(
            'huaweicloud:DedicatedApig/orchestrationRule:OrchestrationRule',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            is_preprocessing: Optional[pulumi.Input[_builtins.bool]] = None,
            mapped_param: Optional[pulumi.Input[_builtins.str]] = None,
            maps: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            strategy: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'OrchestrationRule':
        """
        Get an existing OrchestrationRule resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: The creation time of the orchestration rule, in RFC3339 format.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the dedicated instance to which the orchestration
               rule belongs.
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.bool] is_preprocessing: Specifies whether rule is a preprocessing rule.  
               Defaults to **false**. Changing this will create a new resource.
               
               > Type **none_value** and type **default** do not have this configuration.
        :param pulumi.Input[_builtins.str] mapped_param: Specifies the parameter configuration after orchestration, in JSON
               format.
               Changing this will create a new resource.
               For the parameter configuration, please refer to the [document](https://support.huaweicloud.com/intl/en-us/api-apig/CreateOrchestration.html#CreateOrchestration__request_OrchestrationMappedParam).
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] maps: Specifies the list of orchestration mapping rules, each item should be in JSON format.
               For the parameter configuration of list items, please refer to the [document](https://support.huaweicloud.com/intl/en-us/api-apig/CreateOrchestration.html#CreateOrchestration__request_OrchestrationMap).
        :param pulumi.Input[_builtins.str] name: Specifies the name of the orchestration rule.  
               The valid length is limited from `3` to `64`, only letters, digits and underscores (_) are allowed.
               The name must start with a letter and must be unique.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the orchestration rule is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] strategy: Specifies the type of the orchestration rule.  
               The valid values are as follows:
               + **list**: Maps the values ​​in the list to new values.
               + **range**: Maps the values ​​in the range to new values.
               + **hash**: The value of the request header is directly mapped to the new request header after hash calculation.
               + **hash_range**: Use the request parameter to generate a hash value, and then use the hash value to perform range
               arrangement.
               + **none_value**: Value returned when the request parameter is empty.
               + **default**: When the request parameters exist but no orchestration rule can match them, the orchestration
               mapping value of the default rule is returned.
               + **head_n**: Try to intercept the first N characters of the string as the new value.
               + **tail_n**: Try to intercept the last N characters of the string as the new value.
        :param pulumi.Input[_builtins.str] updated_at: The latest update time of the orchestration rule, in RFC3339 format.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OrchestrationRuleState.__new__(_OrchestrationRuleState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["is_preprocessing"] = is_preprocessing
        __props__.__dict__["mapped_param"] = mapped_param
        __props__.__dict__["maps"] = maps
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["strategy"] = strategy
        __props__.__dict__["updated_at"] = updated_at
        return OrchestrationRule(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The creation time of the orchestration rule, in RFC3339 format.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the dedicated instance to which the orchestration
        rule belongs.
        Changing this will create a new resource.
        """
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter(name="isPreprocessing")
    def is_preprocessing(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether rule is a preprocessing rule.  
        Defaults to **false**. Changing this will create a new resource.

        > Type **none_value** and type **default** do not have this configuration.
        """
        return pulumi.get(self, "is_preprocessing")

    @_builtins.property
    @pulumi.getter(name="mappedParam")
    def mapped_param(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the parameter configuration after orchestration, in JSON
        format.
        Changing this will create a new resource.
        For the parameter configuration, please refer to the [document](https://support.huaweicloud.com/intl/en-us/api-apig/CreateOrchestration.html#CreateOrchestration__request_OrchestrationMappedParam).
        """
        return pulumi.get(self, "mapped_param")

    @_builtins.property
    @pulumi.getter
    def maps(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        Specifies the list of orchestration mapping rules, each item should be in JSON format.
        For the parameter configuration of list items, please refer to the [document](https://support.huaweicloud.com/intl/en-us/api-apig/CreateOrchestration.html#CreateOrchestration__request_OrchestrationMap).
        """
        return pulumi.get(self, "maps")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of the orchestration rule.  
        The valid length is limited from `3` to `64`, only letters, digits and underscores (_) are allowed.
        The name must start with a letter and must be unique.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region where the orchestration rule is located.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def strategy(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the type of the orchestration rule.  
        The valid values are as follows:
        + **list**: Maps the values ​​in the list to new values.
        + **range**: Maps the values ​​in the range to new values.
        + **hash**: The value of the request header is directly mapped to the new request header after hash calculation.
        + **hash_range**: Use the request parameter to generate a hash value, and then use the hash value to perform range
        arrangement.
        + **none_value**: Value returned when the request parameter is empty.
        + **default**: When the request parameters exist but no orchestration rule can match them, the orchestration
        mapping value of the default rule is returned.
        + **head_n**: Try to intercept the first N characters of the string as the new value.
        + **tail_n**: Try to intercept the last N characters of the string as the new value.
        """
        return pulumi.get(self, "strategy")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The latest update time of the orchestration rule, in RFC3339 format.
        """
        return pulumi.get(self, "updated_at")

