# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['PluginArgs', 'Plugin']

@pulumi.input_type
class PluginArgs:
    def __init__(__self__, *,
                 content: pulumi.Input[_builtins.str],
                 instance_id: pulumi.Input[_builtins.str],
                 type: pulumi.Input[_builtins.str],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a Plugin resource.
        :param pulumi.Input[_builtins.str] content: Specifies the configuration details for plugin.
               + For `CORS` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0021.html).
               + For `HTTP Response Header Management` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0022.html).
               + For `Request Throttling 2.0` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0054.html).
               + For `Kafka Log Push` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0061.html).
               + For `Circuit Breaker` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0023.html).
               + For `Third-Party Authorizer` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0077.html).
               + For `Proxy Cache` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0111.html).
               + For `Proxy Mirror` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0112.html).
               
               > All default values in content need to be filled in, otherwise `pulumi preview` will prompt the script to change.
               You can confirm the content of a policy through the console (**APIG** > **API Policies** > **Your Policy**
               > **Policy Content**).
               
               > For sensitive values filled in `content` (such as **SASL password**), the API response will not be returned, so
               `pulumi preview` will prompt script changes, and you can ignore these changes through `ignorechanges` in the
               `lifecycle`.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the dedicated instance to which the plugin
               belongs.
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] type: Specifies the plugin type.  
               The valid values are as follows:
               + **cors**: CORS, specify preflight request headers and response headers and automatically create preflight request
               APIs for cross-origin API access.
               + **set_resp_headers**: HTTP Response Header Management, customize HTTP headers that will be contained in an API
               response.
               + **rate_limit**: Request Throttling 2.0, limits the number of times an API can be called within a specific time
               period. It supports parameter-based, basic, and excluded throttling.
               + **kafka_log**: Kafka Log Push, Push detailed API calling logs to kafka for you to easily obtain logs.
               + **breaker**: Circuit Breaker, circuit breaker protect the system when performance issues occur on backend service.
               + **third_auth**: Third-Party Authorizer.
               + **proxy_cache**: Proxy Cache.
               + **proxy_mirror**: Proxy Mirror.
               
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the plugin description.  
               The valid length is limited from `3` to `255` characters.
        :param pulumi.Input[_builtins.str] name: Specifies the plugin name.  
               The valid length is limited from `3` to `255`, only Chinese characters, English letters, digits, hyphens (-) and
               underscores (_) are allowed. The name must start with an English letter or Chinese character.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the plugin is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        pulumi.set(__self__, "content", content)
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "type", type)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter
    def content(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the configuration details for plugin.
        + For `CORS` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0021.html).
        + For `HTTP Response Header Management` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0022.html).
        + For `Request Throttling 2.0` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0054.html).
        + For `Kafka Log Push` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0061.html).
        + For `Circuit Breaker` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0023.html).
        + For `Third-Party Authorizer` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0077.html).
        + For `Proxy Cache` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0111.html).
        + For `Proxy Mirror` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0112.html).

        > All default values in content need to be filled in, otherwise `pulumi preview` will prompt the script to change.
        You can confirm the content of a policy through the console (**APIG** > **API Policies** > **Your Policy**
        > **Policy Content**).

        > For sensitive values filled in `content` (such as **SASL password**), the API response will not be returned, so
        `pulumi preview` will prompt script changes, and you can ignore these changes through `ignorechanges` in the
        `lifecycle`.
        """
        return pulumi.get(self, "content")

    @content.setter
    def content(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "content", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the dedicated instance to which the plugin
        belongs.
        Changing this will create a new resource.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the plugin type.  
        The valid values are as follows:
        + **cors**: CORS, specify preflight request headers and response headers and automatically create preflight request
        APIs for cross-origin API access.
        + **set_resp_headers**: HTTP Response Header Management, customize HTTP headers that will be contained in an API
        response.
        + **rate_limit**: Request Throttling 2.0, limits the number of times an API can be called within a specific time
        period. It supports parameter-based, basic, and excluded throttling.
        + **kafka_log**: Kafka Log Push, Push detailed API calling logs to kafka for you to easily obtain logs.
        + **breaker**: Circuit Breaker, circuit breaker protect the system when performance issues occur on backend service.
        + **third_auth**: Third-Party Authorizer.
        + **proxy_cache**: Proxy Cache.
        + **proxy_mirror**: Proxy Mirror.

        Changing this will create a new resource.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the plugin description.  
        The valid length is limited from `3` to `255` characters.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the plugin name.  
        The valid length is limited from `3` to `255`, only Chinese characters, English letters, digits, hyphens (-) and
        underscores (_) are allowed. The name must start with an English letter or Chinese character.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the plugin is located.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _PluginState:
    def __init__(__self__, *,
                 content: Optional[pulumi.Input[_builtins.str]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering Plugin resources.
        :param pulumi.Input[_builtins.str] content: Specifies the configuration details for plugin.
               + For `CORS` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0021.html).
               + For `HTTP Response Header Management` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0022.html).
               + For `Request Throttling 2.0` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0054.html).
               + For `Kafka Log Push` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0061.html).
               + For `Circuit Breaker` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0023.html).
               + For `Third-Party Authorizer` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0077.html).
               + For `Proxy Cache` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0111.html).
               + For `Proxy Mirror` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0112.html).
               
               > All default values in content need to be filled in, otherwise `pulumi preview` will prompt the script to change.
               You can confirm the content of a policy through the console (**APIG** > **API Policies** > **Your Policy**
               > **Policy Content**).
               
               > For sensitive values filled in `content` (such as **SASL password**), the API response will not be returned, so
               `pulumi preview` will prompt script changes, and you can ignore these changes through `ignorechanges` in the
               `lifecycle`.
        :param pulumi.Input[_builtins.str] created_at: The creation time of the plugin.
        :param pulumi.Input[_builtins.str] description: Specifies the plugin description.  
               The valid length is limited from `3` to `255` characters.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the dedicated instance to which the plugin
               belongs.
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the plugin name.  
               The valid length is limited from `3` to `255`, only Chinese characters, English letters, digits, hyphens (-) and
               underscores (_) are allowed. The name must start with an English letter or Chinese character.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the plugin is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] type: Specifies the plugin type.  
               The valid values are as follows:
               + **cors**: CORS, specify preflight request headers and response headers and automatically create preflight request
               APIs for cross-origin API access.
               + **set_resp_headers**: HTTP Response Header Management, customize HTTP headers that will be contained in an API
               response.
               + **rate_limit**: Request Throttling 2.0, limits the number of times an API can be called within a specific time
               period. It supports parameter-based, basic, and excluded throttling.
               + **kafka_log**: Kafka Log Push, Push detailed API calling logs to kafka for you to easily obtain logs.
               + **breaker**: Circuit Breaker, circuit breaker protect the system when performance issues occur on backend service.
               + **third_auth**: Third-Party Authorizer.
               + **proxy_cache**: Proxy Cache.
               + **proxy_mirror**: Proxy Mirror.
               
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] updated_at: The latest update time of the plugin.
        """
        if content is not None:
            pulumi.set(__self__, "content", content)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter
    def content(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the configuration details for plugin.
        + For `CORS` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0021.html).
        + For `HTTP Response Header Management` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0022.html).
        + For `Request Throttling 2.0` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0054.html).
        + For `Kafka Log Push` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0061.html).
        + For `Circuit Breaker` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0023.html).
        + For `Third-Party Authorizer` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0077.html).
        + For `Proxy Cache` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0111.html).
        + For `Proxy Mirror` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0112.html).

        > All default values in content need to be filled in, otherwise `pulumi preview` will prompt the script to change.
        You can confirm the content of a policy through the console (**APIG** > **API Policies** > **Your Policy**
        > **Policy Content**).

        > For sensitive values filled in `content` (such as **SASL password**), the API response will not be returned, so
        `pulumi preview` will prompt script changes, and you can ignore these changes through `ignorechanges` in the
        `lifecycle`.
        """
        return pulumi.get(self, "content")

    @content.setter
    def content(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "content", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The creation time of the plugin.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the plugin description.  
        The valid length is limited from `3` to `255` characters.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the dedicated instance to which the plugin
        belongs.
        Changing this will create a new resource.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the plugin name.  
        The valid length is limited from `3` to `255`, only Chinese characters, English letters, digits, hyphens (-) and
        underscores (_) are allowed. The name must start with an English letter or Chinese character.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the plugin is located.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the plugin type.  
        The valid values are as follows:
        + **cors**: CORS, specify preflight request headers and response headers and automatically create preflight request
        APIs for cross-origin API access.
        + **set_resp_headers**: HTTP Response Header Management, customize HTTP headers that will be contained in an API
        response.
        + **rate_limit**: Request Throttling 2.0, limits the number of times an API can be called within a specific time
        period. It supports parameter-based, basic, and excluded throttling.
        + **kafka_log**: Kafka Log Push, Push detailed API calling logs to kafka for you to easily obtain logs.
        + **breaker**: Circuit Breaker, circuit breaker protect the system when performance issues occur on backend service.
        + **third_auth**: Third-Party Authorizer.
        + **proxy_cache**: Proxy Cache.
        + **proxy_mirror**: Proxy Mirror.

        Changing this will create a new resource.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The latest update time of the plugin.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("huaweicloud:DedicatedApig/plugin:Plugin")
class Plugin(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 content: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a plugin resource within HuaweiCloud.

        ## Example Usage

        ### Create a CORS plugin

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        plugin_name = config.require_object("pluginName")
        test = huaweicloud.dedicatedapig.Plugin("test",
            instance_id=instance_id,
            name=plugin_name,
            type="cors",
            content=json.dumps({
                "allow_origin": "*",
                "allow_methods": "GET,PUT,DELETE,HEAD,PATCH",
                "allow_headers": "Content-Type,Accept,Cache-Control",
                "expose_headers": "X-Request-Id,X-Apig-Latency",
                "max_age": 12700,
                "allow_credentials": True,
            }))
        ```

        ### Create an HTTP Response Header Management plugin

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        plugin_name = config.require_object("pluginName")
        test = huaweicloud.dedicatedapig.Plugin("test",
            instance_id=instance_id,
            name=plugin_name,
            type="set_resp_headers",
            content=json.dumps({
                "response_headers": [
                    {
                        "name": "X-Custom-Pwd",
                        "value": "**********",
                        "value_type": "custom_value",
                        "action": "override",
                    },
                    {
                        "name": "X-Custom-Debug-Step",
                        "value": "Beta",
                        "value_type": "custom_value",
                        "action": "skip",
                    },
                    {
                        "name": "X-Custom-Config",
                        "value": "<HTTP response test>",
                        "value_type": "custom_value",
                        "action": "append",
                    },
                    {
                        "name": "X-Custom-Id",
                        "value": "",
                        "value_type": "custom_value",
                        "action": "delete",
                    },
                    {
                        "name": "X-Custom-Log-Level",
                        "value": "DEBUG",
                        "value_type": "custom_value",
                        "action": "add",
                    },
                    {
                        "name": "Sys-Param",
                        "value": "$context.cacheStatus",
                        "value_type": "system_parameter",
                        "action": "add",
                    },
                ],
            }))
        ```

        ### Create a Request Throttling 2.0 plugin

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        plugin_name = config.require_object("pluginName")
        application_id = config.require_object("applicationId")
        user_id = config.require_object("userId")
        test = huaweicloud.dedicatedapig.Plugin("test",
            instance_id=instance_id,
            name=plugin_name,
            type="rate_limit",
            content=json.dumps({
                "scope": "basic",
                "default_time_unit": "minute",
                "default_interval": 1,
                "api_limit": 25,
                "app_limit": 10,
                "user_limit": 15,
                "ip_limit": 25,
                "algorithm": "counter",
                "specials": [
                    {
                        "type": "app",
                        "policies": [{
                            "key": application_id,
                            "limit": 10,
                        }],
                    },
                    {
                        "type": "user",
                        "policies": [{
                            "key": user_id,
                            "limit": 10,
                        }],
                    },
                ],
                "parameters": [
                    {
                        "type": "path",
                        "name": "reqPath",
                        "value": "reqPath",
                    },
                    {
                        "type": "method",
                        "name": "method",
                        "value": "method",
                    },
                    {
                        "type": "system",
                        "name": "serverName",
                        "value": "serverName",
                    },
                ],
                "rules": [
                    {
                        "rule_name": "rule-0001",
                        "match_regex": "[\\"AND\\",[\\"method\\",\\"~=\\",\\"POST\\"],[\\"method\\",\\"~=\\",\\"PATCH\\"]]",
                        "time_unit": "minute",
                        "interval": 1,
                        "limit": 20,
                    },
                    {
                        "rule_name": "rule-0002",
                        "match_regex": "[\\"reqPath\\",\\"~~\\",\\"/terraform/test/*/\\"]",
                        "time_unit": "minute",
                        "interval": 1,
                        "limit": 10,
                    },
                    {
                        "rule_name": "rule-0003",
                        "match_regex": "[\\"serverName\\",\\"==\\",\\"terraform\\"]",
                        "time_unit": "minute",
                        "interval": 1,
                        "limit": 15,
                    },
                    {
                        "rule_name": "rule-0004",
                        "match_regex": "[\\"method\\",\\"in\\",\\"PATCH\\"]",
                        "time_unit": "minute",
                        "interval": 1,
                        "limit": 5,
                    },
                ],
            }))
        ```

        ### Create a Circuit Breaker plugin

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        plugin_name = config.require_object("pluginName")
        test = huaweicloud.dedicatedapig.Plugin("test",
            instance_id=instance_id,
            name=plugin_name,
            type="breaker",
            content=json.dumps({
                "breaker_condition": {
                    "breaker_type": "condition",
                    "breaker_mode": "counter",
                    "unhealthy_condition": "[\\"OR\\",[\\"$context.statusCode\\",\\"in\\",\\"500,501,504\\"],[\\"$context.backendResponseTime\\",\\">\\",6000]]",
                    "unhealthy_threshold": 30,
                    "min_call_threshold": 20,
                    "unhealthy_percentage": 51,
                    "time_window": 15,
                    "open_breaker_time": 15,
                },
                "downgrade_default": None,
                "downgrade_parameters": [
                    {
                        "type": "path",
                        "name": "reqPath",
                        "value": "reqPath",
                    },
                    {
                        "type": "method",
                        "name": "method",
                        "value": "method",
                    },
                    {
                        "type": "query",
                        "name": "authType",
                        "value": "authType",
                    },
                ],
                "downgrade_rules": [{
                    "breaker_condition": {
                        "breaker_type": "timeout",
                        "breaker_mode": "percentage",
                        "unhealthy_condition": "",
                        "unhealthy_threshold": 30,
                        "min_call_threshold": 20,
                        "unhealthy_percentage": 51,
                        "time_window": 15,
                        "open_breaker_time": 15,
                    },
                    "downgrade_backend": None,
                    "rule_name": "rule-qkqe",
                    "match_regex": "[\\"authType\\",\\"~=\\",\\"Token\\"]",
                    "parameters": [
                        "reqPath",
                        "method",
                        "authType",
                    ],
                }],
                "scope": "basic",
            }))
        ```

        ## Import

        Plugins can be imported using their related dedicated instance ID (`instance_id`) and their ID (`id`), separated by a

        slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:DedicatedApig/plugin:Plugin test <instance_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] content: Specifies the configuration details for plugin.
               + For `CORS` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0021.html).
               + For `HTTP Response Header Management` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0022.html).
               + For `Request Throttling 2.0` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0054.html).
               + For `Kafka Log Push` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0061.html).
               + For `Circuit Breaker` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0023.html).
               + For `Third-Party Authorizer` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0077.html).
               + For `Proxy Cache` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0111.html).
               + For `Proxy Mirror` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0112.html).
               
               > All default values in content need to be filled in, otherwise `pulumi preview` will prompt the script to change.
               You can confirm the content of a policy through the console (**APIG** > **API Policies** > **Your Policy**
               > **Policy Content**).
               
               > For sensitive values filled in `content` (such as **SASL password**), the API response will not be returned, so
               `pulumi preview` will prompt script changes, and you can ignore these changes through `ignorechanges` in the
               `lifecycle`.
        :param pulumi.Input[_builtins.str] description: Specifies the plugin description.  
               The valid length is limited from `3` to `255` characters.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the dedicated instance to which the plugin
               belongs.
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the plugin name.  
               The valid length is limited from `3` to `255`, only Chinese characters, English letters, digits, hyphens (-) and
               underscores (_) are allowed. The name must start with an English letter or Chinese character.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the plugin is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] type: Specifies the plugin type.  
               The valid values are as follows:
               + **cors**: CORS, specify preflight request headers and response headers and automatically create preflight request
               APIs for cross-origin API access.
               + **set_resp_headers**: HTTP Response Header Management, customize HTTP headers that will be contained in an API
               response.
               + **rate_limit**: Request Throttling 2.0, limits the number of times an API can be called within a specific time
               period. It supports parameter-based, basic, and excluded throttling.
               + **kafka_log**: Kafka Log Push, Push detailed API calling logs to kafka for you to easily obtain logs.
               + **breaker**: Circuit Breaker, circuit breaker protect the system when performance issues occur on backend service.
               + **third_auth**: Third-Party Authorizer.
               + **proxy_cache**: Proxy Cache.
               + **proxy_mirror**: Proxy Mirror.
               
               Changing this will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PluginArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a plugin resource within HuaweiCloud.

        ## Example Usage

        ### Create a CORS plugin

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        plugin_name = config.require_object("pluginName")
        test = huaweicloud.dedicatedapig.Plugin("test",
            instance_id=instance_id,
            name=plugin_name,
            type="cors",
            content=json.dumps({
                "allow_origin": "*",
                "allow_methods": "GET,PUT,DELETE,HEAD,PATCH",
                "allow_headers": "Content-Type,Accept,Cache-Control",
                "expose_headers": "X-Request-Id,X-Apig-Latency",
                "max_age": 12700,
                "allow_credentials": True,
            }))
        ```

        ### Create an HTTP Response Header Management plugin

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        plugin_name = config.require_object("pluginName")
        test = huaweicloud.dedicatedapig.Plugin("test",
            instance_id=instance_id,
            name=plugin_name,
            type="set_resp_headers",
            content=json.dumps({
                "response_headers": [
                    {
                        "name": "X-Custom-Pwd",
                        "value": "**********",
                        "value_type": "custom_value",
                        "action": "override",
                    },
                    {
                        "name": "X-Custom-Debug-Step",
                        "value": "Beta",
                        "value_type": "custom_value",
                        "action": "skip",
                    },
                    {
                        "name": "X-Custom-Config",
                        "value": "<HTTP response test>",
                        "value_type": "custom_value",
                        "action": "append",
                    },
                    {
                        "name": "X-Custom-Id",
                        "value": "",
                        "value_type": "custom_value",
                        "action": "delete",
                    },
                    {
                        "name": "X-Custom-Log-Level",
                        "value": "DEBUG",
                        "value_type": "custom_value",
                        "action": "add",
                    },
                    {
                        "name": "Sys-Param",
                        "value": "$context.cacheStatus",
                        "value_type": "system_parameter",
                        "action": "add",
                    },
                ],
            }))
        ```

        ### Create a Request Throttling 2.0 plugin

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        plugin_name = config.require_object("pluginName")
        application_id = config.require_object("applicationId")
        user_id = config.require_object("userId")
        test = huaweicloud.dedicatedapig.Plugin("test",
            instance_id=instance_id,
            name=plugin_name,
            type="rate_limit",
            content=json.dumps({
                "scope": "basic",
                "default_time_unit": "minute",
                "default_interval": 1,
                "api_limit": 25,
                "app_limit": 10,
                "user_limit": 15,
                "ip_limit": 25,
                "algorithm": "counter",
                "specials": [
                    {
                        "type": "app",
                        "policies": [{
                            "key": application_id,
                            "limit": 10,
                        }],
                    },
                    {
                        "type": "user",
                        "policies": [{
                            "key": user_id,
                            "limit": 10,
                        }],
                    },
                ],
                "parameters": [
                    {
                        "type": "path",
                        "name": "reqPath",
                        "value": "reqPath",
                    },
                    {
                        "type": "method",
                        "name": "method",
                        "value": "method",
                    },
                    {
                        "type": "system",
                        "name": "serverName",
                        "value": "serverName",
                    },
                ],
                "rules": [
                    {
                        "rule_name": "rule-0001",
                        "match_regex": "[\\"AND\\",[\\"method\\",\\"~=\\",\\"POST\\"],[\\"method\\",\\"~=\\",\\"PATCH\\"]]",
                        "time_unit": "minute",
                        "interval": 1,
                        "limit": 20,
                    },
                    {
                        "rule_name": "rule-0002",
                        "match_regex": "[\\"reqPath\\",\\"~~\\",\\"/terraform/test/*/\\"]",
                        "time_unit": "minute",
                        "interval": 1,
                        "limit": 10,
                    },
                    {
                        "rule_name": "rule-0003",
                        "match_regex": "[\\"serverName\\",\\"==\\",\\"terraform\\"]",
                        "time_unit": "minute",
                        "interval": 1,
                        "limit": 15,
                    },
                    {
                        "rule_name": "rule-0004",
                        "match_regex": "[\\"method\\",\\"in\\",\\"PATCH\\"]",
                        "time_unit": "minute",
                        "interval": 1,
                        "limit": 5,
                    },
                ],
            }))
        ```

        ### Create a Circuit Breaker plugin

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        plugin_name = config.require_object("pluginName")
        test = huaweicloud.dedicatedapig.Plugin("test",
            instance_id=instance_id,
            name=plugin_name,
            type="breaker",
            content=json.dumps({
                "breaker_condition": {
                    "breaker_type": "condition",
                    "breaker_mode": "counter",
                    "unhealthy_condition": "[\\"OR\\",[\\"$context.statusCode\\",\\"in\\",\\"500,501,504\\"],[\\"$context.backendResponseTime\\",\\">\\",6000]]",
                    "unhealthy_threshold": 30,
                    "min_call_threshold": 20,
                    "unhealthy_percentage": 51,
                    "time_window": 15,
                    "open_breaker_time": 15,
                },
                "downgrade_default": None,
                "downgrade_parameters": [
                    {
                        "type": "path",
                        "name": "reqPath",
                        "value": "reqPath",
                    },
                    {
                        "type": "method",
                        "name": "method",
                        "value": "method",
                    },
                    {
                        "type": "query",
                        "name": "authType",
                        "value": "authType",
                    },
                ],
                "downgrade_rules": [{
                    "breaker_condition": {
                        "breaker_type": "timeout",
                        "breaker_mode": "percentage",
                        "unhealthy_condition": "",
                        "unhealthy_threshold": 30,
                        "min_call_threshold": 20,
                        "unhealthy_percentage": 51,
                        "time_window": 15,
                        "open_breaker_time": 15,
                    },
                    "downgrade_backend": None,
                    "rule_name": "rule-qkqe",
                    "match_regex": "[\\"authType\\",\\"~=\\",\\"Token\\"]",
                    "parameters": [
                        "reqPath",
                        "method",
                        "authType",
                    ],
                }],
                "scope": "basic",
            }))
        ```

        ## Import

        Plugins can be imported using their related dedicated instance ID (`instance_id`) and their ID (`id`), separated by a

        slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:DedicatedApig/plugin:Plugin test <instance_id>/<id>
        ```

        :param str resource_name: The name of the resource.
        :param PluginArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PluginArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 content: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PluginArgs.__new__(PluginArgs)

            if content is None and not opts.urn:
                raise TypeError("Missing required property 'content'")
            __props__.__dict__["content"] = content
            __props__.__dict__["description"] = description
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
            __props__.__dict__["created_at"] = None
            __props__.__dict__["updated_at"] = None
        super(Plugin, __self__).__init__(
            'huaweicloud:DedicatedApig/plugin:Plugin',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            content: Optional[pulumi.Input[_builtins.str]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            type: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'Plugin':
        """
        Get an existing Plugin resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] content: Specifies the configuration details for plugin.
               + For `CORS` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0021.html).
               + For `HTTP Response Header Management` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0022.html).
               + For `Request Throttling 2.0` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0054.html).
               + For `Kafka Log Push` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0061.html).
               + For `Circuit Breaker` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0023.html).
               + For `Third-Party Authorizer` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0077.html).
               + For `Proxy Cache` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0111.html).
               + For `Proxy Mirror` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0112.html).
               
               > All default values in content need to be filled in, otherwise `pulumi preview` will prompt the script to change.
               You can confirm the content of a policy through the console (**APIG** > **API Policies** > **Your Policy**
               > **Policy Content**).
               
               > For sensitive values filled in `content` (such as **SASL password**), the API response will not be returned, so
               `pulumi preview` will prompt script changes, and you can ignore these changes through `ignorechanges` in the
               `lifecycle`.
        :param pulumi.Input[_builtins.str] created_at: The creation time of the plugin.
        :param pulumi.Input[_builtins.str] description: Specifies the plugin description.  
               The valid length is limited from `3` to `255` characters.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of the dedicated instance to which the plugin
               belongs.
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the plugin name.  
               The valid length is limited from `3` to `255`, only Chinese characters, English letters, digits, hyphens (-) and
               underscores (_) are allowed. The name must start with an English letter or Chinese character.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the plugin is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] type: Specifies the plugin type.  
               The valid values are as follows:
               + **cors**: CORS, specify preflight request headers and response headers and automatically create preflight request
               APIs for cross-origin API access.
               + **set_resp_headers**: HTTP Response Header Management, customize HTTP headers that will be contained in an API
               response.
               + **rate_limit**: Request Throttling 2.0, limits the number of times an API can be called within a specific time
               period. It supports parameter-based, basic, and excluded throttling.
               + **kafka_log**: Kafka Log Push, Push detailed API calling logs to kafka for you to easily obtain logs.
               + **breaker**: Circuit Breaker, circuit breaker protect the system when performance issues occur on backend service.
               + **third_auth**: Third-Party Authorizer.
               + **proxy_cache**: Proxy Cache.
               + **proxy_mirror**: Proxy Mirror.
               
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] updated_at: The latest update time of the plugin.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PluginState.__new__(_PluginState)

        __props__.__dict__["content"] = content
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["description"] = description
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["type"] = type
        __props__.__dict__["updated_at"] = updated_at
        return Plugin(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def content(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the configuration details for plugin.
        + For `CORS` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0021.html).
        + For `HTTP Response Header Management` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0022.html).
        + For `Request Throttling 2.0` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0054.html).
        + For `Kafka Log Push` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0061.html).
        + For `Circuit Breaker` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0023.html).
        + For `Third-Party Authorizer` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0077.html).
        + For `Proxy Cache` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0111.html).
        + For `Proxy Mirror` plugins, you can refer to this [document](https://support.huaweicloud.com/intl/en-us/usermanual-apig/apig_03_0112.html).

        > All default values in content need to be filled in, otherwise `pulumi preview` will prompt the script to change.
        You can confirm the content of a policy through the console (**APIG** > **API Policies** > **Your Policy**
        > **Policy Content**).

        > For sensitive values filled in `content` (such as **SASL password**), the API response will not be returned, so
        `pulumi preview` will prompt script changes, and you can ignore these changes through `ignorechanges` in the
        `lifecycle`.
        """
        return pulumi.get(self, "content")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The creation time of the plugin.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the plugin description.  
        The valid length is limited from `3` to `255` characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the dedicated instance to which the plugin
        belongs.
        Changing this will create a new resource.
        """
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the plugin name.  
        The valid length is limited from `3` to `255`, only Chinese characters, English letters, digits, hyphens (-) and
        underscores (_) are allowed. The name must start with an English letter or Chinese character.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region where the plugin is located.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the plugin type.  
        The valid values are as follows:
        + **cors**: CORS, specify preflight request headers and response headers and automatically create preflight request
        APIs for cross-origin API access.
        + **set_resp_headers**: HTTP Response Header Management, customize HTTP headers that will be contained in an API
        response.
        + **rate_limit**: Request Throttling 2.0, limits the number of times an API can be called within a specific time
        period. It supports parameter-based, basic, and excluded throttling.
        + **kafka_log**: Kafka Log Push, Push detailed API calling logs to kafka for you to easily obtain logs.
        + **breaker**: Circuit Breaker, circuit breaker protect the system when performance issues occur on backend service.
        + **third_auth**: Third-Party Authorizer.
        + **proxy_cache**: Proxy Cache.
        + **proxy_mirror**: Proxy Mirror.

        Changing this will create a new resource.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The latest update time of the plugin.
        """
        return pulumi.get(self, "updated_at")

