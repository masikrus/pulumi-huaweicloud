# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetInstanceParameterModificationRecordsResult',
    'AwaitableGetInstanceParameterModificationRecordsResult',
    'get_instance_parameter_modification_records',
    'get_instance_parameter_modification_records_output',
]

@pulumi.output_type
class GetInstanceParameterModificationRecordsResult:
    """
    A collection of values returned by getInstanceParameterModificationRecords.
    """
    def __init__(__self__, entity_id=None, histories=None, id=None, instance_id=None, region=None):
        if entity_id and not isinstance(entity_id, str):
            raise TypeError("Expected argument 'entity_id' to be a str")
        pulumi.set(__self__, "entity_id", entity_id)
        if histories and not isinstance(histories, list):
            raise TypeError("Expected argument 'histories' to be a list")
        pulumi.set(__self__, "histories", histories)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="entityId")
    def entity_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "entity_id")

    @_builtins.property
    @pulumi.getter
    def histories(self) -> Sequence['outputs.GetInstanceParameterModificationRecordsHistoryResult']:
        """
        Indicates the modification records.
        """
        return pulumi.get(self, "histories")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> _builtins.str:
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetInstanceParameterModificationRecordsResult(GetInstanceParameterModificationRecordsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInstanceParameterModificationRecordsResult(
            entity_id=self.entity_id,
            histories=self.histories,
            id=self.id,
            instance_id=self.instance_id,
            region=self.region)


def get_instance_parameter_modification_records(entity_id: Optional[_builtins.str] = None,
                                                instance_id: Optional[_builtins.str] = None,
                                                region: Optional[_builtins.str] = None,
                                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInstanceParameterModificationRecordsResult:
    """
    Use this data source to get the list of DDS instance parameter modification records.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    test = huaweicloud.Dds.get_instance_parameter_modification_records(instance_id=instance_id)
    ```


    :param _builtins.str entity_id: Specifies the ID of a DDS instance entity.
           + If the DB instance type is cluster and the shard or config parameter template is to be changed, the value is the
           group ID. If the parameter template of the mongos node is to be changed, the value is the node ID.
           + If the DB instance to be changed is a replica set instance, the value should be empty.
           
           Changing this creates a new resource.
    :param _builtins.str instance_id: Specifies the instance ID.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['entityId'] = entity_id
    __args__['instanceId'] = instance_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Dds/getInstanceParameterModificationRecords:getInstanceParameterModificationRecords', __args__, opts=opts, typ=GetInstanceParameterModificationRecordsResult).value

    return AwaitableGetInstanceParameterModificationRecordsResult(
        entity_id=pulumi.get(__ret__, 'entity_id'),
        histories=pulumi.get(__ret__, 'histories'),
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        region=pulumi.get(__ret__, 'region'))
def get_instance_parameter_modification_records_output(entity_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                       instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                                                       region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                       opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetInstanceParameterModificationRecordsResult]:
    """
    Use this data source to get the list of DDS instance parameter modification records.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    test = huaweicloud.Dds.get_instance_parameter_modification_records(instance_id=instance_id)
    ```


    :param _builtins.str entity_id: Specifies the ID of a DDS instance entity.
           + If the DB instance type is cluster and the shard or config parameter template is to be changed, the value is the
           group ID. If the parameter template of the mongos node is to be changed, the value is the node ID.
           + If the DB instance to be changed is a replica set instance, the value should be empty.
           
           Changing this creates a new resource.
    :param _builtins.str instance_id: Specifies the instance ID.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['entityId'] = entity_id
    __args__['instanceId'] = instance_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Dds/getInstanceParameterModificationRecords:getInstanceParameterModificationRecords', __args__, opts=opts, typ=GetInstanceParameterModificationRecordsResult)
    return __ret__.apply(lambda __response__: GetInstanceParameterModificationRecordsResult(
        entity_id=pulumi.get(__response__, 'entity_id'),
        histories=pulumi.get(__response__, 'histories'),
        id=pulumi.get(__response__, 'id'),
        instance_id=pulumi.get(__response__, 'instance_id'),
        region=pulumi.get(__response__, 'region')))
