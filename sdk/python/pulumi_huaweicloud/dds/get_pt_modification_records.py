# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetPtModificationRecordsResult',
    'AwaitableGetPtModificationRecordsResult',
    'get_pt_modification_records',
    'get_pt_modification_records_output',
]

@pulumi.output_type
class GetPtModificationRecordsResult:
    """
    A collection of values returned by getPtModificationRecords.
    """
    def __init__(__self__, configuration_id=None, histories=None, id=None, region=None):
        if configuration_id and not isinstance(configuration_id, str):
            raise TypeError("Expected argument 'configuration_id' to be a str")
        pulumi.set(__self__, "configuration_id", configuration_id)
        if histories and not isinstance(histories, list):
            raise TypeError("Expected argument 'histories' to be a list")
        pulumi.set(__self__, "histories", histories)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="configurationId")
    def configuration_id(self) -> _builtins.str:
        return pulumi.get(self, "configuration_id")

    @_builtins.property
    @pulumi.getter
    def histories(self) -> Sequence['outputs.GetPtModificationRecordsHistoryResult']:
        """
        Indicates the modification records.
        """
        return pulumi.get(self, "histories")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetPtModificationRecordsResult(GetPtModificationRecordsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPtModificationRecordsResult(
            configuration_id=self.configuration_id,
            histories=self.histories,
            id=self.id,
            region=self.region)


def get_pt_modification_records(configuration_id: Optional[_builtins.str] = None,
                                region: Optional[_builtins.str] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPtModificationRecordsResult:
    """
    Use this data source to get the list of DDS parameter template modification records.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    configuration_id = config.require_object("configurationId")
    test = huaweicloud.Dds.get_pt_modification_records(configuration_id=configuration_id)
    ```


    :param _builtins.str configuration_id: Specifies the ID of the parameter template.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['configurationId'] = configuration_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Dds/getPtModificationRecords:getPtModificationRecords', __args__, opts=opts, typ=GetPtModificationRecordsResult).value

    return AwaitableGetPtModificationRecordsResult(
        configuration_id=pulumi.get(__ret__, 'configuration_id'),
        histories=pulumi.get(__ret__, 'histories'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'))
def get_pt_modification_records_output(configuration_id: Optional[pulumi.Input[_builtins.str]] = None,
                                       region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                       opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetPtModificationRecordsResult]:
    """
    Use this data source to get the list of DDS parameter template modification records.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    configuration_id = config.require_object("configurationId")
    test = huaweicloud.Dds.get_pt_modification_records(configuration_id=configuration_id)
    ```


    :param _builtins.str configuration_id: Specifies the ID of the parameter template.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['configurationId'] = configuration_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Dds/getPtModificationRecords:getPtModificationRecords', __args__, opts=opts, typ=GetPtModificationRecordsResult)
    return __ret__.apply(lambda __response__: GetPtModificationRecordsResult(
        configuration_id=pulumi.get(__response__, 'configuration_id'),
        histories=pulumi.get(__response__, 'histories'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region')))
