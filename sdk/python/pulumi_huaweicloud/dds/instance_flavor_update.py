# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['InstanceFlavorUpdateArgs', 'InstanceFlavorUpdate']

@pulumi.input_type
class InstanceFlavorUpdateArgs:
    def __init__(__self__, *,
                 instance_id: pulumi.Input[_builtins.str],
                 target_spec_code: pulumi.Input[_builtins.str],
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 target_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 target_type: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a InstanceFlavorUpdate resource.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of a DDS instance.
        :param pulumi.Input[_builtins.str] target_spec_code: Specifies the resource specification code of the new specification.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] target_id: Specifies the ID of the node or instance whose specifications are to be
               modified.
               + For a cluster instance:
               - When you change the specifications of a mongos node, the value is the mongos node ID.
               - When you change the specifications of a single shard group, the value is the shard group ID.
               - When you change the specifications of multiple shard groups in batches, this parameter is not specified.
               - When you change the specifications of a config group, the value is the config group ID.
               + For a replica set instance, the value is the DB instance ID. If you modify the specifications of a read replica, the
               value is the read replica ID.
               + For a single node instance, the value is the DB instance ID.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] target_ids: Specifies the IDs of the node groups whose specifications are to be modified.
               + For a cluster instance:
               - This parameter is not transferred when the specifications of a mongos node are to be changed when the specifications
               of a single shard group are to be changed, or when the specifications of a config group are to be changed.
               - When you change the specifications of multiple shard groups in batches, the value is the IDs of the shard groups.
               A maximum of 16 shard groups can be selected in batches.
               + This parameter is not specified for replica set instances.
               + This parameter is not specified for single node instances.
        :param pulumi.Input[_builtins.str] target_type: Specifies the type of the instance. Value options: **mongos**,
               **shard**, **config**, **readonly**.
               + This parameter is mandatory for a cluster instance.
               - To change the specifications of a mongos node, set this parameter to **mongos**.
               - To change the specifications of a single shard or multiple shards in batches, set this parameter to **shard**.
               - To change the specifications of a config node, set this parameter to **config**.
               + This parameter is not specified for replica set instances. If you modify the specifications of a read replica, the
               value is **readonly**.
               + This parameter is not specified for single node instances.
        """
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "target_spec_code", target_spec_code)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if target_id is not None:
            pulumi.set(__self__, "target_id", target_id)
        if target_ids is not None:
            pulumi.set(__self__, "target_ids", target_ids)
        if target_type is not None:
            pulumi.set(__self__, "target_type", target_type)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of a DDS instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="targetSpecCode")
    def target_spec_code(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the resource specification code of the new specification.
        """
        return pulumi.get(self, "target_spec_code")

    @target_spec_code.setter
    def target_spec_code(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "target_spec_code", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="targetId")
    def target_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the node or instance whose specifications are to be
        modified.
        + For a cluster instance:
        - When you change the specifications of a mongos node, the value is the mongos node ID.
        - When you change the specifications of a single shard group, the value is the shard group ID.
        - When you change the specifications of multiple shard groups in batches, this parameter is not specified.
        - When you change the specifications of a config group, the value is the config group ID.
        + For a replica set instance, the value is the DB instance ID. If you modify the specifications of a read replica, the
        value is the read replica ID.
        + For a single node instance, the value is the DB instance ID.
        """
        return pulumi.get(self, "target_id")

    @target_id.setter
    def target_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_id", value)

    @_builtins.property
    @pulumi.getter(name="targetIds")
    def target_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the IDs of the node groups whose specifications are to be modified.
        + For a cluster instance:
        - This parameter is not transferred when the specifications of a mongos node are to be changed when the specifications
        of a single shard group are to be changed, or when the specifications of a config group are to be changed.
        - When you change the specifications of multiple shard groups in batches, the value is the IDs of the shard groups.
        A maximum of 16 shard groups can be selected in batches.
        + This parameter is not specified for replica set instances.
        + This parameter is not specified for single node instances.
        """
        return pulumi.get(self, "target_ids")

    @target_ids.setter
    def target_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "target_ids", value)

    @_builtins.property
    @pulumi.getter(name="targetType")
    def target_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the type of the instance. Value options: **mongos**,
        **shard**, **config**, **readonly**.
        + This parameter is mandatory for a cluster instance.
        - To change the specifications of a mongos node, set this parameter to **mongos**.
        - To change the specifications of a single shard or multiple shards in batches, set this parameter to **shard**.
        - To change the specifications of a config node, set this parameter to **config**.
        + This parameter is not specified for replica set instances. If you modify the specifications of a read replica, the
        value is **readonly**.
        + This parameter is not specified for single node instances.
        """
        return pulumi.get(self, "target_type")

    @target_type.setter
    def target_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_type", value)


@pulumi.input_type
class _InstanceFlavorUpdateState:
    def __init__(__self__, *,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 target_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 target_spec_code: Optional[pulumi.Input[_builtins.str]] = None,
                 target_type: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering InstanceFlavorUpdate resources.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of a DDS instance.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] target_id: Specifies the ID of the node or instance whose specifications are to be
               modified.
               + For a cluster instance:
               - When you change the specifications of a mongos node, the value is the mongos node ID.
               - When you change the specifications of a single shard group, the value is the shard group ID.
               - When you change the specifications of multiple shard groups in batches, this parameter is not specified.
               - When you change the specifications of a config group, the value is the config group ID.
               + For a replica set instance, the value is the DB instance ID. If you modify the specifications of a read replica, the
               value is the read replica ID.
               + For a single node instance, the value is the DB instance ID.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] target_ids: Specifies the IDs of the node groups whose specifications are to be modified.
               + For a cluster instance:
               - This parameter is not transferred when the specifications of a mongos node are to be changed when the specifications
               of a single shard group are to be changed, or when the specifications of a config group are to be changed.
               - When you change the specifications of multiple shard groups in batches, the value is the IDs of the shard groups.
               A maximum of 16 shard groups can be selected in batches.
               + This parameter is not specified for replica set instances.
               + This parameter is not specified for single node instances.
        :param pulumi.Input[_builtins.str] target_spec_code: Specifies the resource specification code of the new specification.
        :param pulumi.Input[_builtins.str] target_type: Specifies the type of the instance. Value options: **mongos**,
               **shard**, **config**, **readonly**.
               + This parameter is mandatory for a cluster instance.
               - To change the specifications of a mongos node, set this parameter to **mongos**.
               - To change the specifications of a single shard or multiple shards in batches, set this parameter to **shard**.
               - To change the specifications of a config node, set this parameter to **config**.
               + This parameter is not specified for replica set instances. If you modify the specifications of a read replica, the
               value is **readonly**.
               + This parameter is not specified for single node instances.
        """
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if target_id is not None:
            pulumi.set(__self__, "target_id", target_id)
        if target_ids is not None:
            pulumi.set(__self__, "target_ids", target_ids)
        if target_spec_code is not None:
            pulumi.set(__self__, "target_spec_code", target_spec_code)
        if target_type is not None:
            pulumi.set(__self__, "target_type", target_type)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of a DDS instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="targetId")
    def target_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the node or instance whose specifications are to be
        modified.
        + For a cluster instance:
        - When you change the specifications of a mongos node, the value is the mongos node ID.
        - When you change the specifications of a single shard group, the value is the shard group ID.
        - When you change the specifications of multiple shard groups in batches, this parameter is not specified.
        - When you change the specifications of a config group, the value is the config group ID.
        + For a replica set instance, the value is the DB instance ID. If you modify the specifications of a read replica, the
        value is the read replica ID.
        + For a single node instance, the value is the DB instance ID.
        """
        return pulumi.get(self, "target_id")

    @target_id.setter
    def target_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_id", value)

    @_builtins.property
    @pulumi.getter(name="targetIds")
    def target_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the IDs of the node groups whose specifications are to be modified.
        + For a cluster instance:
        - This parameter is not transferred when the specifications of a mongos node are to be changed when the specifications
        of a single shard group are to be changed, or when the specifications of a config group are to be changed.
        - When you change the specifications of multiple shard groups in batches, the value is the IDs of the shard groups.
        A maximum of 16 shard groups can be selected in batches.
        + This parameter is not specified for replica set instances.
        + This parameter is not specified for single node instances.
        """
        return pulumi.get(self, "target_ids")

    @target_ids.setter
    def target_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "target_ids", value)

    @_builtins.property
    @pulumi.getter(name="targetSpecCode")
    def target_spec_code(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the resource specification code of the new specification.
        """
        return pulumi.get(self, "target_spec_code")

    @target_spec_code.setter
    def target_spec_code(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_spec_code", value)

    @_builtins.property
    @pulumi.getter(name="targetType")
    def target_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the type of the instance. Value options: **mongos**,
        **shard**, **config**, **readonly**.
        + This parameter is mandatory for a cluster instance.
        - To change the specifications of a mongos node, set this parameter to **mongos**.
        - To change the specifications of a single shard or multiple shards in batches, set this parameter to **shard**.
        - To change the specifications of a config node, set this parameter to **config**.
        + This parameter is not specified for replica set instances. If you modify the specifications of a read replica, the
        value is **readonly**.
        + This parameter is not specified for single node instances.
        """
        return pulumi.get(self, "target_type")

    @target_type.setter
    def target_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_type", value)


@pulumi.type_token("huaweicloud:Dds/instanceFlavorUpdate:InstanceFlavorUpdate")
class InstanceFlavorUpdate(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 target_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 target_spec_code: Optional[pulumi.Input[_builtins.str]] = None,
                 target_type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a DDS instance flavor update resource within HuaweiCloud.

        ## Example Usage

        ### Update instance's mongos node flavor

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        node_id = config.require_object("nodeId")
        test = huaweicloud.dds.InstanceFlavorUpdate("test",
            instance_id=instance_id,
            target_spec_code="dds.mongodb.c6.2xlarge.4.mongos",
            target_type="mongos",
            target_id=node_id)
        ```

        ### Update instance's shard group flavor

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        group_id = config.require_object("groupId")
        test = huaweicloud.dds.InstanceFlavorUpdate("test",
            instance_id=instance_id,
            target_spec_code="dds.mongodb.s6.medium.4.shard",
            target_type="shard",
            target_id=group_id)
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of a DDS instance.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] target_id: Specifies the ID of the node or instance whose specifications are to be
               modified.
               + For a cluster instance:
               - When you change the specifications of a mongos node, the value is the mongos node ID.
               - When you change the specifications of a single shard group, the value is the shard group ID.
               - When you change the specifications of multiple shard groups in batches, this parameter is not specified.
               - When you change the specifications of a config group, the value is the config group ID.
               + For a replica set instance, the value is the DB instance ID. If you modify the specifications of a read replica, the
               value is the read replica ID.
               + For a single node instance, the value is the DB instance ID.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] target_ids: Specifies the IDs of the node groups whose specifications are to be modified.
               + For a cluster instance:
               - This parameter is not transferred when the specifications of a mongos node are to be changed when the specifications
               of a single shard group are to be changed, or when the specifications of a config group are to be changed.
               - When you change the specifications of multiple shard groups in batches, the value is the IDs of the shard groups.
               A maximum of 16 shard groups can be selected in batches.
               + This parameter is not specified for replica set instances.
               + This parameter is not specified for single node instances.
        :param pulumi.Input[_builtins.str] target_spec_code: Specifies the resource specification code of the new specification.
        :param pulumi.Input[_builtins.str] target_type: Specifies the type of the instance. Value options: **mongos**,
               **shard**, **config**, **readonly**.
               + This parameter is mandatory for a cluster instance.
               - To change the specifications of a mongos node, set this parameter to **mongos**.
               - To change the specifications of a single shard or multiple shards in batches, set this parameter to **shard**.
               - To change the specifications of a config node, set this parameter to **config**.
               + This parameter is not specified for replica set instances. If you modify the specifications of a read replica, the
               value is **readonly**.
               + This parameter is not specified for single node instances.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: InstanceFlavorUpdateArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a DDS instance flavor update resource within HuaweiCloud.

        ## Example Usage

        ### Update instance's mongos node flavor

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        node_id = config.require_object("nodeId")
        test = huaweicloud.dds.InstanceFlavorUpdate("test",
            instance_id=instance_id,
            target_spec_code="dds.mongodb.c6.2xlarge.4.mongos",
            target_type="mongos",
            target_id=node_id)
        ```

        ### Update instance's shard group flavor

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        group_id = config.require_object("groupId")
        test = huaweicloud.dds.InstanceFlavorUpdate("test",
            instance_id=instance_id,
            target_spec_code="dds.mongodb.s6.medium.4.shard",
            target_type="shard",
            target_id=group_id)
        ```

        :param str resource_name: The name of the resource.
        :param InstanceFlavorUpdateArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(InstanceFlavorUpdateArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 target_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 target_spec_code: Optional[pulumi.Input[_builtins.str]] = None,
                 target_type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = InstanceFlavorUpdateArgs.__new__(InstanceFlavorUpdateArgs)

            __props__.__dict__["enable_force_new"] = enable_force_new
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["region"] = region
            __props__.__dict__["target_id"] = target_id
            __props__.__dict__["target_ids"] = target_ids
            if target_spec_code is None and not opts.urn:
                raise TypeError("Missing required property 'target_spec_code'")
            __props__.__dict__["target_spec_code"] = target_spec_code
            __props__.__dict__["target_type"] = target_type
        super(InstanceFlavorUpdate, __self__).__init__(
            'huaweicloud:Dds/instanceFlavorUpdate:InstanceFlavorUpdate',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            target_id: Optional[pulumi.Input[_builtins.str]] = None,
            target_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            target_spec_code: Optional[pulumi.Input[_builtins.str]] = None,
            target_type: Optional[pulumi.Input[_builtins.str]] = None) -> 'InstanceFlavorUpdate':
        """
        Get an existing InstanceFlavorUpdate resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of a DDS instance.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] target_id: Specifies the ID of the node or instance whose specifications are to be
               modified.
               + For a cluster instance:
               - When you change the specifications of a mongos node, the value is the mongos node ID.
               - When you change the specifications of a single shard group, the value is the shard group ID.
               - When you change the specifications of multiple shard groups in batches, this parameter is not specified.
               - When you change the specifications of a config group, the value is the config group ID.
               + For a replica set instance, the value is the DB instance ID. If you modify the specifications of a read replica, the
               value is the read replica ID.
               + For a single node instance, the value is the DB instance ID.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] target_ids: Specifies the IDs of the node groups whose specifications are to be modified.
               + For a cluster instance:
               - This parameter is not transferred when the specifications of a mongos node are to be changed when the specifications
               of a single shard group are to be changed, or when the specifications of a config group are to be changed.
               - When you change the specifications of multiple shard groups in batches, the value is the IDs of the shard groups.
               A maximum of 16 shard groups can be selected in batches.
               + This parameter is not specified for replica set instances.
               + This parameter is not specified for single node instances.
        :param pulumi.Input[_builtins.str] target_spec_code: Specifies the resource specification code of the new specification.
        :param pulumi.Input[_builtins.str] target_type: Specifies the type of the instance. Value options: **mongos**,
               **shard**, **config**, **readonly**.
               + This parameter is mandatory for a cluster instance.
               - To change the specifications of a mongos node, set this parameter to **mongos**.
               - To change the specifications of a single shard or multiple shards in batches, set this parameter to **shard**.
               - To change the specifications of a config node, set this parameter to **config**.
               + This parameter is not specified for replica set instances. If you modify the specifications of a read replica, the
               value is **readonly**.
               + This parameter is not specified for single node instances.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _InstanceFlavorUpdateState.__new__(_InstanceFlavorUpdateState)

        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["region"] = region
        __props__.__dict__["target_id"] = target_id
        __props__.__dict__["target_ids"] = target_ids
        __props__.__dict__["target_spec_code"] = target_spec_code
        __props__.__dict__["target_type"] = target_type
        return InstanceFlavorUpdate(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of a DDS instance.
        """
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="targetId")
    def target_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the ID of the node or instance whose specifications are to be
        modified.
        + For a cluster instance:
        - When you change the specifications of a mongos node, the value is the mongos node ID.
        - When you change the specifications of a single shard group, the value is the shard group ID.
        - When you change the specifications of multiple shard groups in batches, this parameter is not specified.
        - When you change the specifications of a config group, the value is the config group ID.
        + For a replica set instance, the value is the DB instance ID. If you modify the specifications of a read replica, the
        value is the read replica ID.
        + For a single node instance, the value is the DB instance ID.
        """
        return pulumi.get(self, "target_id")

    @_builtins.property
    @pulumi.getter(name="targetIds")
    def target_ids(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        Specifies the IDs of the node groups whose specifications are to be modified.
        + For a cluster instance:
        - This parameter is not transferred when the specifications of a mongos node are to be changed when the specifications
        of a single shard group are to be changed, or when the specifications of a config group are to be changed.
        - When you change the specifications of multiple shard groups in batches, the value is the IDs of the shard groups.
        A maximum of 16 shard groups can be selected in batches.
        + This parameter is not specified for replica set instances.
        + This parameter is not specified for single node instances.
        """
        return pulumi.get(self, "target_ids")

    @_builtins.property
    @pulumi.getter(name="targetSpecCode")
    def target_spec_code(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the resource specification code of the new specification.
        """
        return pulumi.get(self, "target_spec_code")

    @_builtins.property
    @pulumi.getter(name="targetType")
    def target_type(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the type of the instance. Value options: **mongos**,
        **shard**, **config**, **readonly**.
        + This parameter is mandatory for a cluster instance.
        - To change the specifications of a mongos node, set this parameter to **mongos**.
        - To change the specifications of a single shard or multiple shards in batches, set this parameter to **shard**.
        - To change the specifications of a config node, set this parameter to **config**.
        + This parameter is not specified for replica set instances. If you modify the specifications of a read replica, the
        value is **readonly**.
        + This parameter is not specified for single node instances.
        """
        return pulumi.get(self, "target_type")

