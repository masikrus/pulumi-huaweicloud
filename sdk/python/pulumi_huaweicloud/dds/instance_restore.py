# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['InstanceRestoreArgs', 'InstanceRestore']

@pulumi.input_type
class InstanceRestoreArgs:
    def __init__(__self__, *,
                 source_id: pulumi.Input[_builtins.str],
                 target_id: pulumi.Input[_builtins.str],
                 backup_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 restore_time: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a InstanceRestore resource.
        :param pulumi.Input[_builtins.str] source_id: Specifies the ID of the source DDS instance.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] target_id: Specifies the ID of the target DDS instance.
        :param pulumi.Input[_builtins.str] backup_id: Specifies the backup ID of the source DDS instance.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] restore_time: Specifies the restore time of the source DDS instance. The unit is
               millisecond and the time zone is UTC. This parameter takes effect only for replica set instances.
               Changing this creates a new resource.
               
               > Only one of `backup_id` and `restore_time`can be set and it will return a validation error if none are specified.
        """
        pulumi.set(__self__, "source_id", source_id)
        pulumi.set(__self__, "target_id", target_id)
        if backup_id is not None:
            pulumi.set(__self__, "backup_id", backup_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if restore_time is not None:
            pulumi.set(__self__, "restore_time", restore_time)

    @_builtins.property
    @pulumi.getter(name="sourceId")
    def source_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the source DDS instance.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "source_id")

    @source_id.setter
    def source_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "source_id", value)

    @_builtins.property
    @pulumi.getter(name="targetId")
    def target_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the target DDS instance.
        """
        return pulumi.get(self, "target_id")

    @target_id.setter
    def target_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "target_id", value)

    @_builtins.property
    @pulumi.getter(name="backupId")
    def backup_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the backup ID of the source DDS instance.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "backup_id")

    @backup_id.setter
    def backup_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "backup_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="restoreTime")
    def restore_time(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the restore time of the source DDS instance. The unit is
        millisecond and the time zone is UTC. This parameter takes effect only for replica set instances.
        Changing this creates a new resource.

        > Only one of `backup_id` and `restore_time`can be set and it will return a validation error if none are specified.
        """
        return pulumi.get(self, "restore_time")

    @restore_time.setter
    def restore_time(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "restore_time", value)


@pulumi.input_type
class _InstanceRestoreState:
    def __init__(__self__, *,
                 backup_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 restore_time: Optional[pulumi.Input[_builtins.str]] = None,
                 source_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering InstanceRestore resources.
        :param pulumi.Input[_builtins.str] backup_id: Specifies the backup ID of the source DDS instance.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] restore_time: Specifies the restore time of the source DDS instance. The unit is
               millisecond and the time zone is UTC. This parameter takes effect only for replica set instances.
               Changing this creates a new resource.
               
               > Only one of `backup_id` and `restore_time`can be set and it will return a validation error if none are specified.
        :param pulumi.Input[_builtins.str] source_id: Specifies the ID of the source DDS instance.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] target_id: Specifies the ID of the target DDS instance.
        """
        if backup_id is not None:
            pulumi.set(__self__, "backup_id", backup_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if restore_time is not None:
            pulumi.set(__self__, "restore_time", restore_time)
        if source_id is not None:
            pulumi.set(__self__, "source_id", source_id)
        if target_id is not None:
            pulumi.set(__self__, "target_id", target_id)

    @_builtins.property
    @pulumi.getter(name="backupId")
    def backup_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the backup ID of the source DDS instance.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "backup_id")

    @backup_id.setter
    def backup_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "backup_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="restoreTime")
    def restore_time(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the restore time of the source DDS instance. The unit is
        millisecond and the time zone is UTC. This parameter takes effect only for replica set instances.
        Changing this creates a new resource.

        > Only one of `backup_id` and `restore_time`can be set and it will return a validation error if none are specified.
        """
        return pulumi.get(self, "restore_time")

    @restore_time.setter
    def restore_time(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "restore_time", value)

    @_builtins.property
    @pulumi.getter(name="sourceId")
    def source_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the source DDS instance.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "source_id")

    @source_id.setter
    def source_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_id", value)

    @_builtins.property
    @pulumi.getter(name="targetId")
    def target_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the target DDS instance.
        """
        return pulumi.get(self, "target_id")

    @target_id.setter
    def target_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_id", value)


@pulumi.type_token("huaweicloud:Dds/instanceRestore:InstanceRestore")
class InstanceRestore(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 backup_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 restore_time: Optional[pulumi.Input[_builtins.str]] = None,
                 source_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a DDS instance restore resource within HuaweiCloud.

        ## Example Usage

        ### Restore insatnce by backup ID

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        source_id = config.require_object("sourceId")
        backup_id = config.require_object("backupId")
        target_id = config.require_object("targetId")
        test = huaweicloud.dds.InstanceRestore("test",
            source_id=source_id,
            backup_id=backup_id,
            target_id=target_id)
        ```

        ### Restore insatnce by time stamp

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        source_id = config.require_object("sourceId")
        restore_time = config.require_object("restoreTime")
        target_id = config.require_object("targetId")
        test = huaweicloud.dds.InstanceRestore("test",
            source_id=source_id,
            restore_time=restore_time,
            target_id=target_id)
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] backup_id: Specifies the backup ID of the source DDS instance.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] restore_time: Specifies the restore time of the source DDS instance. The unit is
               millisecond and the time zone is UTC. This parameter takes effect only for replica set instances.
               Changing this creates a new resource.
               
               > Only one of `backup_id` and `restore_time`can be set and it will return a validation error if none are specified.
        :param pulumi.Input[_builtins.str] source_id: Specifies the ID of the source DDS instance.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] target_id: Specifies the ID of the target DDS instance.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: InstanceRestoreArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a DDS instance restore resource within HuaweiCloud.

        ## Example Usage

        ### Restore insatnce by backup ID

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        source_id = config.require_object("sourceId")
        backup_id = config.require_object("backupId")
        target_id = config.require_object("targetId")
        test = huaweicloud.dds.InstanceRestore("test",
            source_id=source_id,
            backup_id=backup_id,
            target_id=target_id)
        ```

        ### Restore insatnce by time stamp

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        source_id = config.require_object("sourceId")
        restore_time = config.require_object("restoreTime")
        target_id = config.require_object("targetId")
        test = huaweicloud.dds.InstanceRestore("test",
            source_id=source_id,
            restore_time=restore_time,
            target_id=target_id)
        ```

        :param str resource_name: The name of the resource.
        :param InstanceRestoreArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(InstanceRestoreArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 backup_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 restore_time: Optional[pulumi.Input[_builtins.str]] = None,
                 source_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = InstanceRestoreArgs.__new__(InstanceRestoreArgs)

            __props__.__dict__["backup_id"] = backup_id
            __props__.__dict__["region"] = region
            __props__.__dict__["restore_time"] = restore_time
            if source_id is None and not opts.urn:
                raise TypeError("Missing required property 'source_id'")
            __props__.__dict__["source_id"] = source_id
            if target_id is None and not opts.urn:
                raise TypeError("Missing required property 'target_id'")
            __props__.__dict__["target_id"] = target_id
        super(InstanceRestore, __self__).__init__(
            'huaweicloud:Dds/instanceRestore:InstanceRestore',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            backup_id: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            restore_time: Optional[pulumi.Input[_builtins.str]] = None,
            source_id: Optional[pulumi.Input[_builtins.str]] = None,
            target_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'InstanceRestore':
        """
        Get an existing InstanceRestore resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] backup_id: Specifies the backup ID of the source DDS instance.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] restore_time: Specifies the restore time of the source DDS instance. The unit is
               millisecond and the time zone is UTC. This parameter takes effect only for replica set instances.
               Changing this creates a new resource.
               
               > Only one of `backup_id` and `restore_time`can be set and it will return a validation error if none are specified.
        :param pulumi.Input[_builtins.str] source_id: Specifies the ID of the source DDS instance.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] target_id: Specifies the ID of the target DDS instance.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _InstanceRestoreState.__new__(_InstanceRestoreState)

        __props__.__dict__["backup_id"] = backup_id
        __props__.__dict__["region"] = region
        __props__.__dict__["restore_time"] = restore_time
        __props__.__dict__["source_id"] = source_id
        __props__.__dict__["target_id"] = target_id
        return InstanceRestore(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="backupId")
    def backup_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the backup ID of the source DDS instance.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "backup_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="restoreTime")
    def restore_time(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the restore time of the source DDS instance. The unit is
        millisecond and the time zone is UTC. This parameter takes effect only for replica set instances.
        Changing this creates a new resource.

        > Only one of `backup_id` and `restore_time`can be set and it will return a validation error if none are specified.
        """
        return pulumi.get(self, "restore_time")

    @_builtins.property
    @pulumi.getter(name="sourceId")
    def source_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the source DDS instance.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "source_id")

    @_builtins.property
    @pulumi.getter(name="targetId")
    def target_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the target DDS instance.
        """
        return pulumi.get(self, "target_id")

