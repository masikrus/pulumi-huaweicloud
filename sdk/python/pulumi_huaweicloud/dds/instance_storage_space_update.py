# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['InstanceStorageSpaceUpdateArgs', 'InstanceStorageSpaceUpdate']

@pulumi.input_type
class InstanceStorageSpaceUpdateArgs:
    def __init__(__self__, *,
                 instance_id: pulumi.Input[_builtins.str],
                 size: pulumi.Input[_builtins.int],
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 node_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a InstanceStorageSpaceUpdate resource.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of a DDS instance.
        :param pulumi.Input[_builtins.int] size: Specifies the disk capacity. The value must be an integer multiple of 10 and
               greater than the current storage space.
               + In a cluster instance, this parameter indicates the storage space of shard nodes. Value range: 10 GB to 5,000 GB when
               the shard node has fewer than 8 vCPUs. 10 GB to 10,000 GB when the shard node has 8 or more vCPUs.
               + In a replica set instance, this parameter indicates the disk capacity of the DB instance to be expanded. The value
               range is from 10 GB to 5,000 GB when the instance has fewer than 8 vCPUs. The value range is from 10 GB to 10,000 GB
               when the instance has 8 or more vCPUs.
               + In a single node instance, this parameter indicates the disk capacity of the DB instance to be expanded. The value
               range is from 10 GB to 1,000 GB.
        :param pulumi.Input[_builtins.str] group_id: Specifies the role ID.
               + This parameter is not specified for replica set instances.
               + For a cluster instance, this parameter is set to the ID of the shard group.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] node_ids: Specifies the node IDs. This parameter is required when the disk capacity
               of the read replica of a replica set instance is expanded. Only one element can be transferred in the list.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        """
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "size", size)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if group_id is not None:
            pulumi.set(__self__, "group_id", group_id)
        if node_ids is not None:
            pulumi.set(__self__, "node_ids", node_ids)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of a DDS instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter
    def size(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the disk capacity. The value must be an integer multiple of 10 and
        greater than the current storage space.
        + In a cluster instance, this parameter indicates the storage space of shard nodes. Value range: 10 GB to 5,000 GB when
        the shard node has fewer than 8 vCPUs. 10 GB to 10,000 GB when the shard node has 8 or more vCPUs.
        + In a replica set instance, this parameter indicates the disk capacity of the DB instance to be expanded. The value
        range is from 10 GB to 5,000 GB when the instance has fewer than 8 vCPUs. The value range is from 10 GB to 10,000 GB
        when the instance has 8 or more vCPUs.
        + In a single node instance, this parameter indicates the disk capacity of the DB instance to be expanded. The value
        range is from 10 GB to 1,000 GB.
        """
        return pulumi.get(self, "size")

    @size.setter
    def size(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "size", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the role ID.
        + This parameter is not specified for replica set instances.
        + For a cluster instance, this parameter is set to the ID of the shard group.
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter(name="nodeIds")
    def node_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the node IDs. This parameter is required when the disk capacity
        of the read replica of a replica set instance is expanded. Only one element can be transferred in the list.
        """
        return pulumi.get(self, "node_ids")

    @node_ids.setter
    def node_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "node_ids", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _InstanceStorageSpaceUpdateState:
    def __init__(__self__, *,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 node_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 size: Optional[pulumi.Input[_builtins.int]] = None):
        """
        Input properties used for looking up and filtering InstanceStorageSpaceUpdate resources.
        :param pulumi.Input[_builtins.str] group_id: Specifies the role ID.
               + This parameter is not specified for replica set instances.
               + For a cluster instance, this parameter is set to the ID of the shard group.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of a DDS instance.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] node_ids: Specifies the node IDs. This parameter is required when the disk capacity
               of the read replica of a replica set instance is expanded. Only one element can be transferred in the list.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] size: Specifies the disk capacity. The value must be an integer multiple of 10 and
               greater than the current storage space.
               + In a cluster instance, this parameter indicates the storage space of shard nodes. Value range: 10 GB to 5,000 GB when
               the shard node has fewer than 8 vCPUs. 10 GB to 10,000 GB when the shard node has 8 or more vCPUs.
               + In a replica set instance, this parameter indicates the disk capacity of the DB instance to be expanded. The value
               range is from 10 GB to 5,000 GB when the instance has fewer than 8 vCPUs. The value range is from 10 GB to 10,000 GB
               when the instance has 8 or more vCPUs.
               + In a single node instance, this parameter indicates the disk capacity of the DB instance to be expanded. The value
               range is from 10 GB to 1,000 GB.
        """
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if group_id is not None:
            pulumi.set(__self__, "group_id", group_id)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if node_ids is not None:
            pulumi.set(__self__, "node_ids", node_ids)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if size is not None:
            pulumi.set(__self__, "size", size)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the role ID.
        + This parameter is not specified for replica set instances.
        + For a cluster instance, this parameter is set to the ID of the shard group.
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of a DDS instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="nodeIds")
    def node_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the node IDs. This parameter is required when the disk capacity
        of the read replica of a replica set instance is expanded. Only one element can be transferred in the list.
        """
        return pulumi.get(self, "node_ids")

    @node_ids.setter
    def node_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "node_ids", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def size(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the disk capacity. The value must be an integer multiple of 10 and
        greater than the current storage space.
        + In a cluster instance, this parameter indicates the storage space of shard nodes. Value range: 10 GB to 5,000 GB when
        the shard node has fewer than 8 vCPUs. 10 GB to 10,000 GB when the shard node has 8 or more vCPUs.
        + In a replica set instance, this parameter indicates the disk capacity of the DB instance to be expanded. The value
        range is from 10 GB to 5,000 GB when the instance has fewer than 8 vCPUs. The value range is from 10 GB to 10,000 GB
        when the instance has 8 or more vCPUs.
        + In a single node instance, this parameter indicates the disk capacity of the DB instance to be expanded. The value
        range is from 10 GB to 1,000 GB.
        """
        return pulumi.get(self, "size")

    @size.setter
    def size(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "size", value)


@pulumi.type_token("huaweicloud:Dds/instanceStorageSpaceUpdate:InstanceStorageSpaceUpdate")
class InstanceStorageSpaceUpdate(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 node_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 size: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        """
        Manages a DDS instance storage space update resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        group_id = config.require_object("groupId")
        test = huaweicloud.dds.InstanceStorageSpaceUpdate("test",
            instance_id=instance_id,
            size=40,
            group_id=group_id)
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] group_id: Specifies the role ID.
               + This parameter is not specified for replica set instances.
               + For a cluster instance, this parameter is set to the ID of the shard group.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of a DDS instance.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] node_ids: Specifies the node IDs. This parameter is required when the disk capacity
               of the read replica of a replica set instance is expanded. Only one element can be transferred in the list.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] size: Specifies the disk capacity. The value must be an integer multiple of 10 and
               greater than the current storage space.
               + In a cluster instance, this parameter indicates the storage space of shard nodes. Value range: 10 GB to 5,000 GB when
               the shard node has fewer than 8 vCPUs. 10 GB to 10,000 GB when the shard node has 8 or more vCPUs.
               + In a replica set instance, this parameter indicates the disk capacity of the DB instance to be expanded. The value
               range is from 10 GB to 5,000 GB when the instance has fewer than 8 vCPUs. The value range is from 10 GB to 10,000 GB
               when the instance has 8 or more vCPUs.
               + In a single node instance, this parameter indicates the disk capacity of the DB instance to be expanded. The value
               range is from 10 GB to 1,000 GB.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: InstanceStorageSpaceUpdateArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a DDS instance storage space update resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        group_id = config.require_object("groupId")
        test = huaweicloud.dds.InstanceStorageSpaceUpdate("test",
            instance_id=instance_id,
            size=40,
            group_id=group_id)
        ```

        :param str resource_name: The name of the resource.
        :param InstanceStorageSpaceUpdateArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(InstanceStorageSpaceUpdateArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 node_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 size: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = InstanceStorageSpaceUpdateArgs.__new__(InstanceStorageSpaceUpdateArgs)

            __props__.__dict__["enable_force_new"] = enable_force_new
            __props__.__dict__["group_id"] = group_id
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["node_ids"] = node_ids
            __props__.__dict__["region"] = region
            if size is None and not opts.urn:
                raise TypeError("Missing required property 'size'")
            __props__.__dict__["size"] = size
        super(InstanceStorageSpaceUpdate, __self__).__init__(
            'huaweicloud:Dds/instanceStorageSpaceUpdate:InstanceStorageSpaceUpdate',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            group_id: Optional[pulumi.Input[_builtins.str]] = None,
            instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            node_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            size: Optional[pulumi.Input[_builtins.int]] = None) -> 'InstanceStorageSpaceUpdate':
        """
        Get an existing InstanceStorageSpaceUpdate resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] group_id: Specifies the role ID.
               + This parameter is not specified for replica set instances.
               + For a cluster instance, this parameter is set to the ID of the shard group.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the ID of a DDS instance.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] node_ids: Specifies the node IDs. This parameter is required when the disk capacity
               of the read replica of a replica set instance is expanded. Only one element can be transferred in the list.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this creates a new resource.
        :param pulumi.Input[_builtins.int] size: Specifies the disk capacity. The value must be an integer multiple of 10 and
               greater than the current storage space.
               + In a cluster instance, this parameter indicates the storage space of shard nodes. Value range: 10 GB to 5,000 GB when
               the shard node has fewer than 8 vCPUs. 10 GB to 10,000 GB when the shard node has 8 or more vCPUs.
               + In a replica set instance, this parameter indicates the disk capacity of the DB instance to be expanded. The value
               range is from 10 GB to 5,000 GB when the instance has fewer than 8 vCPUs. The value range is from 10 GB to 10,000 GB
               when the instance has 8 or more vCPUs.
               + In a single node instance, this parameter indicates the disk capacity of the DB instance to be expanded. The value
               range is from 10 GB to 1,000 GB.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _InstanceStorageSpaceUpdateState.__new__(_InstanceStorageSpaceUpdateState)

        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["group_id"] = group_id
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["node_ids"] = node_ids
        __props__.__dict__["region"] = region
        __props__.__dict__["size"] = size
        return InstanceStorageSpaceUpdate(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the role ID.
        + This parameter is not specified for replica set instances.
        + For a cluster instance, this parameter is set to the ID of the shard group.
        """
        return pulumi.get(self, "group_id")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of a DDS instance.
        """
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter(name="nodeIds")
    def node_ids(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        Specifies the node IDs. This parameter is required when the disk capacity
        of the read replica of a replica set instance is expanded. Only one element can be transferred in the list.
        """
        return pulumi.get(self, "node_ids")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def size(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the disk capacity. The value must be an integer multiple of 10 and
        greater than the current storage space.
        + In a cluster instance, this parameter indicates the storage space of shard nodes. Value range: 10 GB to 5,000 GB when
        the shard node has fewer than 8 vCPUs. 10 GB to 10,000 GB when the shard node has 8 or more vCPUs.
        + In a replica set instance, this parameter indicates the disk capacity of the DB instance to be expanded. The value
        range is from 10 GB to 5,000 GB when the instance has fewer than 8 vCPUs. The value range is from 10 GB to 10,000 GB
        when the instance has 8 or more vCPUs.
        + In a single node instance, this parameter indicates the disk capacity of the DB instance to be expanded. The value
        range is from 10 GB to 1,000 GB.
        """
        return pulumi.get(self, "size")

