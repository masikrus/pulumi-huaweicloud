# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetTasksResult',
    'AwaitableGetTasksResult',
    'get_tasks',
    'get_tasks_output',
]

@pulumi.output_type
class GetTasksResult:
    """
    A collection of values returned by getTasks.
    """
    def __init__(__self__, id=None, region=None, secret_name=None, status=None, task_id=None, tasks=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if secret_name and not isinstance(secret_name, str):
            raise TypeError("Expected argument 'secret_name' to be a str")
        pulumi.set(__self__, "secret_name", secret_name)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)
        if task_id and not isinstance(task_id, str):
            raise TypeError("Expected argument 'task_id' to be a str")
        pulumi.set(__self__, "task_id", task_id)
        if tasks and not isinstance(tasks, list):
            raise TypeError("Expected argument 'tasks' to be a list")
        pulumi.set(__self__, "tasks", tasks)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="secretName")
    def secret_name(self) -> Optional[_builtins.str]:
        """
        The secret name.
        """
        return pulumi.get(self, "secret_name")

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="taskId")
    def task_id(self) -> Optional[_builtins.str]:
        """
        The task ID.
        """
        return pulumi.get(self, "task_id")

    @_builtins.property
    @pulumi.getter
    def tasks(self) -> Sequence['outputs.GetTasksTaskResult']:
        """
        The secret task list.
        """
        return pulumi.get(self, "tasks")


class AwaitableGetTasksResult(GetTasksResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetTasksResult(
            id=self.id,
            region=self.region,
            secret_name=self.secret_name,
            status=self.status,
            task_id=self.task_id,
            tasks=self.tasks)


def get_tasks(region: Optional[_builtins.str] = None,
              secret_name: Optional[_builtins.str] = None,
              status: Optional[_builtins.str] = None,
              task_id: Optional[_builtins.str] = None,
              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetTasksResult:
    """
    Use this data source to get the list of CSMS tasks within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Dew.get_tasks()
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str secret_name: Specifies the name of the secret.
    :param _builtins.str status: Specifies the task status. Valid values are:
           + **SUCCESS**: Task rotation successful.
           + **FAILED**: Task rotation failed.
    :param _builtins.str task_id: Specifies the task ID. This parameter cannot exist at the same time as other parameters.
    """
    __args__ = dict()
    __args__['region'] = region
    __args__['secretName'] = secret_name
    __args__['status'] = status
    __args__['taskId'] = task_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Dew/getTasks:getTasks', __args__, opts=opts, typ=GetTasksResult).value

    return AwaitableGetTasksResult(
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'),
        secret_name=pulumi.get(__ret__, 'secret_name'),
        status=pulumi.get(__ret__, 'status'),
        task_id=pulumi.get(__ret__, 'task_id'),
        tasks=pulumi.get(__ret__, 'tasks'))
def get_tasks_output(region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                     secret_name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                     status: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                     task_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetTasksResult]:
    """
    Use this data source to get the list of CSMS tasks within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Dew.get_tasks()
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str secret_name: Specifies the name of the secret.
    :param _builtins.str status: Specifies the task status. Valid values are:
           + **SUCCESS**: Task rotation successful.
           + **FAILED**: Task rotation failed.
    :param _builtins.str task_id: Specifies the task ID. This parameter cannot exist at the same time as other parameters.
    """
    __args__ = dict()
    __args__['region'] = region
    __args__['secretName'] = secret_name
    __args__['status'] = status
    __args__['taskId'] = task_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Dew/getTasks:getTasks', __args__, opts=opts, typ=GetTasksResult)
    return __ret__.apply(lambda __response__: GetTasksResult(
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region'),
        secret_name=pulumi.get(__response__, 'secret_name'),
        status=pulumi.get(__response__, 'status'),
        task_id=pulumi.get(__response__, 'task_id'),
        tasks=pulumi.get(__response__, 'tasks')))
