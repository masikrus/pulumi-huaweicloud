# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetInstanceEcsQuotaResult',
    'AwaitableGetInstanceEcsQuotaResult',
    'get_instance_ecs_quota',
    'get_instance_ecs_quota_output',
]

@pulumi.output_type
class GetInstanceEcsQuotaResult:
    """
    A collection of values returned by getInstanceEcsQuota.
    """
    def __init__(__self__, availability_zone=None, id=None, region=None, resource_spec_code=None, status=None, status_v6=None):
        if availability_zone and not isinstance(availability_zone, str):
            raise TypeError("Expected argument 'availability_zone' to be a str")
        pulumi.set(__self__, "availability_zone", availability_zone)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if resource_spec_code and not isinstance(resource_spec_code, str):
            raise TypeError("Expected argument 'resource_spec_code' to be a str")
        pulumi.set(__self__, "resource_spec_code", resource_spec_code)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)
        if status_v6 and not isinstance(status_v6, str):
            raise TypeError("Expected argument 'status_v6' to be a str")
        pulumi.set(__self__, "status_v6", status_v6)

    @_builtins.property
    @pulumi.getter(name="availabilityZone")
    def availability_zone(self) -> _builtins.str:
        return pulumi.get(self, "availability_zone")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="resourceSpecCode")
    def resource_spec_code(self) -> _builtins.str:
        return pulumi.get(self, "resource_spec_code")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        The status of the CBH instance specification resource.
        The valid values are as follows:
        + **sellout**: This specification of resources has been sold out.
        + **normal**: This specification of resources are commercially available normally.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="statusV6")
    def status_v6(self) -> _builtins.str:
        """
        The status of the CBH instance specification resource which support Ipv6.
        The valid values are as follows:
        + **sellout**: This specification of resources has been sold out.
        + **normal**: This specification of resources are commercially available normally.
        """
        return pulumi.get(self, "status_v6")


class AwaitableGetInstanceEcsQuotaResult(GetInstanceEcsQuotaResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInstanceEcsQuotaResult(
            availability_zone=self.availability_zone,
            id=self.id,
            region=self.region,
            resource_spec_code=self.resource_spec_code,
            status=self.status,
            status_v6=self.status_v6)


def get_instance_ecs_quota(availability_zone: Optional[_builtins.str] = None,
                           region: Optional[_builtins.str] = None,
                           resource_spec_code: Optional[_builtins.str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInstanceEcsQuotaResult:
    """
    Use this data source to get the ECS quota required for creating CBH instance within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    resource_spec_code = config.require_object("resourceSpecCode")
    availability_zone = config.require_object("availabilityZone")
    test = huaweicloud.cbh.get_instance_ecs_quota(availability_zone=availability_zone,
        resource_spec_code=resource_spec_code)
    ```


    :param _builtins.str availability_zone: Specifies the availability zone name.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str resource_spec_code: Specifies the specification code of the CBH instance to be created.
           The valid values are as follows:
           + **cbh.basic.10**: `10` asset standard version.
           + **cbh.enhance.10**: `10` asset professional version.
           
           Please refer to the API document link for its value
           [reference](https://support.huaweicloud.com/intl/en-us/api-cbh/ListSpecifications.html).
    """
    __args__ = dict()
    __args__['availabilityZone'] = availability_zone
    __args__['region'] = region
    __args__['resourceSpecCode'] = resource_spec_code
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:cbh/getInstanceEcsQuota:getInstanceEcsQuota', __args__, opts=opts, typ=GetInstanceEcsQuotaResult).value

    return AwaitableGetInstanceEcsQuotaResult(
        availability_zone=pulumi.get(__ret__, 'availability_zone'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'),
        resource_spec_code=pulumi.get(__ret__, 'resource_spec_code'),
        status=pulumi.get(__ret__, 'status'),
        status_v6=pulumi.get(__ret__, 'status_v6'))
def get_instance_ecs_quota_output(availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                                  region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                  resource_spec_code: Optional[pulumi.Input[_builtins.str]] = None,
                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetInstanceEcsQuotaResult]:
    """
    Use this data source to get the ECS quota required for creating CBH instance within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    resource_spec_code = config.require_object("resourceSpecCode")
    availability_zone = config.require_object("availabilityZone")
    test = huaweicloud.cbh.get_instance_ecs_quota(availability_zone=availability_zone,
        resource_spec_code=resource_spec_code)
    ```


    :param _builtins.str availability_zone: Specifies the availability zone name.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str resource_spec_code: Specifies the specification code of the CBH instance to be created.
           The valid values are as follows:
           + **cbh.basic.10**: `10` asset standard version.
           + **cbh.enhance.10**: `10` asset professional version.
           
           Please refer to the API document link for its value
           [reference](https://support.huaweicloud.com/intl/en-us/api-cbh/ListSpecifications.html).
    """
    __args__ = dict()
    __args__['availabilityZone'] = availability_zone
    __args__['region'] = region
    __args__['resourceSpecCode'] = resource_spec_code
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:cbh/getInstanceEcsQuota:getInstanceEcsQuota', __args__, opts=opts, typ=GetInstanceEcsQuotaResult)
    return __ret__.apply(lambda __response__: GetInstanceEcsQuotaResult(
        availability_zone=pulumi.get(__response__, 'availability_zone'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region'),
        resource_spec_code=pulumi.get(__response__, 'resource_spec_code'),
        status=pulumi.get(__response__, 'status'),
        status_v6=pulumi.get(__response__, 'status_v6')))
