# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetAvailabilityZonesAvailabilityZoneResult',
    'GetFlavorsFlavorResult',
    'GetInstanceTagsTagResult',
    'GetInstancesInstanceResult',
]

@pulumi.output_type
class GetAvailabilityZonesAvailabilityZoneResult(dict):
    def __init__(__self__, *,
                 display_name: _builtins.str,
                 name: _builtins.str,
                 region_id: _builtins.str,
                 status: _builtins.str,
                 type: _builtins.str):
        """
        :param _builtins.str display_name: Specifies the display name of the availability zone to be queried.
        :param _builtins.str name: Specifies the name of the availability zone to be queried.
        :param _builtins.str region_id: The ID of the region in which the availability zone belongs.
        :param _builtins.str status: The status of the availability zone. The value can be **Running**.
        :param _builtins.str type: The type of the availability zone. The valid values are as follows:
               + **Core**: Core availability zone.
               + **Dedicated**: Exclusive availability zone, only open to internal customers.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "region_id", region_id)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        """
        Specifies the display name of the availability zone to be queried.
        """
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Specifies the name of the availability zone to be queried.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="regionId")
    def region_id(self) -> _builtins.str:
        """
        The ID of the region in which the availability zone belongs.
        """
        return pulumi.get(self, "region_id")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        The status of the availability zone. The value can be **Running**.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The type of the availability zone. The valid values are as follows:
        + **Core**: Core availability zone.
        + **Dedicated**: Exclusive availability zone, only open to internal customers.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetFlavorsFlavorResult(dict):
    def __init__(__self__, *,
                 asset: _builtins.int,
                 data_disk_size: _builtins.float,
                 ecs_system_data_size: _builtins.int,
                 id: _builtins.str,
                 max_connection: _builtins.int,
                 memory: _builtins.int,
                 type: _builtins.str,
                 vcpus: _builtins.int):
        """
        :param _builtins.int asset: Specifies the number of CBH assets.
        :param _builtins.float data_disk_size: The size of the CBH data disk, in TB.
        :param _builtins.int ecs_system_data_size: The disk size of the CBH system disk, in GB.
        :param _builtins.str id: Indicates the ID of the specification.
        :param _builtins.int max_connection: Specifies the maximum number of connections to the CBH.
        :param _builtins.int memory: Specifies the memory size of the CBH, in GB.
        :param _builtins.str type: Specifies the type of CBH specification. The value can be:
               + **basic**: Standard version.
               + **enhance**: Professional version.
        :param _builtins.int vcpus: Specifies the number of CPU cores of the CBH.
        """
        pulumi.set(__self__, "asset", asset)
        pulumi.set(__self__, "data_disk_size", data_disk_size)
        pulumi.set(__self__, "ecs_system_data_size", ecs_system_data_size)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "max_connection", max_connection)
        pulumi.set(__self__, "memory", memory)
        pulumi.set(__self__, "type", type)
        pulumi.set(__self__, "vcpus", vcpus)

    @_builtins.property
    @pulumi.getter
    def asset(self) -> _builtins.int:
        """
        Specifies the number of CBH assets.
        """
        return pulumi.get(self, "asset")

    @_builtins.property
    @pulumi.getter(name="dataDiskSize")
    def data_disk_size(self) -> _builtins.float:
        """
        The size of the CBH data disk, in TB.
        """
        return pulumi.get(self, "data_disk_size")

    @_builtins.property
    @pulumi.getter(name="ecsSystemDataSize")
    def ecs_system_data_size(self) -> _builtins.int:
        """
        The disk size of the CBH system disk, in GB.
        """
        return pulumi.get(self, "ecs_system_data_size")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        Indicates the ID of the specification.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="maxConnection")
    def max_connection(self) -> _builtins.int:
        """
        Specifies the maximum number of connections to the CBH.
        """
        return pulumi.get(self, "max_connection")

    @_builtins.property
    @pulumi.getter
    def memory(self) -> _builtins.int:
        """
        Specifies the memory size of the CBH, in GB.
        """
        return pulumi.get(self, "memory")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        Specifies the type of CBH specification. The value can be:
        + **basic**: Standard version.
        + **enhance**: Professional version.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter
    def vcpus(self) -> _builtins.int:
        """
        Specifies the number of CPU cores of the CBH.
        """
        return pulumi.get(self, "vcpus")


@pulumi.output_type
class GetInstanceTagsTagResult(dict):
    def __init__(__self__, *,
                 key: _builtins.str,
                 values: Sequence[_builtins.str]):
        """
        :param _builtins.str key: The key of the tag.
        :param Sequence[_builtins.str] values: The list of the tag values.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "values", values)

    @_builtins.property
    @pulumi.getter
    def key(self) -> _builtins.str:
        """
        The key of the tag.
        """
        return pulumi.get(self, "key")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        """
        The list of the tag values.
        """
        return pulumi.get(self, "values")


@pulumi.output_type
class GetInstancesInstanceResult(dict):
    def __init__(__self__, *,
                 availability_zone: _builtins.str,
                 flavor_id: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str,
                 private_ip: _builtins.str,
                 public_ip: _builtins.str,
                 public_ip_id: _builtins.str,
                 security_group_id: _builtins.str,
                 status: _builtins.str,
                 subnet_id: _builtins.str,
                 version: _builtins.str,
                 vpc_id: _builtins.str):
        """
        :param _builtins.str availability_zone: Indicates the availability zone name.
        :param _builtins.str flavor_id: Specifies the specification of the instance.
        :param _builtins.str id: Indicates the ID of the instance.
        :param _builtins.str name: Specifies the instance name.
        :param _builtins.str private_ip: Indicates the private IP address of the instance.
        :param _builtins.str public_ip: Indicates the elastic IP address.
        :param _builtins.str public_ip_id: Indicates the ID of the elastic IP.
        :param _builtins.str security_group_id: Specifies the ID of a security group.
        :param _builtins.str status: Indicates the status of the instance.
        :param _builtins.str subnet_id: Specifies the ID of a subnet.
        :param _builtins.str version: Specifies the current version of the instance image.
        :param _builtins.str vpc_id: Specifies the ID of a VPC.
        """
        pulumi.set(__self__, "availability_zone", availability_zone)
        pulumi.set(__self__, "flavor_id", flavor_id)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "private_ip", private_ip)
        pulumi.set(__self__, "public_ip", public_ip)
        pulumi.set(__self__, "public_ip_id", public_ip_id)
        pulumi.set(__self__, "security_group_id", security_group_id)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "subnet_id", subnet_id)
        pulumi.set(__self__, "version", version)
        pulumi.set(__self__, "vpc_id", vpc_id)

    @_builtins.property
    @pulumi.getter(name="availabilityZone")
    def availability_zone(self) -> _builtins.str:
        """
        Indicates the availability zone name.
        """
        return pulumi.get(self, "availability_zone")

    @_builtins.property
    @pulumi.getter(name="flavorId")
    def flavor_id(self) -> _builtins.str:
        """
        Specifies the specification of the instance.
        """
        return pulumi.get(self, "flavor_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        Indicates the ID of the instance.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Specifies the instance name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="privateIp")
    def private_ip(self) -> _builtins.str:
        """
        Indicates the private IP address of the instance.
        """
        return pulumi.get(self, "private_ip")

    @_builtins.property
    @pulumi.getter(name="publicIp")
    def public_ip(self) -> _builtins.str:
        """
        Indicates the elastic IP address.
        """
        return pulumi.get(self, "public_ip")

    @_builtins.property
    @pulumi.getter(name="publicIpId")
    def public_ip_id(self) -> _builtins.str:
        """
        Indicates the ID of the elastic IP.
        """
        return pulumi.get(self, "public_ip_id")

    @_builtins.property
    @pulumi.getter(name="securityGroupId")
    def security_group_id(self) -> _builtins.str:
        """
        Specifies the ID of a security group.
        """
        return pulumi.get(self, "security_group_id")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        Indicates the status of the instance.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> _builtins.str:
        """
        Specifies the ID of a subnet.
        """
        return pulumi.get(self, "subnet_id")

    @_builtins.property
    @pulumi.getter
    def version(self) -> _builtins.str:
        """
        Specifies the current version of the instance image.
        """
        return pulumi.get(self, "version")

    @_builtins.property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> _builtins.str:
        """
        Specifies the ID of a VPC.
        """
        return pulumi.get(self, "vpc_id")


