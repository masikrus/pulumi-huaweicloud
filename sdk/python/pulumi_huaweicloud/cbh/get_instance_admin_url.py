# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetInstanceAdminUrlResult',
    'AwaitableGetInstanceAdminUrlResult',
    'get_instance_admin_url',
    'get_instance_admin_url_output',
]

@pulumi.output_type
class GetInstanceAdminUrlResult:
    """
    A collection of values returned by getInstanceAdminUrl.
    """
    def __init__(__self__, admin_url=None, id=None, region=None, server_id=None):
        if admin_url and not isinstance(admin_url, str):
            raise TypeError("Expected argument 'admin_url' to be a str")
        pulumi.set(__self__, "admin_url", admin_url)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if server_id and not isinstance(server_id, str):
            raise TypeError("Expected argument 'server_id' to be a str")
        pulumi.set(__self__, "server_id", server_id)

    @_builtins.property
    @pulumi.getter(name="adminUrl")
    def admin_url(self) -> _builtins.str:
        """
        The URL for logging in to a CBH instance as user admin.
        """
        return pulumi.get(self, "admin_url")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="serverId")
    def server_id(self) -> _builtins.str:
        return pulumi.get(self, "server_id")


class AwaitableGetInstanceAdminUrlResult(GetInstanceAdminUrlResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInstanceAdminUrlResult(
            admin_url=self.admin_url,
            id=self.id,
            region=self.region,
            server_id=self.server_id)


def get_instance_admin_url(region: Optional[_builtins.str] = None,
                           server_id: Optional[_builtins.str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInstanceAdminUrlResult:
    """
    Use this data source to get the URL for logging in to a CBH instance as user admin within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    server_id = config.require_object("serverId")
    test = huaweicloud.cbh.get_instance_admin_url(server_id=server_id)
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str server_id: Specifies the CBH instance ID, in UUID format.  
           For details about how to obtain the value, see "Viewing CBH Instance Details" in Cloud Bastion Host User Guide.
           [reference](https://support.huaweicloud.com/intl/en-us/usermanual-cbh/cbh_02_0043.html).
    """
    __args__ = dict()
    __args__['region'] = region
    __args__['serverId'] = server_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:cbh/getInstanceAdminUrl:getInstanceAdminUrl', __args__, opts=opts, typ=GetInstanceAdminUrlResult).value

    return AwaitableGetInstanceAdminUrlResult(
        admin_url=pulumi.get(__ret__, 'admin_url'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'),
        server_id=pulumi.get(__ret__, 'server_id'))
def get_instance_admin_url_output(region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                  server_id: Optional[pulumi.Input[_builtins.str]] = None,
                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetInstanceAdminUrlResult]:
    """
    Use this data source to get the URL for logging in to a CBH instance as user admin within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    server_id = config.require_object("serverId")
    test = huaweicloud.cbh.get_instance_admin_url(server_id=server_id)
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str server_id: Specifies the CBH instance ID, in UUID format.  
           For details about how to obtain the value, see "Viewing CBH Instance Details" in Cloud Bastion Host User Guide.
           [reference](https://support.huaweicloud.com/intl/en-us/usermanual-cbh/cbh_02_0043.html).
    """
    __args__ = dict()
    __args__['region'] = region
    __args__['serverId'] = server_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:cbh/getInstanceAdminUrl:getInstanceAdminUrl', __args__, opts=opts, typ=GetInstanceAdminUrlResult)
    return __ret__.apply(lambda __response__: GetInstanceAdminUrlResult(
        admin_url=pulumi.get(__response__, 'admin_url'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region'),
        server_id=pulumi.get(__response__, 'server_id')))
