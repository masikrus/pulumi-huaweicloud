# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['DrillArgs', 'Drill']

@pulumi.input_type
class DrillArgs:
    def __init__(__self__, *,
                 group_id: pulumi.Input[_builtins.str],
                 drill_vpc_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a Drill resource.
        :param pulumi.Input[_builtins.str] group_id: Specifies the ID of a protection group.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] drill_vpc_id: Specifies the drill VPC ID.
               
               If specified, make sure the drill VPC CIDR block consistent with the VPC of the protection group, and make sure the
               drill VPC has subnets.
               
               If not specified, the system automatically creates a drill VPC.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of a DR drill. The name can contain a maximum of 64 characters.
               The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "group_id", group_id)
        if drill_vpc_id is not None:
            pulumi.set(__self__, "drill_vpc_id", drill_vpc_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of a protection group.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter(name="drillVpcId")
    def drill_vpc_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the drill VPC ID.

        If specified, make sure the drill VPC CIDR block consistent with the VPC of the protection group, and make sure the
        drill VPC has subnets.

        If not specified, the system automatically creates a drill VPC.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "drill_vpc_id")

    @drill_vpc_id.setter
    def drill_vpc_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "drill_vpc_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of a DR drill. The name can contain a maximum of 64 characters.
        The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _DrillState:
    def __init__(__self__, *,
                 drill_vpc_id: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering Drill resources.
        :param pulumi.Input[_builtins.str] drill_vpc_id: Specifies the drill VPC ID.
               
               If specified, make sure the drill VPC CIDR block consistent with the VPC of the protection group, and make sure the
               drill VPC has subnets.
               
               If not specified, the system automatically creates a drill VPC.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] group_id: Specifies the ID of a protection group.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of a DR drill. The name can contain a maximum of 64 characters.
               The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: The status of a DR drill.
               + **creating**: The DR drill is being created.
               + **available**: The DR drill is available.
               + **deleting**: The DR drill is being deleted.
               + **error-deleting**: Failed to delete the DR drill.
               + **error**: Failed to create the DR drill.
        """
        if drill_vpc_id is not None:
            pulumi.set(__self__, "drill_vpc_id", drill_vpc_id)
        if group_id is not None:
            pulumi.set(__self__, "group_id", group_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if status is not None:
            pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter(name="drillVpcId")
    def drill_vpc_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the drill VPC ID.

        If specified, make sure the drill VPC CIDR block consistent with the VPC of the protection group, and make sure the
        drill VPC has subnets.

        If not specified, the system automatically creates a drill VPC.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "drill_vpc_id")

    @drill_vpc_id.setter
    def drill_vpc_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "drill_vpc_id", value)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of a protection group.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of a DR drill. The name can contain a maximum of 64 characters.
        The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The status of a DR drill.
        + **creating**: The DR drill is being created.
        + **available**: The DR drill is available.
        + **deleting**: The DR drill is being deleted.
        + **error-deleting**: Failed to delete the DR drill.
        + **error**: Failed to create the DR drill.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)


@pulumi.type_token("huaweicloud:sdrs/drill:Drill")
class Drill(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 drill_vpc_id: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages an SDRS DR drill resource within HuaweiCloud.

        > This resource requires the protection group has at least one protected instance or replication pair.
        And there has some usage restrictions for this resource,
        refer to [document](https://support.huaweicloud.com/intl/en-us/qs-sdrs/en-us_topic_0122528555.html).

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        group_id = config.require_object("groupId")
        test = huaweicloud.sdrs.Drill("test",
            name="test-drill",
            group_id=group_id)
        ```

        ## Import

        The SDRS DR drill can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:sdrs/drill:Drill test <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] drill_vpc_id: Specifies the drill VPC ID.
               
               If specified, make sure the drill VPC CIDR block consistent with the VPC of the protection group, and make sure the
               drill VPC has subnets.
               
               If not specified, the system automatically creates a drill VPC.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] group_id: Specifies the ID of a protection group.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of a DR drill. The name can contain a maximum of 64 characters.
               The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: DrillArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an SDRS DR drill resource within HuaweiCloud.

        > This resource requires the protection group has at least one protected instance or replication pair.
        And there has some usage restrictions for this resource,
        refer to [document](https://support.huaweicloud.com/intl/en-us/qs-sdrs/en-us_topic_0122528555.html).

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        group_id = config.require_object("groupId")
        test = huaweicloud.sdrs.Drill("test",
            name="test-drill",
            group_id=group_id)
        ```

        ## Import

        The SDRS DR drill can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:sdrs/drill:Drill test <id>
        ```

        :param str resource_name: The name of the resource.
        :param DrillArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(DrillArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 drill_vpc_id: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = DrillArgs.__new__(DrillArgs)

            __props__.__dict__["drill_vpc_id"] = drill_vpc_id
            if group_id is None and not opts.urn:
                raise TypeError("Missing required property 'group_id'")
            __props__.__dict__["group_id"] = group_id
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            __props__.__dict__["status"] = None
        super(Drill, __self__).__init__(
            'huaweicloud:sdrs/drill:Drill',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            drill_vpc_id: Optional[pulumi.Input[_builtins.str]] = None,
            group_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None) -> 'Drill':
        """
        Get an existing Drill resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] drill_vpc_id: Specifies the drill VPC ID.
               
               If specified, make sure the drill VPC CIDR block consistent with the VPC of the protection group, and make sure the
               drill VPC has subnets.
               
               If not specified, the system automatically creates a drill VPC.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] group_id: Specifies the ID of a protection group.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of a DR drill. The name can contain a maximum of 64 characters.
               The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: The status of a DR drill.
               + **creating**: The DR drill is being created.
               + **available**: The DR drill is available.
               + **deleting**: The DR drill is being deleted.
               + **error-deleting**: Failed to delete the DR drill.
               + **error**: Failed to create the DR drill.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _DrillState.__new__(_DrillState)

        __props__.__dict__["drill_vpc_id"] = drill_vpc_id
        __props__.__dict__["group_id"] = group_id
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["status"] = status
        return Drill(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="drillVpcId")
    def drill_vpc_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the drill VPC ID.

        If specified, make sure the drill VPC CIDR block consistent with the VPC of the protection group, and make sure the
        drill VPC has subnets.

        If not specified, the system automatically creates a drill VPC.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "drill_vpc_id")

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of a protection group.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "group_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of a DR drill. The name can contain a maximum of 64 characters.
        The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The status of a DR drill.
        + **creating**: The DR drill is being created.
        + **available**: The DR drill is available.
        + **deleting**: The DR drill is being deleted.
        + **error-deleting**: Failed to delete the DR drill.
        + **error**: Failed to create the DR drill.
        """
        return pulumi.get(self, "status")

