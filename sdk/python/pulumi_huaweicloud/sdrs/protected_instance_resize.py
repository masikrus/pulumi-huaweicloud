# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['ProtectedInstanceResizeArgs', 'ProtectedInstanceResize']

@pulumi.input_type
class ProtectedInstanceResizeArgs:
    def __init__(__self__, *,
                 protected_instance_id: pulumi.Input[_builtins.str],
                 dr_dedicated_host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 dr_flavor_ref: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 flavor_ref: Optional[pulumi.Input[_builtins.str]] = None,
                 production_dedicated_host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 production_flavor_ref: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a ProtectedInstanceResize resource.
        :param pulumi.Input[_builtins.str] protected_instance_id: Specifies the ID of the protected instance to resize.
               You can obtain this value by calling the datasource `sdrs_get_protected_instances`.
        :param pulumi.Input[_builtins.str] dr_dedicated_host_id: Specifies the new DeH ID for the DR site.
               
               > 1. If the DR site server is created on a DeH, this parameter must be specified when you modify the specifications of
               the DR site server.
               <br/>2. You can set this parameter to the ID of the DeH where the DR site server is currently located or the ID of
               another DeH.
        :param pulumi.Input[_builtins.str] dr_flavor_ref: Specifies the flavor ID of the DR site server after the modification.
               
               > 1. If you specify this parameter, the system modifies the specifications of only the DR site server.
               <br/>2. If `flavor_ref` is specified, `dr_flavor_ref` does not take effect.
               
               > You can obtain the values of fields `flavor_ref`, `production_flavor_ref`, and `dr_flavor_ref` by calling the API
               [Querying the Target ECS Flavors to Which a Flavor Can Be Changed](https://support.huaweicloud.com/intl/en-us/api-ecs/ecs_02_0402.html).
        :param pulumi.Input[_builtins.str] flavor_ref: Specifies the flavor ID of the production and DR site servers after
               the modification.
               
               > If you specify this parameter, the system modifies the specifications of both the production and DR site servers.
               After the modification, the production site server and DR site server use the same specifications.
        :param pulumi.Input[_builtins.str] production_dedicated_host_id: Specifies the new DeH ID for the production site.
               
               > 1. If the production site server is created on a DeH, this parameter must be specified when you modify the specifications
               of the production site server.
               <br/>2. You can set this parameter to the ID of the DeH where the production site server is currently located or the ID
               of another DeH.
        :param pulumi.Input[_builtins.str] production_flavor_ref: Specifies the flavor ID of the production site server after
               the modification.
               
               > 1. If you specify this parameter, the system modifies the specifications of only the production site server.
               <br/>2. If `flavor_ref` is specified, `production_flavor_ref` does not take effect.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource. If omitted,
               the provider-level region will be used. Changing this will create a new resource.
        """
        pulumi.set(__self__, "protected_instance_id", protected_instance_id)
        if dr_dedicated_host_id is not None:
            pulumi.set(__self__, "dr_dedicated_host_id", dr_dedicated_host_id)
        if dr_flavor_ref is not None:
            pulumi.set(__self__, "dr_flavor_ref", dr_flavor_ref)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if flavor_ref is not None:
            pulumi.set(__self__, "flavor_ref", flavor_ref)
        if production_dedicated_host_id is not None:
            pulumi.set(__self__, "production_dedicated_host_id", production_dedicated_host_id)
        if production_flavor_ref is not None:
            pulumi.set(__self__, "production_flavor_ref", production_flavor_ref)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="protectedInstanceId")
    def protected_instance_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the protected instance to resize.
        You can obtain this value by calling the datasource `sdrs_get_protected_instances`.
        """
        return pulumi.get(self, "protected_instance_id")

    @protected_instance_id.setter
    def protected_instance_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "protected_instance_id", value)

    @_builtins.property
    @pulumi.getter(name="drDedicatedHostId")
    def dr_dedicated_host_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the new DeH ID for the DR site.

        > 1. If the DR site server is created on a DeH, this parameter must be specified when you modify the specifications of
        the DR site server.
        <br/>2. You can set this parameter to the ID of the DeH where the DR site server is currently located or the ID of
        another DeH.
        """
        return pulumi.get(self, "dr_dedicated_host_id")

    @dr_dedicated_host_id.setter
    def dr_dedicated_host_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dr_dedicated_host_id", value)

    @_builtins.property
    @pulumi.getter(name="drFlavorRef")
    def dr_flavor_ref(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the flavor ID of the DR site server after the modification.

        > 1. If you specify this parameter, the system modifies the specifications of only the DR site server.
        <br/>2. If `flavor_ref` is specified, `dr_flavor_ref` does not take effect.

        > You can obtain the values of fields `flavor_ref`, `production_flavor_ref`, and `dr_flavor_ref` by calling the API
        [Querying the Target ECS Flavors to Which a Flavor Can Be Changed](https://support.huaweicloud.com/intl/en-us/api-ecs/ecs_02_0402.html).
        """
        return pulumi.get(self, "dr_flavor_ref")

    @dr_flavor_ref.setter
    def dr_flavor_ref(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dr_flavor_ref", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="flavorRef")
    def flavor_ref(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the flavor ID of the production and DR site servers after
        the modification.

        > If you specify this parameter, the system modifies the specifications of both the production and DR site servers.
        After the modification, the production site server and DR site server use the same specifications.
        """
        return pulumi.get(self, "flavor_ref")

    @flavor_ref.setter
    def flavor_ref(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "flavor_ref", value)

    @_builtins.property
    @pulumi.getter(name="productionDedicatedHostId")
    def production_dedicated_host_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the new DeH ID for the production site.

        > 1. If the production site server is created on a DeH, this parameter must be specified when you modify the specifications
        of the production site server.
        <br/>2. You can set this parameter to the ID of the DeH where the production site server is currently located or the ID
        of another DeH.
        """
        return pulumi.get(self, "production_dedicated_host_id")

    @production_dedicated_host_id.setter
    def production_dedicated_host_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "production_dedicated_host_id", value)

    @_builtins.property
    @pulumi.getter(name="productionFlavorRef")
    def production_flavor_ref(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the flavor ID of the production site server after
        the modification.

        > 1. If you specify this parameter, the system modifies the specifications of only the production site server.
        <br/>2. If `flavor_ref` is specified, `production_flavor_ref` does not take effect.
        """
        return pulumi.get(self, "production_flavor_ref")

    @production_flavor_ref.setter
    def production_flavor_ref(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "production_flavor_ref", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource. If omitted,
        the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _ProtectedInstanceResizeState:
    def __init__(__self__, *,
                 dr_dedicated_host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 dr_flavor_ref: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 flavor_ref: Optional[pulumi.Input[_builtins.str]] = None,
                 production_dedicated_host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 production_flavor_ref: Optional[pulumi.Input[_builtins.str]] = None,
                 protected_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering ProtectedInstanceResize resources.
        :param pulumi.Input[_builtins.str] dr_dedicated_host_id: Specifies the new DeH ID for the DR site.
               
               > 1. If the DR site server is created on a DeH, this parameter must be specified when you modify the specifications of
               the DR site server.
               <br/>2. You can set this parameter to the ID of the DeH where the DR site server is currently located or the ID of
               another DeH.
        :param pulumi.Input[_builtins.str] dr_flavor_ref: Specifies the flavor ID of the DR site server after the modification.
               
               > 1. If you specify this parameter, the system modifies the specifications of only the DR site server.
               <br/>2. If `flavor_ref` is specified, `dr_flavor_ref` does not take effect.
               
               > You can obtain the values of fields `flavor_ref`, `production_flavor_ref`, and `dr_flavor_ref` by calling the API
               [Querying the Target ECS Flavors to Which a Flavor Can Be Changed](https://support.huaweicloud.com/intl/en-us/api-ecs/ecs_02_0402.html).
        :param pulumi.Input[_builtins.str] flavor_ref: Specifies the flavor ID of the production and DR site servers after
               the modification.
               
               > If you specify this parameter, the system modifies the specifications of both the production and DR site servers.
               After the modification, the production site server and DR site server use the same specifications.
        :param pulumi.Input[_builtins.str] production_dedicated_host_id: Specifies the new DeH ID for the production site.
               
               > 1. If the production site server is created on a DeH, this parameter must be specified when you modify the specifications
               of the production site server.
               <br/>2. You can set this parameter to the ID of the DeH where the production site server is currently located or the ID
               of another DeH.
        :param pulumi.Input[_builtins.str] production_flavor_ref: Specifies the flavor ID of the production site server after
               the modification.
               
               > 1. If you specify this parameter, the system modifies the specifications of only the production site server.
               <br/>2. If `flavor_ref` is specified, `production_flavor_ref` does not take effect.
        :param pulumi.Input[_builtins.str] protected_instance_id: Specifies the ID of the protected instance to resize.
               You can obtain this value by calling the datasource `sdrs_get_protected_instances`.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource. If omitted,
               the provider-level region will be used. Changing this will create a new resource.
        """
        if dr_dedicated_host_id is not None:
            pulumi.set(__self__, "dr_dedicated_host_id", dr_dedicated_host_id)
        if dr_flavor_ref is not None:
            pulumi.set(__self__, "dr_flavor_ref", dr_flavor_ref)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if flavor_ref is not None:
            pulumi.set(__self__, "flavor_ref", flavor_ref)
        if production_dedicated_host_id is not None:
            pulumi.set(__self__, "production_dedicated_host_id", production_dedicated_host_id)
        if production_flavor_ref is not None:
            pulumi.set(__self__, "production_flavor_ref", production_flavor_ref)
        if protected_instance_id is not None:
            pulumi.set(__self__, "protected_instance_id", protected_instance_id)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="drDedicatedHostId")
    def dr_dedicated_host_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the new DeH ID for the DR site.

        > 1. If the DR site server is created on a DeH, this parameter must be specified when you modify the specifications of
        the DR site server.
        <br/>2. You can set this parameter to the ID of the DeH where the DR site server is currently located or the ID of
        another DeH.
        """
        return pulumi.get(self, "dr_dedicated_host_id")

    @dr_dedicated_host_id.setter
    def dr_dedicated_host_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dr_dedicated_host_id", value)

    @_builtins.property
    @pulumi.getter(name="drFlavorRef")
    def dr_flavor_ref(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the flavor ID of the DR site server after the modification.

        > 1. If you specify this parameter, the system modifies the specifications of only the DR site server.
        <br/>2. If `flavor_ref` is specified, `dr_flavor_ref` does not take effect.

        > You can obtain the values of fields `flavor_ref`, `production_flavor_ref`, and `dr_flavor_ref` by calling the API
        [Querying the Target ECS Flavors to Which a Flavor Can Be Changed](https://support.huaweicloud.com/intl/en-us/api-ecs/ecs_02_0402.html).
        """
        return pulumi.get(self, "dr_flavor_ref")

    @dr_flavor_ref.setter
    def dr_flavor_ref(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dr_flavor_ref", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="flavorRef")
    def flavor_ref(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the flavor ID of the production and DR site servers after
        the modification.

        > If you specify this parameter, the system modifies the specifications of both the production and DR site servers.
        After the modification, the production site server and DR site server use the same specifications.
        """
        return pulumi.get(self, "flavor_ref")

    @flavor_ref.setter
    def flavor_ref(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "flavor_ref", value)

    @_builtins.property
    @pulumi.getter(name="productionDedicatedHostId")
    def production_dedicated_host_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the new DeH ID for the production site.

        > 1. If the production site server is created on a DeH, this parameter must be specified when you modify the specifications
        of the production site server.
        <br/>2. You can set this parameter to the ID of the DeH where the production site server is currently located or the ID
        of another DeH.
        """
        return pulumi.get(self, "production_dedicated_host_id")

    @production_dedicated_host_id.setter
    def production_dedicated_host_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "production_dedicated_host_id", value)

    @_builtins.property
    @pulumi.getter(name="productionFlavorRef")
    def production_flavor_ref(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the flavor ID of the production site server after
        the modification.

        > 1. If you specify this parameter, the system modifies the specifications of only the production site server.
        <br/>2. If `flavor_ref` is specified, `production_flavor_ref` does not take effect.
        """
        return pulumi.get(self, "production_flavor_ref")

    @production_flavor_ref.setter
    def production_flavor_ref(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "production_flavor_ref", value)

    @_builtins.property
    @pulumi.getter(name="protectedInstanceId")
    def protected_instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the protected instance to resize.
        You can obtain this value by calling the datasource `sdrs_get_protected_instances`.
        """
        return pulumi.get(self, "protected_instance_id")

    @protected_instance_id.setter
    def protected_instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "protected_instance_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource. If omitted,
        the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.type_token("huaweicloud:sdrs/protectedInstanceResize:ProtectedInstanceResize")
class ProtectedInstanceResize(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 dr_dedicated_host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 dr_flavor_ref: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 flavor_ref: Optional[pulumi.Input[_builtins.str]] = None,
                 production_dedicated_host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 production_flavor_ref: Optional[pulumi.Input[_builtins.str]] = None,
                 protected_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Using this resource to resize a protected instance in SDRS within HuaweiCloud.

        > This is a one-time action resource to resize a protected instance. Deleting this resource will
        not change the current configuration, but will only remove the resource information from the tfstate file. You can use
        this resource in the following scenarios:
        <br/>1. Modify the specifications of both the production and DR site servers.
        <br/>2. Modify the specifications of only the production site server.
        <br/>3. Modify the specifications of only the DR site server.
        <br/>4. Running this resource may cause unexpected change to the `flavor_id` field of the `Ecs.Instance`.
        Please using `lifecycle` to control the `flavor_id` field of the `Ecs.Instance`.

        > Servers of different specifications have different performance, which may affect applications running on the servers.
        To ensure the server performance after a planned failover or failover, you are recommended to use servers of
        specifications (CPU and memory) same or higher than the specifications of the production site servers at the DR site.

        > Before using this resource, please note the following restrictions:
        <br/>1. The status of the protected group must be **available** or **protected**.
        <br/>2. The status of the protected instance must be **available** or **protected** or **error-resizing**.
        <br/>3. The ECS to be resized must be in the shutdown state.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        protected_instance_id = config.require_object("protectedInstanceId")
        flavor_ref = config.require_object("flavorRef")
        test = huaweicloud.sdrs.ProtectedInstanceResize("test",
            protected_instance_id=protected_instance_id,
            flavor_ref=flavor_ref)
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] dr_dedicated_host_id: Specifies the new DeH ID for the DR site.
               
               > 1. If the DR site server is created on a DeH, this parameter must be specified when you modify the specifications of
               the DR site server.
               <br/>2. You can set this parameter to the ID of the DeH where the DR site server is currently located or the ID of
               another DeH.
        :param pulumi.Input[_builtins.str] dr_flavor_ref: Specifies the flavor ID of the DR site server after the modification.
               
               > 1. If you specify this parameter, the system modifies the specifications of only the DR site server.
               <br/>2. If `flavor_ref` is specified, `dr_flavor_ref` does not take effect.
               
               > You can obtain the values of fields `flavor_ref`, `production_flavor_ref`, and `dr_flavor_ref` by calling the API
               [Querying the Target ECS Flavors to Which a Flavor Can Be Changed](https://support.huaweicloud.com/intl/en-us/api-ecs/ecs_02_0402.html).
        :param pulumi.Input[_builtins.str] flavor_ref: Specifies the flavor ID of the production and DR site servers after
               the modification.
               
               > If you specify this parameter, the system modifies the specifications of both the production and DR site servers.
               After the modification, the production site server and DR site server use the same specifications.
        :param pulumi.Input[_builtins.str] production_dedicated_host_id: Specifies the new DeH ID for the production site.
               
               > 1. If the production site server is created on a DeH, this parameter must be specified when you modify the specifications
               of the production site server.
               <br/>2. You can set this parameter to the ID of the DeH where the production site server is currently located or the ID
               of another DeH.
        :param pulumi.Input[_builtins.str] production_flavor_ref: Specifies the flavor ID of the production site server after
               the modification.
               
               > 1. If you specify this parameter, the system modifies the specifications of only the production site server.
               <br/>2. If `flavor_ref` is specified, `production_flavor_ref` does not take effect.
        :param pulumi.Input[_builtins.str] protected_instance_id: Specifies the ID of the protected instance to resize.
               You can obtain this value by calling the datasource `sdrs_get_protected_instances`.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource. If omitted,
               the provider-level region will be used. Changing this will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ProtectedInstanceResizeArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Using this resource to resize a protected instance in SDRS within HuaweiCloud.

        > This is a one-time action resource to resize a protected instance. Deleting this resource will
        not change the current configuration, but will only remove the resource information from the tfstate file. You can use
        this resource in the following scenarios:
        <br/>1. Modify the specifications of both the production and DR site servers.
        <br/>2. Modify the specifications of only the production site server.
        <br/>3. Modify the specifications of only the DR site server.
        <br/>4. Running this resource may cause unexpected change to the `flavor_id` field of the `Ecs.Instance`.
        Please using `lifecycle` to control the `flavor_id` field of the `Ecs.Instance`.

        > Servers of different specifications have different performance, which may affect applications running on the servers.
        To ensure the server performance after a planned failover or failover, you are recommended to use servers of
        specifications (CPU and memory) same or higher than the specifications of the production site servers at the DR site.

        > Before using this resource, please note the following restrictions:
        <br/>1. The status of the protected group must be **available** or **protected**.
        <br/>2. The status of the protected instance must be **available** or **protected** or **error-resizing**.
        <br/>3. The ECS to be resized must be in the shutdown state.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        protected_instance_id = config.require_object("protectedInstanceId")
        flavor_ref = config.require_object("flavorRef")
        test = huaweicloud.sdrs.ProtectedInstanceResize("test",
            protected_instance_id=protected_instance_id,
            flavor_ref=flavor_ref)
        ```

        :param str resource_name: The name of the resource.
        :param ProtectedInstanceResizeArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ProtectedInstanceResizeArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 dr_dedicated_host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 dr_flavor_ref: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 flavor_ref: Optional[pulumi.Input[_builtins.str]] = None,
                 production_dedicated_host_id: Optional[pulumi.Input[_builtins.str]] = None,
                 production_flavor_ref: Optional[pulumi.Input[_builtins.str]] = None,
                 protected_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ProtectedInstanceResizeArgs.__new__(ProtectedInstanceResizeArgs)

            __props__.__dict__["dr_dedicated_host_id"] = dr_dedicated_host_id
            __props__.__dict__["dr_flavor_ref"] = dr_flavor_ref
            __props__.__dict__["enable_force_new"] = enable_force_new
            __props__.__dict__["flavor_ref"] = flavor_ref
            __props__.__dict__["production_dedicated_host_id"] = production_dedicated_host_id
            __props__.__dict__["production_flavor_ref"] = production_flavor_ref
            if protected_instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'protected_instance_id'")
            __props__.__dict__["protected_instance_id"] = protected_instance_id
            __props__.__dict__["region"] = region
        super(ProtectedInstanceResize, __self__).__init__(
            'huaweicloud:sdrs/protectedInstanceResize:ProtectedInstanceResize',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            dr_dedicated_host_id: Optional[pulumi.Input[_builtins.str]] = None,
            dr_flavor_ref: Optional[pulumi.Input[_builtins.str]] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            flavor_ref: Optional[pulumi.Input[_builtins.str]] = None,
            production_dedicated_host_id: Optional[pulumi.Input[_builtins.str]] = None,
            production_flavor_ref: Optional[pulumi.Input[_builtins.str]] = None,
            protected_instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None) -> 'ProtectedInstanceResize':
        """
        Get an existing ProtectedInstanceResize resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] dr_dedicated_host_id: Specifies the new DeH ID for the DR site.
               
               > 1. If the DR site server is created on a DeH, this parameter must be specified when you modify the specifications of
               the DR site server.
               <br/>2. You can set this parameter to the ID of the DeH where the DR site server is currently located or the ID of
               another DeH.
        :param pulumi.Input[_builtins.str] dr_flavor_ref: Specifies the flavor ID of the DR site server after the modification.
               
               > 1. If you specify this parameter, the system modifies the specifications of only the DR site server.
               <br/>2. If `flavor_ref` is specified, `dr_flavor_ref` does not take effect.
               
               > You can obtain the values of fields `flavor_ref`, `production_flavor_ref`, and `dr_flavor_ref` by calling the API
               [Querying the Target ECS Flavors to Which a Flavor Can Be Changed](https://support.huaweicloud.com/intl/en-us/api-ecs/ecs_02_0402.html).
        :param pulumi.Input[_builtins.str] flavor_ref: Specifies the flavor ID of the production and DR site servers after
               the modification.
               
               > If you specify this parameter, the system modifies the specifications of both the production and DR site servers.
               After the modification, the production site server and DR site server use the same specifications.
        :param pulumi.Input[_builtins.str] production_dedicated_host_id: Specifies the new DeH ID for the production site.
               
               > 1. If the production site server is created on a DeH, this parameter must be specified when you modify the specifications
               of the production site server.
               <br/>2. You can set this parameter to the ID of the DeH where the production site server is currently located or the ID
               of another DeH.
        :param pulumi.Input[_builtins.str] production_flavor_ref: Specifies the flavor ID of the production site server after
               the modification.
               
               > 1. If you specify this parameter, the system modifies the specifications of only the production site server.
               <br/>2. If `flavor_ref` is specified, `production_flavor_ref` does not take effect.
        :param pulumi.Input[_builtins.str] protected_instance_id: Specifies the ID of the protected instance to resize.
               You can obtain this value by calling the datasource `sdrs_get_protected_instances`.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource. If omitted,
               the provider-level region will be used. Changing this will create a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ProtectedInstanceResizeState.__new__(_ProtectedInstanceResizeState)

        __props__.__dict__["dr_dedicated_host_id"] = dr_dedicated_host_id
        __props__.__dict__["dr_flavor_ref"] = dr_flavor_ref
        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["flavor_ref"] = flavor_ref
        __props__.__dict__["production_dedicated_host_id"] = production_dedicated_host_id
        __props__.__dict__["production_flavor_ref"] = production_flavor_ref
        __props__.__dict__["protected_instance_id"] = protected_instance_id
        __props__.__dict__["region"] = region
        return ProtectedInstanceResize(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="drDedicatedHostId")
    def dr_dedicated_host_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the new DeH ID for the DR site.

        > 1. If the DR site server is created on a DeH, this parameter must be specified when you modify the specifications of
        the DR site server.
        <br/>2. You can set this parameter to the ID of the DeH where the DR site server is currently located or the ID of
        another DeH.
        """
        return pulumi.get(self, "dr_dedicated_host_id")

    @_builtins.property
    @pulumi.getter(name="drFlavorRef")
    def dr_flavor_ref(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the flavor ID of the DR site server after the modification.

        > 1. If you specify this parameter, the system modifies the specifications of only the DR site server.
        <br/>2. If `flavor_ref` is specified, `dr_flavor_ref` does not take effect.

        > You can obtain the values of fields `flavor_ref`, `production_flavor_ref`, and `dr_flavor_ref` by calling the API
        [Querying the Target ECS Flavors to Which a Flavor Can Be Changed](https://support.huaweicloud.com/intl/en-us/api-ecs/ecs_02_0402.html).
        """
        return pulumi.get(self, "dr_flavor_ref")

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter(name="flavorRef")
    def flavor_ref(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the flavor ID of the production and DR site servers after
        the modification.

        > If you specify this parameter, the system modifies the specifications of both the production and DR site servers.
        After the modification, the production site server and DR site server use the same specifications.
        """
        return pulumi.get(self, "flavor_ref")

    @_builtins.property
    @pulumi.getter(name="productionDedicatedHostId")
    def production_dedicated_host_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the new DeH ID for the production site.

        > 1. If the production site server is created on a DeH, this parameter must be specified when you modify the specifications
        of the production site server.
        <br/>2. You can set this parameter to the ID of the DeH where the production site server is currently located or the ID
        of another DeH.
        """
        return pulumi.get(self, "production_dedicated_host_id")

    @_builtins.property
    @pulumi.getter(name="productionFlavorRef")
    def production_flavor_ref(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the flavor ID of the production site server after
        the modification.

        > 1. If you specify this parameter, the system modifies the specifications of only the production site server.
        <br/>2. If `flavor_ref` is specified, `production_flavor_ref` does not take effect.
        """
        return pulumi.get(self, "production_flavor_ref")

    @_builtins.property
    @pulumi.getter(name="protectedInstanceId")
    def protected_instance_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the protected instance to resize.
        You can obtain this value by calling the datasource `sdrs_get_protected_instances`.
        """
        return pulumi.get(self, "protected_instance_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource. If omitted,
        the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

