# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['ProtectionGroupArgs', 'ProtectionGroup']

@pulumi.input_type
class ProtectionGroupArgs:
    def __init__(__self__, *,
                 domain_id: pulumi.Input[_builtins.str],
                 source_availability_zone: pulumi.Input[_builtins.str],
                 source_vpc_id: pulumi.Input[_builtins.str],
                 target_availability_zone: pulumi.Input[_builtins.str],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 dr_type: Optional[pulumi.Input[_builtins.str]] = None,
                 enable: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a ProtectionGroup resource.
        :param pulumi.Input[_builtins.str] domain_id: Specifies the ID of an active-active domain.
               You can search `domain_id` with data source `sdrs_get_domain`.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] source_availability_zone: Specifies the production site AZ of a protection group.
               `source_availability_zone` and `target_availability_zone` must be different availability zones in the same region.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] source_vpc_id: Specifies the ID of the VPC for the production site.
               One protection group manages servers in one VPC. If you have multiple VPCs, create multiple protection groups.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] target_availability_zone: Specifies the disaster recovery site AZ of a protection
               group.
               `target_availability_zone` and `source_availability_zone` must be different availability zones in the same region.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of a protection group. The description can
               contain a maximum of 64 characters. The value angle brackets (<) and (>) are not allowed.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] dr_type: Specifies the deployment model. If not specified, **migration** will be used.
               Indicating migration within a VPC. Currently, only **migration** supported.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] enable: Specifies whether enable the protection group start protecting.
               The default value is **false**. It can only be set to true when there's replication pairs within the protection group.
        :param pulumi.Input[_builtins.str] name: Specifies the name of a protection group. The name can contain a maximum of 64 characters.
               The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "domain_id", domain_id)
        pulumi.set(__self__, "source_availability_zone", source_availability_zone)
        pulumi.set(__self__, "source_vpc_id", source_vpc_id)
        pulumi.set(__self__, "target_availability_zone", target_availability_zone)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if dr_type is not None:
            pulumi.set(__self__, "dr_type", dr_type)
        if enable is not None:
            pulumi.set(__self__, "enable", enable)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of an active-active domain.
        You can search `domain_id` with data source `sdrs_get_domain`.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "domain_id")

    @domain_id.setter
    def domain_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "domain_id", value)

    @_builtins.property
    @pulumi.getter(name="sourceAvailabilityZone")
    def source_availability_zone(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the production site AZ of a protection group.
        `source_availability_zone` and `target_availability_zone` must be different availability zones in the same region.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "source_availability_zone")

    @source_availability_zone.setter
    def source_availability_zone(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "source_availability_zone", value)

    @_builtins.property
    @pulumi.getter(name="sourceVpcId")
    def source_vpc_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the VPC for the production site.
        One protection group manages servers in one VPC. If you have multiple VPCs, create multiple protection groups.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "source_vpc_id")

    @source_vpc_id.setter
    def source_vpc_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "source_vpc_id", value)

    @_builtins.property
    @pulumi.getter(name="targetAvailabilityZone")
    def target_availability_zone(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the disaster recovery site AZ of a protection
        group.
        `target_availability_zone` and `source_availability_zone` must be different availability zones in the same region.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "target_availability_zone")

    @target_availability_zone.setter
    def target_availability_zone(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "target_availability_zone", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of a protection group. The description can
        contain a maximum of 64 characters. The value angle brackets (<) and (>) are not allowed.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="drType")
    def dr_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the deployment model. If not specified, **migration** will be used.
        Indicating migration within a VPC. Currently, only **migration** supported.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "dr_type")

    @dr_type.setter
    def dr_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dr_type", value)

    @_builtins.property
    @pulumi.getter
    def enable(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether enable the protection group start protecting.
        The default value is **false**. It can only be set to true when there's replication pairs within the protection group.
        """
        return pulumi.get(self, "enable")

    @enable.setter
    def enable(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of a protection group. The name can contain a maximum of 64 characters.
        The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _ProtectionGroupState:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_id: Optional[pulumi.Input[_builtins.str]] = None,
                 dr_type: Optional[pulumi.Input[_builtins.str]] = None,
                 enable: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 source_availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                 source_vpc_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_availability_zone: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering ProtectionGroup resources.
        :param pulumi.Input[_builtins.str] description: Specifies the description of a protection group. The description can
               contain a maximum of 64 characters. The value angle brackets (<) and (>) are not allowed.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] domain_id: Specifies the ID of an active-active domain.
               You can search `domain_id` with data source `sdrs_get_domain`.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] dr_type: Specifies the deployment model. If not specified, **migration** will be used.
               Indicating migration within a VPC. Currently, only **migration** supported.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] enable: Specifies whether enable the protection group start protecting.
               The default value is **false**. It can only be set to true when there's replication pairs within the protection group.
        :param pulumi.Input[_builtins.str] name: Specifies the name of a protection group. The name can contain a maximum of 64 characters.
               The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] source_availability_zone: Specifies the production site AZ of a protection group.
               `source_availability_zone` and `target_availability_zone` must be different availability zones in the same region.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] source_vpc_id: Specifies the ID of the VPC for the production site.
               One protection group manages servers in one VPC. If you have multiple VPCs, create multiple protection groups.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] target_availability_zone: Specifies the disaster recovery site AZ of a protection
               group.
               `target_availability_zone` and `source_availability_zone` must be different availability zones in the same region.
               
               Changing this parameter will create a new resource.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if domain_id is not None:
            pulumi.set(__self__, "domain_id", domain_id)
        if dr_type is not None:
            pulumi.set(__self__, "dr_type", dr_type)
        if enable is not None:
            pulumi.set(__self__, "enable", enable)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if source_availability_zone is not None:
            pulumi.set(__self__, "source_availability_zone", source_availability_zone)
        if source_vpc_id is not None:
            pulumi.set(__self__, "source_vpc_id", source_vpc_id)
        if target_availability_zone is not None:
            pulumi.set(__self__, "target_availability_zone", target_availability_zone)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of a protection group. The description can
        contain a maximum of 64 characters. The value angle brackets (<) and (>) are not allowed.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of an active-active domain.
        You can search `domain_id` with data source `sdrs_get_domain`.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "domain_id")

    @domain_id.setter
    def domain_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "domain_id", value)

    @_builtins.property
    @pulumi.getter(name="drType")
    def dr_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the deployment model. If not specified, **migration** will be used.
        Indicating migration within a VPC. Currently, only **migration** supported.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "dr_type")

    @dr_type.setter
    def dr_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dr_type", value)

    @_builtins.property
    @pulumi.getter
    def enable(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether enable the protection group start protecting.
        The default value is **false**. It can only be set to true when there's replication pairs within the protection group.
        """
        return pulumi.get(self, "enable")

    @enable.setter
    def enable(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of a protection group. The name can contain a maximum of 64 characters.
        The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="sourceAvailabilityZone")
    def source_availability_zone(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the production site AZ of a protection group.
        `source_availability_zone` and `target_availability_zone` must be different availability zones in the same region.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "source_availability_zone")

    @source_availability_zone.setter
    def source_availability_zone(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_availability_zone", value)

    @_builtins.property
    @pulumi.getter(name="sourceVpcId")
    def source_vpc_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the VPC for the production site.
        One protection group manages servers in one VPC. If you have multiple VPCs, create multiple protection groups.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "source_vpc_id")

    @source_vpc_id.setter
    def source_vpc_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_vpc_id", value)

    @_builtins.property
    @pulumi.getter(name="targetAvailabilityZone")
    def target_availability_zone(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the disaster recovery site AZ of a protection
        group.
        `target_availability_zone` and `source_availability_zone` must be different availability zones in the same region.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "target_availability_zone")

    @target_availability_zone.setter
    def target_availability_zone(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_availability_zone", value)


@pulumi.type_token("huaweicloud:sdrs/protectionGroup:ProtectionGroup")
class ProtectionGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_id: Optional[pulumi.Input[_builtins.str]] = None,
                 dr_type: Optional[pulumi.Input[_builtins.str]] = None,
                 enable: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 source_availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                 source_vpc_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages an SDRS protection group resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        source_availability_zone = config.require_object("sourceAvailabilityZone")
        target_availability_zone = config.require_object("targetAvailabilityZone")
        source_vpc_id = config.require_object("sourceVpcId")
        test = huaweicloud.sdrs.get_domain()
        test_protection_group = huaweicloud.sdrs.ProtectionGroup("test",
            name="test_protection_group",
            description="test description",
            source_availability_zone=source_availability_zone,
            target_availability_zone=target_availability_zone,
            source_vpc_id=source_vpc_id,
            domain_id=test.id)
        ```

        ## Import

        The SDRS protection group can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:sdrs/protectionGroup:ProtectionGroup test <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of a protection group. The description can
               contain a maximum of 64 characters. The value angle brackets (<) and (>) are not allowed.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] domain_id: Specifies the ID of an active-active domain.
               You can search `domain_id` with data source `sdrs_get_domain`.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] dr_type: Specifies the deployment model. If not specified, **migration** will be used.
               Indicating migration within a VPC. Currently, only **migration** supported.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] enable: Specifies whether enable the protection group start protecting.
               The default value is **false**. It can only be set to true when there's replication pairs within the protection group.
        :param pulumi.Input[_builtins.str] name: Specifies the name of a protection group. The name can contain a maximum of 64 characters.
               The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] source_availability_zone: Specifies the production site AZ of a protection group.
               `source_availability_zone` and `target_availability_zone` must be different availability zones in the same region.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] source_vpc_id: Specifies the ID of the VPC for the production site.
               One protection group manages servers in one VPC. If you have multiple VPCs, create multiple protection groups.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] target_availability_zone: Specifies the disaster recovery site AZ of a protection
               group.
               `target_availability_zone` and `source_availability_zone` must be different availability zones in the same region.
               
               Changing this parameter will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ProtectionGroupArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an SDRS protection group resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        source_availability_zone = config.require_object("sourceAvailabilityZone")
        target_availability_zone = config.require_object("targetAvailabilityZone")
        source_vpc_id = config.require_object("sourceVpcId")
        test = huaweicloud.sdrs.get_domain()
        test_protection_group = huaweicloud.sdrs.ProtectionGroup("test",
            name="test_protection_group",
            description="test description",
            source_availability_zone=source_availability_zone,
            target_availability_zone=target_availability_zone,
            source_vpc_id=source_vpc_id,
            domain_id=test.id)
        ```

        ## Import

        The SDRS protection group can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:sdrs/protectionGroup:ProtectionGroup test <id>
        ```

        :param str resource_name: The name of the resource.
        :param ProtectionGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ProtectionGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_id: Optional[pulumi.Input[_builtins.str]] = None,
                 dr_type: Optional[pulumi.Input[_builtins.str]] = None,
                 enable: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 source_availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                 source_vpc_id: Optional[pulumi.Input[_builtins.str]] = None,
                 target_availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ProtectionGroupArgs.__new__(ProtectionGroupArgs)

            __props__.__dict__["description"] = description
            if domain_id is None and not opts.urn:
                raise TypeError("Missing required property 'domain_id'")
            __props__.__dict__["domain_id"] = domain_id
            __props__.__dict__["dr_type"] = dr_type
            __props__.__dict__["enable"] = enable
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            if source_availability_zone is None and not opts.urn:
                raise TypeError("Missing required property 'source_availability_zone'")
            __props__.__dict__["source_availability_zone"] = source_availability_zone
            if source_vpc_id is None and not opts.urn:
                raise TypeError("Missing required property 'source_vpc_id'")
            __props__.__dict__["source_vpc_id"] = source_vpc_id
            if target_availability_zone is None and not opts.urn:
                raise TypeError("Missing required property 'target_availability_zone'")
            __props__.__dict__["target_availability_zone"] = target_availability_zone
        super(ProtectionGroup, __self__).__init__(
            'huaweicloud:sdrs/protectionGroup:ProtectionGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            domain_id: Optional[pulumi.Input[_builtins.str]] = None,
            dr_type: Optional[pulumi.Input[_builtins.str]] = None,
            enable: Optional[pulumi.Input[_builtins.bool]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            source_availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
            source_vpc_id: Optional[pulumi.Input[_builtins.str]] = None,
            target_availability_zone: Optional[pulumi.Input[_builtins.str]] = None) -> 'ProtectionGroup':
        """
        Get an existing ProtectionGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of a protection group. The description can
               contain a maximum of 64 characters. The value angle brackets (<) and (>) are not allowed.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] domain_id: Specifies the ID of an active-active domain.
               You can search `domain_id` with data source `sdrs_get_domain`.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] dr_type: Specifies the deployment model. If not specified, **migration** will be used.
               Indicating migration within a VPC. Currently, only **migration** supported.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] enable: Specifies whether enable the protection group start protecting.
               The default value is **false**. It can only be set to true when there's replication pairs within the protection group.
        :param pulumi.Input[_builtins.str] name: Specifies the name of a protection group. The name can contain a maximum of 64 characters.
               The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] source_availability_zone: Specifies the production site AZ of a protection group.
               `source_availability_zone` and `target_availability_zone` must be different availability zones in the same region.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] source_vpc_id: Specifies the ID of the VPC for the production site.
               One protection group manages servers in one VPC. If you have multiple VPCs, create multiple protection groups.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] target_availability_zone: Specifies the disaster recovery site AZ of a protection
               group.
               `target_availability_zone` and `source_availability_zone` must be different availability zones in the same region.
               
               Changing this parameter will create a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ProtectionGroupState.__new__(_ProtectionGroupState)

        __props__.__dict__["description"] = description
        __props__.__dict__["domain_id"] = domain_id
        __props__.__dict__["dr_type"] = dr_type
        __props__.__dict__["enable"] = enable
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["source_availability_zone"] = source_availability_zone
        __props__.__dict__["source_vpc_id"] = source_vpc_id
        __props__.__dict__["target_availability_zone"] = target_availability_zone
        return ProtectionGroup(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the description of a protection group. The description can
        contain a maximum of 64 characters. The value angle brackets (<) and (>) are not allowed.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of an active-active domain.
        You can search `domain_id` with data source `sdrs_get_domain`.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "domain_id")

    @_builtins.property
    @pulumi.getter(name="drType")
    def dr_type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the deployment model. If not specified, **migration** will be used.
        Indicating migration within a VPC. Currently, only **migration** supported.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "dr_type")

    @_builtins.property
    @pulumi.getter
    def enable(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether enable the protection group start protecting.
        The default value is **false**. It can only be set to true when there's replication pairs within the protection group.
        """
        return pulumi.get(self, "enable")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of a protection group. The name can contain a maximum of 64 characters.
        The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="sourceAvailabilityZone")
    def source_availability_zone(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the production site AZ of a protection group.
        `source_availability_zone` and `target_availability_zone` must be different availability zones in the same region.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "source_availability_zone")

    @_builtins.property
    @pulumi.getter(name="sourceVpcId")
    def source_vpc_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the VPC for the production site.
        One protection group manages servers in one VPC. If you have multiple VPCs, create multiple protection groups.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "source_vpc_id")

    @_builtins.property
    @pulumi.getter(name="targetAvailabilityZone")
    def target_availability_zone(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the disaster recovery site AZ of a protection
        group.
        `target_availability_zone` and `source_availability_zone` must be different availability zones in the same region.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "target_availability_zone")

