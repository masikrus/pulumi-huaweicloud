# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'ProtectedInstanceAddNicSecurityGroupArgs',
    'ProtectedInstanceAddNicSecurityGroupArgsDict',
    'GetProtectedInstancesByTagsMatchArgs',
    'GetProtectedInstancesByTagsMatchArgsDict',
    'GetProtectedInstancesByTagsNotTagArgs',
    'GetProtectedInstancesByTagsNotTagArgsDict',
    'GetProtectedInstancesByTagsNotTagsAnyArgs',
    'GetProtectedInstancesByTagsNotTagsAnyArgsDict',
    'GetProtectedInstancesByTagsTagArgs',
    'GetProtectedInstancesByTagsTagArgsDict',
    'GetProtectedInstancesByTagsTagsAnyArgs',
    'GetProtectedInstancesByTagsTagsAnyArgsDict',
]

MYPY = False

if not MYPY:
    class ProtectedInstanceAddNicSecurityGroupArgsDict(TypedDict):
        id: pulumi.Input[_builtins.str]
        """
        Specifies the ID of the security group.
        """
elif False:
    ProtectedInstanceAddNicSecurityGroupArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class ProtectedInstanceAddNicSecurityGroupArgs:
    def __init__(__self__, *,
                 id: pulumi.Input[_builtins.str]):
        """
        :param pulumi.Input[_builtins.str] id: Specifies the ID of the security group.
        """
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter
    def id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the security group.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "id", value)


if not MYPY:
    class GetProtectedInstancesByTagsMatchArgsDict(TypedDict):
        key: _builtins.str
        """
        Specifies the search field key. Currently, only **resource_name** for key is supported.
        Other key values will be available later.
        """
        value: _builtins.str
        """
        Specifies the search value. Each value can contain a maximum of `255` unicode characters.
        """
elif False:
    GetProtectedInstancesByTagsMatchArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class GetProtectedInstancesByTagsMatchArgs:
    def __init__(__self__, *,
                 key: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str key: Specifies the search field key. Currently, only **resource_name** for key is supported.
               Other key values will be available later.
        :param _builtins.str value: Specifies the search value. Each value can contain a maximum of `255` unicode characters.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def key(self) -> _builtins.str:
        """
        Specifies the search field key. Currently, only **resource_name** for key is supported.
        Other key values will be available later.
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: _builtins.str):
        pulumi.set(self, "key", value)

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        Specifies the search value. Each value can contain a maximum of `255` unicode characters.
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: _builtins.str):
        pulumi.set(self, "value", value)


if not MYPY:
    class GetProtectedInstancesByTagsNotTagArgsDict(TypedDict):
        key: _builtins.str
        """
        Specifies the search field key. Currently, only **resource_name** for key is supported.
        Other key values will be available later.
        """
        values: Sequence[_builtins.str]
        """
        Specifies the tag values. Each value contains a maximum of `255` Unicode characters.
        Before using values, delete SBC spaces before and after the value. The asterisk (*) is reserved for the system.
        If the value starts with (*), it indicates that fuzzy match is performed based on the value following (*).
        The value cannot contain only asterisks (*). If the values are null, it indicates any_value (querying any value).
        The resources containing one or more values listed in values will be found and displayed.

        <a name="matches_params_struct"></a>
        The `matches` block supports:
        """
elif False:
    GetProtectedInstancesByTagsNotTagArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class GetProtectedInstancesByTagsNotTagArgs:
    def __init__(__self__, *,
                 key: _builtins.str,
                 values: Sequence[_builtins.str]):
        """
        :param _builtins.str key: Specifies the search field key. Currently, only **resource_name** for key is supported.
               Other key values will be available later.
        :param Sequence[_builtins.str] values: Specifies the tag values. Each value contains a maximum of `255` Unicode characters.
               Before using values, delete SBC spaces before and after the value. The asterisk (*) is reserved for the system.
               If the value starts with (*), it indicates that fuzzy match is performed based on the value following (*).
               The value cannot contain only asterisks (*). If the values are null, it indicates any_value (querying any value).
               The resources containing one or more values listed in values will be found and displayed.
               
               <a name="matches_params_struct"></a>
               The `matches` block supports:
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "values", values)

    @_builtins.property
    @pulumi.getter
    def key(self) -> _builtins.str:
        """
        Specifies the search field key. Currently, only **resource_name** for key is supported.
        Other key values will be available later.
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: _builtins.str):
        pulumi.set(self, "key", value)

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        """
        Specifies the tag values. Each value contains a maximum of `255` Unicode characters.
        Before using values, delete SBC spaces before and after the value. The asterisk (*) is reserved for the system.
        If the value starts with (*), it indicates that fuzzy match is performed based on the value following (*).
        The value cannot contain only asterisks (*). If the values are null, it indicates any_value (querying any value).
        The resources containing one or more values listed in values will be found and displayed.

        <a name="matches_params_struct"></a>
        The `matches` block supports:
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[_builtins.str]):
        pulumi.set(self, "values", value)


if not MYPY:
    class GetProtectedInstancesByTagsNotTagsAnyArgsDict(TypedDict):
        key: _builtins.str
        """
        Specifies the search field key. Currently, only **resource_name** for key is supported.
        Other key values will be available later.
        """
        values: Sequence[_builtins.str]
        """
        Specifies the tag values. Each value contains a maximum of `255` Unicode characters.
        Before using values, delete SBC spaces before and after the value. The asterisk (*) is reserved for the system.
        If the value starts with (*), it indicates that fuzzy match is performed based on the value following (*).
        The value cannot contain only asterisks (*). If the values are null, it indicates any_value (querying any value).
        The resources containing one or more values listed in values will be found and displayed.

        <a name="matches_params_struct"></a>
        The `matches` block supports:
        """
elif False:
    GetProtectedInstancesByTagsNotTagsAnyArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class GetProtectedInstancesByTagsNotTagsAnyArgs:
    def __init__(__self__, *,
                 key: _builtins.str,
                 values: Sequence[_builtins.str]):
        """
        :param _builtins.str key: Specifies the search field key. Currently, only **resource_name** for key is supported.
               Other key values will be available later.
        :param Sequence[_builtins.str] values: Specifies the tag values. Each value contains a maximum of `255` Unicode characters.
               Before using values, delete SBC spaces before and after the value. The asterisk (*) is reserved for the system.
               If the value starts with (*), it indicates that fuzzy match is performed based on the value following (*).
               The value cannot contain only asterisks (*). If the values are null, it indicates any_value (querying any value).
               The resources containing one or more values listed in values will be found and displayed.
               
               <a name="matches_params_struct"></a>
               The `matches` block supports:
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "values", values)

    @_builtins.property
    @pulumi.getter
    def key(self) -> _builtins.str:
        """
        Specifies the search field key. Currently, only **resource_name** for key is supported.
        Other key values will be available later.
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: _builtins.str):
        pulumi.set(self, "key", value)

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        """
        Specifies the tag values. Each value contains a maximum of `255` Unicode characters.
        Before using values, delete SBC spaces before and after the value. The asterisk (*) is reserved for the system.
        If the value starts with (*), it indicates that fuzzy match is performed based on the value following (*).
        The value cannot contain only asterisks (*). If the values are null, it indicates any_value (querying any value).
        The resources containing one or more values listed in values will be found and displayed.

        <a name="matches_params_struct"></a>
        The `matches` block supports:
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[_builtins.str]):
        pulumi.set(self, "values", value)


if not MYPY:
    class GetProtectedInstancesByTagsTagArgsDict(TypedDict):
        key: _builtins.str
        """
        Specifies the search field key. Currently, only **resource_name** for key is supported.
        Other key values will be available later.
        """
        values: Sequence[_builtins.str]
        """
        Specifies the tag values. Each value contains a maximum of `255` Unicode characters.
        Before using values, delete SBC spaces before and after the value. The asterisk (*) is reserved for the system.
        If the value starts with (*), it indicates that fuzzy match is performed based on the value following (*).
        The value cannot contain only asterisks (*). If the values are null, it indicates any_value (querying any value).
        The resources containing one or more values listed in values will be found and displayed.

        <a name="matches_params_struct"></a>
        The `matches` block supports:
        """
elif False:
    GetProtectedInstancesByTagsTagArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class GetProtectedInstancesByTagsTagArgs:
    def __init__(__self__, *,
                 key: _builtins.str,
                 values: Sequence[_builtins.str]):
        """
        :param _builtins.str key: Specifies the search field key. Currently, only **resource_name** for key is supported.
               Other key values will be available later.
        :param Sequence[_builtins.str] values: Specifies the tag values. Each value contains a maximum of `255` Unicode characters.
               Before using values, delete SBC spaces before and after the value. The asterisk (*) is reserved for the system.
               If the value starts with (*), it indicates that fuzzy match is performed based on the value following (*).
               The value cannot contain only asterisks (*). If the values are null, it indicates any_value (querying any value).
               The resources containing one or more values listed in values will be found and displayed.
               
               <a name="matches_params_struct"></a>
               The `matches` block supports:
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "values", values)

    @_builtins.property
    @pulumi.getter
    def key(self) -> _builtins.str:
        """
        Specifies the search field key. Currently, only **resource_name** for key is supported.
        Other key values will be available later.
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: _builtins.str):
        pulumi.set(self, "key", value)

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        """
        Specifies the tag values. Each value contains a maximum of `255` Unicode characters.
        Before using values, delete SBC spaces before and after the value. The asterisk (*) is reserved for the system.
        If the value starts with (*), it indicates that fuzzy match is performed based on the value following (*).
        The value cannot contain only asterisks (*). If the values are null, it indicates any_value (querying any value).
        The resources containing one or more values listed in values will be found and displayed.

        <a name="matches_params_struct"></a>
        The `matches` block supports:
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[_builtins.str]):
        pulumi.set(self, "values", value)


if not MYPY:
    class GetProtectedInstancesByTagsTagsAnyArgsDict(TypedDict):
        key: _builtins.str
        """
        Specifies the search field key. Currently, only **resource_name** for key is supported.
        Other key values will be available later.
        """
        values: Sequence[_builtins.str]
        """
        Specifies the tag values. Each value contains a maximum of `255` Unicode characters.
        Before using values, delete SBC spaces before and after the value. The asterisk (*) is reserved for the system.
        If the value starts with (*), it indicates that fuzzy match is performed based on the value following (*).
        The value cannot contain only asterisks (*). If the values are null, it indicates any_value (querying any value).
        The resources containing one or more values listed in values will be found and displayed.

        <a name="matches_params_struct"></a>
        The `matches` block supports:
        """
elif False:
    GetProtectedInstancesByTagsTagsAnyArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class GetProtectedInstancesByTagsTagsAnyArgs:
    def __init__(__self__, *,
                 key: _builtins.str,
                 values: Sequence[_builtins.str]):
        """
        :param _builtins.str key: Specifies the search field key. Currently, only **resource_name** for key is supported.
               Other key values will be available later.
        :param Sequence[_builtins.str] values: Specifies the tag values. Each value contains a maximum of `255` Unicode characters.
               Before using values, delete SBC spaces before and after the value. The asterisk (*) is reserved for the system.
               If the value starts with (*), it indicates that fuzzy match is performed based on the value following (*).
               The value cannot contain only asterisks (*). If the values are null, it indicates any_value (querying any value).
               The resources containing one or more values listed in values will be found and displayed.
               
               <a name="matches_params_struct"></a>
               The `matches` block supports:
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "values", values)

    @_builtins.property
    @pulumi.getter
    def key(self) -> _builtins.str:
        """
        Specifies the search field key. Currently, only **resource_name** for key is supported.
        Other key values will be available later.
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: _builtins.str):
        pulumi.set(self, "key", value)

    @_builtins.property
    @pulumi.getter
    def values(self) -> Sequence[_builtins.str]:
        """
        Specifies the tag values. Each value contains a maximum of `255` Unicode characters.
        Before using values, delete SBC spaces before and after the value. The asterisk (*) is reserved for the system.
        If the value starts with (*), it indicates that fuzzy match is performed based on the value following (*).
        The value cannot contain only asterisks (*). If the values are null, it indicates any_value (querying any value).
        The resources containing one or more values listed in values will be found and displayed.

        <a name="matches_params_struct"></a>
        The `matches` block supports:
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: Sequence[_builtins.str]):
        pulumi.set(self, "values", value)


