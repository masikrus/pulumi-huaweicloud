# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['ReplicationPairArgs', 'ReplicationPair']

@pulumi.input_type
class ReplicationPairArgs:
    def __init__(__self__, *,
                 group_id: pulumi.Input[_builtins.str],
                 volume_id: pulumi.Input[_builtins.str],
                 delete_target_volume: Optional[pulumi.Input[_builtins.bool]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a ReplicationPair resource.
        :param pulumi.Input[_builtins.str] group_id: Specifies the ID of a protection group.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] volume_id: Specifies the ID of the production site disk.
               When the provider is successfully invoked, the disaster recovery site disk will be automatically created.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.bool] delete_target_volume: Specifies whether to delete the disaster recovery site disk.
               The default value is **false**.
        :param pulumi.Input[_builtins.str] description: Specifies the description of a replication pair. The value can contain
               a maximum of 64 characters and angle brackets (<) and (>) are not allowed.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of a replication pair. The name can contain a maximum of 64 characters.
               The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "group_id", group_id)
        pulumi.set(__self__, "volume_id", volume_id)
        if delete_target_volume is not None:
            pulumi.set(__self__, "delete_target_volume", delete_target_volume)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of a protection group.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter(name="volumeId")
    def volume_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of the production site disk.
        When the provider is successfully invoked, the disaster recovery site disk will be automatically created.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "volume_id")

    @volume_id.setter
    def volume_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "volume_id", value)

    @_builtins.property
    @pulumi.getter(name="deleteTargetVolume")
    def delete_target_volume(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to delete the disaster recovery site disk.
        The default value is **false**.
        """
        return pulumi.get(self, "delete_target_volume")

    @delete_target_volume.setter
    def delete_target_volume(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "delete_target_volume", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of a replication pair. The value can contain
        a maximum of 64 characters and angle brackets (<) and (>) are not allowed.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of a replication pair. The name can contain a maximum of 64 characters.
        The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _ReplicationPairState:
    def __init__(__self__, *,
                 delete_target_volume: Optional[pulumi.Input[_builtins.bool]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 fault_level: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 replication_model: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 target_volume_id: Optional[pulumi.Input[_builtins.str]] = None,
                 volume_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering ReplicationPair resources.
        :param pulumi.Input[_builtins.bool] delete_target_volume: Specifies whether to delete the disaster recovery site disk.
               The default value is **false**.
        :param pulumi.Input[_builtins.str] description: Specifies the description of a replication pair. The value can contain
               a maximum of 64 characters and angle brackets (<) and (>) are not allowed.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] fault_level: The fault level of a replication pair.
               + 0: No fault occurs.
               + 2: The disk of the current production site does not have read/write permissions. In this case, you are advised to
               perform a failover.
               + 5: The replication link is disconnected. In this case, a failover is not allowed. Contact the customer service to
               obtain service support.
        :param pulumi.Input[_builtins.str] group_id: Specifies the ID of a protection group.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of a replication pair. The name can contain a maximum of 64 characters.
               The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] replication_model: The replication mode of a replication pair. The default value is **hypermetro**,
               indicating synchronous replication.
        :param pulumi.Input[_builtins.str] status: The status of a replication pair. For details,
               see [Replication Pair Status](https://support.huaweicloud.com/intl/en-us/api-sdrs/en-us_topic_0126152932.html).
        :param pulumi.Input[_builtins.str] target_volume_id: The ID of the disk in the protection availability zone.
        :param pulumi.Input[_builtins.str] volume_id: Specifies the ID of the production site disk.
               When the provider is successfully invoked, the disaster recovery site disk will be automatically created.
               
               Changing this parameter will create a new resource.
        """
        if delete_target_volume is not None:
            pulumi.set(__self__, "delete_target_volume", delete_target_volume)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if fault_level is not None:
            pulumi.set(__self__, "fault_level", fault_level)
        if group_id is not None:
            pulumi.set(__self__, "group_id", group_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if replication_model is not None:
            pulumi.set(__self__, "replication_model", replication_model)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if target_volume_id is not None:
            pulumi.set(__self__, "target_volume_id", target_volume_id)
        if volume_id is not None:
            pulumi.set(__self__, "volume_id", volume_id)

    @_builtins.property
    @pulumi.getter(name="deleteTargetVolume")
    def delete_target_volume(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to delete the disaster recovery site disk.
        The default value is **false**.
        """
        return pulumi.get(self, "delete_target_volume")

    @delete_target_volume.setter
    def delete_target_volume(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "delete_target_volume", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of a replication pair. The value can contain
        a maximum of 64 characters and angle brackets (<) and (>) are not allowed.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="faultLevel")
    def fault_level(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The fault level of a replication pair.
        + 0: No fault occurs.
        + 2: The disk of the current production site does not have read/write permissions. In this case, you are advised to
        perform a failover.
        + 5: The replication link is disconnected. In this case, a failover is not allowed. Contact the customer service to
        obtain service support.
        """
        return pulumi.get(self, "fault_level")

    @fault_level.setter
    def fault_level(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "fault_level", value)

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of a protection group.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "group_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of a replication pair. The name can contain a maximum of 64 characters.
        The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="replicationModel")
    def replication_model(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The replication mode of a replication pair. The default value is **hypermetro**,
        indicating synchronous replication.
        """
        return pulumi.get(self, "replication_model")

    @replication_model.setter
    def replication_model(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "replication_model", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The status of a replication pair. For details,
        see [Replication Pair Status](https://support.huaweicloud.com/intl/en-us/api-sdrs/en-us_topic_0126152932.html).
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="targetVolumeId")
    def target_volume_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the disk in the protection availability zone.
        """
        return pulumi.get(self, "target_volume_id")

    @target_volume_id.setter
    def target_volume_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "target_volume_id", value)

    @_builtins.property
    @pulumi.getter(name="volumeId")
    def volume_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the production site disk.
        When the provider is successfully invoked, the disaster recovery site disk will be automatically created.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "volume_id")

    @volume_id.setter
    def volume_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "volume_id", value)


@pulumi.type_token("huaweicloud:sdrs/replicationPair:ReplicationPair")
class ReplicationPair(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 delete_target_volume: Optional[pulumi.Input[_builtins.bool]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 volume_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages an SDRS replication pair resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        protection_group_id = config.require_object("protectionGroupId")
        volume_id = config.require_object("volumeId")
        test = huaweicloud.sdrs.ReplicationPair("test",
            name="test-replication-pair",
            group_id=protection_group_id,
            volume_id=volume_id,
            description="test description",
            delete_target_volume=True)
        ```

        ## Import

        The SDRS replication pair can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:sdrs/replicationPair:ReplicationPair test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `delete_target_volume`.

        It is generally recommended running `pulumi preview` after importing a resource.

        You can then decide if changes should be applied to the resource, or the resource definition should be updated to align

        with the resource. Also, you can ignore changes as below.

        hcl

        resource "huaweicloud_sdrs_replication_pair" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              delete_target_volume,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.bool] delete_target_volume: Specifies whether to delete the disaster recovery site disk.
               The default value is **false**.
        :param pulumi.Input[_builtins.str] description: Specifies the description of a replication pair. The value can contain
               a maximum of 64 characters and angle brackets (<) and (>) are not allowed.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] group_id: Specifies the ID of a protection group.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of a replication pair. The name can contain a maximum of 64 characters.
               The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] volume_id: Specifies the ID of the production site disk.
               When the provider is successfully invoked, the disaster recovery site disk will be automatically created.
               
               Changing this parameter will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ReplicationPairArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an SDRS replication pair resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        protection_group_id = config.require_object("protectionGroupId")
        volume_id = config.require_object("volumeId")
        test = huaweicloud.sdrs.ReplicationPair("test",
            name="test-replication-pair",
            group_id=protection_group_id,
            volume_id=volume_id,
            description="test description",
            delete_target_volume=True)
        ```

        ## Import

        The SDRS replication pair can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:sdrs/replicationPair:ReplicationPair test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `delete_target_volume`.

        It is generally recommended running `pulumi preview` after importing a resource.

        You can then decide if changes should be applied to the resource, or the resource definition should be updated to align

        with the resource. Also, you can ignore changes as below.

        hcl

        resource "huaweicloud_sdrs_replication_pair" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              delete_target_volume,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param ReplicationPairArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ReplicationPairArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 delete_target_volume: Optional[pulumi.Input[_builtins.bool]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 volume_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ReplicationPairArgs.__new__(ReplicationPairArgs)

            __props__.__dict__["delete_target_volume"] = delete_target_volume
            __props__.__dict__["description"] = description
            if group_id is None and not opts.urn:
                raise TypeError("Missing required property 'group_id'")
            __props__.__dict__["group_id"] = group_id
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            if volume_id is None and not opts.urn:
                raise TypeError("Missing required property 'volume_id'")
            __props__.__dict__["volume_id"] = volume_id
            __props__.__dict__["fault_level"] = None
            __props__.__dict__["replication_model"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["target_volume_id"] = None
        super(ReplicationPair, __self__).__init__(
            'huaweicloud:sdrs/replicationPair:ReplicationPair',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            delete_target_volume: Optional[pulumi.Input[_builtins.bool]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            fault_level: Optional[pulumi.Input[_builtins.str]] = None,
            group_id: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            replication_model: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            target_volume_id: Optional[pulumi.Input[_builtins.str]] = None,
            volume_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'ReplicationPair':
        """
        Get an existing ReplicationPair resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.bool] delete_target_volume: Specifies whether to delete the disaster recovery site disk.
               The default value is **false**.
        :param pulumi.Input[_builtins.str] description: Specifies the description of a replication pair. The value can contain
               a maximum of 64 characters and angle brackets (<) and (>) are not allowed.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] fault_level: The fault level of a replication pair.
               + 0: No fault occurs.
               + 2: The disk of the current production site does not have read/write permissions. In this case, you are advised to
               perform a failover.
               + 5: The replication link is disconnected. In this case, a failover is not allowed. Contact the customer service to
               obtain service support.
        :param pulumi.Input[_builtins.str] group_id: Specifies the ID of a protection group.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of a replication pair. The name can contain a maximum of 64 characters.
               The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] replication_model: The replication mode of a replication pair. The default value is **hypermetro**,
               indicating synchronous replication.
        :param pulumi.Input[_builtins.str] status: The status of a replication pair. For details,
               see [Replication Pair Status](https://support.huaweicloud.com/intl/en-us/api-sdrs/en-us_topic_0126152932.html).
        :param pulumi.Input[_builtins.str] target_volume_id: The ID of the disk in the protection availability zone.
        :param pulumi.Input[_builtins.str] volume_id: Specifies the ID of the production site disk.
               When the provider is successfully invoked, the disaster recovery site disk will be automatically created.
               
               Changing this parameter will create a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ReplicationPairState.__new__(_ReplicationPairState)

        __props__.__dict__["delete_target_volume"] = delete_target_volume
        __props__.__dict__["description"] = description
        __props__.__dict__["fault_level"] = fault_level
        __props__.__dict__["group_id"] = group_id
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["replication_model"] = replication_model
        __props__.__dict__["status"] = status
        __props__.__dict__["target_volume_id"] = target_volume_id
        __props__.__dict__["volume_id"] = volume_id
        return ReplicationPair(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="deleteTargetVolume")
    def delete_target_volume(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether to delete the disaster recovery site disk.
        The default value is **false**.
        """
        return pulumi.get(self, "delete_target_volume")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the description of a replication pair. The value can contain
        a maximum of 64 characters and angle brackets (<) and (>) are not allowed.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="faultLevel")
    def fault_level(self) -> pulumi.Output[_builtins.str]:
        """
        The fault level of a replication pair.
        + 0: No fault occurs.
        + 2: The disk of the current production site does not have read/write permissions. In this case, you are advised to
        perform a failover.
        + 5: The replication link is disconnected. In this case, a failover is not allowed. Contact the customer service to
        obtain service support.
        """
        return pulumi.get(self, "fault_level")

    @_builtins.property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of a protection group.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "group_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of a replication pair. The name can contain a maximum of 64 characters.
        The value can contain only letters (a to z and A to Z), digits (0 to 9), dots (.), underscores (_), and hyphens (-).
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="replicationModel")
    def replication_model(self) -> pulumi.Output[_builtins.str]:
        """
        The replication mode of a replication pair. The default value is **hypermetro**,
        indicating synchronous replication.
        """
        return pulumi.get(self, "replication_model")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The status of a replication pair. For details,
        see [Replication Pair Status](https://support.huaweicloud.com/intl/en-us/api-sdrs/en-us_topic_0126152932.html).
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="targetVolumeId")
    def target_volume_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the disk in the protection availability zone.
        """
        return pulumi.get(self, "target_volume_id")

    @_builtins.property
    @pulumi.getter(name="volumeId")
    def volume_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of the production site disk.
        When the provider is successfully invoked, the disaster recovery site disk will be automatically created.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "volume_id")

