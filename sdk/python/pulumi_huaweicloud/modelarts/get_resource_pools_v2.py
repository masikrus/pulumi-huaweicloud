# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetResourcePoolsV2Result',
    'AwaitableGetResourcePoolsV2Result',
    'get_resource_pools_v2',
    'get_resource_pools_v2_output',
]

@pulumi.output_type
class GetResourcePoolsV2Result:
    """
    A collection of values returned by getResourcePoolsV2.
    """
    def __init__(__self__, id=None, region=None, resource_pools=None, status=None, workspace_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if resource_pools and not isinstance(resource_pools, list):
            raise TypeError("Expected argument 'resource_pools' to be a list")
        pulumi.set(__self__, "resource_pools", resource_pools)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)
        if workspace_id and not isinstance(workspace_id, str):
            raise TypeError("Expected argument 'workspace_id' to be a str")
        pulumi.set(__self__, "workspace_id", workspace_id)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="resourcePools")
    def resource_pools(self) -> Sequence['outputs.GetResourcePoolsV2ResourcePoolResult']:
        """
        All resource pools that matched filter parameters.  
        The resource_pools structure is documented below.
        """
        return pulumi.get(self, "resource_pools")

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[_builtins.str]:
        """
        The status of the resource pool.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="workspaceId")
    def workspace_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "workspace_id")


class AwaitableGetResourcePoolsV2Result(GetResourcePoolsV2Result):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetResourcePoolsV2Result(
            id=self.id,
            region=self.region,
            resource_pools=self.resource_pools,
            status=self.status,
            workspace_id=self.workspace_id)


def get_resource_pools_v2(region: Optional[_builtins.str] = None,
                          status: Optional[_builtins.str] = None,
                          workspace_id: Optional[_builtins.str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetResourcePoolsV2Result:
    """
    Use this data source to get list of ModelArts resource pools within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.ModelArts.get_resource_pools_v2(status="created")
    ```


    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    :param _builtins.str status: Specifies the status of the resource pool to be queried.  
           The valid values are as follows:
           + **created**
           + **failed**
           + **creating**
    :param _builtins.str workspace_id: Specifies the workspace ID to which the resource pool belongs.
    """
    __args__ = dict()
    __args__['region'] = region
    __args__['status'] = status
    __args__['workspaceId'] = workspace_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:ModelArts/getResourcePoolsV2:getResourcePoolsV2', __args__, opts=opts, typ=GetResourcePoolsV2Result).value

    return AwaitableGetResourcePoolsV2Result(
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'),
        resource_pools=pulumi.get(__ret__, 'resource_pools'),
        status=pulumi.get(__ret__, 'status'),
        workspace_id=pulumi.get(__ret__, 'workspace_id'))
def get_resource_pools_v2_output(region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                 status: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                 workspace_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                 opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetResourcePoolsV2Result]:
    """
    Use this data source to get list of ModelArts resource pools within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.ModelArts.get_resource_pools_v2(status="created")
    ```


    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    :param _builtins.str status: Specifies the status of the resource pool to be queried.  
           The valid values are as follows:
           + **created**
           + **failed**
           + **creating**
    :param _builtins.str workspace_id: Specifies the workspace ID to which the resource pool belongs.
    """
    __args__ = dict()
    __args__['region'] = region
    __args__['status'] = status
    __args__['workspaceId'] = workspace_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:ModelArts/getResourcePoolsV2:getResourcePoolsV2', __args__, opts=opts, typ=GetResourcePoolsV2Result)
    return __ret__.apply(lambda __response__: GetResourcePoolsV2Result(
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region'),
        resource_pools=pulumi.get(__response__, 'resource_pools'),
        status=pulumi.get(__response__, 'status'),
        workspace_id=pulumi.get(__response__, 'workspace_id')))
