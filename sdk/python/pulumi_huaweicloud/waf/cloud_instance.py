# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['CloudInstanceArgs', 'CloudInstance']

@pulumi.input_type
class CloudInstanceArgs:
    def __init__(__self__, *,
                 charging_mode: pulumi.Input[_builtins.str],
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth_expack_product: Optional[pulumi.Input['CloudInstanceBandwidthExpackProductArgs']] = None,
                 domain_expack_product: Optional[pulumi.Input['CloudInstanceDomainExpackProductArgs']] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_spec_code: Optional[pulumi.Input[_builtins.str]] = None,
                 rule_expack_product: Optional[pulumi.Input['CloudInstanceRuleExpackProductArgs']] = None,
                 website: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a CloudInstance resource.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode of the cloud WAF.
               The valid values are **postPaid** and **prePaid** (the yearly/monthly billing mode).
               
               Changing this will create a new resource.
               
               > If `charging_mode` is set to **postPaid**, only `region`, `website`, `enterprise_project_id` can be specified.
               If `charging_mode` is set to **prePaid**, `website` cannot be specified.
               The postpaid charging mode is only applicable to Huawei Cloud International website.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether auto-renew is enabled.
               Valid values are **true** and **false**.
               
               This parameter takes effect only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input['CloudInstanceBandwidthExpackProductArgs'] bandwidth_expack_product: Specifies the configuration of the bandwidth extended packages.
               The bandwidth_expack_product structure is documented below.
               
               This parameter takes effect only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input['CloudInstanceDomainExpackProductArgs'] domain_expack_product: Specifies the configuration of the domain extended packages.
               The domain_expack_product structure is documented below.
               
               This parameter takes effect only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project to which the cloud
               WAF belongs. For enterprise users, if omitted, default enterprise project will be used.
               
               <a name="extended_packages"></a>
               The `bandwidth_expack_product`, `domain_expack_product` or `rule_expack_product` block supports:
        :param pulumi.Input[_builtins.int] period: Specifies the charging period of the cloud WAF.
               If `period_unit` is set to **month**, the value ranges from `1` to `9`.
               If `period_unit` is set to **year**, the value ranges from `1` to `3`.
               
               Changing this will create a new resource.
               
               This parameter is required when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the charging period unit of the cloud WAF.
               Valid values are **month** and **year**.
               
               Changing this will create a new resource.
               
               This parameter is required when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the cloud WAF is located.
               If omitted, the provider-level region will be used.
               
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] resource_spec_code: Specifies the specification of the cloud WAF.
               The valid values are as follows:
               + **detection**: Introduction edition.
               + **professional**: Standard edition.
               + **enterprise**: Professional edition.
               + **ultimate**: Platinum edition.
               
               This parameter is required when `charging_mode` is set to **prePaid**.
        :param pulumi.Input['CloudInstanceRuleExpackProductArgs'] rule_expack_product: Specifies the configuration of the rule extended packages.
               The rule_expack_product structure is documented below.
               
               This parameter takes effect only when `charging_mode` is set to **prePaid**.
               
               > The specification code '**detection**' does not support extended packages.
        :param pulumi.Input[_builtins.str] website: Specifies the website to which the account belongs. Valid value is **hec-hk**.
               
               This parameter is required when `charging_mode` is set to **postPaid**.
        """
        pulumi.set(__self__, "charging_mode", charging_mode)
        if auto_renew is not None:
            pulumi.set(__self__, "auto_renew", auto_renew)
        if bandwidth_expack_product is not None:
            pulumi.set(__self__, "bandwidth_expack_product", bandwidth_expack_product)
        if domain_expack_product is not None:
            pulumi.set(__self__, "domain_expack_product", domain_expack_product)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if period is not None:
            pulumi.set(__self__, "period", period)
        if period_unit is not None:
            pulumi.set(__self__, "period_unit", period_unit)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if resource_spec_code is not None:
            pulumi.set(__self__, "resource_spec_code", resource_spec_code)
        if rule_expack_product is not None:
            pulumi.set(__self__, "rule_expack_product", rule_expack_product)
        if website is not None:
            pulumi.set(__self__, "website", website)

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the charging mode of the cloud WAF.
        The valid values are **postPaid** and **prePaid** (the yearly/monthly billing mode).

        Changing this will create a new resource.

        > If `charging_mode` is set to **postPaid**, only `region`, `website`, `enterprise_project_id` can be specified.
        If `charging_mode` is set to **prePaid**, `website` cannot be specified.
        The postpaid charging mode is only applicable to Huawei Cloud International website.
        """
        return pulumi.get(self, "charging_mode")

    @charging_mode.setter
    def charging_mode(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "charging_mode", value)

    @_builtins.property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies whether auto-renew is enabled.
        Valid values are **true** and **false**.

        This parameter takes effect only when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "auto_renew")

    @auto_renew.setter
    def auto_renew(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "auto_renew", value)

    @_builtins.property
    @pulumi.getter(name="bandwidthExpackProduct")
    def bandwidth_expack_product(self) -> Optional[pulumi.Input['CloudInstanceBandwidthExpackProductArgs']]:
        """
        Specifies the configuration of the bandwidth extended packages.
        The bandwidth_expack_product structure is documented below.

        This parameter takes effect only when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "bandwidth_expack_product")

    @bandwidth_expack_product.setter
    def bandwidth_expack_product(self, value: Optional[pulumi.Input['CloudInstanceBandwidthExpackProductArgs']]):
        pulumi.set(self, "bandwidth_expack_product", value)

    @_builtins.property
    @pulumi.getter(name="domainExpackProduct")
    def domain_expack_product(self) -> Optional[pulumi.Input['CloudInstanceDomainExpackProductArgs']]:
        """
        Specifies the configuration of the domain extended packages.
        The domain_expack_product structure is documented below.

        This parameter takes effect only when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "domain_expack_product")

    @domain_expack_product.setter
    def domain_expack_product(self, value: Optional[pulumi.Input['CloudInstanceDomainExpackProductArgs']]):
        pulumi.set(self, "domain_expack_product", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the enterprise project to which the cloud
        WAF belongs. For enterprise users, if omitted, default enterprise project will be used.

        <a name="extended_packages"></a>
        The `bandwidth_expack_product`, `domain_expack_product` or `rule_expack_product` block supports:
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the charging period of the cloud WAF.
        If `period_unit` is set to **month**, the value ranges from `1` to `9`.
        If `period_unit` is set to **year**, the value ranges from `1` to `3`.

        Changing this will create a new resource.

        This parameter is required when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "period", value)

    @_builtins.property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the charging period unit of the cloud WAF.
        Valid values are **month** and **year**.

        Changing this will create a new resource.

        This parameter is required when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "period_unit")

    @period_unit.setter
    def period_unit(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "period_unit", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the cloud WAF is located.
        If omitted, the provider-level region will be used.

        Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="resourceSpecCode")
    def resource_spec_code(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the specification of the cloud WAF.
        The valid values are as follows:
        + **detection**: Introduction edition.
        + **professional**: Standard edition.
        + **enterprise**: Professional edition.
        + **ultimate**: Platinum edition.

        This parameter is required when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "resource_spec_code")

    @resource_spec_code.setter
    def resource_spec_code(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_spec_code", value)

    @_builtins.property
    @pulumi.getter(name="ruleExpackProduct")
    def rule_expack_product(self) -> Optional[pulumi.Input['CloudInstanceRuleExpackProductArgs']]:
        """
        Specifies the configuration of the rule extended packages.
        The rule_expack_product structure is documented below.

        This parameter takes effect only when `charging_mode` is set to **prePaid**.

        > The specification code '**detection**' does not support extended packages.
        """
        return pulumi.get(self, "rule_expack_product")

    @rule_expack_product.setter
    def rule_expack_product(self, value: Optional[pulumi.Input['CloudInstanceRuleExpackProductArgs']]):
        pulumi.set(self, "rule_expack_product", value)

    @_builtins.property
    @pulumi.getter
    def website(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the website to which the account belongs. Valid value is **hec-hk**.

        This parameter is required when `charging_mode` is set to **postPaid**.
        """
        return pulumi.get(self, "website")

    @website.setter
    def website(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "website", value)


@pulumi.input_type
class _CloudInstanceState:
    def __init__(__self__, *,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth_expack_product: Optional[pulumi.Input['CloudInstanceBandwidthExpackProductArgs']] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_expack_product: Optional[pulumi.Input['CloudInstanceDomainExpackProductArgs']] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_spec_code: Optional[pulumi.Input[_builtins.str]] = None,
                 rule_expack_product: Optional[pulumi.Input['CloudInstanceRuleExpackProductArgs']] = None,
                 status: Optional[pulumi.Input[_builtins.int]] = None,
                 website: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering CloudInstance resources.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether auto-renew is enabled.
               Valid values are **true** and **false**.
               
               This parameter takes effect only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input['CloudInstanceBandwidthExpackProductArgs'] bandwidth_expack_product: Specifies the configuration of the bandwidth extended packages.
               The bandwidth_expack_product structure is documented below.
               
               This parameter takes effect only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode of the cloud WAF.
               The valid values are **postPaid** and **prePaid** (the yearly/monthly billing mode).
               
               Changing this will create a new resource.
               
               > If `charging_mode` is set to **postPaid**, only `region`, `website`, `enterprise_project_id` can be specified.
               If `charging_mode` is set to **prePaid**, `website` cannot be specified.
               The postpaid charging mode is only applicable to Huawei Cloud International website.
        :param pulumi.Input['CloudInstanceDomainExpackProductArgs'] domain_expack_product: Specifies the configuration of the domain extended packages.
               The domain_expack_product structure is documented below.
               
               This parameter takes effect only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project to which the cloud
               WAF belongs. For enterprise users, if omitted, default enterprise project will be used.
               
               <a name="extended_packages"></a>
               The `bandwidth_expack_product`, `domain_expack_product` or `rule_expack_product` block supports:
        :param pulumi.Input[_builtins.int] period: Specifies the charging period of the cloud WAF.
               If `period_unit` is set to **month**, the value ranges from `1` to `9`.
               If `period_unit` is set to **year**, the value ranges from `1` to `3`.
               
               Changing this will create a new resource.
               
               This parameter is required when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the charging period unit of the cloud WAF.
               Valid values are **month** and **year**.
               
               Changing this will create a new resource.
               
               This parameter is required when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the cloud WAF is located.
               If omitted, the provider-level region will be used.
               
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] resource_spec_code: Specifies the specification of the cloud WAF.
               The valid values are as follows:
               + **detection**: Introduction edition.
               + **professional**: Standard edition.
               + **enterprise**: Professional edition.
               + **ultimate**: Platinum edition.
               
               This parameter is required when `charging_mode` is set to **prePaid**.
        :param pulumi.Input['CloudInstanceRuleExpackProductArgs'] rule_expack_product: Specifies the configuration of the rule extended packages.
               The rule_expack_product structure is documented below.
               
               This parameter takes effect only when `charging_mode` is set to **prePaid**.
               
               > The specification code '**detection**' does not support extended packages.
        :param pulumi.Input[_builtins.int] status: The current status of the cloud WAF.
        :param pulumi.Input[_builtins.str] website: Specifies the website to which the account belongs. Valid value is **hec-hk**.
               
               This parameter is required when `charging_mode` is set to **postPaid**.
        """
        if auto_renew is not None:
            pulumi.set(__self__, "auto_renew", auto_renew)
        if bandwidth_expack_product is not None:
            pulumi.set(__self__, "bandwidth_expack_product", bandwidth_expack_product)
        if charging_mode is not None:
            pulumi.set(__self__, "charging_mode", charging_mode)
        if domain_expack_product is not None:
            pulumi.set(__self__, "domain_expack_product", domain_expack_product)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if period is not None:
            pulumi.set(__self__, "period", period)
        if period_unit is not None:
            pulumi.set(__self__, "period_unit", period_unit)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if resource_spec_code is not None:
            pulumi.set(__self__, "resource_spec_code", resource_spec_code)
        if rule_expack_product is not None:
            pulumi.set(__self__, "rule_expack_product", rule_expack_product)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if website is not None:
            pulumi.set(__self__, "website", website)

    @_builtins.property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies whether auto-renew is enabled.
        Valid values are **true** and **false**.

        This parameter takes effect only when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "auto_renew")

    @auto_renew.setter
    def auto_renew(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "auto_renew", value)

    @_builtins.property
    @pulumi.getter(name="bandwidthExpackProduct")
    def bandwidth_expack_product(self) -> Optional[pulumi.Input['CloudInstanceBandwidthExpackProductArgs']]:
        """
        Specifies the configuration of the bandwidth extended packages.
        The bandwidth_expack_product structure is documented below.

        This parameter takes effect only when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "bandwidth_expack_product")

    @bandwidth_expack_product.setter
    def bandwidth_expack_product(self, value: Optional[pulumi.Input['CloudInstanceBandwidthExpackProductArgs']]):
        pulumi.set(self, "bandwidth_expack_product", value)

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the charging mode of the cloud WAF.
        The valid values are **postPaid** and **prePaid** (the yearly/monthly billing mode).

        Changing this will create a new resource.

        > If `charging_mode` is set to **postPaid**, only `region`, `website`, `enterprise_project_id` can be specified.
        If `charging_mode` is set to **prePaid**, `website` cannot be specified.
        The postpaid charging mode is only applicable to Huawei Cloud International website.
        """
        return pulumi.get(self, "charging_mode")

    @charging_mode.setter
    def charging_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "charging_mode", value)

    @_builtins.property
    @pulumi.getter(name="domainExpackProduct")
    def domain_expack_product(self) -> Optional[pulumi.Input['CloudInstanceDomainExpackProductArgs']]:
        """
        Specifies the configuration of the domain extended packages.
        The domain_expack_product structure is documented below.

        This parameter takes effect only when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "domain_expack_product")

    @domain_expack_product.setter
    def domain_expack_product(self, value: Optional[pulumi.Input['CloudInstanceDomainExpackProductArgs']]):
        pulumi.set(self, "domain_expack_product", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the enterprise project to which the cloud
        WAF belongs. For enterprise users, if omitted, default enterprise project will be used.

        <a name="extended_packages"></a>
        The `bandwidth_expack_product`, `domain_expack_product` or `rule_expack_product` block supports:
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the charging period of the cloud WAF.
        If `period_unit` is set to **month**, the value ranges from `1` to `9`.
        If `period_unit` is set to **year**, the value ranges from `1` to `3`.

        Changing this will create a new resource.

        This parameter is required when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "period", value)

    @_builtins.property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the charging period unit of the cloud WAF.
        Valid values are **month** and **year**.

        Changing this will create a new resource.

        This parameter is required when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "period_unit")

    @period_unit.setter
    def period_unit(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "period_unit", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the cloud WAF is located.
        If omitted, the provider-level region will be used.

        Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="resourceSpecCode")
    def resource_spec_code(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the specification of the cloud WAF.
        The valid values are as follows:
        + **detection**: Introduction edition.
        + **professional**: Standard edition.
        + **enterprise**: Professional edition.
        + **ultimate**: Platinum edition.

        This parameter is required when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "resource_spec_code")

    @resource_spec_code.setter
    def resource_spec_code(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_spec_code", value)

    @_builtins.property
    @pulumi.getter(name="ruleExpackProduct")
    def rule_expack_product(self) -> Optional[pulumi.Input['CloudInstanceRuleExpackProductArgs']]:
        """
        Specifies the configuration of the rule extended packages.
        The rule_expack_product structure is documented below.

        This parameter takes effect only when `charging_mode` is set to **prePaid**.

        > The specification code '**detection**' does not support extended packages.
        """
        return pulumi.get(self, "rule_expack_product")

    @rule_expack_product.setter
    def rule_expack_product(self, value: Optional[pulumi.Input['CloudInstanceRuleExpackProductArgs']]):
        pulumi.set(self, "rule_expack_product", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The current status of the cloud WAF.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter
    def website(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the website to which the account belongs. Valid value is **hec-hk**.

        This parameter is required when `charging_mode` is set to **postPaid**.
        """
        return pulumi.get(self, "website")

    @website.setter
    def website(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "website", value)


@pulumi.type_token("huaweicloud:Waf/cloudInstance:CloudInstance")
class CloudInstance(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth_expack_product: Optional[pulumi.Input[Union['CloudInstanceBandwidthExpackProductArgs', 'CloudInstanceBandwidthExpackProductArgsDict']]] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_expack_product: Optional[pulumi.Input[Union['CloudInstanceDomainExpackProductArgs', 'CloudInstanceDomainExpackProductArgsDict']]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_spec_code: Optional[pulumi.Input[_builtins.str]] = None,
                 rule_expack_product: Optional[pulumi.Input[Union['CloudInstanceRuleExpackProductArgs', 'CloudInstanceRuleExpackProductArgsDict']]] = None,
                 website: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Using this resource to manage a cloud WAF in HuaweiCloud.

        ## Example Usage

        ### Prepaid cloud WAF

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        enterprise_project_id = config.require_object("enterpriseProjectId")
        test = huaweicloud.waf.CloudInstance("test",
            resource_spec_code="professional",
            bandwidth_expack_product={
                "resource_size": 1,
            },
            domain_expack_product={
                "resource_size": 1,
            },
            rule_expack_product={
                "resource_size": 1,
            },
            charging_mode="prePaid",
            period_unit="month",
            period=1,
            auto_renew="true",
            enterprise_project_id=enterprise_project_id)
        ```

        ### Postpaid cloud WAF (Currently only applicable to HuaweiCloud International website)

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        enterprise_project_id = config.require_object("enterpriseProjectId")
        test = huaweicloud.waf.CloudInstance("test",
            charging_mode="postPaid",
            website="hec-hk",
            enterprise_project_id=enterprise_project_id)
        ```

        ## Import

        There are two ways to import WAF cloud instance state.

        * Using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Waf/cloudInstance:CloudInstance test <id>
        ```

        * Using `id` and `enterprise_project_id`, separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Waf/cloudInstance:CloudInstance test <id>/<enterprise_project_id>
        ```

        Note that the imported state is not identical to your resource definition, due to API response reason.

        For prepaid cloud WAF, the missing attributes include `enterprise_project_id`, `period_unit`, `period` and `auto_renew`.

        You can ignore changes as below.

        hcl

        resource "huaweicloud_waf_cloud_instance" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              enterprise_project_id,
            
              period_unit,
            
              period,
            
              auto_renew,
            
            ]

          }

        }

        For postPaid cloud WAF, the missing attributes include `enterprise_project_id` and `website`.

        You can ignore changes as below.

        hcl

        resource "huaweicloud_waf_cloud_instance" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              enterprise_project_id,
            
              website,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether auto-renew is enabled.
               Valid values are **true** and **false**.
               
               This parameter takes effect only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[Union['CloudInstanceBandwidthExpackProductArgs', 'CloudInstanceBandwidthExpackProductArgsDict']] bandwidth_expack_product: Specifies the configuration of the bandwidth extended packages.
               The bandwidth_expack_product structure is documented below.
               
               This parameter takes effect only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode of the cloud WAF.
               The valid values are **postPaid** and **prePaid** (the yearly/monthly billing mode).
               
               Changing this will create a new resource.
               
               > If `charging_mode` is set to **postPaid**, only `region`, `website`, `enterprise_project_id` can be specified.
               If `charging_mode` is set to **prePaid**, `website` cannot be specified.
               The postpaid charging mode is only applicable to Huawei Cloud International website.
        :param pulumi.Input[Union['CloudInstanceDomainExpackProductArgs', 'CloudInstanceDomainExpackProductArgsDict']] domain_expack_product: Specifies the configuration of the domain extended packages.
               The domain_expack_product structure is documented below.
               
               This parameter takes effect only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project to which the cloud
               WAF belongs. For enterprise users, if omitted, default enterprise project will be used.
               
               <a name="extended_packages"></a>
               The `bandwidth_expack_product`, `domain_expack_product` or `rule_expack_product` block supports:
        :param pulumi.Input[_builtins.int] period: Specifies the charging period of the cloud WAF.
               If `period_unit` is set to **month**, the value ranges from `1` to `9`.
               If `period_unit` is set to **year**, the value ranges from `1` to `3`.
               
               Changing this will create a new resource.
               
               This parameter is required when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the charging period unit of the cloud WAF.
               Valid values are **month** and **year**.
               
               Changing this will create a new resource.
               
               This parameter is required when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the cloud WAF is located.
               If omitted, the provider-level region will be used.
               
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] resource_spec_code: Specifies the specification of the cloud WAF.
               The valid values are as follows:
               + **detection**: Introduction edition.
               + **professional**: Standard edition.
               + **enterprise**: Professional edition.
               + **ultimate**: Platinum edition.
               
               This parameter is required when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[Union['CloudInstanceRuleExpackProductArgs', 'CloudInstanceRuleExpackProductArgsDict']] rule_expack_product: Specifies the configuration of the rule extended packages.
               The rule_expack_product structure is documented below.
               
               This parameter takes effect only when `charging_mode` is set to **prePaid**.
               
               > The specification code '**detection**' does not support extended packages.
        :param pulumi.Input[_builtins.str] website: Specifies the website to which the account belongs. Valid value is **hec-hk**.
               
               This parameter is required when `charging_mode` is set to **postPaid**.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CloudInstanceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Using this resource to manage a cloud WAF in HuaweiCloud.

        ## Example Usage

        ### Prepaid cloud WAF

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        enterprise_project_id = config.require_object("enterpriseProjectId")
        test = huaweicloud.waf.CloudInstance("test",
            resource_spec_code="professional",
            bandwidth_expack_product={
                "resource_size": 1,
            },
            domain_expack_product={
                "resource_size": 1,
            },
            rule_expack_product={
                "resource_size": 1,
            },
            charging_mode="prePaid",
            period_unit="month",
            period=1,
            auto_renew="true",
            enterprise_project_id=enterprise_project_id)
        ```

        ### Postpaid cloud WAF (Currently only applicable to HuaweiCloud International website)

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        enterprise_project_id = config.require_object("enterpriseProjectId")
        test = huaweicloud.waf.CloudInstance("test",
            charging_mode="postPaid",
            website="hec-hk",
            enterprise_project_id=enterprise_project_id)
        ```

        ## Import

        There are two ways to import WAF cloud instance state.

        * Using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Waf/cloudInstance:CloudInstance test <id>
        ```

        * Using `id` and `enterprise_project_id`, separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Waf/cloudInstance:CloudInstance test <id>/<enterprise_project_id>
        ```

        Note that the imported state is not identical to your resource definition, due to API response reason.

        For prepaid cloud WAF, the missing attributes include `enterprise_project_id`, `period_unit`, `period` and `auto_renew`.

        You can ignore changes as below.

        hcl

        resource "huaweicloud_waf_cloud_instance" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              enterprise_project_id,
            
              period_unit,
            
              period,
            
              auto_renew,
            
            ]

          }

        }

        For postPaid cloud WAF, the missing attributes include `enterprise_project_id` and `website`.

        You can ignore changes as below.

        hcl

        resource "huaweicloud_waf_cloud_instance" "test" {

          ...

          lifecycle {

            ignore_changes = [
            
              enterprise_project_id,
            
              website,
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param CloudInstanceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CloudInstanceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth_expack_product: Optional[pulumi.Input[Union['CloudInstanceBandwidthExpackProductArgs', 'CloudInstanceBandwidthExpackProductArgsDict']]] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_expack_product: Optional[pulumi.Input[Union['CloudInstanceDomainExpackProductArgs', 'CloudInstanceDomainExpackProductArgsDict']]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_spec_code: Optional[pulumi.Input[_builtins.str]] = None,
                 rule_expack_product: Optional[pulumi.Input[Union['CloudInstanceRuleExpackProductArgs', 'CloudInstanceRuleExpackProductArgsDict']]] = None,
                 website: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CloudInstanceArgs.__new__(CloudInstanceArgs)

            __props__.__dict__["auto_renew"] = auto_renew
            __props__.__dict__["bandwidth_expack_product"] = bandwidth_expack_product
            if charging_mode is None and not opts.urn:
                raise TypeError("Missing required property 'charging_mode'")
            __props__.__dict__["charging_mode"] = charging_mode
            __props__.__dict__["domain_expack_product"] = domain_expack_product
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            __props__.__dict__["period"] = period
            __props__.__dict__["period_unit"] = period_unit
            __props__.__dict__["region"] = region
            __props__.__dict__["resource_spec_code"] = resource_spec_code
            __props__.__dict__["rule_expack_product"] = rule_expack_product
            __props__.__dict__["website"] = website
            __props__.__dict__["status"] = None
        super(CloudInstance, __self__).__init__(
            'huaweicloud:Waf/cloudInstance:CloudInstance',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
            bandwidth_expack_product: Optional[pulumi.Input[Union['CloudInstanceBandwidthExpackProductArgs', 'CloudInstanceBandwidthExpackProductArgsDict']]] = None,
            charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
            domain_expack_product: Optional[pulumi.Input[Union['CloudInstanceDomainExpackProductArgs', 'CloudInstanceDomainExpackProductArgsDict']]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            period: Optional[pulumi.Input[_builtins.int]] = None,
            period_unit: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            resource_spec_code: Optional[pulumi.Input[_builtins.str]] = None,
            rule_expack_product: Optional[pulumi.Input[Union['CloudInstanceRuleExpackProductArgs', 'CloudInstanceRuleExpackProductArgsDict']]] = None,
            status: Optional[pulumi.Input[_builtins.int]] = None,
            website: Optional[pulumi.Input[_builtins.str]] = None) -> 'CloudInstance':
        """
        Get an existing CloudInstance resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether auto-renew is enabled.
               Valid values are **true** and **false**.
               
               This parameter takes effect only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[Union['CloudInstanceBandwidthExpackProductArgs', 'CloudInstanceBandwidthExpackProductArgsDict']] bandwidth_expack_product: Specifies the configuration of the bandwidth extended packages.
               The bandwidth_expack_product structure is documented below.
               
               This parameter takes effect only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode of the cloud WAF.
               The valid values are **postPaid** and **prePaid** (the yearly/monthly billing mode).
               
               Changing this will create a new resource.
               
               > If `charging_mode` is set to **postPaid**, only `region`, `website`, `enterprise_project_id` can be specified.
               If `charging_mode` is set to **prePaid**, `website` cannot be specified.
               The postpaid charging mode is only applicable to Huawei Cloud International website.
        :param pulumi.Input[Union['CloudInstanceDomainExpackProductArgs', 'CloudInstanceDomainExpackProductArgsDict']] domain_expack_product: Specifies the configuration of the domain extended packages.
               The domain_expack_product structure is documented below.
               
               This parameter takes effect only when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the ID of the enterprise project to which the cloud
               WAF belongs. For enterprise users, if omitted, default enterprise project will be used.
               
               <a name="extended_packages"></a>
               The `bandwidth_expack_product`, `domain_expack_product` or `rule_expack_product` block supports:
        :param pulumi.Input[_builtins.int] period: Specifies the charging period of the cloud WAF.
               If `period_unit` is set to **month**, the value ranges from `1` to `9`.
               If `period_unit` is set to **year**, the value ranges from `1` to `3`.
               
               Changing this will create a new resource.
               
               This parameter is required when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the charging period unit of the cloud WAF.
               Valid values are **month** and **year**.
               
               Changing this will create a new resource.
               
               This parameter is required when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the cloud WAF is located.
               If omitted, the provider-level region will be used.
               
               Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] resource_spec_code: Specifies the specification of the cloud WAF.
               The valid values are as follows:
               + **detection**: Introduction edition.
               + **professional**: Standard edition.
               + **enterprise**: Professional edition.
               + **ultimate**: Platinum edition.
               
               This parameter is required when `charging_mode` is set to **prePaid**.
        :param pulumi.Input[Union['CloudInstanceRuleExpackProductArgs', 'CloudInstanceRuleExpackProductArgsDict']] rule_expack_product: Specifies the configuration of the rule extended packages.
               The rule_expack_product structure is documented below.
               
               This parameter takes effect only when `charging_mode` is set to **prePaid**.
               
               > The specification code '**detection**' does not support extended packages.
        :param pulumi.Input[_builtins.int] status: The current status of the cloud WAF.
        :param pulumi.Input[_builtins.str] website: Specifies the website to which the account belongs. Valid value is **hec-hk**.
               
               This parameter is required when `charging_mode` is set to **postPaid**.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CloudInstanceState.__new__(_CloudInstanceState)

        __props__.__dict__["auto_renew"] = auto_renew
        __props__.__dict__["bandwidth_expack_product"] = bandwidth_expack_product
        __props__.__dict__["charging_mode"] = charging_mode
        __props__.__dict__["domain_expack_product"] = domain_expack_product
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["period"] = period
        __props__.__dict__["period_unit"] = period_unit
        __props__.__dict__["region"] = region
        __props__.__dict__["resource_spec_code"] = resource_spec_code
        __props__.__dict__["rule_expack_product"] = rule_expack_product
        __props__.__dict__["status"] = status
        __props__.__dict__["website"] = website
        return CloudInstance(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies whether auto-renew is enabled.
        Valid values are **true** and **false**.

        This parameter takes effect only when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "auto_renew")

    @_builtins.property
    @pulumi.getter(name="bandwidthExpackProduct")
    def bandwidth_expack_product(self) -> pulumi.Output['outputs.CloudInstanceBandwidthExpackProduct']:
        """
        Specifies the configuration of the bandwidth extended packages.
        The bandwidth_expack_product structure is documented below.

        This parameter takes effect only when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "bandwidth_expack_product")

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the charging mode of the cloud WAF.
        The valid values are **postPaid** and **prePaid** (the yearly/monthly billing mode).

        Changing this will create a new resource.

        > If `charging_mode` is set to **postPaid**, only `region`, `website`, `enterprise_project_id` can be specified.
        If `charging_mode` is set to **prePaid**, `website` cannot be specified.
        The postpaid charging mode is only applicable to Huawei Cloud International website.
        """
        return pulumi.get(self, "charging_mode")

    @_builtins.property
    @pulumi.getter(name="domainExpackProduct")
    def domain_expack_product(self) -> pulumi.Output['outputs.CloudInstanceDomainExpackProduct']:
        """
        Specifies the configuration of the domain extended packages.
        The domain_expack_product structure is documented below.

        This parameter takes effect only when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "domain_expack_product")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the ID of the enterprise project to which the cloud
        WAF belongs. For enterprise users, if omitted, default enterprise project will be used.

        <a name="extended_packages"></a>
        The `bandwidth_expack_product`, `domain_expack_product` or `rule_expack_product` block supports:
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def period(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        Specifies the charging period of the cloud WAF.
        If `period_unit` is set to **month**, the value ranges from `1` to `9`.
        If `period_unit` is set to **year**, the value ranges from `1` to `3`.

        Changing this will create a new resource.

        This parameter is required when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "period")

    @_builtins.property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the charging period unit of the cloud WAF.
        Valid values are **month** and **year**.

        Changing this will create a new resource.

        This parameter is required when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "period_unit")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region where the cloud WAF is located.
        If omitted, the provider-level region will be used.

        Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="resourceSpecCode")
    def resource_spec_code(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the specification of the cloud WAF.
        The valid values are as follows:
        + **detection**: Introduction edition.
        + **professional**: Standard edition.
        + **enterprise**: Professional edition.
        + **ultimate**: Platinum edition.

        This parameter is required when `charging_mode` is set to **prePaid**.
        """
        return pulumi.get(self, "resource_spec_code")

    @_builtins.property
    @pulumi.getter(name="ruleExpackProduct")
    def rule_expack_product(self) -> pulumi.Output['outputs.CloudInstanceRuleExpackProduct']:
        """
        Specifies the configuration of the rule extended packages.
        The rule_expack_product structure is documented below.

        This parameter takes effect only when `charging_mode` is set to **prePaid**.

        > The specification code '**detection**' does not support extended packages.
        """
        return pulumi.get(self, "rule_expack_product")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.int]:
        """
        The current status of the cloud WAF.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def website(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the website to which the account belongs. Valid value is **hec-hk**.

        This parameter is required when `charging_mode` is set to **postPaid**.
        """
        return pulumi.get(self, "website")

