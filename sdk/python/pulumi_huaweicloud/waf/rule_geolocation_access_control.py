# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['RuleGeolocationAccessControlArgs', 'RuleGeolocationAccessControl']

@pulumi.input_type
class RuleGeolocationAccessControlArgs:
    def __init__(__self__, *,
                 action: pulumi.Input[_builtins.int],
                 geolocation: pulumi.Input[_builtins.str],
                 policy_id: pulumi.Input[_builtins.str],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.int]] = None):
        """
        The set of arguments for constructing a RuleGeolocationAccessControl resource.
        :param pulumi.Input[_builtins.int] action: Specifies the protective action of WAF geolocation access control rule.
               Valid values are as follows:
        :param pulumi.Input[_builtins.str] geolocation: Specifies the locations that can be configured in the geolocation access control
               rule. Separate multiple locations with vertical lines, such as **FJ|JL|LN|GZ**.
               
               Valid locations are as follows:
               **CN**: China, **CA**: Canada, **US**: The United States, **AU**: Australia, **IN**: India, **JP**: Japan,
               **UK**: United Kingdom, **FR**: France, **DE**: Germany, **BR**: Brazil, **Thailand**: Thailand,
               **Singapore**: Singapore,**South Africa**: South Africa, **Mexico**: Mexico, **Peru**: Peru, **Indonesia**: Indonesia,
               **GD**: Guangdong, **FJ**: Fujian, **JL**: Jilin, **LN**: Liaoning, **TW**: Taiwan SAR, China,**GZ**: Guizhou,
               **AH**: Anhui, **HL**: Heilongjiang, **HA**: Henan, **SC**: Sichuan, **HE**: Hebei, **YN**: Yunnan, **HB**: Hubei,
               **HI**: Hainan, **QH**: Qinghai, **HN**: Hunan, **JX**: Jiangxi, **SX**: Shanxi, **SN**: Shaanxi, **ZJ**: Zhejiang,
               **GS**: Gansu, **JS**: Jiangsu, **SD**: Shandong, **BJ**: Beijing, **SH**: Shanghai, **TJ**: Tianjin,
               **CQ**: Chongqing, **MO**: Macao SAR, China, **HK**: Hong Kong SAR, China, **NX**: Ningxia, **GX**: Guangxi,
               **XJ**: Xinjiang, **XZ**: Tibet, **NM**: Inner Mongolia.
        :param pulumi.Input[_builtins.str] policy_id: Specifies the policy ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] description: Specifies the description of WAF geolocation access control rule.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID of WAF geolocation access
               control rule. For enterprise users, if omitted, default enterprise project will be used.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] name: Specifies the name of WAF geolocation access control rule. This parameter can contain a
               maximum of `128` characters. Only letters, digits, hyphens (-), underscores (_), colons (:) and periods (.) are allowed.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] status: Specifies the status of WAF geolocation access control rule.
               Valid values are as follows:
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "geolocation", geolocation)
        pulumi.set(__self__, "policy_id", policy_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if status is not None:
            pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter
    def action(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the protective action of WAF geolocation access control rule.
        Valid values are as follows:
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "action", value)

    @_builtins.property
    @pulumi.getter
    def geolocation(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the locations that can be configured in the geolocation access control
        rule. Separate multiple locations with vertical lines, such as **FJ|JL|LN|GZ**.

        Valid locations are as follows:
        **CN**: China, **CA**: Canada, **US**: The United States, **AU**: Australia, **IN**: India, **JP**: Japan,
        **UK**: United Kingdom, **FR**: France, **DE**: Germany, **BR**: Brazil, **Thailand**: Thailand,
        **Singapore**: Singapore,**South Africa**: South Africa, **Mexico**: Mexico, **Peru**: Peru, **Indonesia**: Indonesia,
        **GD**: Guangdong, **FJ**: Fujian, **JL**: Jilin, **LN**: Liaoning, **TW**: Taiwan SAR, China,**GZ**: Guizhou,
        **AH**: Anhui, **HL**: Heilongjiang, **HA**: Henan, **SC**: Sichuan, **HE**: Hebei, **YN**: Yunnan, **HB**: Hubei,
        **HI**: Hainan, **QH**: Qinghai, **HN**: Hunan, **JX**: Jiangxi, **SX**: Shanxi, **SN**: Shaanxi, **ZJ**: Zhejiang,
        **GS**: Gansu, **JS**: Jiangsu, **SD**: Shandong, **BJ**: Beijing, **SH**: Shanghai, **TJ**: Tianjin,
        **CQ**: Chongqing, **MO**: Macao SAR, China, **HK**: Hong Kong SAR, China, **NX**: Ningxia, **GX**: Guangxi,
        **XJ**: Xinjiang, **XZ**: Tibet, **NM**: Inner Mongolia.
        """
        return pulumi.get(self, "geolocation")

    @geolocation.setter
    def geolocation(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "geolocation", value)

    @_builtins.property
    @pulumi.getter(name="policyId")
    def policy_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the policy ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "policy_id")

    @policy_id.setter
    def policy_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "policy_id", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of WAF geolocation access control rule.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID of WAF geolocation access
        control rule. For enterprise users, if omitted, default enterprise project will be used.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of WAF geolocation access control rule. This parameter can contain a
        maximum of `128` characters. Only letters, digits, hyphens (-), underscores (_), colons (:) and periods (.) are allowed.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the status of WAF geolocation access control rule.
        Valid values are as follows:
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "status", value)


@pulumi.input_type
class _RuleGeolocationAccessControlState:
    def __init__(__self__, *,
                 action: Optional[pulumi.Input[_builtins.int]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 geolocation: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.int]] = None):
        """
        Input properties used for looking up and filtering RuleGeolocationAccessControl resources.
        :param pulumi.Input[_builtins.int] action: Specifies the protective action of WAF geolocation access control rule.
               Valid values are as follows:
        :param pulumi.Input[_builtins.str] description: Specifies the description of WAF geolocation access control rule.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID of WAF geolocation access
               control rule. For enterprise users, if omitted, default enterprise project will be used.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] geolocation: Specifies the locations that can be configured in the geolocation access control
               rule. Separate multiple locations with vertical lines, such as **FJ|JL|LN|GZ**.
               
               Valid locations are as follows:
               **CN**: China, **CA**: Canada, **US**: The United States, **AU**: Australia, **IN**: India, **JP**: Japan,
               **UK**: United Kingdom, **FR**: France, **DE**: Germany, **BR**: Brazil, **Thailand**: Thailand,
               **Singapore**: Singapore,**South Africa**: South Africa, **Mexico**: Mexico, **Peru**: Peru, **Indonesia**: Indonesia,
               **GD**: Guangdong, **FJ**: Fujian, **JL**: Jilin, **LN**: Liaoning, **TW**: Taiwan SAR, China,**GZ**: Guizhou,
               **AH**: Anhui, **HL**: Heilongjiang, **HA**: Henan, **SC**: Sichuan, **HE**: Hebei, **YN**: Yunnan, **HB**: Hubei,
               **HI**: Hainan, **QH**: Qinghai, **HN**: Hunan, **JX**: Jiangxi, **SX**: Shanxi, **SN**: Shaanxi, **ZJ**: Zhejiang,
               **GS**: Gansu, **JS**: Jiangsu, **SD**: Shandong, **BJ**: Beijing, **SH**: Shanghai, **TJ**: Tianjin,
               **CQ**: Chongqing, **MO**: Macao SAR, China, **HK**: Hong Kong SAR, China, **NX**: Ningxia, **GX**: Guangxi,
               **XJ**: Xinjiang, **XZ**: Tibet, **NM**: Inner Mongolia.
        :param pulumi.Input[_builtins.str] name: Specifies the name of WAF geolocation access control rule. This parameter can contain a
               maximum of `128` characters. Only letters, digits, hyphens (-), underscores (_), colons (:) and periods (.) are allowed.
        :param pulumi.Input[_builtins.str] policy_id: Specifies the policy ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] status: Specifies the status of WAF geolocation access control rule.
               Valid values are as follows:
        """
        if action is not None:
            pulumi.set(__self__, "action", action)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if geolocation is not None:
            pulumi.set(__self__, "geolocation", geolocation)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if policy_id is not None:
            pulumi.set(__self__, "policy_id", policy_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if status is not None:
            pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter
    def action(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the protective action of WAF geolocation access control rule.
        Valid values are as follows:
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "action", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of WAF geolocation access control rule.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID of WAF geolocation access
        control rule. For enterprise users, if omitted, default enterprise project will be used.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter
    def geolocation(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the locations that can be configured in the geolocation access control
        rule. Separate multiple locations with vertical lines, such as **FJ|JL|LN|GZ**.

        Valid locations are as follows:
        **CN**: China, **CA**: Canada, **US**: The United States, **AU**: Australia, **IN**: India, **JP**: Japan,
        **UK**: United Kingdom, **FR**: France, **DE**: Germany, **BR**: Brazil, **Thailand**: Thailand,
        **Singapore**: Singapore,**South Africa**: South Africa, **Mexico**: Mexico, **Peru**: Peru, **Indonesia**: Indonesia,
        **GD**: Guangdong, **FJ**: Fujian, **JL**: Jilin, **LN**: Liaoning, **TW**: Taiwan SAR, China,**GZ**: Guizhou,
        **AH**: Anhui, **HL**: Heilongjiang, **HA**: Henan, **SC**: Sichuan, **HE**: Hebei, **YN**: Yunnan, **HB**: Hubei,
        **HI**: Hainan, **QH**: Qinghai, **HN**: Hunan, **JX**: Jiangxi, **SX**: Shanxi, **SN**: Shaanxi, **ZJ**: Zhejiang,
        **GS**: Gansu, **JS**: Jiangsu, **SD**: Shandong, **BJ**: Beijing, **SH**: Shanghai, **TJ**: Tianjin,
        **CQ**: Chongqing, **MO**: Macao SAR, China, **HK**: Hong Kong SAR, China, **NX**: Ningxia, **GX**: Guangxi,
        **XJ**: Xinjiang, **XZ**: Tibet, **NM**: Inner Mongolia.
        """
        return pulumi.get(self, "geolocation")

    @geolocation.setter
    def geolocation(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "geolocation", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of WAF geolocation access control rule. This parameter can contain a
        maximum of `128` characters. Only letters, digits, hyphens (-), underscores (_), colons (:) and periods (.) are allowed.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="policyId")
    def policy_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the policy ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "policy_id")

    @policy_id.setter
    def policy_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "policy_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the status of WAF geolocation access control rule.
        Valid values are as follows:
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "status", value)


@pulumi.type_token("huaweicloud:Waf/ruleGeolocationAccessControl:RuleGeolocationAccessControl")
class RuleGeolocationAccessControl(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[_builtins.int]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 geolocation: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        """
        Manages a WAF rule geolocation access control resource within HuaweiCloud.

        > **NOTE:** All WAF resources depend on WAF instances, and the WAF instances need to be purchased before they can be
        used. The geolocation access control rule resource can be used in Cloud Mode and Dedicated Mode.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        policy_id = config.require_object("policyId")
        enterprise_project_id = config.require_object("enterpriseProjectId")
        test = huaweicloud.waf.RuleGeolocationAccessControl("test",
            policy_id=policy_id,
            enterprise_project_id=enterprise_project_id,
            name="test_rule",
            geolocation="FJ|JL|LN|GZ",
            action=1,
            description="test description")
        ```

        ## Import

        There are two ways to import WAF rule geolocation access control state.

        * Using `policy_id` and `rule_id`, separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Waf/ruleGeolocationAccessControl:RuleGeolocationAccessControl test <policy_id>/<rule_id>
        ```

        * Using `policy_id`, `rule_id` and `enterprise_project_id`, separated by slashes, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Waf/ruleGeolocationAccessControl:RuleGeolocationAccessControl test <policy_id>/<rule_id>/<enterprise_project_id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.int] action: Specifies the protective action of WAF geolocation access control rule.
               Valid values are as follows:
        :param pulumi.Input[_builtins.str] description: Specifies the description of WAF geolocation access control rule.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID of WAF geolocation access
               control rule. For enterprise users, if omitted, default enterprise project will be used.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] geolocation: Specifies the locations that can be configured in the geolocation access control
               rule. Separate multiple locations with vertical lines, such as **FJ|JL|LN|GZ**.
               
               Valid locations are as follows:
               **CN**: China, **CA**: Canada, **US**: The United States, **AU**: Australia, **IN**: India, **JP**: Japan,
               **UK**: United Kingdom, **FR**: France, **DE**: Germany, **BR**: Brazil, **Thailand**: Thailand,
               **Singapore**: Singapore,**South Africa**: South Africa, **Mexico**: Mexico, **Peru**: Peru, **Indonesia**: Indonesia,
               **GD**: Guangdong, **FJ**: Fujian, **JL**: Jilin, **LN**: Liaoning, **TW**: Taiwan SAR, China,**GZ**: Guizhou,
               **AH**: Anhui, **HL**: Heilongjiang, **HA**: Henan, **SC**: Sichuan, **HE**: Hebei, **YN**: Yunnan, **HB**: Hubei,
               **HI**: Hainan, **QH**: Qinghai, **HN**: Hunan, **JX**: Jiangxi, **SX**: Shanxi, **SN**: Shaanxi, **ZJ**: Zhejiang,
               **GS**: Gansu, **JS**: Jiangsu, **SD**: Shandong, **BJ**: Beijing, **SH**: Shanghai, **TJ**: Tianjin,
               **CQ**: Chongqing, **MO**: Macao SAR, China, **HK**: Hong Kong SAR, China, **NX**: Ningxia, **GX**: Guangxi,
               **XJ**: Xinjiang, **XZ**: Tibet, **NM**: Inner Mongolia.
        :param pulumi.Input[_builtins.str] name: Specifies the name of WAF geolocation access control rule. This parameter can contain a
               maximum of `128` characters. Only letters, digits, hyphens (-), underscores (_), colons (:) and periods (.) are allowed.
        :param pulumi.Input[_builtins.str] policy_id: Specifies the policy ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] status: Specifies the status of WAF geolocation access control rule.
               Valid values are as follows:
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RuleGeolocationAccessControlArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a WAF rule geolocation access control resource within HuaweiCloud.

        > **NOTE:** All WAF resources depend on WAF instances, and the WAF instances need to be purchased before they can be
        used. The geolocation access control rule resource can be used in Cloud Mode and Dedicated Mode.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        policy_id = config.require_object("policyId")
        enterprise_project_id = config.require_object("enterpriseProjectId")
        test = huaweicloud.waf.RuleGeolocationAccessControl("test",
            policy_id=policy_id,
            enterprise_project_id=enterprise_project_id,
            name="test_rule",
            geolocation="FJ|JL|LN|GZ",
            action=1,
            description="test description")
        ```

        ## Import

        There are two ways to import WAF rule geolocation access control state.

        * Using `policy_id` and `rule_id`, separated by a slash, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Waf/ruleGeolocationAccessControl:RuleGeolocationAccessControl test <policy_id>/<rule_id>
        ```

        * Using `policy_id`, `rule_id` and `enterprise_project_id`, separated by slashes, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Waf/ruleGeolocationAccessControl:RuleGeolocationAccessControl test <policy_id>/<rule_id>/<enterprise_project_id>
        ```

        :param str resource_name: The name of the resource.
        :param RuleGeolocationAccessControlArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RuleGeolocationAccessControlArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[_builtins.int]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 geolocation: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 policy_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RuleGeolocationAccessControlArgs.__new__(RuleGeolocationAccessControlArgs)

            if action is None and not opts.urn:
                raise TypeError("Missing required property 'action'")
            __props__.__dict__["action"] = action
            __props__.__dict__["description"] = description
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            if geolocation is None and not opts.urn:
                raise TypeError("Missing required property 'geolocation'")
            __props__.__dict__["geolocation"] = geolocation
            __props__.__dict__["name"] = name
            if policy_id is None and not opts.urn:
                raise TypeError("Missing required property 'policy_id'")
            __props__.__dict__["policy_id"] = policy_id
            __props__.__dict__["region"] = region
            __props__.__dict__["status"] = status
        super(RuleGeolocationAccessControl, __self__).__init__(
            'huaweicloud:Waf/ruleGeolocationAccessControl:RuleGeolocationAccessControl',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            action: Optional[pulumi.Input[_builtins.int]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            geolocation: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            policy_id: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.int]] = None) -> 'RuleGeolocationAccessControl':
        """
        Get an existing RuleGeolocationAccessControl resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.int] action: Specifies the protective action of WAF geolocation access control rule.
               Valid values are as follows:
        :param pulumi.Input[_builtins.str] description: Specifies the description of WAF geolocation access control rule.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID of WAF geolocation access
               control rule. For enterprise users, if omitted, default enterprise project will be used.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] geolocation: Specifies the locations that can be configured in the geolocation access control
               rule. Separate multiple locations with vertical lines, such as **FJ|JL|LN|GZ**.
               
               Valid locations are as follows:
               **CN**: China, **CA**: Canada, **US**: The United States, **AU**: Australia, **IN**: India, **JP**: Japan,
               **UK**: United Kingdom, **FR**: France, **DE**: Germany, **BR**: Brazil, **Thailand**: Thailand,
               **Singapore**: Singapore,**South Africa**: South Africa, **Mexico**: Mexico, **Peru**: Peru, **Indonesia**: Indonesia,
               **GD**: Guangdong, **FJ**: Fujian, **JL**: Jilin, **LN**: Liaoning, **TW**: Taiwan SAR, China,**GZ**: Guizhou,
               **AH**: Anhui, **HL**: Heilongjiang, **HA**: Henan, **SC**: Sichuan, **HE**: Hebei, **YN**: Yunnan, **HB**: Hubei,
               **HI**: Hainan, **QH**: Qinghai, **HN**: Hunan, **JX**: Jiangxi, **SX**: Shanxi, **SN**: Shaanxi, **ZJ**: Zhejiang,
               **GS**: Gansu, **JS**: Jiangsu, **SD**: Shandong, **BJ**: Beijing, **SH**: Shanghai, **TJ**: Tianjin,
               **CQ**: Chongqing, **MO**: Macao SAR, China, **HK**: Hong Kong SAR, China, **NX**: Ningxia, **GX**: Guangxi,
               **XJ**: Xinjiang, **XZ**: Tibet, **NM**: Inner Mongolia.
        :param pulumi.Input[_builtins.str] name: Specifies the name of WAF geolocation access control rule. This parameter can contain a
               maximum of `128` characters. Only letters, digits, hyphens (-), underscores (_), colons (:) and periods (.) are allowed.
        :param pulumi.Input[_builtins.str] policy_id: Specifies the policy ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] status: Specifies the status of WAF geolocation access control rule.
               Valid values are as follows:
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RuleGeolocationAccessControlState.__new__(_RuleGeolocationAccessControlState)

        __props__.__dict__["action"] = action
        __props__.__dict__["description"] = description
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["geolocation"] = geolocation
        __props__.__dict__["name"] = name
        __props__.__dict__["policy_id"] = policy_id
        __props__.__dict__["region"] = region
        __props__.__dict__["status"] = status
        return RuleGeolocationAccessControl(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def action(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the protective action of WAF geolocation access control rule.
        Valid values are as follows:
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the description of WAF geolocation access control rule.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the enterprise project ID of WAF geolocation access
        control rule. For enterprise users, if omitted, default enterprise project will be used.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def geolocation(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the locations that can be configured in the geolocation access control
        rule. Separate multiple locations with vertical lines, such as **FJ|JL|LN|GZ**.

        Valid locations are as follows:
        **CN**: China, **CA**: Canada, **US**: The United States, **AU**: Australia, **IN**: India, **JP**: Japan,
        **UK**: United Kingdom, **FR**: France, **DE**: Germany, **BR**: Brazil, **Thailand**: Thailand,
        **Singapore**: Singapore,**South Africa**: South Africa, **Mexico**: Mexico, **Peru**: Peru, **Indonesia**: Indonesia,
        **GD**: Guangdong, **FJ**: Fujian, **JL**: Jilin, **LN**: Liaoning, **TW**: Taiwan SAR, China,**GZ**: Guizhou,
        **AH**: Anhui, **HL**: Heilongjiang, **HA**: Henan, **SC**: Sichuan, **HE**: Hebei, **YN**: Yunnan, **HB**: Hubei,
        **HI**: Hainan, **QH**: Qinghai, **HN**: Hunan, **JX**: Jiangxi, **SX**: Shanxi, **SN**: Shaanxi, **ZJ**: Zhejiang,
        **GS**: Gansu, **JS**: Jiangsu, **SD**: Shandong, **BJ**: Beijing, **SH**: Shanghai, **TJ**: Tianjin,
        **CQ**: Chongqing, **MO**: Macao SAR, China, **HK**: Hong Kong SAR, China, **NX**: Ningxia, **GX**: Guangxi,
        **XJ**: Xinjiang, **XZ**: Tibet, **NM**: Inner Mongolia.
        """
        return pulumi.get(self, "geolocation")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of WAF geolocation access control rule. This parameter can contain a
        maximum of `128` characters. Only letters, digits, hyphens (-), underscores (_), colons (:) and periods (.) are allowed.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="policyId")
    def policy_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the policy ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "policy_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        Specifies the status of WAF geolocation access control rule.
        Valid values are as follows:
        """
        return pulumi.get(self, "status")

