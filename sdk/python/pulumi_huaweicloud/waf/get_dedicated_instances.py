# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetDedicatedInstancesResult',
    'AwaitableGetDedicatedInstancesResult',
    'get_dedicated_instances',
    'get_dedicated_instances_output',
]

@pulumi.output_type
class GetDedicatedInstancesResult:
    """
    A collection of values returned by getDedicatedInstances.
    """
    def __init__(__self__, enterprise_project_id=None, id=None, instances=None, name=None, region=None):
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instances and not isinstance(instances, list):
            raise TypeError("Expected argument 'instances' to be a list")
        pulumi.set(__self__, "instances", instances)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The ID of WAF dedicated instance.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def instances(self) -> Sequence['outputs.GetDedicatedInstancesInstanceResult']:
        """
        The WAF dedicated instances list.
        """
        return pulumi.get(self, "instances")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The name of WAF dedicated instance.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetDedicatedInstancesResult(GetDedicatedInstancesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDedicatedInstancesResult(
            enterprise_project_id=self.enterprise_project_id,
            id=self.id,
            instances=self.instances,
            name=self.name,
            region=self.region)


def get_dedicated_instances(enterprise_project_id: Optional[_builtins.str] = None,
                            id: Optional[_builtins.str] = None,
                            name: Optional[_builtins.str] = None,
                            region: Optional[_builtins.str] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDedicatedInstancesResult:
    """
    Use this data source to get a list of WAF dedicated instances.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_name = config.require_object("instanceName")
    test = huaweicloud.Waf.get_dedicated_instances(name=instance_name)
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID of WAF dedicated instance.
           For enterprise users, if omitted, default enterprise project will be used.
    :param _builtins.str id: Specifies the ID of WAF dedicated instance.
    :param _builtins.str name: Specifies the name of WAF dedicated instance.
    :param _builtins.str region: Specifies the region in which to query the WAF dedicated instance.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['id'] = id
    __args__['name'] = name
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Waf/getDedicatedInstances:getDedicatedInstances', __args__, opts=opts, typ=GetDedicatedInstancesResult).value

    return AwaitableGetDedicatedInstancesResult(
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        id=pulumi.get(__ret__, 'id'),
        instances=pulumi.get(__ret__, 'instances'),
        name=pulumi.get(__ret__, 'name'),
        region=pulumi.get(__ret__, 'region'))
def get_dedicated_instances_output(enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                   id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                   name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                   region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                   opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetDedicatedInstancesResult]:
    """
    Use this data source to get a list of WAF dedicated instances.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_name = config.require_object("instanceName")
    test = huaweicloud.Waf.get_dedicated_instances(name=instance_name)
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID of WAF dedicated instance.
           For enterprise users, if omitted, default enterprise project will be used.
    :param _builtins.str id: Specifies the ID of WAF dedicated instance.
    :param _builtins.str name: Specifies the name of WAF dedicated instance.
    :param _builtins.str region: Specifies the region in which to query the WAF dedicated instance.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['id'] = id
    __args__['name'] = name
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Waf/getDedicatedInstances:getDedicatedInstances', __args__, opts=opts, typ=GetDedicatedInstancesResult)
    return __ret__.apply(lambda __response__: GetDedicatedInstancesResult(
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        id=pulumi.get(__response__, 'id'),
        instances=pulumi.get(__response__, 'instances'),
        name=pulumi.get(__response__, 'name'),
        region=pulumi.get(__response__, 'region')))
