# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetOverviewsStatisticsResult',
    'AwaitableGetOverviewsStatisticsResult',
    'get_overviews_statistics',
    'get_overviews_statistics_output',
]

@pulumi.output_type
class GetOverviewsStatisticsResult:
    """
    A collection of values returned by getOverviewsStatistics.
    """
    def __init__(__self__, enterprise_project_id=None, from_=None, hosts=None, id=None, instances=None, region=None, statistics=None, to=None):
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if from_ and not isinstance(from_, int):
            raise TypeError("Expected argument 'from_' to be a int")
        pulumi.set(__self__, "from_", from_)
        if hosts and not isinstance(hosts, str):
            raise TypeError("Expected argument 'hosts' to be a str")
        pulumi.set(__self__, "hosts", hosts)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instances and not isinstance(instances, str):
            raise TypeError("Expected argument 'instances' to be a str")
        pulumi.set(__self__, "instances", instances)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if statistics and not isinstance(statistics, list):
            raise TypeError("Expected argument 'statistics' to be a list")
        pulumi.set(__self__, "statistics", statistics)
        if to and not isinstance(to, int):
            raise TypeError("Expected argument 'to' to be a int")
        pulumi.set(__self__, "to", to)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="from")
    def from_(self) -> _builtins.int:
        return pulumi.get(self, "from_")

    @_builtins.property
    @pulumi.getter
    def hosts(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "hosts")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def instances(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "instances")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def statistics(self) -> Sequence['outputs.GetOverviewsStatisticsStatisticResult']:
        """
        The statistics about requests and attacks.
        """
        return pulumi.get(self, "statistics")

    @_builtins.property
    @pulumi.getter
    def to(self) -> _builtins.int:
        return pulumi.get(self, "to")


class AwaitableGetOverviewsStatisticsResult(GetOverviewsStatisticsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOverviewsStatisticsResult(
            enterprise_project_id=self.enterprise_project_id,
            from_=self.from_,
            hosts=self.hosts,
            id=self.id,
            instances=self.instances,
            region=self.region,
            statistics=self.statistics,
            to=self.to)


def get_overviews_statistics(enterprise_project_id: Optional[_builtins.str] = None,
                             from_: Optional[_builtins.int] = None,
                             hosts: Optional[_builtins.str] = None,
                             instances: Optional[_builtins.str] = None,
                             region: Optional[_builtins.str] = None,
                             to: Optional[_builtins.int] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOverviewsStatisticsResult:
    """
    Use this data source to query statistics of requests and attacks.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    start_time = config.require_object("startTime")
    end_time = config.require_object("endTime")
    test = huaweicloud.Waf.get_overviews_statistics(from_=start_time,
        to=end_time)
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.
           If you want to query resources under all enterprise projects, set this parameter to **all_granted_eps**.
    :param _builtins.int from_: Specifies the query start time.
           The format is 13-digit timestamp in millisecond.
    :param _builtins.str hosts: Specifies the ID of the domain.
    :param _builtins.str instances: Specifies the ID of the dedicated WAF instances.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.int to: Specifies the query end time.
           The format is 13-digit timestamp in millisecond.
           
           > The parameters `from` and `to` must be used together.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['from'] = from_
    __args__['hosts'] = hosts
    __args__['instances'] = instances
    __args__['region'] = region
    __args__['to'] = to
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Waf/getOverviewsStatistics:getOverviewsStatistics', __args__, opts=opts, typ=GetOverviewsStatisticsResult).value

    return AwaitableGetOverviewsStatisticsResult(
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        from_=pulumi.get(__ret__, 'from_'),
        hosts=pulumi.get(__ret__, 'hosts'),
        id=pulumi.get(__ret__, 'id'),
        instances=pulumi.get(__ret__, 'instances'),
        region=pulumi.get(__ret__, 'region'),
        statistics=pulumi.get(__ret__, 'statistics'),
        to=pulumi.get(__ret__, 'to'))
def get_overviews_statistics_output(enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    from_: Optional[pulumi.Input[_builtins.int]] = None,
                                    hosts: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    instances: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    to: Optional[pulumi.Input[_builtins.int]] = None,
                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetOverviewsStatisticsResult]:
    """
    Use this data source to query statistics of requests and attacks.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    start_time = config.require_object("startTime")
    end_time = config.require_object("endTime")
    test = huaweicloud.Waf.get_overviews_statistics(from_=start_time,
        to=end_time)
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.
           If you want to query resources under all enterprise projects, set this parameter to **all_granted_eps**.
    :param _builtins.int from_: Specifies the query start time.
           The format is 13-digit timestamp in millisecond.
    :param _builtins.str hosts: Specifies the ID of the domain.
    :param _builtins.str instances: Specifies the ID of the dedicated WAF instances.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.int to: Specifies the query end time.
           The format is 13-digit timestamp in millisecond.
           
           > The parameters `from` and `to` must be used together.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['from'] = from_
    __args__['hosts'] = hosts
    __args__['instances'] = instances
    __args__['region'] = region
    __args__['to'] = to
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Waf/getOverviewsStatistics:getOverviewsStatistics', __args__, opts=opts, typ=GetOverviewsStatisticsResult)
    return __ret__.apply(lambda __response__: GetOverviewsStatisticsResult(
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        from_=pulumi.get(__response__, 'from_'),
        hosts=pulumi.get(__response__, 'hosts'),
        id=pulumi.get(__response__, 'id'),
        instances=pulumi.get(__response__, 'instances'),
        region=pulumi.get(__response__, 'region'),
        statistics=pulumi.get(__response__, 'statistics'),
        to=pulumi.get(__response__, 'to')))
