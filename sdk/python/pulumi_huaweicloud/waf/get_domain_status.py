# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetDomainStatusResult',
    'AwaitableGetDomainStatusResult',
    'get_domain_status',
    'get_domain_status_output',
]

@pulumi.output_type
class GetDomainStatusResult:
    """
    A collection of values returned by getDomainStatus.
    """
    def __init__(__self__, host_id=None, id=None, name=None, region=None, status=None, waf_instance_id=None):
        if host_id and not isinstance(host_id, str):
            raise TypeError("Expected argument 'host_id' to be a str")
        pulumi.set(__self__, "host_id", host_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)
        if waf_instance_id and not isinstance(waf_instance_id, str):
            raise TypeError("Expected argument 'waf_instance_id' to be a str")
        pulumi.set(__self__, "waf_instance_id", waf_instance_id)

    @_builtins.property
    @pulumi.getter(name="hostId")
    def host_id(self) -> _builtins.str:
        return pulumi.get(self, "host_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The domain name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        The protection status of the domain.
        The value can be **enabled**, **disabled**, or **bypassed**.
        + **enabled**: The WAF protection is enabled. WAF detects attacks based on the policy you configure.
        + **disabled**: The WAF protection is suspended. WAF only forwards requests destined for the domain and does not
        detect attacks.
        + **bypassed**: The WAF protection is bypassed. Requests of the domain are directly sent to the backend server and
        do not pass through WAF.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="wafInstanceId")
    def waf_instance_id(self) -> _builtins.str:
        """
        The domain ID.
        """
        return pulumi.get(self, "waf_instance_id")


class AwaitableGetDomainStatusResult(GetDomainStatusResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDomainStatusResult(
            host_id=self.host_id,
            id=self.id,
            name=self.name,
            region=self.region,
            status=self.status,
            waf_instance_id=self.waf_instance_id)


def get_domain_status(host_id: Optional[_builtins.str] = None,
                      region: Optional[_builtins.str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDomainStatusResult:
    """
    Use this data source to query the domain running status information.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    domain_id = config.require_object("domainId")
    test = huaweicloud.Waf.get_domain_status(host_id=domain_id)
    ```


    :param _builtins.str host_id: Specifies the domain ID.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['hostId'] = host_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Waf/getDomainStatus:getDomainStatus', __args__, opts=opts, typ=GetDomainStatusResult).value

    return AwaitableGetDomainStatusResult(
        host_id=pulumi.get(__ret__, 'host_id'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        region=pulumi.get(__ret__, 'region'),
        status=pulumi.get(__ret__, 'status'),
        waf_instance_id=pulumi.get(__ret__, 'waf_instance_id'))
def get_domain_status_output(host_id: Optional[pulumi.Input[_builtins.str]] = None,
                             region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                             opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetDomainStatusResult]:
    """
    Use this data source to query the domain running status information.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    domain_id = config.require_object("domainId")
    test = huaweicloud.Waf.get_domain_status(host_id=domain_id)
    ```


    :param _builtins.str host_id: Specifies the domain ID.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['hostId'] = host_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Waf/getDomainStatus:getDomainStatus', __args__, opts=opts, typ=GetDomainStatusResult)
    return __ret__.apply(lambda __response__: GetDomainStatusResult(
        host_id=pulumi.get(__response__, 'host_id'),
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        region=pulumi.get(__response__, 'region'),
        status=pulumi.get(__response__, 'status'),
        waf_instance_id=pulumi.get(__response__, 'waf_instance_id')))
