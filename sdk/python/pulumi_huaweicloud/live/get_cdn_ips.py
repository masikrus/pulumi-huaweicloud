# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetCdnIpsResult',
    'AwaitableGetCdnIpsResult',
    'get_cdn_ips',
    'get_cdn_ips_output',
]

@pulumi.output_type
class GetCdnIpsResult:
    """
    A collection of values returned by getCdnIps.
    """
    def __init__(__self__, cdn_ips=None, id=None, ip_addresses=None, region=None):
        if cdn_ips and not isinstance(cdn_ips, list):
            raise TypeError("Expected argument 'cdn_ips' to be a list")
        pulumi.set(__self__, "cdn_ips", cdn_ips)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ip_addresses and not isinstance(ip_addresses, list):
            raise TypeError("Expected argument 'ip_addresses' to be a list")
        pulumi.set(__self__, "ip_addresses", ip_addresses)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="cdnIps")
    def cdn_ips(self) -> Sequence['outputs.GetCdnIpsCdnIpResult']:
        """
        The homing information of IP addresses.
        """
        return pulumi.get(self, "cdn_ips")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="ipAddresses")
    def ip_addresses(self) -> Optional[Sequence[_builtins.str]]:
        return pulumi.get(self, "ip_addresses")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        """
        The province where IP belongs.
        """
        return pulumi.get(self, "region")


class AwaitableGetCdnIpsResult(GetCdnIpsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCdnIpsResult(
            cdn_ips=self.cdn_ips,
            id=self.id,
            ip_addresses=self.ip_addresses,
            region=self.region)


def get_cdn_ips(ip_addresses: Optional[Sequence[_builtins.str]] = None,
                region: Optional[_builtins.str] = None,
                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCdnIpsResult:
    """
    Use this data source to get the list of CDN IP addresses information within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    ip_address = config.require_object("ipAddress")
    test = huaweicloud.Live.get_cdn_ips(ip_addresses=[ip_address])
    ```


    :param Sequence[_builtins.str] ip_addresses: Specifies the list of IP addresses, which can contain up to `20` IP addresses.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['ipAddresses'] = ip_addresses
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Live/getCdnIps:getCdnIps', __args__, opts=opts, typ=GetCdnIpsResult).value

    return AwaitableGetCdnIpsResult(
        cdn_ips=pulumi.get(__ret__, 'cdn_ips'),
        id=pulumi.get(__ret__, 'id'),
        ip_addresses=pulumi.get(__ret__, 'ip_addresses'),
        region=pulumi.get(__ret__, 'region'))
def get_cdn_ips_output(ip_addresses: Optional[pulumi.Input[Optional[Sequence[_builtins.str]]]] = None,
                       region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                       opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetCdnIpsResult]:
    """
    Use this data source to get the list of CDN IP addresses information within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    ip_address = config.require_object("ipAddress")
    test = huaweicloud.Live.get_cdn_ips(ip_addresses=[ip_address])
    ```


    :param Sequence[_builtins.str] ip_addresses: Specifies the list of IP addresses, which can contain up to `20` IP addresses.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['ipAddresses'] = ip_addresses
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Live/getCdnIps:getCdnIps', __args__, opts=opts, typ=GetCdnIpsResult)
    return __ret__.apply(lambda __response__: GetCdnIpsResult(
        cdn_ips=pulumi.get(__response__, 'cdn_ips'),
        id=pulumi.get(__response__, 'id'),
        ip_addresses=pulumi.get(__response__, 'ip_addresses'),
        region=pulumi.get(__response__, 'region')))
