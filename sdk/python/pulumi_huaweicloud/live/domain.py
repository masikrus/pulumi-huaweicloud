# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['DomainArgs', 'Domain']

@pulumi.input_type
class DomainArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[_builtins.str],
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ingest_domain_name: Optional[pulumi.Input[_builtins.str]] = None,
                 is_ipv6: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 service_area: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a Domain resource.
        :param pulumi.Input[_builtins.str] type: Specifies the type of domain name. The options are as follows:
               + **pull**: streaming domain name.
               + **push**: ingest domain name.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] ingest_domain_name: Specifies the ingest domain name, which associates with the streaming
               domain name to push streams to nearby CDN nodes.
        :param pulumi.Input[_builtins.bool] is_ipv6: Specifies whether enable IPv6 switch. Defaults to **false**.
               This field can only be edited when `status` is **on**.
        :param pulumi.Input[_builtins.str] name: Specifies the domain name. Changing this parameter will create a new resource.
               
               > A level-1 domain name cannot be used as an ingest domain or streaming domain. If your domain name is **example.com**,
               you can use subdomain names, for example, **test-push.example.com** and **test-play.example.com**, as the ingest
               domain name and streaming domain name.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the Live domain resource. If omitted,
               the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] service_area: Specifies the domain name acceleration service area. Valid values are:
               + **mainland_china**: Chinese mainland.
               + **outside_mainland_china**: Outside the Chinese mainland.
               + **global**: Global acceleration.
               
               Defaults to **mainland_china**. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: Specifies status of the domain name. The options are as follows:
               + **on**: enable the domain name.
               + **off**: disable the domain name.
               
               The default value is `on`.
        """
        pulumi.set(__self__, "type", type)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if ingest_domain_name is not None:
            pulumi.set(__self__, "ingest_domain_name", ingest_domain_name)
        if is_ipv6 is not None:
            pulumi.set(__self__, "is_ipv6", is_ipv6)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if service_area is not None:
            pulumi.set(__self__, "service_area", service_area)
        if status is not None:
            pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the type of domain name. The options are as follows:
        + **pull**: streaming domain name.
        + **push**: ingest domain name.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="ingestDomainName")
    def ingest_domain_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ingest domain name, which associates with the streaming
        domain name to push streams to nearby CDN nodes.
        """
        return pulumi.get(self, "ingest_domain_name")

    @ingest_domain_name.setter
    def ingest_domain_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ingest_domain_name", value)

    @_builtins.property
    @pulumi.getter(name="isIpv6")
    def is_ipv6(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether enable IPv6 switch. Defaults to **false**.
        This field can only be edited when `status` is **on**.
        """
        return pulumi.get(self, "is_ipv6")

    @is_ipv6.setter
    def is_ipv6(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "is_ipv6", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the domain name. Changing this parameter will create a new resource.

        > A level-1 domain name cannot be used as an ingest domain or streaming domain. If your domain name is **example.com**,
        you can use subdomain names, for example, **test-push.example.com** and **test-play.example.com**, as the ingest
        domain name and streaming domain name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the Live domain resource. If omitted,
        the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="serviceArea")
    def service_area(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the domain name acceleration service area. Valid values are:
        + **mainland_china**: Chinese mainland.
        + **outside_mainland_china**: Outside the Chinese mainland.
        + **global**: Global acceleration.

        Defaults to **mainland_china**. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "service_area")

    @service_area.setter
    def service_area(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "service_area", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies status of the domain name. The options are as follows:
        + **on**: enable the domain name.
        + **off**: disable the domain name.

        The default value is `on`.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)


@pulumi.input_type
class _DomainState:
    def __init__(__self__, *,
                 cname: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ingest_domain_name: Optional[pulumi.Input[_builtins.str]] = None,
                 is_ipv6: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 service_area: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering Domain resources.
        :param pulumi.Input[_builtins.str] cname: CNAME record of the domain name.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] ingest_domain_name: Specifies the ingest domain name, which associates with the streaming
               domain name to push streams to nearby CDN nodes.
        :param pulumi.Input[_builtins.bool] is_ipv6: Specifies whether enable IPv6 switch. Defaults to **false**.
               This field can only be edited when `status` is **on**.
        :param pulumi.Input[_builtins.str] name: Specifies the domain name. Changing this parameter will create a new resource.
               
               > A level-1 domain name cannot be used as an ingest domain or streaming domain. If your domain name is **example.com**,
               you can use subdomain names, for example, **test-push.example.com** and **test-play.example.com**, as the ingest
               domain name and streaming domain name.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the Live domain resource. If omitted,
               the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] service_area: Specifies the domain name acceleration service area. Valid values are:
               + **mainland_china**: Chinese mainland.
               + **outside_mainland_china**: Outside the Chinese mainland.
               + **global**: Global acceleration.
               
               Defaults to **mainland_china**. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: Specifies status of the domain name. The options are as follows:
               + **on**: enable the domain name.
               + **off**: disable the domain name.
               
               The default value is `on`.
        :param pulumi.Input[_builtins.str] type: Specifies the type of domain name. The options are as follows:
               + **pull**: streaming domain name.
               + **push**: ingest domain name.
               
               Changing this parameter will create a new resource.
        """
        if cname is not None:
            pulumi.set(__self__, "cname", cname)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if ingest_domain_name is not None:
            pulumi.set(__self__, "ingest_domain_name", ingest_domain_name)
        if is_ipv6 is not None:
            pulumi.set(__self__, "is_ipv6", is_ipv6)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if service_area is not None:
            pulumi.set(__self__, "service_area", service_area)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def cname(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        CNAME record of the domain name.
        """
        return pulumi.get(self, "cname")

    @cname.setter
    def cname(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cname", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="ingestDomainName")
    def ingest_domain_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ingest domain name, which associates with the streaming
        domain name to push streams to nearby CDN nodes.
        """
        return pulumi.get(self, "ingest_domain_name")

    @ingest_domain_name.setter
    def ingest_domain_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ingest_domain_name", value)

    @_builtins.property
    @pulumi.getter(name="isIpv6")
    def is_ipv6(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether enable IPv6 switch. Defaults to **false**.
        This field can only be edited when `status` is **on**.
        """
        return pulumi.get(self, "is_ipv6")

    @is_ipv6.setter
    def is_ipv6(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "is_ipv6", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the domain name. Changing this parameter will create a new resource.

        > A level-1 domain name cannot be used as an ingest domain or streaming domain. If your domain name is **example.com**,
        you can use subdomain names, for example, **test-push.example.com** and **test-play.example.com**, as the ingest
        domain name and streaming domain name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the Live domain resource. If omitted,
        the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="serviceArea")
    def service_area(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the domain name acceleration service area. Valid values are:
        + **mainland_china**: Chinese mainland.
        + **outside_mainland_china**: Outside the Chinese mainland.
        + **global**: Global acceleration.

        Defaults to **mainland_china**. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "service_area")

    @service_area.setter
    def service_area(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "service_area", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies status of the domain name. The options are as follows:
        + **on**: enable the domain name.
        + **off**: disable the domain name.

        The default value is `on`.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the type of domain name. The options are as follows:
        + **pull**: streaming domain name.
        + **push**: ingest domain name.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)


@pulumi.type_token("huaweicloud:Live/domain:Domain")
class Domain(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ingest_domain_name: Optional[pulumi.Input[_builtins.str]] = None,
                 is_ipv6: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 service_area: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a Live domain within HuaweiCloud.

        ## Example Usage

        ### Create an ingest domain name and a streaming domain name

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        ingest_domain_name = config.require_object("ingestDomainName")
        streaming_domain_name = config.require_object("streamingDomainName")
        ingest_domain = huaweicloud.live.Domain("ingestDomain",
            name=ingest_domain_name,
            type="push")
        streaming_domain = huaweicloud.live.Domain("streamingDomain",
            name=streaming_domain_name,
            type="pull",
            ingest_domain_name=ingest_domain.name)
        ```

        ## Import

        Domains can be imported using the `name`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Live/domain:Domain test <name>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] ingest_domain_name: Specifies the ingest domain name, which associates with the streaming
               domain name to push streams to nearby CDN nodes.
        :param pulumi.Input[_builtins.bool] is_ipv6: Specifies whether enable IPv6 switch. Defaults to **false**.
               This field can only be edited when `status` is **on**.
        :param pulumi.Input[_builtins.str] name: Specifies the domain name. Changing this parameter will create a new resource.
               
               > A level-1 domain name cannot be used as an ingest domain or streaming domain. If your domain name is **example.com**,
               you can use subdomain names, for example, **test-push.example.com** and **test-play.example.com**, as the ingest
               domain name and streaming domain name.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the Live domain resource. If omitted,
               the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] service_area: Specifies the domain name acceleration service area. Valid values are:
               + **mainland_china**: Chinese mainland.
               + **outside_mainland_china**: Outside the Chinese mainland.
               + **global**: Global acceleration.
               
               Defaults to **mainland_china**. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: Specifies status of the domain name. The options are as follows:
               + **on**: enable the domain name.
               + **off**: disable the domain name.
               
               The default value is `on`.
        :param pulumi.Input[_builtins.str] type: Specifies the type of domain name. The options are as follows:
               + **pull**: streaming domain name.
               + **push**: ingest domain name.
               
               Changing this parameter will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: DomainArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a Live domain within HuaweiCloud.

        ## Example Usage

        ### Create an ingest domain name and a streaming domain name

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        ingest_domain_name = config.require_object("ingestDomainName")
        streaming_domain_name = config.require_object("streamingDomainName")
        ingest_domain = huaweicloud.live.Domain("ingestDomain",
            name=ingest_domain_name,
            type="push")
        streaming_domain = huaweicloud.live.Domain("streamingDomain",
            name=streaming_domain_name,
            type="pull",
            ingest_domain_name=ingest_domain.name)
        ```

        ## Import

        Domains can be imported using the `name`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Live/domain:Domain test <name>
        ```

        :param str resource_name: The name of the resource.
        :param DomainArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(DomainArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ingest_domain_name: Optional[pulumi.Input[_builtins.str]] = None,
                 is_ipv6: Optional[pulumi.Input[_builtins.bool]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 service_area: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = DomainArgs.__new__(DomainArgs)

            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            __props__.__dict__["ingest_domain_name"] = ingest_domain_name
            __props__.__dict__["is_ipv6"] = is_ipv6
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            __props__.__dict__["service_area"] = service_area
            __props__.__dict__["status"] = status
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
            __props__.__dict__["cname"] = None
        super(Domain, __self__).__init__(
            'huaweicloud:Live/domain:Domain',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            cname: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            ingest_domain_name: Optional[pulumi.Input[_builtins.str]] = None,
            is_ipv6: Optional[pulumi.Input[_builtins.bool]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            service_area: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            type: Optional[pulumi.Input[_builtins.str]] = None) -> 'Domain':
        """
        Get an existing Domain resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] cname: CNAME record of the domain name.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] ingest_domain_name: Specifies the ingest domain name, which associates with the streaming
               domain name to push streams to nearby CDN nodes.
        :param pulumi.Input[_builtins.bool] is_ipv6: Specifies whether enable IPv6 switch. Defaults to **false**.
               This field can only be edited when `status` is **on**.
        :param pulumi.Input[_builtins.str] name: Specifies the domain name. Changing this parameter will create a new resource.
               
               > A level-1 domain name cannot be used as an ingest domain or streaming domain. If your domain name is **example.com**,
               you can use subdomain names, for example, **test-push.example.com** and **test-play.example.com**, as the ingest
               domain name and streaming domain name.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the Live domain resource. If omitted,
               the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] service_area: Specifies the domain name acceleration service area. Valid values are:
               + **mainland_china**: Chinese mainland.
               + **outside_mainland_china**: Outside the Chinese mainland.
               + **global**: Global acceleration.
               
               Defaults to **mainland_china**. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: Specifies status of the domain name. The options are as follows:
               + **on**: enable the domain name.
               + **off**: disable the domain name.
               
               The default value is `on`.
        :param pulumi.Input[_builtins.str] type: Specifies the type of domain name. The options are as follows:
               + **pull**: streaming domain name.
               + **push**: ingest domain name.
               
               Changing this parameter will create a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _DomainState.__new__(_DomainState)

        __props__.__dict__["cname"] = cname
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["ingest_domain_name"] = ingest_domain_name
        __props__.__dict__["is_ipv6"] = is_ipv6
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["service_area"] = service_area
        __props__.__dict__["status"] = status
        __props__.__dict__["type"] = type
        return Domain(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def cname(self) -> pulumi.Output[_builtins.str]:
        """
        CNAME record of the domain name.
        """
        return pulumi.get(self, "cname")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the enterprise project ID.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="ingestDomainName")
    def ingest_domain_name(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the ingest domain name, which associates with the streaming
        domain name to push streams to nearby CDN nodes.
        """
        return pulumi.get(self, "ingest_domain_name")

    @_builtins.property
    @pulumi.getter(name="isIpv6")
    def is_ipv6(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether enable IPv6 switch. Defaults to **false**.
        This field can only be edited when `status` is **on**.
        """
        return pulumi.get(self, "is_ipv6")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the domain name. Changing this parameter will create a new resource.

        > A level-1 domain name cannot be used as an ingest domain or streaming domain. If your domain name is **example.com**,
        you can use subdomain names, for example, **test-push.example.com** and **test-play.example.com**, as the ingest
        domain name and streaming domain name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the Live domain resource. If omitted,
        the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="serviceArea")
    def service_area(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the domain name acceleration service area. Valid values are:
        + **mainland_china**: Chinese mainland.
        + **outside_mainland_china**: Outside the Chinese mainland.
        + **global**: Global acceleration.

        Defaults to **mainland_china**. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "service_area")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies status of the domain name. The options are as follows:
        + **on**: enable the domain name.
        + **off**: disable the domain name.

        The default value is `on`.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the type of domain name. The options are as follows:
        + **pull**: streaming domain name.
        + **push**: ingest domain name.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "type")

