# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['OpengaussQuotaArgs', 'OpengaussQuota']

@pulumi.input_type
class OpengaussQuotaArgs:
    def __init__(__self__, *,
                 enterprise_project_id: pulumi.Input[_builtins.str],
                 instance_quota: Optional[pulumi.Input[_builtins.int]] = None,
                 ram_quota: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 vcpus_quota: Optional[pulumi.Input[_builtins.int]] = None,
                 volume_quota: Optional[pulumi.Input[_builtins.int]] = None):
        """
        The set of arguments for constructing a OpengaussQuota resource.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID. Changing this parameter
               will create a new resource.
        :param pulumi.Input[_builtins.int] instance_quota: Specifies the instance quantity quota. Value range: **-1** to **100000**. The value
               **-1** indicates no limit.
        :param pulumi.Input[_builtins.int] ram_quota: Specifies the memory quota in GB. Value range: **-1** to **2147483646**. The value **-1**
               indicates no limit.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] vcpus_quota: Specifies the vCPU quota. Value range: **-1** to **2147483646**. The value **-1**
               indicates no limit.
        :param pulumi.Input[_builtins.int] volume_quota: Specifies the storage quota in GB. Value range: **-1** to **2147483646**. The value
               **-1** indicates no limit.
        """
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if instance_quota is not None:
            pulumi.set(__self__, "instance_quota", instance_quota)
        if ram_quota is not None:
            pulumi.set(__self__, "ram_quota", ram_quota)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if vcpus_quota is not None:
            pulumi.set(__self__, "vcpus_quota", vcpus_quota)
        if volume_quota is not None:
            pulumi.set(__self__, "volume_quota", volume_quota)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the enterprise project ID. Changing this parameter
        will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="instanceQuota")
    def instance_quota(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the instance quantity quota. Value range: **-1** to **100000**. The value
        **-1** indicates no limit.
        """
        return pulumi.get(self, "instance_quota")

    @instance_quota.setter
    def instance_quota(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "instance_quota", value)

    @_builtins.property
    @pulumi.getter(name="ramQuota")
    def ram_quota(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the memory quota in GB. Value range: **-1** to **2147483646**. The value **-1**
        indicates no limit.
        """
        return pulumi.get(self, "ram_quota")

    @ram_quota.setter
    def ram_quota(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ram_quota", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="vcpusQuota")
    def vcpus_quota(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the vCPU quota. Value range: **-1** to **2147483646**. The value **-1**
        indicates no limit.
        """
        return pulumi.get(self, "vcpus_quota")

    @vcpus_quota.setter
    def vcpus_quota(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "vcpus_quota", value)

    @_builtins.property
    @pulumi.getter(name="volumeQuota")
    def volume_quota(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the storage quota in GB. Value range: **-1** to **2147483646**. The value
        **-1** indicates no limit.
        """
        return pulumi.get(self, "volume_quota")

    @volume_quota.setter
    def volume_quota(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "volume_quota", value)


@pulumi.input_type
class _OpengaussQuotaState:
    def __init__(__self__, *,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_name: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_quota: Optional[pulumi.Input[_builtins.int]] = None,
                 instance_used: Optional[pulumi.Input[_builtins.int]] = None,
                 ram_quota: Optional[pulumi.Input[_builtins.int]] = None,
                 ram_used: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 vcpus_quota: Optional[pulumi.Input[_builtins.int]] = None,
                 vcpus_used: Optional[pulumi.Input[_builtins.int]] = None,
                 volume_quota: Optional[pulumi.Input[_builtins.int]] = None,
                 volume_used: Optional[pulumi.Input[_builtins.int]] = None):
        """
        Input properties used for looking up and filtering OpengaussQuota resources.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID. Changing this parameter
               will create a new resource.
        :param pulumi.Input[_builtins.str] enterprise_project_name: Indicates the enterprise project name.
        :param pulumi.Input[_builtins.int] instance_quota: Specifies the instance quantity quota. Value range: **-1** to **100000**. The value
               **-1** indicates no limit.
        :param pulumi.Input[_builtins.int] instance_used: Indicates the used EPS instance quota.
        :param pulumi.Input[_builtins.int] ram_quota: Specifies the memory quota in GB. Value range: **-1** to **2147483646**. The value **-1**
               indicates no limit.
        :param pulumi.Input[_builtins.int] ram_used: Indicates the used EPS memory quota in GB.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] vcpus_quota: Specifies the vCPU quota. Value range: **-1** to **2147483646**. The value **-1**
               indicates no limit.
        :param pulumi.Input[_builtins.int] vcpus_used: Indicates the used EPS compute quota.
        :param pulumi.Input[_builtins.int] volume_quota: Specifies the storage quota in GB. Value range: **-1** to **2147483646**. The value
               **-1** indicates no limit.
        :param pulumi.Input[_builtins.int] volume_used: Indicates the used EPS storage quota, in GB.
        """
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if enterprise_project_name is not None:
            pulumi.set(__self__, "enterprise_project_name", enterprise_project_name)
        if instance_quota is not None:
            pulumi.set(__self__, "instance_quota", instance_quota)
        if instance_used is not None:
            pulumi.set(__self__, "instance_used", instance_used)
        if ram_quota is not None:
            pulumi.set(__self__, "ram_quota", ram_quota)
        if ram_used is not None:
            pulumi.set(__self__, "ram_used", ram_used)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if vcpus_quota is not None:
            pulumi.set(__self__, "vcpus_quota", vcpus_quota)
        if vcpus_used is not None:
            pulumi.set(__self__, "vcpus_used", vcpus_used)
        if volume_quota is not None:
            pulumi.set(__self__, "volume_quota", volume_quota)
        if volume_used is not None:
            pulumi.set(__self__, "volume_used", volume_used)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID. Changing this parameter
        will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectName")
    def enterprise_project_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Indicates the enterprise project name.
        """
        return pulumi.get(self, "enterprise_project_name")

    @enterprise_project_name.setter
    def enterprise_project_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_name", value)

    @_builtins.property
    @pulumi.getter(name="instanceQuota")
    def instance_quota(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the instance quantity quota. Value range: **-1** to **100000**. The value
        **-1** indicates no limit.
        """
        return pulumi.get(self, "instance_quota")

    @instance_quota.setter
    def instance_quota(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "instance_quota", value)

    @_builtins.property
    @pulumi.getter(name="instanceUsed")
    def instance_used(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Indicates the used EPS instance quota.
        """
        return pulumi.get(self, "instance_used")

    @instance_used.setter
    def instance_used(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "instance_used", value)

    @_builtins.property
    @pulumi.getter(name="ramQuota")
    def ram_quota(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the memory quota in GB. Value range: **-1** to **2147483646**. The value **-1**
        indicates no limit.
        """
        return pulumi.get(self, "ram_quota")

    @ram_quota.setter
    def ram_quota(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ram_quota", value)

    @_builtins.property
    @pulumi.getter(name="ramUsed")
    def ram_used(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Indicates the used EPS memory quota in GB.
        """
        return pulumi.get(self, "ram_used")

    @ram_used.setter
    def ram_used(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ram_used", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="vcpusQuota")
    def vcpus_quota(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the vCPU quota. Value range: **-1** to **2147483646**. The value **-1**
        indicates no limit.
        """
        return pulumi.get(self, "vcpus_quota")

    @vcpus_quota.setter
    def vcpus_quota(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "vcpus_quota", value)

    @_builtins.property
    @pulumi.getter(name="vcpusUsed")
    def vcpus_used(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Indicates the used EPS compute quota.
        """
        return pulumi.get(self, "vcpus_used")

    @vcpus_used.setter
    def vcpus_used(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "vcpus_used", value)

    @_builtins.property
    @pulumi.getter(name="volumeQuota")
    def volume_quota(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the storage quota in GB. Value range: **-1** to **2147483646**. The value
        **-1** indicates no limit.
        """
        return pulumi.get(self, "volume_quota")

    @volume_quota.setter
    def volume_quota(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "volume_quota", value)

    @_builtins.property
    @pulumi.getter(name="volumeUsed")
    def volume_used(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Indicates the used EPS storage quota, in GB.
        """
        return pulumi.get(self, "volume_used")

    @volume_used.setter
    def volume_used(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "volume_used", value)


@pulumi.type_token("huaweicloud:GaussDBforOpenGauss/opengaussQuota:OpengaussQuota")
class OpengaussQuota(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_quota: Optional[pulumi.Input[_builtins.int]] = None,
                 ram_quota: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 vcpus_quota: Optional[pulumi.Input[_builtins.int]] = None,
                 volume_quota: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        """
        Manages a GaussDB OpenGauss quota resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        enterprise_project_id = config.require_object("enterpriseProjectId")
        test = huaweicloud.gaussdbforopengauss.OpengaussQuota("test",
            enterprise_project_id=enterprise_project_id,
            instance_quota=10,
            vcpus_quota=0,
            ram_quota=-1,
            volume_quota=30)
        ```

        ## Import

        The GaussDB OpenGauss quota can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:GaussDBforOpenGauss/opengaussQuota:OpengaussQuota test <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID. Changing this parameter
               will create a new resource.
        :param pulumi.Input[_builtins.int] instance_quota: Specifies the instance quantity quota. Value range: **-1** to **100000**. The value
               **-1** indicates no limit.
        :param pulumi.Input[_builtins.int] ram_quota: Specifies the memory quota in GB. Value range: **-1** to **2147483646**. The value **-1**
               indicates no limit.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] vcpus_quota: Specifies the vCPU quota. Value range: **-1** to **2147483646**. The value **-1**
               indicates no limit.
        :param pulumi.Input[_builtins.int] volume_quota: Specifies the storage quota in GB. Value range: **-1** to **2147483646**. The value
               **-1** indicates no limit.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OpengaussQuotaArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a GaussDB OpenGauss quota resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        enterprise_project_id = config.require_object("enterpriseProjectId")
        test = huaweicloud.gaussdbforopengauss.OpengaussQuota("test",
            enterprise_project_id=enterprise_project_id,
            instance_quota=10,
            vcpus_quota=0,
            ram_quota=-1,
            volume_quota=30)
        ```

        ## Import

        The GaussDB OpenGauss quota can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:GaussDBforOpenGauss/opengaussQuota:OpengaussQuota test <id>
        ```

        :param str resource_name: The name of the resource.
        :param OpengaussQuotaArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OpengaussQuotaArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_quota: Optional[pulumi.Input[_builtins.int]] = None,
                 ram_quota: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 vcpus_quota: Optional[pulumi.Input[_builtins.int]] = None,
                 volume_quota: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OpengaussQuotaArgs.__new__(OpengaussQuotaArgs)

            if enterprise_project_id is None and not opts.urn:
                raise TypeError("Missing required property 'enterprise_project_id'")
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            __props__.__dict__["instance_quota"] = instance_quota
            __props__.__dict__["ram_quota"] = ram_quota
            __props__.__dict__["region"] = region
            __props__.__dict__["vcpus_quota"] = vcpus_quota
            __props__.__dict__["volume_quota"] = volume_quota
            __props__.__dict__["enterprise_project_name"] = None
            __props__.__dict__["instance_used"] = None
            __props__.__dict__["ram_used"] = None
            __props__.__dict__["vcpus_used"] = None
            __props__.__dict__["volume_used"] = None
        super(OpengaussQuota, __self__).__init__(
            'huaweicloud:GaussDBforOpenGauss/opengaussQuota:OpengaussQuota',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_project_name: Optional[pulumi.Input[_builtins.str]] = None,
            instance_quota: Optional[pulumi.Input[_builtins.int]] = None,
            instance_used: Optional[pulumi.Input[_builtins.int]] = None,
            ram_quota: Optional[pulumi.Input[_builtins.int]] = None,
            ram_used: Optional[pulumi.Input[_builtins.int]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            vcpus_quota: Optional[pulumi.Input[_builtins.int]] = None,
            vcpus_used: Optional[pulumi.Input[_builtins.int]] = None,
            volume_quota: Optional[pulumi.Input[_builtins.int]] = None,
            volume_used: Optional[pulumi.Input[_builtins.int]] = None) -> 'OpengaussQuota':
        """
        Get an existing OpengaussQuota resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID. Changing this parameter
               will create a new resource.
        :param pulumi.Input[_builtins.str] enterprise_project_name: Indicates the enterprise project name.
        :param pulumi.Input[_builtins.int] instance_quota: Specifies the instance quantity quota. Value range: **-1** to **100000**. The value
               **-1** indicates no limit.
        :param pulumi.Input[_builtins.int] instance_used: Indicates the used EPS instance quota.
        :param pulumi.Input[_builtins.int] ram_quota: Specifies the memory quota in GB. Value range: **-1** to **2147483646**. The value **-1**
               indicates no limit.
        :param pulumi.Input[_builtins.int] ram_used: Indicates the used EPS memory quota in GB.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] vcpus_quota: Specifies the vCPU quota. Value range: **-1** to **2147483646**. The value **-1**
               indicates no limit.
        :param pulumi.Input[_builtins.int] vcpus_used: Indicates the used EPS compute quota.
        :param pulumi.Input[_builtins.int] volume_quota: Specifies the storage quota in GB. Value range: **-1** to **2147483646**. The value
               **-1** indicates no limit.
        :param pulumi.Input[_builtins.int] volume_used: Indicates the used EPS storage quota, in GB.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OpengaussQuotaState.__new__(_OpengaussQuotaState)

        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["enterprise_project_name"] = enterprise_project_name
        __props__.__dict__["instance_quota"] = instance_quota
        __props__.__dict__["instance_used"] = instance_used
        __props__.__dict__["ram_quota"] = ram_quota
        __props__.__dict__["ram_used"] = ram_used
        __props__.__dict__["region"] = region
        __props__.__dict__["vcpus_quota"] = vcpus_quota
        __props__.__dict__["vcpus_used"] = vcpus_used
        __props__.__dict__["volume_quota"] = volume_quota
        __props__.__dict__["volume_used"] = volume_used
        return OpengaussQuota(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the enterprise project ID. Changing this parameter
        will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectName")
    def enterprise_project_name(self) -> pulumi.Output[_builtins.str]:
        """
        Indicates the enterprise project name.
        """
        return pulumi.get(self, "enterprise_project_name")

    @_builtins.property
    @pulumi.getter(name="instanceQuota")
    def instance_quota(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the instance quantity quota. Value range: **-1** to **100000**. The value
        **-1** indicates no limit.
        """
        return pulumi.get(self, "instance_quota")

    @_builtins.property
    @pulumi.getter(name="instanceUsed")
    def instance_used(self) -> pulumi.Output[_builtins.int]:
        """
        Indicates the used EPS instance quota.
        """
        return pulumi.get(self, "instance_used")

    @_builtins.property
    @pulumi.getter(name="ramQuota")
    def ram_quota(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the memory quota in GB. Value range: **-1** to **2147483646**. The value **-1**
        indicates no limit.
        """
        return pulumi.get(self, "ram_quota")

    @_builtins.property
    @pulumi.getter(name="ramUsed")
    def ram_used(self) -> pulumi.Output[_builtins.int]:
        """
        Indicates the used EPS memory quota in GB.
        """
        return pulumi.get(self, "ram_used")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="vcpusQuota")
    def vcpus_quota(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the vCPU quota. Value range: **-1** to **2147483646**. The value **-1**
        indicates no limit.
        """
        return pulumi.get(self, "vcpus_quota")

    @_builtins.property
    @pulumi.getter(name="vcpusUsed")
    def vcpus_used(self) -> pulumi.Output[_builtins.int]:
        """
        Indicates the used EPS compute quota.
        """
        return pulumi.get(self, "vcpus_used")

    @_builtins.property
    @pulumi.getter(name="volumeQuota")
    def volume_quota(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the storage quota in GB. Value range: **-1** to **2147483646**. The value
        **-1** indicates no limit.
        """
        return pulumi.get(self, "volume_quota")

    @_builtins.property
    @pulumi.getter(name="volumeUsed")
    def volume_used(self) -> pulumi.Output[_builtins.int]:
        """
        Indicates the used EPS storage quota, in GB.
        """
        return pulumi.get(self, "volume_used")

