# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetOpengaussInstanceNodesResult',
    'AwaitableGetOpengaussInstanceNodesResult',
    'get_opengauss_instance_nodes',
    'get_opengauss_instance_nodes_output',
]

@pulumi.output_type
class GetOpengaussInstanceNodesResult:
    """
    A collection of values returned by getOpengaussInstanceNodes.
    """
    def __init__(__self__, availability_zone_id=None, component_type=None, id=None, instance_id=None, nodes=None, region=None):
        if availability_zone_id and not isinstance(availability_zone_id, str):
            raise TypeError("Expected argument 'availability_zone_id' to be a str")
        pulumi.set(__self__, "availability_zone_id", availability_zone_id)
        if component_type and not isinstance(component_type, str):
            raise TypeError("Expected argument 'component_type' to be a str")
        pulumi.set(__self__, "component_type", component_type)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if nodes and not isinstance(nodes, list):
            raise TypeError("Expected argument 'nodes' to be a list")
        pulumi.set(__self__, "nodes", nodes)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="availabilityZoneId")
    def availability_zone_id(self) -> Optional[_builtins.str]:
        """
        Indicates the code of the AZ where the node is.
        """
        return pulumi.get(self, "availability_zone_id")

    @_builtins.property
    @pulumi.getter(name="componentType")
    def component_type(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "component_type")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> _builtins.str:
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter
    def nodes(self) -> Sequence['outputs.GetOpengaussInstanceNodesNodeResult']:
        """
        Indicates the list of nodes.
        """
        return pulumi.get(self, "nodes")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetOpengaussInstanceNodesResult(GetOpengaussInstanceNodesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOpengaussInstanceNodesResult(
            availability_zone_id=self.availability_zone_id,
            component_type=self.component_type,
            id=self.id,
            instance_id=self.instance_id,
            nodes=self.nodes,
            region=self.region)


def get_opengauss_instance_nodes(availability_zone_id: Optional[_builtins.str] = None,
                                 component_type: Optional[_builtins.str] = None,
                                 instance_id: Optional[_builtins.str] = None,
                                 region: Optional[_builtins.str] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOpengaussInstanceNodesResult:
    """
    Use this data source to get the list of nodes of the GaussDB OpenGauss instance.


    :param _builtins.str availability_zone_id: Specifies the ID of the AZ where the primary component is located.
           + The default value is **ALL**, indicating that component information of nodes in all AZs of the instance is queried.
           + When you query the AZ where a primary DN is located, the information of all DNs in the same shard as the primary DN
           is displayed.
           + When you query the AZ where a CN is located, only the CN information in the AZ is displayed.
           + When you query the AZ where a component (except CNs or DNs) is located, information about all components of the same
           type is returned. If there is no such a component, no information is returned.
    :param _builtins.str component_type: Specifies the component type.
           The default value is **ALL**. Value options:
           + **ALL**: All component types are queried.
           + **CN**: CN component type is queried.
           + **DN**: DN component type is queried.
           + **CM**: CMS component type is queried.
           + **GTM**: GTM component type is queried.
           + **ETCD**: ETCD component type is queried.
    :param _builtins.str instance_id: Specifies the instance ID.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['availabilityZoneId'] = availability_zone_id
    __args__['componentType'] = component_type
    __args__['instanceId'] = instance_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:GaussDBforOpenGauss/getOpengaussInstanceNodes:getOpengaussInstanceNodes', __args__, opts=opts, typ=GetOpengaussInstanceNodesResult).value

    return AwaitableGetOpengaussInstanceNodesResult(
        availability_zone_id=pulumi.get(__ret__, 'availability_zone_id'),
        component_type=pulumi.get(__ret__, 'component_type'),
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        nodes=pulumi.get(__ret__, 'nodes'),
        region=pulumi.get(__ret__, 'region'))
def get_opengauss_instance_nodes_output(availability_zone_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                        component_type: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                        instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                                        region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                        opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetOpengaussInstanceNodesResult]:
    """
    Use this data source to get the list of nodes of the GaussDB OpenGauss instance.


    :param _builtins.str availability_zone_id: Specifies the ID of the AZ where the primary component is located.
           + The default value is **ALL**, indicating that component information of nodes in all AZs of the instance is queried.
           + When you query the AZ where a primary DN is located, the information of all DNs in the same shard as the primary DN
           is displayed.
           + When you query the AZ where a CN is located, only the CN information in the AZ is displayed.
           + When you query the AZ where a component (except CNs or DNs) is located, information about all components of the same
           type is returned. If there is no such a component, no information is returned.
    :param _builtins.str component_type: Specifies the component type.
           The default value is **ALL**. Value options:
           + **ALL**: All component types are queried.
           + **CN**: CN component type is queried.
           + **DN**: DN component type is queried.
           + **CM**: CMS component type is queried.
           + **GTM**: GTM component type is queried.
           + **ETCD**: ETCD component type is queried.
    :param _builtins.str instance_id: Specifies the instance ID.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['availabilityZoneId'] = availability_zone_id
    __args__['componentType'] = component_type
    __args__['instanceId'] = instance_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:GaussDBforOpenGauss/getOpengaussInstanceNodes:getOpengaussInstanceNodes', __args__, opts=opts, typ=GetOpengaussInstanceNodesResult)
    return __ret__.apply(lambda __response__: GetOpengaussInstanceNodesResult(
        availability_zone_id=pulumi.get(__response__, 'availability_zone_id'),
        component_type=pulumi.get(__response__, 'component_type'),
        id=pulumi.get(__response__, 'id'),
        instance_id=pulumi.get(__response__, 'instance_id'),
        nodes=pulumi.get(__response__, 'nodes'),
        region=pulumi.get(__response__, 'region')))
