# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetOpengaussRestoreTimeRangesResult',
    'AwaitableGetOpengaussRestoreTimeRangesResult',
    'get_opengauss_restore_time_ranges',
    'get_opengauss_restore_time_ranges_output',
]

@pulumi.output_type
class GetOpengaussRestoreTimeRangesResult:
    """
    A collection of values returned by getOpengaussRestoreTimeRanges.
    """
    def __init__(__self__, date=None, id=None, instance_id=None, region=None, restore_times=None):
        if date and not isinstance(date, str):
            raise TypeError("Expected argument 'date' to be a str")
        pulumi.set(__self__, "date", date)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if restore_times and not isinstance(restore_times, list):
            raise TypeError("Expected argument 'restore_times' to be a list")
        pulumi.set(__self__, "restore_times", restore_times)

    @_builtins.property
    @pulumi.getter
    def date(self) -> _builtins.str:
        return pulumi.get(self, "date")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> _builtins.str:
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="restoreTimes")
    def restore_times(self) -> Sequence['outputs.GetOpengaussRestoreTimeRangesRestoreTimeResult']:
        """
        Indicates the list of restoration time ranges.
        """
        return pulumi.get(self, "restore_times")


class AwaitableGetOpengaussRestoreTimeRangesResult(GetOpengaussRestoreTimeRangesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOpengaussRestoreTimeRangesResult(
            date=self.date,
            id=self.id,
            instance_id=self.instance_id,
            region=self.region,
            restore_times=self.restore_times)


def get_opengauss_restore_time_ranges(date: Optional[_builtins.str] = None,
                                      instance_id: Optional[_builtins.str] = None,
                                      region: Optional[_builtins.str] = None,
                                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOpengaussRestoreTimeRangesResult:
    """
    Use this data source to get the list of GaussDB OpenGauss restore time ranges.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    test = huaweicloud.GaussDBforOpenGauss.get_opengauss_restore_time_ranges(instance_id=instance_id,
        date="2024-12-27")
    ```


    :param _builtins.str date: Specifies the date to be queried.
           The value is in the **yyyy-mm-dd** format, and the time zone is UTC.
    :param _builtins.str instance_id: Specifies the ID of the GaussDB OpenGauss instance.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['date'] = date
    __args__['instanceId'] = instance_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:GaussDBforOpenGauss/getOpengaussRestoreTimeRanges:getOpengaussRestoreTimeRanges', __args__, opts=opts, typ=GetOpengaussRestoreTimeRangesResult).value

    return AwaitableGetOpengaussRestoreTimeRangesResult(
        date=pulumi.get(__ret__, 'date'),
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        region=pulumi.get(__ret__, 'region'),
        restore_times=pulumi.get(__ret__, 'restore_times'))
def get_opengauss_restore_time_ranges_output(date: Optional[pulumi.Input[_builtins.str]] = None,
                                             instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                                             region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                             opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetOpengaussRestoreTimeRangesResult]:
    """
    Use this data source to get the list of GaussDB OpenGauss restore time ranges.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    test = huaweicloud.GaussDBforOpenGauss.get_opengauss_restore_time_ranges(instance_id=instance_id,
        date="2024-12-27")
    ```


    :param _builtins.str date: Specifies the date to be queried.
           The value is in the **yyyy-mm-dd** format, and the time zone is UTC.
    :param _builtins.str instance_id: Specifies the ID of the GaussDB OpenGauss instance.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['date'] = date
    __args__['instanceId'] = instance_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:GaussDBforOpenGauss/getOpengaussRestoreTimeRanges:getOpengaussRestoreTimeRanges', __args__, opts=opts, typ=GetOpengaussRestoreTimeRangesResult)
    return __ret__.apply(lambda __response__: GetOpengaussRestoreTimeRangesResult(
        date=pulumi.get(__response__, 'date'),
        id=pulumi.get(__response__, 'id'),
        instance_id=pulumi.get(__response__, 'instance_id'),
        region=pulumi.get(__response__, 'region'),
        restore_times=pulumi.get(__response__, 'restore_times')))
