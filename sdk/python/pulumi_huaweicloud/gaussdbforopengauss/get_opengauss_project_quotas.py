# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetOpengaussProjectQuotasResult',
    'AwaitableGetOpengaussProjectQuotasResult',
    'get_opengauss_project_quotas',
    'get_opengauss_project_quotas_output',
]

@pulumi.output_type
class GetOpengaussProjectQuotasResult:
    """
    A collection of values returned by getOpengaussProjectQuotas.
    """
    def __init__(__self__, id=None, quotas=None, region=None, type=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if quotas and not isinstance(quotas, list):
            raise TypeError("Expected argument 'quotas' to be a list")
        pulumi.set(__self__, "quotas", quotas)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def quotas(self) -> Sequence['outputs.GetOpengaussProjectQuotasQuotaResult']:
        """
        Indicates the instance quota of a tenant.
        """
        return pulumi.get(self, "quotas")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[_builtins.str]:
        """
        Indicates the quota of a specified type.
        """
        return pulumi.get(self, "type")


class AwaitableGetOpengaussProjectQuotasResult(GetOpengaussProjectQuotasResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOpengaussProjectQuotasResult(
            id=self.id,
            quotas=self.quotas,
            region=self.region,
            type=self.type)


def get_opengauss_project_quotas(region: Optional[_builtins.str] = None,
                                 type: Optional[_builtins.str] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOpengaussProjectQuotasResult:
    """
    Use this data source to get the project quotas of a specified tenant.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.GaussDBforOpenGauss.get_opengauss_project_quotas()
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str type: Specifies the resource type used to filter quotas. Value options: **instance**.
    """
    __args__ = dict()
    __args__['region'] = region
    __args__['type'] = type
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:GaussDBforOpenGauss/getOpengaussProjectQuotas:getOpengaussProjectQuotas', __args__, opts=opts, typ=GetOpengaussProjectQuotasResult).value

    return AwaitableGetOpengaussProjectQuotasResult(
        id=pulumi.get(__ret__, 'id'),
        quotas=pulumi.get(__ret__, 'quotas'),
        region=pulumi.get(__ret__, 'region'),
        type=pulumi.get(__ret__, 'type'))
def get_opengauss_project_quotas_output(region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                        type: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                        opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetOpengaussProjectQuotasResult]:
    """
    Use this data source to get the project quotas of a specified tenant.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.GaussDBforOpenGauss.get_opengauss_project_quotas()
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str type: Specifies the resource type used to filter quotas. Value options: **instance**.
    """
    __args__ = dict()
    __args__['region'] = region
    __args__['type'] = type
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:GaussDBforOpenGauss/getOpengaussProjectQuotas:getOpengaussProjectQuotas', __args__, opts=opts, typ=GetOpengaussProjectQuotasResult)
    return __ret__.apply(lambda __response__: GetOpengaussProjectQuotasResult(
        id=pulumi.get(__response__, 'id'),
        quotas=pulumi.get(__response__, 'quotas'),
        region=pulumi.get(__response__, 'region'),
        type=pulumi.get(__response__, 'type')))
