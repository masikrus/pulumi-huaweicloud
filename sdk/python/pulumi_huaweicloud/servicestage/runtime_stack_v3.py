# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['RuntimeStackV3Args', 'RuntimeStackV3']

@pulumi.input_type
class RuntimeStackV3Args:
    def __init__(__self__, *,
                 deploy_mode: pulumi.Input[_builtins.str],
                 type: pulumi.Input[_builtins.str],
                 version: pulumi.Input[_builtins.str],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 spec: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a RuntimeStackV3 resource.
        :param pulumi.Input[_builtins.str] deploy_mode: Specifies the deploy mode of the runtime stack.
               The valid value is **virtualmachine**.
        :param pulumi.Input[_builtins.str] type: Specifies the type of the runtime stack.
               The valid values are as follows:
               + **Java**
               + **Tomcat**
        :param pulumi.Input[_builtins.str] version: Specifies the version of the runtime stack.
               The valid format is **{number}.{number}.{number}**, e.g. **1.0.1**.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the runtime stack.  
               The value can contain a maximum of `512` characters.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the runtime stack.  
               The valid length is limited from `2` to `64`, only letters, digits, slash (/), hyphens (-) and underscores (_) are
               allowed. The name must start with a letter and end with a letter or a digit.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the application is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] spec: Specifies the configuration of runtime stack, in JSON format.
               For the structure, please refer to the [documentation](https://support.huaweicloud.com/intl/en-us/api-servicestage/servicestage_06_0229.html#servicestage_06_0229__table51321252171513).
        """
        pulumi.set(__self__, "deploy_mode", deploy_mode)
        pulumi.set(__self__, "type", type)
        pulumi.set(__self__, "version", version)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if spec is not None:
            pulumi.set(__self__, "spec", spec)

    @_builtins.property
    @pulumi.getter(name="deployMode")
    def deploy_mode(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the deploy mode of the runtime stack.
        The valid value is **virtualmachine**.
        """
        return pulumi.get(self, "deploy_mode")

    @deploy_mode.setter
    def deploy_mode(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "deploy_mode", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the type of the runtime stack.
        The valid values are as follows:
        + **Java**
        + **Tomcat**
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the version of the runtime stack.
        The valid format is **{number}.{number}.{number}**, e.g. **1.0.1**.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "version", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the runtime stack.  
        The value can contain a maximum of `512` characters.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the runtime stack.  
        The valid length is limited from `2` to `64`, only letters, digits, slash (/), hyphens (-) and underscores (_) are
        allowed. The name must start with a letter and end with a letter or a digit.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the application is located.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def spec(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the configuration of runtime stack, in JSON format.
        For the structure, please refer to the [documentation](https://support.huaweicloud.com/intl/en-us/api-servicestage/servicestage_06_0229.html#servicestage_06_0229__table51321252171513).
        """
        return pulumi.get(self, "spec")

    @spec.setter
    def spec(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "spec", value)


@pulumi.input_type
class _RuntimeStackV3State:
    def __init__(__self__, *,
                 component_count: Optional[pulumi.Input[_builtins.int]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 creator: Optional[pulumi.Input[_builtins.str]] = None,
                 deploy_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 spec: Optional[pulumi.Input[_builtins.str]] = None,
                 spec_origin: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering RuntimeStackV3 resources.
        :param pulumi.Input[_builtins.int] component_count: The number of components associated with the runtime stack.
        :param pulumi.Input[_builtins.str] created_at: The creation time of the runtime stack, in RFC3339 format.
        :param pulumi.Input[_builtins.str] creator: The creator name of the runtime stack.
        :param pulumi.Input[_builtins.str] deploy_mode: Specifies the deploy mode of the runtime stack.
               The valid value is **virtualmachine**.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the runtime stack.  
               The value can contain a maximum of `512` characters.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the runtime stack.  
               The valid length is limited from `2` to `64`, only letters, digits, slash (/), hyphens (-) and underscores (_) are
               allowed. The name must start with a letter and end with a letter or a digit.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the application is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] spec: Specifies the configuration of runtime stack, in JSON format.
               For the structure, please refer to the [documentation](https://support.huaweicloud.com/intl/en-us/api-servicestage/servicestage_06_0229.html#servicestage_06_0229__table51321252171513).
        :param pulumi.Input[_builtins.str] spec_origin: The script configuration value of this change is also the original value used for comparison with the new value next
               time the change is made. The corresponding parameter name is 'spec'.
        :param pulumi.Input[_builtins.str] status: The current status of the runtime stack.
        :param pulumi.Input[_builtins.str] type: Specifies the type of the runtime stack.
               The valid values are as follows:
               + **Java**
               + **Tomcat**
        :param pulumi.Input[_builtins.str] updated_at: The latest update time of the runtime stack, in RFC3339 format.
        :param pulumi.Input[_builtins.str] version: Specifies the version of the runtime stack.
               The valid format is **{number}.{number}.{number}**, e.g. **1.0.1**.
        """
        if component_count is not None:
            pulumi.set(__self__, "component_count", component_count)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if creator is not None:
            pulumi.set(__self__, "creator", creator)
        if deploy_mode is not None:
            pulumi.set(__self__, "deploy_mode", deploy_mode)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if spec is not None:
            pulumi.set(__self__, "spec", spec)
        if spec_origin is not None:
            pulumi.set(__self__, "spec_origin", spec_origin)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter(name="componentCount")
    def component_count(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The number of components associated with the runtime stack.
        """
        return pulumi.get(self, "component_count")

    @component_count.setter
    def component_count(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "component_count", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The creation time of the runtime stack, in RFC3339 format.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def creator(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The creator name of the runtime stack.
        """
        return pulumi.get(self, "creator")

    @creator.setter
    def creator(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "creator", value)

    @_builtins.property
    @pulumi.getter(name="deployMode")
    def deploy_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the deploy mode of the runtime stack.
        The valid value is **virtualmachine**.
        """
        return pulumi.get(self, "deploy_mode")

    @deploy_mode.setter
    def deploy_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "deploy_mode", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the description of the runtime stack.  
        The value can contain a maximum of `512` characters.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the runtime stack.  
        The valid length is limited from `2` to `64`, only letters, digits, slash (/), hyphens (-) and underscores (_) are
        allowed. The name must start with a letter and end with a letter or a digit.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the application is located.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def spec(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the configuration of runtime stack, in JSON format.
        For the structure, please refer to the [documentation](https://support.huaweicloud.com/intl/en-us/api-servicestage/servicestage_06_0229.html#servicestage_06_0229__table51321252171513).
        """
        return pulumi.get(self, "spec")

    @spec.setter
    def spec(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "spec", value)

    @_builtins.property
    @pulumi.getter(name="specOrigin")
    def spec_origin(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The script configuration value of this change is also the original value used for comparison with the new value next
        time the change is made. The corresponding parameter name is 'spec'.
        """
        return pulumi.get(self, "spec_origin")

    @spec_origin.setter
    def spec_origin(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "spec_origin", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The current status of the runtime stack.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the type of the runtime stack.
        The valid values are as follows:
        + **Java**
        + **Tomcat**
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "type", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The latest update time of the runtime stack, in RFC3339 format.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the version of the runtime stack.
        The valid format is **{number}.{number}.{number}**, e.g. **1.0.1**.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "version", value)


@pulumi.type_token("huaweicloud:ServiceStage/runtimeStackV3:RuntimeStackV3")
class RuntimeStackV3(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 deploy_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 spec: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a custom runtime stack resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        runtime_stack_name = config.require_object("runtimeStackName")
        java_sdk_obs_storage_url = config.require_object("javaSdkObsStorageUrl")
        test = huaweicloud.servicestage.RuntimeStackV3("test",
            name=runtime_stack_name,
            deploy_mode="virtualmachine",
            type="Java",
            version="1.0.1",
            spec=json.dumps({
                "parameters": {
                    "jdk_url": java_sdk_obs_storage_url,
                },
            }),
            description="Created by terraform script")
        ```

        ## Import

        ### Import a runtime stack using its ID

        bash

        ```sh
        $ pulumi import huaweicloud:ServiceStage/runtimeStackV3:RuntimeStackV3 test <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] deploy_mode: Specifies the deploy mode of the runtime stack.
               The valid value is **virtualmachine**.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the runtime stack.  
               The value can contain a maximum of `512` characters.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the runtime stack.  
               The valid length is limited from `2` to `64`, only letters, digits, slash (/), hyphens (-) and underscores (_) are
               allowed. The name must start with a letter and end with a letter or a digit.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the application is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] spec: Specifies the configuration of runtime stack, in JSON format.
               For the structure, please refer to the [documentation](https://support.huaweicloud.com/intl/en-us/api-servicestage/servicestage_06_0229.html#servicestage_06_0229__table51321252171513).
        :param pulumi.Input[_builtins.str] type: Specifies the type of the runtime stack.
               The valid values are as follows:
               + **Java**
               + **Tomcat**
        :param pulumi.Input[_builtins.str] version: Specifies the version of the runtime stack.
               The valid format is **{number}.{number}.{number}**, e.g. **1.0.1**.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RuntimeStackV3Args,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a custom runtime stack resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import json
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        runtime_stack_name = config.require_object("runtimeStackName")
        java_sdk_obs_storage_url = config.require_object("javaSdkObsStorageUrl")
        test = huaweicloud.servicestage.RuntimeStackV3("test",
            name=runtime_stack_name,
            deploy_mode="virtualmachine",
            type="Java",
            version="1.0.1",
            spec=json.dumps({
                "parameters": {
                    "jdk_url": java_sdk_obs_storage_url,
                },
            }),
            description="Created by terraform script")
        ```

        ## Import

        ### Import a runtime stack using its ID

        bash

        ```sh
        $ pulumi import huaweicloud:ServiceStage/runtimeStackV3:RuntimeStackV3 test <id>
        ```

        :param str resource_name: The name of the resource.
        :param RuntimeStackV3Args args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RuntimeStackV3Args, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 deploy_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 spec: Optional[pulumi.Input[_builtins.str]] = None,
                 type: Optional[pulumi.Input[_builtins.str]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RuntimeStackV3Args.__new__(RuntimeStackV3Args)

            if deploy_mode is None and not opts.urn:
                raise TypeError("Missing required property 'deploy_mode'")
            __props__.__dict__["deploy_mode"] = deploy_mode
            __props__.__dict__["description"] = description
            __props__.__dict__["enable_force_new"] = enable_force_new
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            __props__.__dict__["spec"] = spec
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
            if version is None and not opts.urn:
                raise TypeError("Missing required property 'version'")
            __props__.__dict__["version"] = version
            __props__.__dict__["component_count"] = None
            __props__.__dict__["created_at"] = None
            __props__.__dict__["creator"] = None
            __props__.__dict__["spec_origin"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["updated_at"] = None
        super(RuntimeStackV3, __self__).__init__(
            'huaweicloud:ServiceStage/runtimeStackV3:RuntimeStackV3',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            component_count: Optional[pulumi.Input[_builtins.int]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            creator: Optional[pulumi.Input[_builtins.str]] = None,
            deploy_mode: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            spec: Optional[pulumi.Input[_builtins.str]] = None,
            spec_origin: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            type: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None,
            version: Optional[pulumi.Input[_builtins.str]] = None) -> 'RuntimeStackV3':
        """
        Get an existing RuntimeStackV3 resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.int] component_count: The number of components associated with the runtime stack.
        :param pulumi.Input[_builtins.str] created_at: The creation time of the runtime stack, in RFC3339 format.
        :param pulumi.Input[_builtins.str] creator: The creator name of the runtime stack.
        :param pulumi.Input[_builtins.str] deploy_mode: Specifies the deploy mode of the runtime stack.
               The valid value is **virtualmachine**.
        :param pulumi.Input[_builtins.str] description: Specifies the description of the runtime stack.  
               The value can contain a maximum of `512` characters.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the runtime stack.  
               The valid length is limited from `2` to `64`, only letters, digits, slash (/), hyphens (-) and underscores (_) are
               allowed. The name must start with a letter and end with a letter or a digit.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the application is located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[_builtins.str] spec: Specifies the configuration of runtime stack, in JSON format.
               For the structure, please refer to the [documentation](https://support.huaweicloud.com/intl/en-us/api-servicestage/servicestage_06_0229.html#servicestage_06_0229__table51321252171513).
        :param pulumi.Input[_builtins.str] spec_origin: The script configuration value of this change is also the original value used for comparison with the new value next
               time the change is made. The corresponding parameter name is 'spec'.
        :param pulumi.Input[_builtins.str] status: The current status of the runtime stack.
        :param pulumi.Input[_builtins.str] type: Specifies the type of the runtime stack.
               The valid values are as follows:
               + **Java**
               + **Tomcat**
        :param pulumi.Input[_builtins.str] updated_at: The latest update time of the runtime stack, in RFC3339 format.
        :param pulumi.Input[_builtins.str] version: Specifies the version of the runtime stack.
               The valid format is **{number}.{number}.{number}**, e.g. **1.0.1**.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RuntimeStackV3State.__new__(_RuntimeStackV3State)

        __props__.__dict__["component_count"] = component_count
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["creator"] = creator
        __props__.__dict__["deploy_mode"] = deploy_mode
        __props__.__dict__["description"] = description
        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["spec"] = spec
        __props__.__dict__["spec_origin"] = spec_origin
        __props__.__dict__["status"] = status
        __props__.__dict__["type"] = type
        __props__.__dict__["updated_at"] = updated_at
        __props__.__dict__["version"] = version
        return RuntimeStackV3(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="componentCount")
    def component_count(self) -> pulumi.Output[_builtins.int]:
        """
        The number of components associated with the runtime stack.
        """
        return pulumi.get(self, "component_count")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The creation time of the runtime stack, in RFC3339 format.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def creator(self) -> pulumi.Output[_builtins.str]:
        """
        The creator name of the runtime stack.
        """
        return pulumi.get(self, "creator")

    @_builtins.property
    @pulumi.getter(name="deployMode")
    def deploy_mode(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the deploy mode of the runtime stack.
        The valid value is **virtualmachine**.
        """
        return pulumi.get(self, "deploy_mode")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the description of the runtime stack.  
        The value can contain a maximum of `512` characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of the runtime stack.  
        The valid length is limited from `2` to `64`, only letters, digits, slash (/), hyphens (-) and underscores (_) are
        allowed. The name must start with a letter and end with a letter or a digit.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region where the application is located.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def spec(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the configuration of runtime stack, in JSON format.
        For the structure, please refer to the [documentation](https://support.huaweicloud.com/intl/en-us/api-servicestage/servicestage_06_0229.html#servicestage_06_0229__table51321252171513).
        """
        return pulumi.get(self, "spec")

    @_builtins.property
    @pulumi.getter(name="specOrigin")
    def spec_origin(self) -> pulumi.Output[_builtins.str]:
        """
        The script configuration value of this change is also the original value used for comparison with the new value next
        time the change is made. The corresponding parameter name is 'spec'.
        """
        return pulumi.get(self, "spec_origin")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The current status of the runtime stack.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the type of the runtime stack.
        The valid values are as follows:
        + **Java**
        + **Tomcat**
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The latest update time of the runtime stack, in RFC3339 format.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter
    def version(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the version of the runtime stack.
        The valid format is **{number}.{number}.{number}**, e.g. **1.0.1**.
        """
        return pulumi.get(self, "version")

