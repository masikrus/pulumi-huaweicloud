# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetRuntimeStacksV3Result',
    'AwaitableGetRuntimeStacksV3Result',
    'get_runtime_stacks_v3',
    'get_runtime_stacks_v3_output',
]

@pulumi.output_type
class GetRuntimeStacksV3Result:
    """
    A collection of values returned by getRuntimeStacksV3.
    """
    def __init__(__self__, id=None, region=None, runtime_stacks=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if runtime_stacks and not isinstance(runtime_stacks, list):
            raise TypeError("Expected argument 'runtime_stacks' to be a list")
        pulumi.set(__self__, "runtime_stacks", runtime_stacks)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="runtimeStacks")
    def runtime_stacks(self) -> Sequence['outputs.GetRuntimeStacksV3RuntimeStackResult']:
        """
        All runtime stack details.  
        The runtime_stacks structure is documented below.
        """
        return pulumi.get(self, "runtime_stacks")


class AwaitableGetRuntimeStacksV3Result(GetRuntimeStacksV3Result):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRuntimeStacksV3Result(
            id=self.id,
            region=self.region,
            runtime_stacks=self.runtime_stacks)


def get_runtime_stacks_v3(region: Optional[_builtins.str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetRuntimeStacksV3Result:
    """
    Use this data source to query the list of runtime stacks within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.ServiceStage.get_runtime_stacks_v3()
    ```


    :param _builtins.str region: Specifies the region where the runtime stacks are located.  
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:ServiceStage/getRuntimeStacksV3:getRuntimeStacksV3', __args__, opts=opts, typ=GetRuntimeStacksV3Result).value

    return AwaitableGetRuntimeStacksV3Result(
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'),
        runtime_stacks=pulumi.get(__ret__, 'runtime_stacks'))
def get_runtime_stacks_v3_output(region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                 opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetRuntimeStacksV3Result]:
    """
    Use this data source to query the list of runtime stacks within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.ServiceStage.get_runtime_stacks_v3()
    ```


    :param _builtins.str region: Specifies the region where the runtime stacks are located.  
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:ServiceStage/getRuntimeStacksV3:getRuntimeStacksV3', __args__, opts=opts, typ=GetRuntimeStacksV3Result)
    return __ret__.apply(lambda __response__: GetRuntimeStacksV3Result(
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region'),
        runtime_stacks=pulumi.get(__response__, 'runtime_stacks')))
