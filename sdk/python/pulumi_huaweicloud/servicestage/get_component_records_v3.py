# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetComponentRecordsV3Result',
    'AwaitableGetComponentRecordsV3Result',
    'get_component_records_v3',
    'get_component_records_v3_output',
]

@pulumi.output_type
class GetComponentRecordsV3Result:
    """
    A collection of values returned by getComponentRecordsV3.
    """
    def __init__(__self__, application_id=None, component_id=None, id=None, records=None, region=None):
        if application_id and not isinstance(application_id, str):
            raise TypeError("Expected argument 'application_id' to be a str")
        pulumi.set(__self__, "application_id", application_id)
        if component_id and not isinstance(component_id, str):
            raise TypeError("Expected argument 'component_id' to be a str")
        pulumi.set(__self__, "component_id", component_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if records and not isinstance(records, list):
            raise TypeError("Expected argument 'records' to be a list")
        pulumi.set(__self__, "records", records)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="applicationId")
    def application_id(self) -> _builtins.str:
        return pulumi.get(self, "application_id")

    @_builtins.property
    @pulumi.getter(name="componentId")
    def component_id(self) -> _builtins.str:
        return pulumi.get(self, "component_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def records(self) -> Sequence['outputs.GetComponentRecordsV3RecordResult']:
        """
        The list of component execution record.  
        The records structure is documented below.
        """
        return pulumi.get(self, "records")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetComponentRecordsV3Result(GetComponentRecordsV3Result):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetComponentRecordsV3Result(
            application_id=self.application_id,
            component_id=self.component_id,
            id=self.id,
            records=self.records,
            region=self.region)


def get_component_records_v3(application_id: Optional[_builtins.str] = None,
                             component_id: Optional[_builtins.str] = None,
                             region: Optional[_builtins.str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetComponentRecordsV3Result:
    """
    Use this data source to query the list of component execution records within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    application_id = config.require_object("applicationId")
    component_id = config.require_object("componentId")
    test = huaweicloud.ServiceStage.get_component_records_v3(application_id=application_id,
        component_id=component_id)
    ```


    :param _builtins.str application_id: Specifies the ID of the application to which the component belongs.
    :param _builtins.str component_id: Specifies the ID of the component to which the records belong.
    :param _builtins.str region: Specifies the region where the application and component are located.
    """
    __args__ = dict()
    __args__['applicationId'] = application_id
    __args__['componentId'] = component_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:ServiceStage/getComponentRecordsV3:getComponentRecordsV3', __args__, opts=opts, typ=GetComponentRecordsV3Result).value

    return AwaitableGetComponentRecordsV3Result(
        application_id=pulumi.get(__ret__, 'application_id'),
        component_id=pulumi.get(__ret__, 'component_id'),
        id=pulumi.get(__ret__, 'id'),
        records=pulumi.get(__ret__, 'records'),
        region=pulumi.get(__ret__, 'region'))
def get_component_records_v3_output(application_id: Optional[pulumi.Input[_builtins.str]] = None,
                                    component_id: Optional[pulumi.Input[_builtins.str]] = None,
                                    region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetComponentRecordsV3Result]:
    """
    Use this data source to query the list of component execution records within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    application_id = config.require_object("applicationId")
    component_id = config.require_object("componentId")
    test = huaweicloud.ServiceStage.get_component_records_v3(application_id=application_id,
        component_id=component_id)
    ```


    :param _builtins.str application_id: Specifies the ID of the application to which the component belongs.
    :param _builtins.str component_id: Specifies the ID of the component to which the records belong.
    :param _builtins.str region: Specifies the region where the application and component are located.
    """
    __args__ = dict()
    __args__['applicationId'] = application_id
    __args__['componentId'] = component_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:ServiceStage/getComponentRecordsV3:getComponentRecordsV3', __args__, opts=opts, typ=GetComponentRecordsV3Result)
    return __ret__.apply(lambda __response__: GetComponentRecordsV3Result(
        application_id=pulumi.get(__response__, 'application_id'),
        component_id=pulumi.get(__response__, 'component_id'),
        id=pulumi.get(__response__, 'id'),
        records=pulumi.get(__response__, 'records'),
        region=pulumi.get(__response__, 'region')))
