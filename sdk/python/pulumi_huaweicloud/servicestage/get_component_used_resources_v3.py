# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetComponentUsedResourcesV3Result',
    'AwaitableGetComponentUsedResourcesV3Result',
    'get_component_used_resources_v3',
    'get_component_used_resources_v3_output',
]

@pulumi.output_type
class GetComponentUsedResourcesV3Result:
    """
    A collection of values returned by getComponentUsedResourcesV3.
    """
    def __init__(__self__, applications=None, enterprise_projects=None, environments=None, id=None, region=None):
        if applications and not isinstance(applications, list):
            raise TypeError("Expected argument 'applications' to be a list")
        pulumi.set(__self__, "applications", applications)
        if enterprise_projects and not isinstance(enterprise_projects, list):
            raise TypeError("Expected argument 'enterprise_projects' to be a list")
        pulumi.set(__self__, "enterprise_projects", enterprise_projects)
        if environments and not isinstance(environments, list):
            raise TypeError("Expected argument 'environments' to be a list")
        pulumi.set(__self__, "environments", environments)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter
    def applications(self) -> Sequence['outputs.GetComponentUsedResourcesV3ApplicationResult']:
        """
        The application list that component used.
        The applications structure is documented below.
        """
        return pulumi.get(self, "applications")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjects")
    def enterprise_projects(self) -> Sequence[_builtins.str]:
        """
        The ID list of the enterprise projects that component used.
        """
        return pulumi.get(self, "enterprise_projects")

    @_builtins.property
    @pulumi.getter
    def environments(self) -> Sequence['outputs.GetComponentUsedResourcesV3EnvironmentResult']:
        """
        The environment list that component used.
        The environments structure is documented below.
        """
        return pulumi.get(self, "environments")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetComponentUsedResourcesV3Result(GetComponentUsedResourcesV3Result):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetComponentUsedResourcesV3Result(
            applications=self.applications,
            enterprise_projects=self.enterprise_projects,
            environments=self.environments,
            id=self.id,
            region=self.region)


def get_component_used_resources_v3(region: Optional[_builtins.str] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetComponentUsedResourcesV3Result:
    """
    Use this data source to query the component used resources within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.ServiceStage.get_component_used_resources_v3()
    ```


    :param _builtins.str region: Specifies the region where the components are located.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:ServiceStage/getComponentUsedResourcesV3:getComponentUsedResourcesV3', __args__, opts=opts, typ=GetComponentUsedResourcesV3Result).value

    return AwaitableGetComponentUsedResourcesV3Result(
        applications=pulumi.get(__ret__, 'applications'),
        enterprise_projects=pulumi.get(__ret__, 'enterprise_projects'),
        environments=pulumi.get(__ret__, 'environments'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'))
def get_component_used_resources_v3_output(region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                           opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetComponentUsedResourcesV3Result]:
    """
    Use this data source to query the component used resources within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.ServiceStage.get_component_used_resources_v3()
    ```


    :param _builtins.str region: Specifies the region where the components are located.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:ServiceStage/getComponentUsedResourcesV3:getComponentUsedResourcesV3', __args__, opts=opts, typ=GetComponentUsedResourcesV3Result)
    return __ret__.apply(lambda __response__: GetComponentUsedResourcesV3Result(
        applications=pulumi.get(__response__, 'applications'),
        enterprise_projects=pulumi.get(__response__, 'enterprise_projects'),
        environments=pulumi.get(__response__, 'environments'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region')))
