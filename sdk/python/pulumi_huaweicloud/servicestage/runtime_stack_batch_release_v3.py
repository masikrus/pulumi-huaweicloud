# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['RuntimeStackBatchReleaseV3Args', 'RuntimeStackBatchReleaseV3']

@pulumi.input_type
class RuntimeStackBatchReleaseV3Args:
    def __init__(__self__, *,
                 runtime_stack_ids: pulumi.Input[Sequence[pulumi.Input[_builtins.str]]],
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a RuntimeStackBatchReleaseV3 resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] runtime_stack_ids: Specifies the runtime stack IDs to be released.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the runtime stacks are located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        pulumi.set(__self__, "runtime_stack_ids", runtime_stack_ids)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="runtimeStackIds")
    def runtime_stack_ids(self) -> pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]:
        """
        Specifies the runtime stack IDs to be released.
        """
        return pulumi.get(self, "runtime_stack_ids")

    @runtime_stack_ids.setter
    def runtime_stack_ids(self, value: pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]):
        pulumi.set(self, "runtime_stack_ids", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the runtime stacks are located.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _RuntimeStackBatchReleaseV3State:
    def __init__(__self__, *,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 runtime_stack_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None):
        """
        Input properties used for looking up and filtering RuntimeStackBatchReleaseV3 resources.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the runtime stacks are located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] runtime_stack_ids: Specifies the runtime stack IDs to be released.
        """
        if region is not None:
            pulumi.set(__self__, "region", region)
        if runtime_stack_ids is not None:
            pulumi.set(__self__, "runtime_stack_ids", runtime_stack_ids)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region where the runtime stacks are located.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="runtimeStackIds")
    def runtime_stack_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the runtime stack IDs to be released.
        """
        return pulumi.get(self, "runtime_stack_ids")

    @runtime_stack_ids.setter
    def runtime_stack_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "runtime_stack_ids", value)


@pulumi.type_token("huaweicloud:ServiceStage/runtimeStackBatchReleaseV3:RuntimeStackBatchReleaseV3")
class RuntimeStackBatchReleaseV3(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 runtime_stack_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        """
        Use this resource to batch release the runtime stacks within HuaweiCloud.

        > When deleting resources, all runtime stacks in the list (stored in .tfstate) will be canceled release.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the runtime stacks are located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] runtime_stack_ids: Specifies the runtime stack IDs to be released.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RuntimeStackBatchReleaseV3Args,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Use this resource to batch release the runtime stacks within HuaweiCloud.

        > When deleting resources, all runtime stacks in the list (stored in .tfstate) will be canceled release.

        :param str resource_name: The name of the resource.
        :param RuntimeStackBatchReleaseV3Args args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RuntimeStackBatchReleaseV3Args, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 runtime_stack_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RuntimeStackBatchReleaseV3Args.__new__(RuntimeStackBatchReleaseV3Args)

            __props__.__dict__["region"] = region
            if runtime_stack_ids is None and not opts.urn:
                raise TypeError("Missing required property 'runtime_stack_ids'")
            __props__.__dict__["runtime_stack_ids"] = runtime_stack_ids
        super(RuntimeStackBatchReleaseV3, __self__).__init__(
            'huaweicloud:ServiceStage/runtimeStackBatchReleaseV3:RuntimeStackBatchReleaseV3',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            runtime_stack_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None) -> 'RuntimeStackBatchReleaseV3':
        """
        Get an existing RuntimeStackBatchReleaseV3 resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] region: Specifies the region where the runtime stacks are located.  
               If omitted, the provider-level region will be used. Changing this will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] runtime_stack_ids: Specifies the runtime stack IDs to be released.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RuntimeStackBatchReleaseV3State.__new__(_RuntimeStackBatchReleaseV3State)

        __props__.__dict__["region"] = region
        __props__.__dict__["runtime_stack_ids"] = runtime_stack_ids
        return RuntimeStackBatchReleaseV3(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region where the runtime stacks are located.  
        If omitted, the provider-level region will be used. Changing this will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="runtimeStackIds")
    def runtime_stack_ids(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        Specifies the runtime stack IDs to be released.
        """
        return pulumi.get(self, "runtime_stack_ids")

