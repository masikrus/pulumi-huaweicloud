# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetOneClickAlarmRulesResult',
    'AwaitableGetOneClickAlarmRulesResult',
    'get_one_click_alarm_rules',
    'get_one_click_alarm_rules_output',
]

@pulumi.output_type
class GetOneClickAlarmRulesResult:
    """
    A collection of values returned by getOneClickAlarmRules.
    """
    def __init__(__self__, alarms=None, id=None, one_click_alarm_id=None, region=None):
        if alarms and not isinstance(alarms, list):
            raise TypeError("Expected argument 'alarms' to be a list")
        pulumi.set(__self__, "alarms", alarms)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if one_click_alarm_id and not isinstance(one_click_alarm_id, str):
            raise TypeError("Expected argument 'one_click_alarm_id' to be a str")
        pulumi.set(__self__, "one_click_alarm_id", one_click_alarm_id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter
    def alarms(self) -> Sequence['outputs.GetOneClickAlarmRulesAlarmResult']:
        """
        The alarm rule list.
        """
        return pulumi.get(self, "alarms")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="oneClickAlarmId")
    def one_click_alarm_id(self) -> _builtins.str:
        return pulumi.get(self, "one_click_alarm_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetOneClickAlarmRulesResult(GetOneClickAlarmRulesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOneClickAlarmRulesResult(
            alarms=self.alarms,
            id=self.id,
            one_click_alarm_id=self.one_click_alarm_id,
            region=self.region)


def get_one_click_alarm_rules(one_click_alarm_id: Optional[_builtins.str] = None,
                              region: Optional[_builtins.str] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOneClickAlarmRulesResult:
    """
    Use this data source to get the list of CES one-click alarm rules.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    one_click_alarm_id = config.require_object("oneClickAlarmId")
    test = huaweicloud.Cse.get_one_click_alarm_rules(one_click_alarm_id=one_click_alarm_id)
    ```


    :param _builtins.str one_click_alarm_id: Specifies the one-click monitoring ID for a service.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['oneClickAlarmId'] = one_click_alarm_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Cse/getOneClickAlarmRules:getOneClickAlarmRules', __args__, opts=opts, typ=GetOneClickAlarmRulesResult).value

    return AwaitableGetOneClickAlarmRulesResult(
        alarms=pulumi.get(__ret__, 'alarms'),
        id=pulumi.get(__ret__, 'id'),
        one_click_alarm_id=pulumi.get(__ret__, 'one_click_alarm_id'),
        region=pulumi.get(__ret__, 'region'))
def get_one_click_alarm_rules_output(one_click_alarm_id: Optional[pulumi.Input[_builtins.str]] = None,
                                     region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetOneClickAlarmRulesResult]:
    """
    Use this data source to get the list of CES one-click alarm rules.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    one_click_alarm_id = config.require_object("oneClickAlarmId")
    test = huaweicloud.Cse.get_one_click_alarm_rules(one_click_alarm_id=one_click_alarm_id)
    ```


    :param _builtins.str one_click_alarm_id: Specifies the one-click monitoring ID for a service.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['oneClickAlarmId'] = one_click_alarm_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Cse/getOneClickAlarmRules:getOneClickAlarmRules', __args__, opts=opts, typ=GetOneClickAlarmRulesResult)
    return __ret__.apply(lambda __response__: GetOneClickAlarmRulesResult(
        alarms=pulumi.get(__response__, 'alarms'),
        id=pulumi.get(__response__, 'id'),
        one_click_alarm_id=pulumi.get(__response__, 'one_click_alarm_id'),
        region=pulumi.get(__response__, 'region')))
