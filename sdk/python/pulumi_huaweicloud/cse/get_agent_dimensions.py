# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetAgentDimensionsResult',
    'AwaitableGetAgentDimensionsResult',
    'get_agent_dimensions',
    'get_agent_dimensions_output',
]

@pulumi.output_type
class GetAgentDimensionsResult:
    """
    A collection of values returned by getAgentDimensions.
    """
    def __init__(__self__, dim_name=None, dim_value=None, dimensions=None, id=None, instance_id=None, region=None):
        if dim_name and not isinstance(dim_name, str):
            raise TypeError("Expected argument 'dim_name' to be a str")
        pulumi.set(__self__, "dim_name", dim_name)
        if dim_value and not isinstance(dim_value, str):
            raise TypeError("Expected argument 'dim_value' to be a str")
        pulumi.set(__self__, "dim_value", dim_value)
        if dimensions and not isinstance(dimensions, list):
            raise TypeError("Expected argument 'dimensions' to be a list")
        pulumi.set(__self__, "dimensions", dimensions)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="dimName")
    def dim_name(self) -> _builtins.str:
        return pulumi.get(self, "dim_name")

    @_builtins.property
    @pulumi.getter(name="dimValue")
    def dim_value(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "dim_value")

    @_builtins.property
    @pulumi.getter
    def dimensions(self) -> Sequence['outputs.GetAgentDimensionsDimensionResult']:
        """
        The dimension information list.
        """
        return pulumi.get(self, "dimensions")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> _builtins.str:
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetAgentDimensionsResult(GetAgentDimensionsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAgentDimensionsResult(
            dim_name=self.dim_name,
            dim_value=self.dim_value,
            dimensions=self.dimensions,
            id=self.id,
            instance_id=self.instance_id,
            region=self.region)


def get_agent_dimensions(dim_name: Optional[_builtins.str] = None,
                         dim_value: Optional[_builtins.str] = None,
                         instance_id: Optional[_builtins.str] = None,
                         region: Optional[_builtins.str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAgentDimensionsResult:
    """
    Use this data source to get the list of CES agent dimensions.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    dim_name = config.require_object("dimName")
    test = huaweicloud.Cse.get_agent_dimensions(instance_id=instance_id,
        dim_name=dim_name)
    ```


    :param _builtins.str dim_name: Specifies the dimension name.
           The valid values are **mount_point**, **disk**, **proc**, **gpu** and **raid**.
    :param _builtins.str dim_value: Specifies the dimension value.
    :param _builtins.str instance_id: Specifies the instance ID.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['dimName'] = dim_name
    __args__['dimValue'] = dim_value
    __args__['instanceId'] = instance_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Cse/getAgentDimensions:getAgentDimensions', __args__, opts=opts, typ=GetAgentDimensionsResult).value

    return AwaitableGetAgentDimensionsResult(
        dim_name=pulumi.get(__ret__, 'dim_name'),
        dim_value=pulumi.get(__ret__, 'dim_value'),
        dimensions=pulumi.get(__ret__, 'dimensions'),
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        region=pulumi.get(__ret__, 'region'))
def get_agent_dimensions_output(dim_name: Optional[pulumi.Input[_builtins.str]] = None,
                                dim_value: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                                region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAgentDimensionsResult]:
    """
    Use this data source to get the list of CES agent dimensions.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    dim_name = config.require_object("dimName")
    test = huaweicloud.Cse.get_agent_dimensions(instance_id=instance_id,
        dim_name=dim_name)
    ```


    :param _builtins.str dim_name: Specifies the dimension name.
           The valid values are **mount_point**, **disk**, **proc**, **gpu** and **raid**.
    :param _builtins.str dim_value: Specifies the dimension value.
    :param _builtins.str instance_id: Specifies the instance ID.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['dimName'] = dim_name
    __args__['dimValue'] = dim_value
    __args__['instanceId'] = instance_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Cse/getAgentDimensions:getAgentDimensions', __args__, opts=opts, typ=GetAgentDimensionsResult)
    return __ret__.apply(lambda __response__: GetAgentDimensionsResult(
        dim_name=pulumi.get(__response__, 'dim_name'),
        dim_value=pulumi.get(__response__, 'dim_value'),
        dimensions=pulumi.get(__response__, 'dimensions'),
        id=pulumi.get(__response__, 'id'),
        instance_id=pulumi.get(__response__, 'instance_id'),
        region=pulumi.get(__response__, 'region')))
