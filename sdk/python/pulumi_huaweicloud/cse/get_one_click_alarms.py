# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetOneClickAlarmsResult',
    'AwaitableGetOneClickAlarmsResult',
    'get_one_click_alarms',
    'get_one_click_alarms_output',
]

@pulumi.output_type
class GetOneClickAlarmsResult:
    """
    A collection of values returned by getOneClickAlarms.
    """
    def __init__(__self__, id=None, one_click_alarms=None, region=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if one_click_alarms and not isinstance(one_click_alarms, list):
            raise TypeError("Expected argument 'one_click_alarms' to be a list")
        pulumi.set(__self__, "one_click_alarms", one_click_alarms)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="oneClickAlarms")
    def one_click_alarms(self) -> Sequence['outputs.GetOneClickAlarmsOneClickAlarmResult']:
        """
        The one-click monitoring list.
        """
        return pulumi.get(self, "one_click_alarms")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetOneClickAlarmsResult(GetOneClickAlarmsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOneClickAlarmsResult(
            id=self.id,
            one_click_alarms=self.one_click_alarms,
            region=self.region)


def get_one_click_alarms(region: Optional[_builtins.str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOneClickAlarmsResult:
    """
    Use this data source to get the list of CES one-click alarms.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Cse.get_one_click_alarms()
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Cse/getOneClickAlarms:getOneClickAlarms', __args__, opts=opts, typ=GetOneClickAlarmsResult).value

    return AwaitableGetOneClickAlarmsResult(
        id=pulumi.get(__ret__, 'id'),
        one_click_alarms=pulumi.get(__ret__, 'one_click_alarms'),
        region=pulumi.get(__ret__, 'region'))
def get_one_click_alarms_output(region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetOneClickAlarmsResult]:
    """
    Use this data source to get the list of CES one-click alarms.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.Cse.get_one_click_alarms()
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Cse/getOneClickAlarms:getOneClickAlarms', __args__, opts=opts, typ=GetOneClickAlarmsResult)
    return __ret__.apply(lambda __response__: GetOneClickAlarmsResult(
        id=pulumi.get(__response__, 'id'),
        one_click_alarms=pulumi.get(__response__, 'one_click_alarms'),
        region=pulumi.get(__response__, 'region')))
