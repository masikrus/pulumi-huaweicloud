# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['AgentMaintenanceTaskArgs', 'AgentMaintenanceTask']

@pulumi.input_type
class AgentMaintenanceTaskArgs:
    def __init__(__self__, *,
                 invocation_type: pulumi.Input[_builtins.str],
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 invocation_id: Optional[pulumi.Input[_builtins.str]] = None,
                 invocation_target: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None,
                 version_type: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a AgentMaintenanceTask resource.
        :param pulumi.Input[_builtins.str] invocation_type: Specifies the task type.
               The valid value can be **INSTALL**, **UPDATE**, **ROLLBACK** or **RETRY**.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the server ID.
               This parameter is mandatory when the task type is **INSTALL** or **UPDATE**.
        :param pulumi.Input[_builtins.str] invocation_id: Specifies the task ID.
               This parameter is mandatory when the task type is **ROLLBACK** or **RETRY**.
        :param pulumi.Input[_builtins.str] invocation_target: Specifies the task object. Only **telescope** is supported.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this will create new resource.
        :param pulumi.Input[_builtins.str] version: Specifies the version number.
        :param pulumi.Input[_builtins.str] version_type: Specifies the version the agent will be upgraded to.
               The valid value can be **BASIC_VERSION** or **ADVANCE_VERSION**.
        """
        pulumi.set(__self__, "invocation_type", invocation_type)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if invocation_id is not None:
            pulumi.set(__self__, "invocation_id", invocation_id)
        if invocation_target is not None:
            pulumi.set(__self__, "invocation_target", invocation_target)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if version is not None:
            pulumi.set(__self__, "version", version)
        if version_type is not None:
            pulumi.set(__self__, "version_type", version_type)

    @_builtins.property
    @pulumi.getter(name="invocationType")
    def invocation_type(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the task type.
        The valid value can be **INSTALL**, **UPDATE**, **ROLLBACK** or **RETRY**.
        """
        return pulumi.get(self, "invocation_type")

    @invocation_type.setter
    def invocation_type(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "invocation_type", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the server ID.
        This parameter is mandatory when the task type is **INSTALL** or **UPDATE**.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="invocationId")
    def invocation_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the task ID.
        This parameter is mandatory when the task type is **ROLLBACK** or **RETRY**.
        """
        return pulumi.get(self, "invocation_id")

    @invocation_id.setter
    def invocation_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "invocation_id", value)

    @_builtins.property
    @pulumi.getter(name="invocationTarget")
    def invocation_target(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the task object. Only **telescope** is supported.
        """
        return pulumi.get(self, "invocation_target")

    @invocation_target.setter
    def invocation_target(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "invocation_target", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this will create new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the version number.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "version", value)

    @_builtins.property
    @pulumi.getter(name="versionType")
    def version_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the version the agent will be upgraded to.
        The valid value can be **BASIC_VERSION** or **ADVANCE_VERSION**.
        """
        return pulumi.get(self, "version_type")

    @version_type.setter
    def version_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "version_type", value)


@pulumi.input_type
class _AgentMaintenanceTaskState:
    def __init__(__self__, *,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 invocation_id: Optional[pulumi.Input[_builtins.str]] = None,
                 invocation_target: Optional[pulumi.Input[_builtins.str]] = None,
                 invocation_type: Optional[pulumi.Input[_builtins.str]] = None,
                 invocations: Optional[pulumi.Input[Sequence[pulumi.Input['AgentMaintenanceTaskInvocationArgs']]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None,
                 version_type: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering AgentMaintenanceTask resources.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the server ID.
               This parameter is mandatory when the task type is **INSTALL** or **UPDATE**.
        :param pulumi.Input[_builtins.str] invocation_id: Specifies the task ID.
               This parameter is mandatory when the task type is **ROLLBACK** or **RETRY**.
        :param pulumi.Input[_builtins.str] invocation_target: Specifies the task object. Only **telescope** is supported.
        :param pulumi.Input[_builtins.str] invocation_type: Specifies the task type.
               The valid value can be **INSTALL**, **UPDATE**, **ROLLBACK** or **RETRY**.
        :param pulumi.Input[Sequence[pulumi.Input['AgentMaintenanceTaskInvocationArgs']]] invocations: The result of the agent maintenance task creation.
               The invocations structure is documented below.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this will create new resource.
        :param pulumi.Input[_builtins.str] version: Specifies the version number.
        :param pulumi.Input[_builtins.str] version_type: Specifies the version the agent will be upgraded to.
               The valid value can be **BASIC_VERSION** or **ADVANCE_VERSION**.
        """
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if invocation_id is not None:
            pulumi.set(__self__, "invocation_id", invocation_id)
        if invocation_target is not None:
            pulumi.set(__self__, "invocation_target", invocation_target)
        if invocation_type is not None:
            pulumi.set(__self__, "invocation_type", invocation_type)
        if invocations is not None:
            pulumi.set(__self__, "invocations", invocations)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if version is not None:
            pulumi.set(__self__, "version", version)
        if version_type is not None:
            pulumi.set(__self__, "version_type", version_type)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the server ID.
        This parameter is mandatory when the task type is **INSTALL** or **UPDATE**.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @_builtins.property
    @pulumi.getter(name="invocationId")
    def invocation_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the task ID.
        This parameter is mandatory when the task type is **ROLLBACK** or **RETRY**.
        """
        return pulumi.get(self, "invocation_id")

    @invocation_id.setter
    def invocation_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "invocation_id", value)

    @_builtins.property
    @pulumi.getter(name="invocationTarget")
    def invocation_target(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the task object. Only **telescope** is supported.
        """
        return pulumi.get(self, "invocation_target")

    @invocation_target.setter
    def invocation_target(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "invocation_target", value)

    @_builtins.property
    @pulumi.getter(name="invocationType")
    def invocation_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the task type.
        The valid value can be **INSTALL**, **UPDATE**, **ROLLBACK** or **RETRY**.
        """
        return pulumi.get(self, "invocation_type")

    @invocation_type.setter
    def invocation_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "invocation_type", value)

    @_builtins.property
    @pulumi.getter
    def invocations(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AgentMaintenanceTaskInvocationArgs']]]]:
        """
        The result of the agent maintenance task creation.
        The invocations structure is documented below.
        """
        return pulumi.get(self, "invocations")

    @invocations.setter
    def invocations(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AgentMaintenanceTaskInvocationArgs']]]]):
        pulumi.set(self, "invocations", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this will create new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the version number.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "version", value)

    @_builtins.property
    @pulumi.getter(name="versionType")
    def version_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the version the agent will be upgraded to.
        The valid value can be **BASIC_VERSION** or **ADVANCE_VERSION**.
        """
        return pulumi.get(self, "version_type")

    @version_type.setter
    def version_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "version_type", value)


@pulumi.type_token("huaweicloud:Cse/agentMaintenanceTask:AgentMaintenanceTask")
class AgentMaintenanceTask(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 invocation_id: Optional[pulumi.Input[_builtins.str]] = None,
                 invocation_target: Optional[pulumi.Input[_builtins.str]] = None,
                 invocation_type: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None,
                 version_type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a CES agent maintenance task within HuaweiCloud.

        ## Example Usage

        ### Create an install task

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        test = huaweicloud.cse.AgentMaintenanceTask("test",
            invocation_type="INSTALL",
            instance_id=instance_id)
        ```

        ### Create an update task

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        test = huaweicloud.cse.AgentMaintenanceTask("test",
            invocation_type="UPDATE",
            instance_id=instance_id,
            version_type="ADVANCE_VERSION",
            version="2.7.5.1")
        ```

        ### Create a rollback task

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        invocation_id = config.require_object("invocationId")
        test = huaweicloud.cse.AgentMaintenanceTask("test",
            invocation_type="ROLLBACK",
            invocation_id=invocation_id)
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the server ID.
               This parameter is mandatory when the task type is **INSTALL** or **UPDATE**.
        :param pulumi.Input[_builtins.str] invocation_id: Specifies the task ID.
               This parameter is mandatory when the task type is **ROLLBACK** or **RETRY**.
        :param pulumi.Input[_builtins.str] invocation_target: Specifies the task object. Only **telescope** is supported.
        :param pulumi.Input[_builtins.str] invocation_type: Specifies the task type.
               The valid value can be **INSTALL**, **UPDATE**, **ROLLBACK** or **RETRY**.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this will create new resource.
        :param pulumi.Input[_builtins.str] version: Specifies the version number.
        :param pulumi.Input[_builtins.str] version_type: Specifies the version the agent will be upgraded to.
               The valid value can be **BASIC_VERSION** or **ADVANCE_VERSION**.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AgentMaintenanceTaskArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a CES agent maintenance task within HuaweiCloud.

        ## Example Usage

        ### Create an install task

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        test = huaweicloud.cse.AgentMaintenanceTask("test",
            invocation_type="INSTALL",
            instance_id=instance_id)
        ```

        ### Create an update task

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        instance_id = config.require_object("instanceId")
        test = huaweicloud.cse.AgentMaintenanceTask("test",
            invocation_type="UPDATE",
            instance_id=instance_id,
            version_type="ADVANCE_VERSION",
            version="2.7.5.1")
        ```

        ### Create a rollback task

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        invocation_id = config.require_object("invocationId")
        test = huaweicloud.cse.AgentMaintenanceTask("test",
            invocation_type="ROLLBACK",
            invocation_id=invocation_id)
        ```

        :param str resource_name: The name of the resource.
        :param AgentMaintenanceTaskArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AgentMaintenanceTaskArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[_builtins.str]] = None,
                 invocation_id: Optional[pulumi.Input[_builtins.str]] = None,
                 invocation_target: Optional[pulumi.Input[_builtins.str]] = None,
                 invocation_type: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None,
                 version_type: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AgentMaintenanceTaskArgs.__new__(AgentMaintenanceTaskArgs)

            __props__.__dict__["enable_force_new"] = enable_force_new
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["invocation_id"] = invocation_id
            __props__.__dict__["invocation_target"] = invocation_target
            if invocation_type is None and not opts.urn:
                raise TypeError("Missing required property 'invocation_type'")
            __props__.__dict__["invocation_type"] = invocation_type
            __props__.__dict__["region"] = region
            __props__.__dict__["version"] = version
            __props__.__dict__["version_type"] = version_type
            __props__.__dict__["invocations"] = None
        super(AgentMaintenanceTask, __self__).__init__(
            'huaweicloud:Cse/agentMaintenanceTask:AgentMaintenanceTask',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            instance_id: Optional[pulumi.Input[_builtins.str]] = None,
            invocation_id: Optional[pulumi.Input[_builtins.str]] = None,
            invocation_target: Optional[pulumi.Input[_builtins.str]] = None,
            invocation_type: Optional[pulumi.Input[_builtins.str]] = None,
            invocations: Optional[pulumi.Input[Sequence[pulumi.Input[Union['AgentMaintenanceTaskInvocationArgs', 'AgentMaintenanceTaskInvocationArgsDict']]]]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            version: Optional[pulumi.Input[_builtins.str]] = None,
            version_type: Optional[pulumi.Input[_builtins.str]] = None) -> 'AgentMaintenanceTask':
        """
        Get an existing AgentMaintenanceTask resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] instance_id: Specifies the server ID.
               This parameter is mandatory when the task type is **INSTALL** or **UPDATE**.
        :param pulumi.Input[_builtins.str] invocation_id: Specifies the task ID.
               This parameter is mandatory when the task type is **ROLLBACK** or **RETRY**.
        :param pulumi.Input[_builtins.str] invocation_target: Specifies the task object. Only **telescope** is supported.
        :param pulumi.Input[_builtins.str] invocation_type: Specifies the task type.
               The valid value can be **INSTALL**, **UPDATE**, **ROLLBACK** or **RETRY**.
        :param pulumi.Input[Sequence[pulumi.Input[Union['AgentMaintenanceTaskInvocationArgs', 'AgentMaintenanceTaskInvocationArgsDict']]]] invocations: The result of the agent maintenance task creation.
               The invocations structure is documented below.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this will create new resource.
        :param pulumi.Input[_builtins.str] version: Specifies the version number.
        :param pulumi.Input[_builtins.str] version_type: Specifies the version the agent will be upgraded to.
               The valid value can be **BASIC_VERSION** or **ADVANCE_VERSION**.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AgentMaintenanceTaskState.__new__(_AgentMaintenanceTaskState)

        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["invocation_id"] = invocation_id
        __props__.__dict__["invocation_target"] = invocation_target
        __props__.__dict__["invocation_type"] = invocation_type
        __props__.__dict__["invocations"] = invocations
        __props__.__dict__["region"] = region
        __props__.__dict__["version"] = version
        __props__.__dict__["version_type"] = version_type
        return AgentMaintenanceTask(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the server ID.
        This parameter is mandatory when the task type is **INSTALL** or **UPDATE**.
        """
        return pulumi.get(self, "instance_id")

    @_builtins.property
    @pulumi.getter(name="invocationId")
    def invocation_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the task ID.
        This parameter is mandatory when the task type is **ROLLBACK** or **RETRY**.
        """
        return pulumi.get(self, "invocation_id")

    @_builtins.property
    @pulumi.getter(name="invocationTarget")
    def invocation_target(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the task object. Only **telescope** is supported.
        """
        return pulumi.get(self, "invocation_target")

    @_builtins.property
    @pulumi.getter(name="invocationType")
    def invocation_type(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the task type.
        The valid value can be **INSTALL**, **UPDATE**, **ROLLBACK** or **RETRY**.
        """
        return pulumi.get(self, "invocation_type")

    @_builtins.property
    @pulumi.getter
    def invocations(self) -> pulumi.Output[Sequence['outputs.AgentMaintenanceTaskInvocation']]:
        """
        The result of the agent maintenance task creation.
        The invocations structure is documented below.
        """
        return pulumi.get(self, "invocations")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this will create new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def version(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the version number.
        """
        return pulumi.get(self, "version")

    @_builtins.property
    @pulumi.getter(name="versionType")
    def version_type(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the version the agent will be upgraded to.
        The valid value can be **BASIC_VERSION** or **ADVANCE_VERSION**.
        """
        return pulumi.get(self, "version_type")

