# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['OneClickAlarmArgs', 'OneClickAlarm']

@pulumi.input_type
class OneClickAlarmArgs:
    def __init__(__self__, *,
                 dimension_names: pulumi.Input['OneClickAlarmDimensionNamesArgs'],
                 notification_enabled: pulumi.Input[_builtins.bool],
                 one_click_alarm_id: pulumi.Input[_builtins.str],
                 alarm_notifications: Optional[pulumi.Input[Sequence[pulumi.Input['OneClickAlarmAlarmNotificationArgs']]]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 notification_begin_time: Optional[pulumi.Input[_builtins.str]] = None,
                 notification_end_time: Optional[pulumi.Input[_builtins.str]] = None,
                 ok_notifications: Optional[pulumi.Input[Sequence[pulumi.Input['OneClickAlarmOkNotificationArgs']]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a OneClickAlarm resource.
        :param pulumi.Input['OneClickAlarmDimensionNamesArgs'] dimension_names: Specifies dimensions in metric and event alarm rules that have
               one-click monitoring enabled.
               
               The dimension_names structure is documented below.
        :param pulumi.Input[_builtins.bool] notification_enabled: Specifies whether to enable the alarm notification.
        :param pulumi.Input[_builtins.str] one_click_alarm_id: Specifies the default one-click monitoring ID.
               The value can be queried from the CES one-click alarms data source.
        :param pulumi.Input[Sequence[pulumi.Input['OneClickAlarmAlarmNotificationArgs']]] alarm_notifications: Specifies the action to be triggered by an alarm.
               + If the value of `notification_enabled` is **false**, this parameter should not be set.
               + If the value of `notification_enabled` is **true**, this parameter is required.
               
               The alarm_notifications structure is documented below.
        :param pulumi.Input[_builtins.str] notification_begin_time: Specifies the time when the alarm notification was enabled.
        :param pulumi.Input[_builtins.str] notification_end_time: Specifies the time when the alarm notification was disabled.
               
               <a name="DimensionNames"></a>
               The `dimension_names` block supports:
        :param pulumi.Input[Sequence[pulumi.Input['OneClickAlarmOkNotificationArgs']]] ok_notifications: Specifies the action to be triggered after an alarm is cleared.
               + If the value of `notification_enabled` is **false**, this parameter should not be set.
               
               The ok_notifications structure is documented below.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        """
        pulumi.set(__self__, "dimension_names", dimension_names)
        pulumi.set(__self__, "notification_enabled", notification_enabled)
        pulumi.set(__self__, "one_click_alarm_id", one_click_alarm_id)
        if alarm_notifications is not None:
            pulumi.set(__self__, "alarm_notifications", alarm_notifications)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if notification_begin_time is not None:
            pulumi.set(__self__, "notification_begin_time", notification_begin_time)
        if notification_end_time is not None:
            pulumi.set(__self__, "notification_end_time", notification_end_time)
        if ok_notifications is not None:
            pulumi.set(__self__, "ok_notifications", ok_notifications)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="dimensionNames")
    def dimension_names(self) -> pulumi.Input['OneClickAlarmDimensionNamesArgs']:
        """
        Specifies dimensions in metric and event alarm rules that have
        one-click monitoring enabled.

        The dimension_names structure is documented below.
        """
        return pulumi.get(self, "dimension_names")

    @dimension_names.setter
    def dimension_names(self, value: pulumi.Input['OneClickAlarmDimensionNamesArgs']):
        pulumi.set(self, "dimension_names", value)

    @_builtins.property
    @pulumi.getter(name="notificationEnabled")
    def notification_enabled(self) -> pulumi.Input[_builtins.bool]:
        """
        Specifies whether to enable the alarm notification.
        """
        return pulumi.get(self, "notification_enabled")

    @notification_enabled.setter
    def notification_enabled(self, value: pulumi.Input[_builtins.bool]):
        pulumi.set(self, "notification_enabled", value)

    @_builtins.property
    @pulumi.getter(name="oneClickAlarmId")
    def one_click_alarm_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the default one-click monitoring ID.
        The value can be queried from the CES one-click alarms data source.
        """
        return pulumi.get(self, "one_click_alarm_id")

    @one_click_alarm_id.setter
    def one_click_alarm_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "one_click_alarm_id", value)

    @_builtins.property
    @pulumi.getter(name="alarmNotifications")
    def alarm_notifications(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OneClickAlarmAlarmNotificationArgs']]]]:
        """
        Specifies the action to be triggered by an alarm.
        + If the value of `notification_enabled` is **false**, this parameter should not be set.
        + If the value of `notification_enabled` is **true**, this parameter is required.

        The alarm_notifications structure is documented below.
        """
        return pulumi.get(self, "alarm_notifications")

    @alarm_notifications.setter
    def alarm_notifications(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OneClickAlarmAlarmNotificationArgs']]]]):
        pulumi.set(self, "alarm_notifications", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="notificationBeginTime")
    def notification_begin_time(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the time when the alarm notification was enabled.
        """
        return pulumi.get(self, "notification_begin_time")

    @notification_begin_time.setter
    def notification_begin_time(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "notification_begin_time", value)

    @_builtins.property
    @pulumi.getter(name="notificationEndTime")
    def notification_end_time(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the time when the alarm notification was disabled.

        <a name="DimensionNames"></a>
        The `dimension_names` block supports:
        """
        return pulumi.get(self, "notification_end_time")

    @notification_end_time.setter
    def notification_end_time(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "notification_end_time", value)

    @_builtins.property
    @pulumi.getter(name="okNotifications")
    def ok_notifications(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OneClickAlarmOkNotificationArgs']]]]:
        """
        Specifies the action to be triggered after an alarm is cleared.
        + If the value of `notification_enabled` is **false**, this parameter should not be set.

        The ok_notifications structure is documented below.
        """
        return pulumi.get(self, "ok_notifications")

    @ok_notifications.setter
    def ok_notifications(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OneClickAlarmOkNotificationArgs']]]]):
        pulumi.set(self, "ok_notifications", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _OneClickAlarmState:
    def __init__(__self__, *,
                 alarm_notifications: Optional[pulumi.Input[Sequence[pulumi.Input['OneClickAlarmAlarmNotificationArgs']]]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 dimension_names: Optional[pulumi.Input['OneClickAlarmDimensionNamesArgs']] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 enabled: Optional[pulumi.Input[_builtins.bool]] = None,
                 namespace: Optional[pulumi.Input[_builtins.str]] = None,
                 notification_begin_time: Optional[pulumi.Input[_builtins.str]] = None,
                 notification_enabled: Optional[pulumi.Input[_builtins.bool]] = None,
                 notification_end_time: Optional[pulumi.Input[_builtins.str]] = None,
                 ok_notifications: Optional[pulumi.Input[Sequence[pulumi.Input['OneClickAlarmOkNotificationArgs']]]] = None,
                 one_click_alarm_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering OneClickAlarm resources.
        :param pulumi.Input[Sequence[pulumi.Input['OneClickAlarmAlarmNotificationArgs']]] alarm_notifications: Specifies the action to be triggered by an alarm.
               + If the value of `notification_enabled` is **false**, this parameter should not be set.
               + If the value of `notification_enabled` is **true**, this parameter is required.
               
               The alarm_notifications structure is documented below.
        :param pulumi.Input[_builtins.str] description: The supplementary information about one-click monitoring.
        :param pulumi.Input['OneClickAlarmDimensionNamesArgs'] dimension_names: Specifies dimensions in metric and event alarm rules that have
               one-click monitoring enabled.
               
               The dimension_names structure is documented below.
        :param pulumi.Input[_builtins.bool] enabled: Whether the one-click monitoring is enabled.
        :param pulumi.Input[_builtins.str] namespace: The metric namespace.
        :param pulumi.Input[_builtins.str] notification_begin_time: Specifies the time when the alarm notification was enabled.
        :param pulumi.Input[_builtins.bool] notification_enabled: Specifies whether to enable the alarm notification.
        :param pulumi.Input[_builtins.str] notification_end_time: Specifies the time when the alarm notification was disabled.
               
               <a name="DimensionNames"></a>
               The `dimension_names` block supports:
        :param pulumi.Input[Sequence[pulumi.Input['OneClickAlarmOkNotificationArgs']]] ok_notifications: Specifies the action to be triggered after an alarm is cleared.
               + If the value of `notification_enabled` is **false**, this parameter should not be set.
               
               The ok_notifications structure is documented below.
        :param pulumi.Input[_builtins.str] one_click_alarm_id: Specifies the default one-click monitoring ID.
               The value can be queried from the CES one-click alarms data source.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        """
        if alarm_notifications is not None:
            pulumi.set(__self__, "alarm_notifications", alarm_notifications)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if dimension_names is not None:
            pulumi.set(__self__, "dimension_names", dimension_names)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if enabled is not None:
            pulumi.set(__self__, "enabled", enabled)
        if namespace is not None:
            pulumi.set(__self__, "namespace", namespace)
        if notification_begin_time is not None:
            pulumi.set(__self__, "notification_begin_time", notification_begin_time)
        if notification_enabled is not None:
            pulumi.set(__self__, "notification_enabled", notification_enabled)
        if notification_end_time is not None:
            pulumi.set(__self__, "notification_end_time", notification_end_time)
        if ok_notifications is not None:
            pulumi.set(__self__, "ok_notifications", ok_notifications)
        if one_click_alarm_id is not None:
            pulumi.set(__self__, "one_click_alarm_id", one_click_alarm_id)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="alarmNotifications")
    def alarm_notifications(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OneClickAlarmAlarmNotificationArgs']]]]:
        """
        Specifies the action to be triggered by an alarm.
        + If the value of `notification_enabled` is **false**, this parameter should not be set.
        + If the value of `notification_enabled` is **true**, this parameter is required.

        The alarm_notifications structure is documented below.
        """
        return pulumi.get(self, "alarm_notifications")

    @alarm_notifications.setter
    def alarm_notifications(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OneClickAlarmAlarmNotificationArgs']]]]):
        pulumi.set(self, "alarm_notifications", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The supplementary information about one-click monitoring.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="dimensionNames")
    def dimension_names(self) -> Optional[pulumi.Input['OneClickAlarmDimensionNamesArgs']]:
        """
        Specifies dimensions in metric and event alarm rules that have
        one-click monitoring enabled.

        The dimension_names structure is documented below.
        """
        return pulumi.get(self, "dimension_names")

    @dimension_names.setter
    def dimension_names(self, value: Optional[pulumi.Input['OneClickAlarmDimensionNamesArgs']]):
        pulumi.set(self, "dimension_names", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter
    def enabled(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Whether the one-click monitoring is enabled.
        """
        return pulumi.get(self, "enabled")

    @enabled.setter
    def enabled(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enabled", value)

    @_builtins.property
    @pulumi.getter
    def namespace(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The metric namespace.
        """
        return pulumi.get(self, "namespace")

    @namespace.setter
    def namespace(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "namespace", value)

    @_builtins.property
    @pulumi.getter(name="notificationBeginTime")
    def notification_begin_time(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the time when the alarm notification was enabled.
        """
        return pulumi.get(self, "notification_begin_time")

    @notification_begin_time.setter
    def notification_begin_time(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "notification_begin_time", value)

    @_builtins.property
    @pulumi.getter(name="notificationEnabled")
    def notification_enabled(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to enable the alarm notification.
        """
        return pulumi.get(self, "notification_enabled")

    @notification_enabled.setter
    def notification_enabled(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "notification_enabled", value)

    @_builtins.property
    @pulumi.getter(name="notificationEndTime")
    def notification_end_time(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the time when the alarm notification was disabled.

        <a name="DimensionNames"></a>
        The `dimension_names` block supports:
        """
        return pulumi.get(self, "notification_end_time")

    @notification_end_time.setter
    def notification_end_time(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "notification_end_time", value)

    @_builtins.property
    @pulumi.getter(name="okNotifications")
    def ok_notifications(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OneClickAlarmOkNotificationArgs']]]]:
        """
        Specifies the action to be triggered after an alarm is cleared.
        + If the value of `notification_enabled` is **false**, this parameter should not be set.

        The ok_notifications structure is documented below.
        """
        return pulumi.get(self, "ok_notifications")

    @ok_notifications.setter
    def ok_notifications(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OneClickAlarmOkNotificationArgs']]]]):
        pulumi.set(self, "ok_notifications", value)

    @_builtins.property
    @pulumi.getter(name="oneClickAlarmId")
    def one_click_alarm_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the default one-click monitoring ID.
        The value can be queried from the CES one-click alarms data source.
        """
        return pulumi.get(self, "one_click_alarm_id")

    @one_click_alarm_id.setter
    def one_click_alarm_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "one_click_alarm_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.type_token("huaweicloud:Cse/oneClickAlarm:OneClickAlarm")
class OneClickAlarm(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 alarm_notifications: Optional[pulumi.Input[Sequence[pulumi.Input[Union['OneClickAlarmAlarmNotificationArgs', 'OneClickAlarmAlarmNotificationArgsDict']]]]] = None,
                 dimension_names: Optional[pulumi.Input[Union['OneClickAlarmDimensionNamesArgs', 'OneClickAlarmDimensionNamesArgsDict']]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 notification_begin_time: Optional[pulumi.Input[_builtins.str]] = None,
                 notification_enabled: Optional[pulumi.Input[_builtins.bool]] = None,
                 notification_end_time: Optional[pulumi.Input[_builtins.str]] = None,
                 ok_notifications: Optional[pulumi.Input[Sequence[pulumi.Input[Union['OneClickAlarmOkNotificationArgs', 'OneClickAlarmOkNotificationArgsDict']]]]] = None,
                 one_click_alarm_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a CES one-click alarm resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        notification_object = config.require_object("notificationObject")
        test = huaweicloud.cse.OneClickAlarm("test",
            one_click_alarm_id="OBSSystemOneClickAlarm",
            dimension_names={
                "metrics": ["bucket_name"],
                "event": True,
            },
            alarm_notifications=[{
                "type": "notification",
                "notification_lists": [notification_object],
            }],
            ok_notifications=[{
                "type": "notification",
                "notification_lists": [notification_object],
            }],
            notification_enabled=True,
            notification_begin_time="00:00",
            notification_end_time="23:59")
        ```

        ## Import

        The one-click alarm can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Cse/oneClickAlarm:OneClickAlarm test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason.

        The missing attributes include: `one_click_alarm_id`, `dimension_names`, `notification_enabled`, `alarm_notifications`,

        `ok_notifications`, `notification_begin_time`, `notification_end_time`.

        It is generally recommended running `pulumi preview` after importing the one-click alarm.

        You can then decide if changes should be applied to the one-click alarm, or the resource definition should be updated to

        align with the one-click alarm. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_ces_one_click_alarm" "test" {

            ...

          lifecycle {

            ignore_changes = [
            
              one_click_alarm_id, dimension_names, notification_enabled, alarm_notifications,
            
              ok_notifications, notification_begin_time, notification_end_time
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['OneClickAlarmAlarmNotificationArgs', 'OneClickAlarmAlarmNotificationArgsDict']]]] alarm_notifications: Specifies the action to be triggered by an alarm.
               + If the value of `notification_enabled` is **false**, this parameter should not be set.
               + If the value of `notification_enabled` is **true**, this parameter is required.
               
               The alarm_notifications structure is documented below.
        :param pulumi.Input[Union['OneClickAlarmDimensionNamesArgs', 'OneClickAlarmDimensionNamesArgsDict']] dimension_names: Specifies dimensions in metric and event alarm rules that have
               one-click monitoring enabled.
               
               The dimension_names structure is documented below.
        :param pulumi.Input[_builtins.str] notification_begin_time: Specifies the time when the alarm notification was enabled.
        :param pulumi.Input[_builtins.bool] notification_enabled: Specifies whether to enable the alarm notification.
        :param pulumi.Input[_builtins.str] notification_end_time: Specifies the time when the alarm notification was disabled.
               
               <a name="DimensionNames"></a>
               The `dimension_names` block supports:
        :param pulumi.Input[Sequence[pulumi.Input[Union['OneClickAlarmOkNotificationArgs', 'OneClickAlarmOkNotificationArgsDict']]]] ok_notifications: Specifies the action to be triggered after an alarm is cleared.
               + If the value of `notification_enabled` is **false**, this parameter should not be set.
               
               The ok_notifications structure is documented below.
        :param pulumi.Input[_builtins.str] one_click_alarm_id: Specifies the default one-click monitoring ID.
               The value can be queried from the CES one-click alarms data source.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OneClickAlarmArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a CES one-click alarm resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        notification_object = config.require_object("notificationObject")
        test = huaweicloud.cse.OneClickAlarm("test",
            one_click_alarm_id="OBSSystemOneClickAlarm",
            dimension_names={
                "metrics": ["bucket_name"],
                "event": True,
            },
            alarm_notifications=[{
                "type": "notification",
                "notification_lists": [notification_object],
            }],
            ok_notifications=[{
                "type": "notification",
                "notification_lists": [notification_object],
            }],
            notification_enabled=True,
            notification_begin_time="00:00",
            notification_end_time="23:59")
        ```

        ## Import

        The one-click alarm can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Cse/oneClickAlarm:OneClickAlarm test <id>
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason.

        The missing attributes include: `one_click_alarm_id`, `dimension_names`, `notification_enabled`, `alarm_notifications`,

        `ok_notifications`, `notification_begin_time`, `notification_end_time`.

        It is generally recommended running `pulumi preview` after importing the one-click alarm.

        You can then decide if changes should be applied to the one-click alarm, or the resource definition should be updated to

        align with the one-click alarm. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_ces_one_click_alarm" "test" {

            ...

          lifecycle {

            ignore_changes = [
            
              one_click_alarm_id, dimension_names, notification_enabled, alarm_notifications,
            
              ok_notifications, notification_begin_time, notification_end_time
            
            ]

          }

        }

        :param str resource_name: The name of the resource.
        :param OneClickAlarmArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OneClickAlarmArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 alarm_notifications: Optional[pulumi.Input[Sequence[pulumi.Input[Union['OneClickAlarmAlarmNotificationArgs', 'OneClickAlarmAlarmNotificationArgsDict']]]]] = None,
                 dimension_names: Optional[pulumi.Input[Union['OneClickAlarmDimensionNamesArgs', 'OneClickAlarmDimensionNamesArgsDict']]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 notification_begin_time: Optional[pulumi.Input[_builtins.str]] = None,
                 notification_enabled: Optional[pulumi.Input[_builtins.bool]] = None,
                 notification_end_time: Optional[pulumi.Input[_builtins.str]] = None,
                 ok_notifications: Optional[pulumi.Input[Sequence[pulumi.Input[Union['OneClickAlarmOkNotificationArgs', 'OneClickAlarmOkNotificationArgsDict']]]]] = None,
                 one_click_alarm_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OneClickAlarmArgs.__new__(OneClickAlarmArgs)

            __props__.__dict__["alarm_notifications"] = alarm_notifications
            if dimension_names is None and not opts.urn:
                raise TypeError("Missing required property 'dimension_names'")
            __props__.__dict__["dimension_names"] = dimension_names
            __props__.__dict__["enable_force_new"] = enable_force_new
            __props__.__dict__["notification_begin_time"] = notification_begin_time
            if notification_enabled is None and not opts.urn:
                raise TypeError("Missing required property 'notification_enabled'")
            __props__.__dict__["notification_enabled"] = notification_enabled
            __props__.__dict__["notification_end_time"] = notification_end_time
            __props__.__dict__["ok_notifications"] = ok_notifications
            if one_click_alarm_id is None and not opts.urn:
                raise TypeError("Missing required property 'one_click_alarm_id'")
            __props__.__dict__["one_click_alarm_id"] = one_click_alarm_id
            __props__.__dict__["region"] = region
            __props__.__dict__["description"] = None
            __props__.__dict__["enabled"] = None
            __props__.__dict__["namespace"] = None
        super(OneClickAlarm, __self__).__init__(
            'huaweicloud:Cse/oneClickAlarm:OneClickAlarm',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            alarm_notifications: Optional[pulumi.Input[Sequence[pulumi.Input[Union['OneClickAlarmAlarmNotificationArgs', 'OneClickAlarmAlarmNotificationArgsDict']]]]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            dimension_names: Optional[pulumi.Input[Union['OneClickAlarmDimensionNamesArgs', 'OneClickAlarmDimensionNamesArgsDict']]] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            enabled: Optional[pulumi.Input[_builtins.bool]] = None,
            namespace: Optional[pulumi.Input[_builtins.str]] = None,
            notification_begin_time: Optional[pulumi.Input[_builtins.str]] = None,
            notification_enabled: Optional[pulumi.Input[_builtins.bool]] = None,
            notification_end_time: Optional[pulumi.Input[_builtins.str]] = None,
            ok_notifications: Optional[pulumi.Input[Sequence[pulumi.Input[Union['OneClickAlarmOkNotificationArgs', 'OneClickAlarmOkNotificationArgsDict']]]]] = None,
            one_click_alarm_id: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None) -> 'OneClickAlarm':
        """
        Get an existing OneClickAlarm resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['OneClickAlarmAlarmNotificationArgs', 'OneClickAlarmAlarmNotificationArgsDict']]]] alarm_notifications: Specifies the action to be triggered by an alarm.
               + If the value of `notification_enabled` is **false**, this parameter should not be set.
               + If the value of `notification_enabled` is **true**, this parameter is required.
               
               The alarm_notifications structure is documented below.
        :param pulumi.Input[_builtins.str] description: The supplementary information about one-click monitoring.
        :param pulumi.Input[Union['OneClickAlarmDimensionNamesArgs', 'OneClickAlarmDimensionNamesArgsDict']] dimension_names: Specifies dimensions in metric and event alarm rules that have
               one-click monitoring enabled.
               
               The dimension_names structure is documented below.
        :param pulumi.Input[_builtins.bool] enabled: Whether the one-click monitoring is enabled.
        :param pulumi.Input[_builtins.str] namespace: The metric namespace.
        :param pulumi.Input[_builtins.str] notification_begin_time: Specifies the time when the alarm notification was enabled.
        :param pulumi.Input[_builtins.bool] notification_enabled: Specifies whether to enable the alarm notification.
        :param pulumi.Input[_builtins.str] notification_end_time: Specifies the time when the alarm notification was disabled.
               
               <a name="DimensionNames"></a>
               The `dimension_names` block supports:
        :param pulumi.Input[Sequence[pulumi.Input[Union['OneClickAlarmOkNotificationArgs', 'OneClickAlarmOkNotificationArgsDict']]]] ok_notifications: Specifies the action to be triggered after an alarm is cleared.
               + If the value of `notification_enabled` is **false**, this parameter should not be set.
               
               The ok_notifications structure is documented below.
        :param pulumi.Input[_builtins.str] one_click_alarm_id: Specifies the default one-click monitoring ID.
               The value can be queried from the CES one-click alarms data source.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OneClickAlarmState.__new__(_OneClickAlarmState)

        __props__.__dict__["alarm_notifications"] = alarm_notifications
        __props__.__dict__["description"] = description
        __props__.__dict__["dimension_names"] = dimension_names
        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["enabled"] = enabled
        __props__.__dict__["namespace"] = namespace
        __props__.__dict__["notification_begin_time"] = notification_begin_time
        __props__.__dict__["notification_enabled"] = notification_enabled
        __props__.__dict__["notification_end_time"] = notification_end_time
        __props__.__dict__["ok_notifications"] = ok_notifications
        __props__.__dict__["one_click_alarm_id"] = one_click_alarm_id
        __props__.__dict__["region"] = region
        return OneClickAlarm(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="alarmNotifications")
    def alarm_notifications(self) -> pulumi.Output[Optional[Sequence['outputs.OneClickAlarmAlarmNotification']]]:
        """
        Specifies the action to be triggered by an alarm.
        + If the value of `notification_enabled` is **false**, this parameter should not be set.
        + If the value of `notification_enabled` is **true**, this parameter is required.

        The alarm_notifications structure is documented below.
        """
        return pulumi.get(self, "alarm_notifications")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[_builtins.str]:
        """
        The supplementary information about one-click monitoring.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="dimensionNames")
    def dimension_names(self) -> pulumi.Output['outputs.OneClickAlarmDimensionNames']:
        """
        Specifies dimensions in metric and event alarm rules that have
        one-click monitoring enabled.

        The dimension_names structure is documented below.
        """
        return pulumi.get(self, "dimension_names")

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter
    def enabled(self) -> pulumi.Output[_builtins.bool]:
        """
        Whether the one-click monitoring is enabled.
        """
        return pulumi.get(self, "enabled")

    @_builtins.property
    @pulumi.getter
    def namespace(self) -> pulumi.Output[_builtins.str]:
        """
        The metric namespace.
        """
        return pulumi.get(self, "namespace")

    @_builtins.property
    @pulumi.getter(name="notificationBeginTime")
    def notification_begin_time(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the time when the alarm notification was enabled.
        """
        return pulumi.get(self, "notification_begin_time")

    @_builtins.property
    @pulumi.getter(name="notificationEnabled")
    def notification_enabled(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether to enable the alarm notification.
        """
        return pulumi.get(self, "notification_enabled")

    @_builtins.property
    @pulumi.getter(name="notificationEndTime")
    def notification_end_time(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the time when the alarm notification was disabled.

        <a name="DimensionNames"></a>
        The `dimension_names` block supports:
        """
        return pulumi.get(self, "notification_end_time")

    @_builtins.property
    @pulumi.getter(name="okNotifications")
    def ok_notifications(self) -> pulumi.Output[Optional[Sequence['outputs.OneClickAlarmOkNotification']]]:
        """
        Specifies the action to be triggered after an alarm is cleared.
        + If the value of `notification_enabled` is **false**, this parameter should not be set.

        The ok_notifications structure is documented below.
        """
        return pulumi.get(self, "ok_notifications")

    @_builtins.property
    @pulumi.getter(name="oneClickAlarmId")
    def one_click_alarm_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the default one-click monitoring ID.
        The value can be queried from the CES one-click alarms data source.
        """
        return pulumi.get(self, "one_click_alarm_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

