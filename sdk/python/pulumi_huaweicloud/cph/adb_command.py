# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['AdbCommandArgs', 'AdbCommand']

@pulumi.input_type
class AdbCommandArgs:
    def __init__(__self__, *,
                 command: pulumi.Input[_builtins.str],
                 content: pulumi.Input[_builtins.str],
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 phone_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 server_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None):
        """
        The set of arguments for constructing a AdbCommand resource.
        :param pulumi.Input[_builtins.str] command: Specifies the ADB command. The value can be **push**, **install**,
               **install-multiple**, **uninstall**, or **shell**.
        :param pulumi.Input[_builtins.str] content: Specifies the content.
               + When the `command` is **push**, **install**, **install-multiple** or **uninstall**, it indicates OBS object path.
               For example, **obs://obs-bucket-name/obs-file-path/file.tar**.
               + When the `command` is **shell**, it indicates the command to be executed. For example, **ls -l /system**.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] phone_ids: Specifies the IDs of the CPH phone.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] server_ids: Specifies the IDs of CPH server.
        """
        pulumi.set(__self__, "command", command)
        pulumi.set(__self__, "content", content)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if phone_ids is not None:
            pulumi.set(__self__, "phone_ids", phone_ids)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if server_ids is not None:
            pulumi.set(__self__, "server_ids", server_ids)

    @_builtins.property
    @pulumi.getter
    def command(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ADB command. The value can be **push**, **install**,
        **install-multiple**, **uninstall**, or **shell**.
        """
        return pulumi.get(self, "command")

    @command.setter
    def command(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "command", value)

    @_builtins.property
    @pulumi.getter
    def content(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the content.
        + When the `command` is **push**, **install**, **install-multiple** or **uninstall**, it indicates OBS object path.
        For example, **obs://obs-bucket-name/obs-file-path/file.tar**.
        + When the `command` is **shell**, it indicates the command to be executed. For example, **ls -l /system**.
        """
        return pulumi.get(self, "content")

    @content.setter
    def content(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "content", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="phoneIds")
    def phone_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the IDs of the CPH phone.
        """
        return pulumi.get(self, "phone_ids")

    @phone_ids.setter
    def phone_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "phone_ids", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="serverIds")
    def server_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the IDs of CPH server.
        """
        return pulumi.get(self, "server_ids")

    @server_ids.setter
    def server_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "server_ids", value)


@pulumi.input_type
class _AdbCommandState:
    def __init__(__self__, *,
                 command: Optional[pulumi.Input[_builtins.str]] = None,
                 content: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 phone_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 server_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None):
        """
        Input properties used for looking up and filtering AdbCommand resources.
        :param pulumi.Input[_builtins.str] command: Specifies the ADB command. The value can be **push**, **install**,
               **install-multiple**, **uninstall**, or **shell**.
        :param pulumi.Input[_builtins.str] content: Specifies the content.
               + When the `command` is **push**, **install**, **install-multiple** or **uninstall**, it indicates OBS object path.
               For example, **obs://obs-bucket-name/obs-file-path/file.tar**.
               + When the `command` is **shell**, it indicates the command to be executed. For example, **ls -l /system**.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] phone_ids: Specifies the IDs of the CPH phone.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] server_ids: Specifies the IDs of CPH server.
        """
        if command is not None:
            pulumi.set(__self__, "command", command)
        if content is not None:
            pulumi.set(__self__, "content", content)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if phone_ids is not None:
            pulumi.set(__self__, "phone_ids", phone_ids)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if server_ids is not None:
            pulumi.set(__self__, "server_ids", server_ids)

    @_builtins.property
    @pulumi.getter
    def command(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ADB command. The value can be **push**, **install**,
        **install-multiple**, **uninstall**, or **shell**.
        """
        return pulumi.get(self, "command")

    @command.setter
    def command(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "command", value)

    @_builtins.property
    @pulumi.getter
    def content(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the content.
        + When the `command` is **push**, **install**, **install-multiple** or **uninstall**, it indicates OBS object path.
        For example, **obs://obs-bucket-name/obs-file-path/file.tar**.
        + When the `command` is **shell**, it indicates the command to be executed. For example, **ls -l /system**.
        """
        return pulumi.get(self, "content")

    @content.setter
    def content(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "content", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="phoneIds")
    def phone_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the IDs of the CPH phone.
        """
        return pulumi.get(self, "phone_ids")

    @phone_ids.setter
    def phone_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "phone_ids", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="serverIds")
    def server_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the IDs of CPH server.
        """
        return pulumi.get(self, "server_ids")

    @server_ids.setter
    def server_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "server_ids", value)


@pulumi.type_token("huaweicloud:cph/adbCommand:AdbCommand")
class AdbCommand(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 command: Optional[pulumi.Input[_builtins.str]] = None,
                 content: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 phone_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 server_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        """
        Manages a CPH adb command resource within HuaweiCloud.

        > The current resource is a one-time resource, and destroying this resource will not change the current status.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        command = config.require_object("command")
        content = config.require_object("content")
        phone_ids = config.require_object("phoneIds")
        test = huaweicloud.cph.AdbCommand("test",
            command=command,
            content=content,
            phone_ids=phone_ids)
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] command: Specifies the ADB command. The value can be **push**, **install**,
               **install-multiple**, **uninstall**, or **shell**.
        :param pulumi.Input[_builtins.str] content: Specifies the content.
               + When the `command` is **push**, **install**, **install-multiple** or **uninstall**, it indicates OBS object path.
               For example, **obs://obs-bucket-name/obs-file-path/file.tar**.
               + When the `command` is **shell**, it indicates the command to be executed. For example, **ls -l /system**.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] phone_ids: Specifies the IDs of the CPH phone.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] server_ids: Specifies the IDs of CPH server.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AdbCommandArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a CPH adb command resource within HuaweiCloud.

        > The current resource is a one-time resource, and destroying this resource will not change the current status.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        command = config.require_object("command")
        content = config.require_object("content")
        phone_ids = config.require_object("phoneIds")
        test = huaweicloud.cph.AdbCommand("test",
            command=command,
            content=content,
            phone_ids=phone_ids)
        ```

        :param str resource_name: The name of the resource.
        :param AdbCommandArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AdbCommandArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 command: Optional[pulumi.Input[_builtins.str]] = None,
                 content: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 phone_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 server_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AdbCommandArgs.__new__(AdbCommandArgs)

            if command is None and not opts.urn:
                raise TypeError("Missing required property 'command'")
            __props__.__dict__["command"] = command
            if content is None and not opts.urn:
                raise TypeError("Missing required property 'content'")
            __props__.__dict__["content"] = content
            __props__.__dict__["enable_force_new"] = enable_force_new
            __props__.__dict__["phone_ids"] = phone_ids
            __props__.__dict__["region"] = region
            __props__.__dict__["server_ids"] = server_ids
        super(AdbCommand, __self__).__init__(
            'huaweicloud:cph/adbCommand:AdbCommand',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            command: Optional[pulumi.Input[_builtins.str]] = None,
            content: Optional[pulumi.Input[_builtins.str]] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            phone_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            server_ids: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None) -> 'AdbCommand':
        """
        Get an existing AdbCommand resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] command: Specifies the ADB command. The value can be **push**, **install**,
               **install-multiple**, **uninstall**, or **shell**.
        :param pulumi.Input[_builtins.str] content: Specifies the content.
               + When the `command` is **push**, **install**, **install-multiple** or **uninstall**, it indicates OBS object path.
               For example, **obs://obs-bucket-name/obs-file-path/file.tar**.
               + When the `command` is **shell**, it indicates the command to be executed. For example, **ls -l /system**.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] phone_ids: Specifies the IDs of the CPH phone.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] server_ids: Specifies the IDs of CPH server.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AdbCommandState.__new__(_AdbCommandState)

        __props__.__dict__["command"] = command
        __props__.__dict__["content"] = content
        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["phone_ids"] = phone_ids
        __props__.__dict__["region"] = region
        __props__.__dict__["server_ids"] = server_ids
        return AdbCommand(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def command(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ADB command. The value can be **push**, **install**,
        **install-multiple**, **uninstall**, or **shell**.
        """
        return pulumi.get(self, "command")

    @_builtins.property
    @pulumi.getter
    def content(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the content.
        + When the `command` is **push**, **install**, **install-multiple** or **uninstall**, it indicates OBS object path.
        For example, **obs://obs-bucket-name/obs-file-path/file.tar**.
        + When the `command` is **shell**, it indicates the command to be executed. For example, **ls -l /system**.
        """
        return pulumi.get(self, "content")

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter(name="phoneIds")
    def phone_ids(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        Specifies the IDs of the CPH phone.
        """
        return pulumi.get(self, "phone_ids")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="serverIds")
    def server_ids(self) -> pulumi.Output[Optional[Sequence[_builtins.str]]]:
        """
        Specifies the IDs of CPH server.
        """
        return pulumi.get(self, "server_ids")

