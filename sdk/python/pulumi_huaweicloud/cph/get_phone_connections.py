# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetPhoneConnectionsResult',
    'AwaitableGetPhoneConnectionsResult',
    'get_phone_connections',
    'get_phone_connections_output',
]

@pulumi.output_type
class GetPhoneConnectionsResult:
    """
    A collection of values returned by getPhoneConnections.
    """
    def __init__(__self__, client_type=None, connect_infos=None, id=None, phone_ids=None, region=None):
        if client_type and not isinstance(client_type, str):
            raise TypeError("Expected argument 'client_type' to be a str")
        pulumi.set(__self__, "client_type", client_type)
        if connect_infos and not isinstance(connect_infos, list):
            raise TypeError("Expected argument 'connect_infos' to be a list")
        pulumi.set(__self__, "connect_infos", connect_infos)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if phone_ids and not isinstance(phone_ids, list):
            raise TypeError("Expected argument 'phone_ids' to be a list")
        pulumi.set(__self__, "phone_ids", phone_ids)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="clientType")
    def client_type(self) -> _builtins.str:
        return pulumi.get(self, "client_type")

    @_builtins.property
    @pulumi.getter(name="connectInfos")
    def connect_infos(self) -> Sequence['outputs.GetPhoneConnectionsConnectInfoResult']:
        """
        The phone connection list.
        """
        return pulumi.get(self, "connect_infos")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="phoneIds")
    def phone_ids(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "phone_ids")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetPhoneConnectionsResult(GetPhoneConnectionsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPhoneConnectionsResult(
            client_type=self.client_type,
            connect_infos=self.connect_infos,
            id=self.id,
            phone_ids=self.phone_ids,
            region=self.region)


def get_phone_connections(client_type: Optional[_builtins.str] = None,
                          phone_ids: Optional[Sequence[_builtins.str]] = None,
                          region: Optional[_builtins.str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPhoneConnectionsResult:
    """
    Use this data source to get a list of CPH phone connections.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    phone_ids = config.require_object("phoneIds")
    client_type = config.require_object("clientType")
    test = huaweicloud.cph.get_phone_connections(phone_ids=phone_ids,
        client_type=client_type)
    ```


    :param _builtins.str client_type: Specifies the client type applying for access.
           The values are as follows:
           + **ANDROID**
           + **WINDOWS**
           + **H5_MOBILE**
           + **H5_PC**
           + **IOS**
    :param Sequence[_builtins.str] phone_ids: Specifies the phone ids.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['clientType'] = client_type
    __args__['phoneIds'] = phone_ids
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:cph/getPhoneConnections:getPhoneConnections', __args__, opts=opts, typ=GetPhoneConnectionsResult).value

    return AwaitableGetPhoneConnectionsResult(
        client_type=pulumi.get(__ret__, 'client_type'),
        connect_infos=pulumi.get(__ret__, 'connect_infos'),
        id=pulumi.get(__ret__, 'id'),
        phone_ids=pulumi.get(__ret__, 'phone_ids'),
        region=pulumi.get(__ret__, 'region'))
def get_phone_connections_output(client_type: Optional[pulumi.Input[_builtins.str]] = None,
                                 phone_ids: Optional[pulumi.Input[Sequence[_builtins.str]]] = None,
                                 region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                 opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetPhoneConnectionsResult]:
    """
    Use this data source to get a list of CPH phone connections.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    phone_ids = config.require_object("phoneIds")
    client_type = config.require_object("clientType")
    test = huaweicloud.cph.get_phone_connections(phone_ids=phone_ids,
        client_type=client_type)
    ```


    :param _builtins.str client_type: Specifies the client type applying for access.
           The values are as follows:
           + **ANDROID**
           + **WINDOWS**
           + **H5_MOBILE**
           + **H5_PC**
           + **IOS**
    :param Sequence[_builtins.str] phone_ids: Specifies the phone ids.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['clientType'] = client_type
    __args__['phoneIds'] = phone_ids
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:cph/getPhoneConnections:getPhoneConnections', __args__, opts=opts, typ=GetPhoneConnectionsResult)
    return __ret__.apply(lambda __response__: GetPhoneConnectionsResult(
        client_type=pulumi.get(__response__, 'client_type'),
        connect_infos=pulumi.get(__response__, 'connect_infos'),
        id=pulumi.get(__response__, 'id'),
        phone_ids=pulumi.get(__response__, 'phone_ids'),
        region=pulumi.get(__response__, 'region')))
