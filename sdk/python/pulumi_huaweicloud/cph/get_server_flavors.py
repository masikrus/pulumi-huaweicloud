# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetServerFlavorsResult',
    'AwaitableGetServerFlavorsResult',
    'get_server_flavors',
    'get_server_flavors_output',
]

@pulumi.output_type
class GetServerFlavorsResult:
    """
    A collection of values returned by getServerFlavors.
    """
    def __init__(__self__, flavors=None, id=None, memory=None, region=None, type=None, vcpus=None):
        if flavors and not isinstance(flavors, list):
            raise TypeError("Expected argument 'flavors' to be a list")
        pulumi.set(__self__, "flavors", flavors)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if memory and not isinstance(memory, int):
            raise TypeError("Expected argument 'memory' to be a int")
        pulumi.set(__self__, "memory", memory)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)
        if vcpus and not isinstance(vcpus, int):
            raise TypeError("Expected argument 'vcpus' to be a int")
        pulumi.set(__self__, "vcpus", vcpus)

    @_builtins.property
    @pulumi.getter
    def flavors(self) -> Sequence['outputs.GetServerFlavorsFlavorResult']:
        """
        The list of flavor detail.
        The Flavors structure is documented below.
        """
        return pulumi.get(self, "flavors")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def memory(self) -> Optional[_builtins.int]:
        """
        The extended description of the ram.
        """
        return pulumi.get(self, "memory")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[_builtins.str]:
        """
        The type of the CPH server flavor.  
        The options are as follows:
        + **0**: Cloud phone servers are designed for app hosting and multi-platform live streaming.
        + **1**: Cloud mobile gaming servers, GPU hardware acceleration and graphics interfaces
        allow you to run mobile games on the cloud.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter
    def vcpus(self) -> Optional[_builtins.int]:
        """
        The extended description of the vcpus.
        """
        return pulumi.get(self, "vcpus")


class AwaitableGetServerFlavorsResult(GetServerFlavorsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetServerFlavorsResult(
            flavors=self.flavors,
            id=self.id,
            memory=self.memory,
            region=self.region,
            type=self.type,
            vcpus=self.vcpus)


def get_server_flavors(memory: Optional[_builtins.int] = None,
                       region: Optional[_builtins.str] = None,
                       type: Optional[_builtins.str] = None,
                       vcpus: Optional[_builtins.int] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetServerFlavorsResult:
    """
    Use this data source to get available flavors of CPH server.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    flavor = huaweicloud.cph.get_server_flavors(type="0")
    ```


    :param _builtins.int memory: The ram of the CPH server in GB.
    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    :param _builtins.str type: The type of the CPH server flavor.  
           The options are as follows:
           + **0**: Cloud phone servers are designed for app hosting and multi-platform live streaming.
           + **1**: Cloud mobile gaming servers, GPU hardware acceleration and graphics interfaces
           allow you to run mobile games on the cloud.
    :param _builtins.int vcpus: The vcpus of the CPH server.
    """
    __args__ = dict()
    __args__['memory'] = memory
    __args__['region'] = region
    __args__['type'] = type
    __args__['vcpus'] = vcpus
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:cph/getServerFlavors:getServerFlavors', __args__, opts=opts, typ=GetServerFlavorsResult).value

    return AwaitableGetServerFlavorsResult(
        flavors=pulumi.get(__ret__, 'flavors'),
        id=pulumi.get(__ret__, 'id'),
        memory=pulumi.get(__ret__, 'memory'),
        region=pulumi.get(__ret__, 'region'),
        type=pulumi.get(__ret__, 'type'),
        vcpus=pulumi.get(__ret__, 'vcpus'))
def get_server_flavors_output(memory: Optional[pulumi.Input[Optional[_builtins.int]]] = None,
                              region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                              type: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                              vcpus: Optional[pulumi.Input[Optional[_builtins.int]]] = None,
                              opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetServerFlavorsResult]:
    """
    Use this data source to get available flavors of CPH server.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    flavor = huaweicloud.cph.get_server_flavors(type="0")
    ```


    :param _builtins.int memory: The ram of the CPH server in GB.
    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    :param _builtins.str type: The type of the CPH server flavor.  
           The options are as follows:
           + **0**: Cloud phone servers are designed for app hosting and multi-platform live streaming.
           + **1**: Cloud mobile gaming servers, GPU hardware acceleration and graphics interfaces
           allow you to run mobile games on the cloud.
    :param _builtins.int vcpus: The vcpus of the CPH server.
    """
    __args__ = dict()
    __args__['memory'] = memory
    __args__['region'] = region
    __args__['type'] = type
    __args__['vcpus'] = vcpus
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:cph/getServerFlavors:getServerFlavors', __args__, opts=opts, typ=GetServerFlavorsResult)
    return __ret__.apply(lambda __response__: GetServerFlavorsResult(
        flavors=pulumi.get(__response__, 'flavors'),
        id=pulumi.get(__response__, 'id'),
        memory=pulumi.get(__response__, 'memory'),
        region=pulumi.get(__response__, 'region'),
        type=pulumi.get(__response__, 'type'),
        vcpus=pulumi.get(__response__, 'vcpus')))
