# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['ShareAppArgs', 'ShareApp']

@pulumi.input_type
class ShareAppArgs:
    def __init__(__self__, *,
                 bucket_name: pulumi.Input[_builtins.str],
                 object_path: pulumi.Input[_builtins.str],
                 package_name: pulumi.Input[_builtins.str],
                 server_id: pulumi.Input[_builtins.str],
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 pre_install_app: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a ShareApp resource.
        :param pulumi.Input[_builtins.str] bucket_name: Specifies the OBS bucket name.
        :param pulumi.Input[_builtins.str] object_path: Specifies the OBS object path.
               The naming format of tar file type is **<package_name>_<version_name>.tar**. For example, **com.cph.config_v1.1**.
        :param pulumi.Input[_builtins.str] package_name: Specifies the package name.
               The valid value can be **com.cph.config**, **com.cph.config.level1** or **com.cph.config.level2**.
        :param pulumi.Input[_builtins.str] server_id: Specifies the CPH server ID.
        :param pulumi.Input[_builtins.int] pre_install_app: Specifies whether to pre-install the application.
               The valid value can be **0** (Pre-installed) or **1** (Not pre-installed). Defaults to **0**.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        """
        pulumi.set(__self__, "bucket_name", bucket_name)
        pulumi.set(__self__, "object_path", object_path)
        pulumi.set(__self__, "package_name", package_name)
        pulumi.set(__self__, "server_id", server_id)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if pre_install_app is not None:
            pulumi.set(__self__, "pre_install_app", pre_install_app)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="bucketName")
    def bucket_name(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the OBS bucket name.
        """
        return pulumi.get(self, "bucket_name")

    @bucket_name.setter
    def bucket_name(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "bucket_name", value)

    @_builtins.property
    @pulumi.getter(name="objectPath")
    def object_path(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the OBS object path.
        The naming format of tar file type is **<package_name>_<version_name>.tar**. For example, **com.cph.config_v1.1**.
        """
        return pulumi.get(self, "object_path")

    @object_path.setter
    def object_path(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "object_path", value)

    @_builtins.property
    @pulumi.getter(name="packageName")
    def package_name(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the package name.
        The valid value can be **com.cph.config**, **com.cph.config.level1** or **com.cph.config.level2**.
        """
        return pulumi.get(self, "package_name")

    @package_name.setter
    def package_name(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "package_name", value)

    @_builtins.property
    @pulumi.getter(name="serverId")
    def server_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the CPH server ID.
        """
        return pulumi.get(self, "server_id")

    @server_id.setter
    def server_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "server_id", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="preInstallApp")
    def pre_install_app(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies whether to pre-install the application.
        The valid value can be **0** (Pre-installed) or **1** (Not pre-installed). Defaults to **0**.
        """
        return pulumi.get(self, "pre_install_app")

    @pre_install_app.setter
    def pre_install_app(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "pre_install_app", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _ShareAppState:
    def __init__(__self__, *,
                 bucket_name: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 object_path: Optional[pulumi.Input[_builtins.str]] = None,
                 package_name: Optional[pulumi.Input[_builtins.str]] = None,
                 pre_install_app: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 server_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering ShareApp resources.
        :param pulumi.Input[_builtins.str] bucket_name: Specifies the OBS bucket name.
        :param pulumi.Input[_builtins.str] object_path: Specifies the OBS object path.
               The naming format of tar file type is **<package_name>_<version_name>.tar**. For example, **com.cph.config_v1.1**.
        :param pulumi.Input[_builtins.str] package_name: Specifies the package name.
               The valid value can be **com.cph.config**, **com.cph.config.level1** or **com.cph.config.level2**.
        :param pulumi.Input[_builtins.int] pre_install_app: Specifies whether to pre-install the application.
               The valid value can be **0** (Pre-installed) or **1** (Not pre-installed). Defaults to **0**.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] server_id: Specifies the CPH server ID.
        """
        if bucket_name is not None:
            pulumi.set(__self__, "bucket_name", bucket_name)
        if enable_force_new is not None:
            pulumi.set(__self__, "enable_force_new", enable_force_new)
        if object_path is not None:
            pulumi.set(__self__, "object_path", object_path)
        if package_name is not None:
            pulumi.set(__self__, "package_name", package_name)
        if pre_install_app is not None:
            pulumi.set(__self__, "pre_install_app", pre_install_app)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if server_id is not None:
            pulumi.set(__self__, "server_id", server_id)

    @_builtins.property
    @pulumi.getter(name="bucketName")
    def bucket_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the OBS bucket name.
        """
        return pulumi.get(self, "bucket_name")

    @bucket_name.setter
    def bucket_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "bucket_name", value)

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @enable_force_new.setter
    def enable_force_new(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enable_force_new", value)

    @_builtins.property
    @pulumi.getter(name="objectPath")
    def object_path(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the OBS object path.
        The naming format of tar file type is **<package_name>_<version_name>.tar**. For example, **com.cph.config_v1.1**.
        """
        return pulumi.get(self, "object_path")

    @object_path.setter
    def object_path(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "object_path", value)

    @_builtins.property
    @pulumi.getter(name="packageName")
    def package_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the package name.
        The valid value can be **com.cph.config**, **com.cph.config.level1** or **com.cph.config.level2**.
        """
        return pulumi.get(self, "package_name")

    @package_name.setter
    def package_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "package_name", value)

    @_builtins.property
    @pulumi.getter(name="preInstallApp")
    def pre_install_app(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies whether to pre-install the application.
        The valid value can be **0** (Pre-installed) or **1** (Not pre-installed). Defaults to **0**.
        """
        return pulumi.get(self, "pre_install_app")

    @pre_install_app.setter
    def pre_install_app(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "pre_install_app", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="serverId")
    def server_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the CPH server ID.
        """
        return pulumi.get(self, "server_id")

    @server_id.setter
    def server_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "server_id", value)


@pulumi.type_token("huaweicloud:cph/shareApp:ShareApp")
class ShareApp(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bucket_name: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 object_path: Optional[pulumi.Input[_builtins.str]] = None,
                 package_name: Optional[pulumi.Input[_builtins.str]] = None,
                 pre_install_app: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 server_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a CPH share app resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        package_name = config.require_object("packageName")
        bucket_name = config.require_object("bucketName")
        object_path = config.require_object("objectPath")
        server_id = config.require_object("serverId")
        test = huaweicloud.cph.ShareApp("test",
            server_id=server_id,
            package_name=package_name,
            bucket_name=bucket_name,
            object_path=object_path,
            pre_install_app=0)
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] bucket_name: Specifies the OBS bucket name.
        :param pulumi.Input[_builtins.str] object_path: Specifies the OBS object path.
               The naming format of tar file type is **<package_name>_<version_name>.tar**. For example, **com.cph.config_v1.1**.
        :param pulumi.Input[_builtins.str] package_name: Specifies the package name.
               The valid value can be **com.cph.config**, **com.cph.config.level1** or **com.cph.config.level2**.
        :param pulumi.Input[_builtins.int] pre_install_app: Specifies whether to pre-install the application.
               The valid value can be **0** (Pre-installed) or **1** (Not pre-installed). Defaults to **0**.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] server_id: Specifies the CPH server ID.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ShareAppArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a CPH share app resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        package_name = config.require_object("packageName")
        bucket_name = config.require_object("bucketName")
        object_path = config.require_object("objectPath")
        server_id = config.require_object("serverId")
        test = huaweicloud.cph.ShareApp("test",
            server_id=server_id,
            package_name=package_name,
            bucket_name=bucket_name,
            object_path=object_path,
            pre_install_app=0)
        ```

        :param str resource_name: The name of the resource.
        :param ShareAppArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ShareAppArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bucket_name: Optional[pulumi.Input[_builtins.str]] = None,
                 enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
                 object_path: Optional[pulumi.Input[_builtins.str]] = None,
                 package_name: Optional[pulumi.Input[_builtins.str]] = None,
                 pre_install_app: Optional[pulumi.Input[_builtins.int]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 server_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ShareAppArgs.__new__(ShareAppArgs)

            if bucket_name is None and not opts.urn:
                raise TypeError("Missing required property 'bucket_name'")
            __props__.__dict__["bucket_name"] = bucket_name
            __props__.__dict__["enable_force_new"] = enable_force_new
            if object_path is None and not opts.urn:
                raise TypeError("Missing required property 'object_path'")
            __props__.__dict__["object_path"] = object_path
            if package_name is None and not opts.urn:
                raise TypeError("Missing required property 'package_name'")
            __props__.__dict__["package_name"] = package_name
            __props__.__dict__["pre_install_app"] = pre_install_app
            __props__.__dict__["region"] = region
            if server_id is None and not opts.urn:
                raise TypeError("Missing required property 'server_id'")
            __props__.__dict__["server_id"] = server_id
        super(ShareApp, __self__).__init__(
            'huaweicloud:cph/shareApp:ShareApp',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            bucket_name: Optional[pulumi.Input[_builtins.str]] = None,
            enable_force_new: Optional[pulumi.Input[_builtins.str]] = None,
            object_path: Optional[pulumi.Input[_builtins.str]] = None,
            package_name: Optional[pulumi.Input[_builtins.str]] = None,
            pre_install_app: Optional[pulumi.Input[_builtins.int]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            server_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'ShareApp':
        """
        Get an existing ShareApp resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] bucket_name: Specifies the OBS bucket name.
        :param pulumi.Input[_builtins.str] object_path: Specifies the OBS object path.
               The naming format of tar file type is **<package_name>_<version_name>.tar**. For example, **com.cph.config_v1.1**.
        :param pulumi.Input[_builtins.str] package_name: Specifies the package name.
               The valid value can be **com.cph.config**, **com.cph.config.level1** or **com.cph.config.level2**.
        :param pulumi.Input[_builtins.int] pre_install_app: Specifies whether to pre-install the application.
               The valid value can be **0** (Pre-installed) or **1** (Not pre-installed). Defaults to **0**.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[_builtins.str] server_id: Specifies the CPH server ID.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ShareAppState.__new__(_ShareAppState)

        __props__.__dict__["bucket_name"] = bucket_name
        __props__.__dict__["enable_force_new"] = enable_force_new
        __props__.__dict__["object_path"] = object_path
        __props__.__dict__["package_name"] = package_name
        __props__.__dict__["pre_install_app"] = pre_install_app
        __props__.__dict__["region"] = region
        __props__.__dict__["server_id"] = server_id
        return ShareApp(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="bucketName")
    def bucket_name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the OBS bucket name.
        """
        return pulumi.get(self, "bucket_name")

    @_builtins.property
    @pulumi.getter(name="enableForceNew")
    def enable_force_new(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "enable_force_new")

    @_builtins.property
    @pulumi.getter(name="objectPath")
    def object_path(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the OBS object path.
        The naming format of tar file type is **<package_name>_<version_name>.tar**. For example, **com.cph.config_v1.1**.
        """
        return pulumi.get(self, "object_path")

    @_builtins.property
    @pulumi.getter(name="packageName")
    def package_name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the package name.
        The valid value can be **com.cph.config**, **com.cph.config.level1** or **com.cph.config.level2**.
        """
        return pulumi.get(self, "package_name")

    @_builtins.property
    @pulumi.getter(name="preInstallApp")
    def pre_install_app(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        Specifies whether to pre-install the application.
        The valid value can be **0** (Pre-installed) or **1** (Not pre-installed). Defaults to **0**.
        """
        return pulumi.get(self, "pre_install_app")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="serverId")
    def server_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the CPH server ID.
        """
        return pulumi.get(self, "server_id")

