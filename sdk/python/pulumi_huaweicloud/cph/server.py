# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ServerArgs', 'Server']

@pulumi.input_type
class ServerArgs:
    def __init__(__self__, *,
                 auto_renew: pulumi.Input[_builtins.str],
                 image_id: pulumi.Input[_builtins.str],
                 period: pulumi.Input[_builtins.int],
                 period_unit: pulumi.Input[_builtins.str],
                 phone_flavor: pulumi.Input[_builtins.str],
                 server_flavor: pulumi.Input[_builtins.str],
                 subnet_id: pulumi.Input[_builtins.str],
                 vpc_id: pulumi.Input[_builtins.str],
                 availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth: Optional[pulumi.Input['ServerBandwidthArgs']] = None,
                 eip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 eip_type: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 keypair_name: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 phone_data_volume: Optional[pulumi.Input['ServerPhoneDataVolumeArgs']] = None,
                 ports: Optional[pulumi.Input[Sequence[pulumi.Input['ServerPortArgs']]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 server_share_data_volume: Optional[pulumi.Input['ServerServerShareDataVolumeArgs']] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None):
        """
        The set of arguments for constructing a Server resource.
        :param pulumi.Input[_builtins.str] auto_renew: Whether auto renew is enabled. Valid values are **true** and **false**.
               Defaults to false.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] image_id: The cloud phone image ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.int] period: The charging period.  
               If `period_unit` is set to **month**, the value ranges from `1` to `9`.
               If `period_unit` is set to **year**, the value ranges from `1` to `3`.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] period_unit: The charging period unit.  
               Valid values are **month** and **year**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] phone_flavor: The cloud phone flavor.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] server_flavor: The CPH server flavor.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] subnet_id: The ID of subnet which the cloud server belongs to.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] vpc_id: The ID of VPC which the cloud server belongs to.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] availability_zone: The name of the AZ where the cloud server is located.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input['ServerBandwidthArgs'] bandwidth: The bandwidth of an EIP that will be automatically assigned to
               the cloud server.
               
               Changing this parameter will create a new resource.
               The BandWidth structure is documented below.
        :param pulumi.Input[_builtins.str] eip_id: The ID of an **existing** EIP assigned to the cloud server.
               This parameter and `eip_type`, `bandwidth` are alternative.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] eip_type: The type of an EIP that will be automatically assigned to the cloud server.
               The options are as follows:
               + **5_telcom**: China Telecom.
               + **5_union**: China Unicom.
               + **5_bgp**: Dynamic BGP.
               + **5_sbgp**: Static BGP.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] enterprise_project_id: The enterprise project ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] keypair_name: Specifies the key pair name, which is used for logging in to
               the cloud phone through ADB.
        :param pulumi.Input[_builtins.str] name: The application port name, which can contain a maximum of 16 bytes.  
               The key service name cannot be **adb** or **vnc**.
        :param pulumi.Input['ServerPhoneDataVolumeArgs'] phone_data_volume: The phone data volume.
               The phone_data_volume structure is documented below.
        :param pulumi.Input[Sequence[pulumi.Input['ServerPortArgs']]] ports: The application port enabled by the cloud phone.
               Changing this parameter will create a new resource.
               The ApplicationPort structure is documented below.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input['ServerServerShareDataVolumeArgs'] server_share_data_volume: The server share data volume.
               The server_share_data_volume structure is documented below.
               
               <a name="cphServer_BandWidth"></a>
               The `BandWidth` block supports:
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the CPH server.
        """
        pulumi.set(__self__, "auto_renew", auto_renew)
        pulumi.set(__self__, "image_id", image_id)
        pulumi.set(__self__, "period", period)
        pulumi.set(__self__, "period_unit", period_unit)
        pulumi.set(__self__, "phone_flavor", phone_flavor)
        pulumi.set(__self__, "server_flavor", server_flavor)
        pulumi.set(__self__, "subnet_id", subnet_id)
        pulumi.set(__self__, "vpc_id", vpc_id)
        if availability_zone is not None:
            pulumi.set(__self__, "availability_zone", availability_zone)
        if bandwidth is not None:
            pulumi.set(__self__, "bandwidth", bandwidth)
        if eip_id is not None:
            pulumi.set(__self__, "eip_id", eip_id)
        if eip_type is not None:
            pulumi.set(__self__, "eip_type", eip_type)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if keypair_name is not None:
            pulumi.set(__self__, "keypair_name", keypair_name)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if phone_data_volume is not None:
            pulumi.set(__self__, "phone_data_volume", phone_data_volume)
        if ports is not None:
            pulumi.set(__self__, "ports", ports)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if server_share_data_volume is not None:
            pulumi.set(__self__, "server_share_data_volume", server_share_data_volume)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> pulumi.Input[_builtins.str]:
        """
        Whether auto renew is enabled. Valid values are **true** and **false**.
        Defaults to false.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "auto_renew")

    @auto_renew.setter
    def auto_renew(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "auto_renew", value)

    @_builtins.property
    @pulumi.getter(name="imageId")
    def image_id(self) -> pulumi.Input[_builtins.str]:
        """
        The cloud phone image ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "image_id")

    @image_id.setter
    def image_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "image_id", value)

    @_builtins.property
    @pulumi.getter
    def period(self) -> pulumi.Input[_builtins.int]:
        """
        The charging period.  
        If `period_unit` is set to **month**, the value ranges from `1` to `9`.
        If `period_unit` is set to **year**, the value ranges from `1` to `3`.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "period", value)

    @_builtins.property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> pulumi.Input[_builtins.str]:
        """
        The charging period unit.  
        Valid values are **month** and **year**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "period_unit")

    @period_unit.setter
    def period_unit(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "period_unit", value)

    @_builtins.property
    @pulumi.getter(name="phoneFlavor")
    def phone_flavor(self) -> pulumi.Input[_builtins.str]:
        """
        The cloud phone flavor.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "phone_flavor")

    @phone_flavor.setter
    def phone_flavor(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "phone_flavor", value)

    @_builtins.property
    @pulumi.getter(name="serverFlavor")
    def server_flavor(self) -> pulumi.Input[_builtins.str]:
        """
        The CPH server flavor.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "server_flavor")

    @server_flavor.setter
    def server_flavor(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "server_flavor", value)

    @_builtins.property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> pulumi.Input[_builtins.str]:
        """
        The ID of subnet which the cloud server belongs to.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "subnet_id", value)

    @_builtins.property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Input[_builtins.str]:
        """
        The ID of VPC which the cloud server belongs to.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "vpc_id", value)

    @_builtins.property
    @pulumi.getter(name="availabilityZone")
    def availability_zone(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the AZ where the cloud server is located.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "availability_zone")

    @availability_zone.setter
    def availability_zone(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "availability_zone", value)

    @_builtins.property
    @pulumi.getter
    def bandwidth(self) -> Optional[pulumi.Input['ServerBandwidthArgs']]:
        """
        The bandwidth of an EIP that will be automatically assigned to
        the cloud server.

        Changing this parameter will create a new resource.
        The BandWidth structure is documented below.
        """
        return pulumi.get(self, "bandwidth")

    @bandwidth.setter
    def bandwidth(self, value: Optional[pulumi.Input['ServerBandwidthArgs']]):
        pulumi.set(self, "bandwidth", value)

    @_builtins.property
    @pulumi.getter(name="eipId")
    def eip_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of an **existing** EIP assigned to the cloud server.
        This parameter and `eip_type`, `bandwidth` are alternative.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "eip_id")

    @eip_id.setter
    def eip_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "eip_id", value)

    @_builtins.property
    @pulumi.getter(name="eipType")
    def eip_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The type of an EIP that will be automatically assigned to the cloud server.
        The options are as follows:
        + **5_telcom**: China Telecom.
        + **5_union**: China Unicom.
        + **5_bgp**: Dynamic BGP.
        + **5_sbgp**: Static BGP.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "eip_type")

    @eip_type.setter
    def eip_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "eip_type", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The enterprise project ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="keypairName")
    def keypair_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the key pair name, which is used for logging in to
        the cloud phone through ADB.
        """
        return pulumi.get(self, "keypair_name")

    @keypair_name.setter
    def keypair_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "keypair_name", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The application port name, which can contain a maximum of 16 bytes.  
        The key service name cannot be **adb** or **vnc**.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="phoneDataVolume")
    def phone_data_volume(self) -> Optional[pulumi.Input['ServerPhoneDataVolumeArgs']]:
        """
        The phone data volume.
        The phone_data_volume structure is documented below.
        """
        return pulumi.get(self, "phone_data_volume")

    @phone_data_volume.setter
    def phone_data_volume(self, value: Optional[pulumi.Input['ServerPhoneDataVolumeArgs']]):
        pulumi.set(self, "phone_data_volume", value)

    @_builtins.property
    @pulumi.getter
    def ports(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ServerPortArgs']]]]:
        """
        The application port enabled by the cloud phone.
        Changing this parameter will create a new resource.
        The ApplicationPort structure is documented below.
        """
        return pulumi.get(self, "ports")

    @ports.setter
    def ports(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ServerPortArgs']]]]):
        pulumi.set(self, "ports", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="serverShareDataVolume")
    def server_share_data_volume(self) -> Optional[pulumi.Input['ServerServerShareDataVolumeArgs']]:
        """
        The server share data volume.
        The server_share_data_volume structure is documented below.

        <a name="cphServer_BandWidth"></a>
        The `BandWidth` block supports:
        """
        return pulumi.get(self, "server_share_data_volume")

    @server_share_data_volume.setter
    def server_share_data_volume(self, value: Optional[pulumi.Input['ServerServerShareDataVolumeArgs']]):
        pulumi.set(self, "server_share_data_volume", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the key/value pairs to associate with the CPH server.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _ServerState:
    def __init__(__self__, *,
                 addresses: Optional[pulumi.Input[Sequence[pulumi.Input['ServerAddressArgs']]]] = None,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth: Optional[pulumi.Input['ServerBandwidthArgs']] = None,
                 eip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 eip_type: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 image_id: Optional[pulumi.Input[_builtins.str]] = None,
                 keypair_name: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 order_id: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 phone_data_volume: Optional[pulumi.Input['ServerPhoneDataVolumeArgs']] = None,
                 phone_flavor: Optional[pulumi.Input[_builtins.str]] = None,
                 ports: Optional[pulumi.Input[Sequence[pulumi.Input['ServerPortArgs']]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 security_groups: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 server_flavor: Optional[pulumi.Input[_builtins.str]] = None,
                 server_share_data_volume: Optional[pulumi.Input['ServerServerShareDataVolumeArgs']] = None,
                 status: Optional[pulumi.Input[_builtins.int]] = None,
                 subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 vpc_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering Server resources.
        :param pulumi.Input[Sequence[pulumi.Input['ServerAddressArgs']]] addresses: The IP addresses of the CPH server.
               The Address structure is documented below.
        :param pulumi.Input[_builtins.str] auto_renew: Whether auto renew is enabled. Valid values are **true** and **false**.
               Defaults to false.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] availability_zone: The name of the AZ where the cloud server is located.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input['ServerBandwidthArgs'] bandwidth: The bandwidth of an EIP that will be automatically assigned to
               the cloud server.
               
               Changing this parameter will create a new resource.
               The BandWidth structure is documented below.
        :param pulumi.Input[_builtins.str] eip_id: The ID of an **existing** EIP assigned to the cloud server.
               This parameter and `eip_type`, `bandwidth` are alternative.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] eip_type: The type of an EIP that will be automatically assigned to the cloud server.
               The options are as follows:
               + **5_telcom**: China Telecom.
               + **5_union**: China Unicom.
               + **5_bgp**: Dynamic BGP.
               + **5_sbgp**: Static BGP.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] enterprise_project_id: The enterprise project ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] image_id: The cloud phone image ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] keypair_name: Specifies the key pair name, which is used for logging in to
               the cloud phone through ADB.
        :param pulumi.Input[_builtins.str] name: The application port name, which can contain a maximum of 16 bytes.  
               The key service name cannot be **adb** or **vnc**.
        :param pulumi.Input[_builtins.str] order_id: The order ID.
        :param pulumi.Input[_builtins.int] period: The charging period.  
               If `period_unit` is set to **month**, the value ranges from `1` to `9`.
               If `period_unit` is set to **year**, the value ranges from `1` to `3`.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] period_unit: The charging period unit.  
               Valid values are **month** and **year**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input['ServerPhoneDataVolumeArgs'] phone_data_volume: The phone data volume.
               The phone_data_volume structure is documented below.
        :param pulumi.Input[_builtins.str] phone_flavor: The cloud phone flavor.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input['ServerPortArgs']]] ports: The application port enabled by the cloud phone.
               Changing this parameter will create a new resource.
               The ApplicationPort structure is documented below.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] security_groups: The list of the security groups bound to the extension NIC of the CPH server.
        :param pulumi.Input[_builtins.str] server_flavor: The CPH server flavor.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input['ServerServerShareDataVolumeArgs'] server_share_data_volume: The server share data volume.
               The server_share_data_volume structure is documented below.
               
               <a name="cphServer_BandWidth"></a>
               The `BandWidth` block supports:
        :param pulumi.Input[_builtins.int] status: The CPH server status.  
               The options are as follows:
               + **0**, **1**, **3**, and **4**: Creating.
               + **2**: Abnormal.
               + **5**: Normal.
               + **8**: Frozen.
               + **10**: Stopped.
               + **11**: Being stopped.
               + **12**: Stopping failed.
               + **13**: Starting.
        :param pulumi.Input[_builtins.str] subnet_id: The ID of subnet which the cloud server belongs to.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the CPH server.
        :param pulumi.Input[_builtins.str] vpc_id: The ID of VPC which the cloud server belongs to.
               
               Changing this parameter will create a new resource.
        """
        if addresses is not None:
            pulumi.set(__self__, "addresses", addresses)
        if auto_renew is not None:
            pulumi.set(__self__, "auto_renew", auto_renew)
        if availability_zone is not None:
            pulumi.set(__self__, "availability_zone", availability_zone)
        if bandwidth is not None:
            pulumi.set(__self__, "bandwidth", bandwidth)
        if eip_id is not None:
            pulumi.set(__self__, "eip_id", eip_id)
        if eip_type is not None:
            pulumi.set(__self__, "eip_type", eip_type)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if image_id is not None:
            pulumi.set(__self__, "image_id", image_id)
        if keypair_name is not None:
            pulumi.set(__self__, "keypair_name", keypair_name)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if order_id is not None:
            pulumi.set(__self__, "order_id", order_id)
        if period is not None:
            pulumi.set(__self__, "period", period)
        if period_unit is not None:
            pulumi.set(__self__, "period_unit", period_unit)
        if phone_data_volume is not None:
            pulumi.set(__self__, "phone_data_volume", phone_data_volume)
        if phone_flavor is not None:
            pulumi.set(__self__, "phone_flavor", phone_flavor)
        if ports is not None:
            pulumi.set(__self__, "ports", ports)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if security_groups is not None:
            pulumi.set(__self__, "security_groups", security_groups)
        if server_flavor is not None:
            pulumi.set(__self__, "server_flavor", server_flavor)
        if server_share_data_volume is not None:
            pulumi.set(__self__, "server_share_data_volume", server_share_data_volume)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if subnet_id is not None:
            pulumi.set(__self__, "subnet_id", subnet_id)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if vpc_id is not None:
            pulumi.set(__self__, "vpc_id", vpc_id)

    @_builtins.property
    @pulumi.getter
    def addresses(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ServerAddressArgs']]]]:
        """
        The IP addresses of the CPH server.
        The Address structure is documented below.
        """
        return pulumi.get(self, "addresses")

    @addresses.setter
    def addresses(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ServerAddressArgs']]]]):
        pulumi.set(self, "addresses", value)

    @_builtins.property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Whether auto renew is enabled. Valid values are **true** and **false**.
        Defaults to false.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "auto_renew")

    @auto_renew.setter
    def auto_renew(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "auto_renew", value)

    @_builtins.property
    @pulumi.getter(name="availabilityZone")
    def availability_zone(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the AZ where the cloud server is located.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "availability_zone")

    @availability_zone.setter
    def availability_zone(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "availability_zone", value)

    @_builtins.property
    @pulumi.getter
    def bandwidth(self) -> Optional[pulumi.Input['ServerBandwidthArgs']]:
        """
        The bandwidth of an EIP that will be automatically assigned to
        the cloud server.

        Changing this parameter will create a new resource.
        The BandWidth structure is documented below.
        """
        return pulumi.get(self, "bandwidth")

    @bandwidth.setter
    def bandwidth(self, value: Optional[pulumi.Input['ServerBandwidthArgs']]):
        pulumi.set(self, "bandwidth", value)

    @_builtins.property
    @pulumi.getter(name="eipId")
    def eip_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of an **existing** EIP assigned to the cloud server.
        This parameter and `eip_type`, `bandwidth` are alternative.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "eip_id")

    @eip_id.setter
    def eip_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "eip_id", value)

    @_builtins.property
    @pulumi.getter(name="eipType")
    def eip_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The type of an EIP that will be automatically assigned to the cloud server.
        The options are as follows:
        + **5_telcom**: China Telecom.
        + **5_union**: China Unicom.
        + **5_bgp**: Dynamic BGP.
        + **5_sbgp**: Static BGP.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "eip_type")

    @eip_type.setter
    def eip_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "eip_type", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The enterprise project ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="imageId")
    def image_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The cloud phone image ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "image_id")

    @image_id.setter
    def image_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "image_id", value)

    @_builtins.property
    @pulumi.getter(name="keypairName")
    def keypair_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the key pair name, which is used for logging in to
        the cloud phone through ADB.
        """
        return pulumi.get(self, "keypair_name")

    @keypair_name.setter
    def keypair_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "keypair_name", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The application port name, which can contain a maximum of 16 bytes.  
        The key service name cannot be **adb** or **vnc**.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="orderId")
    def order_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The order ID.
        """
        return pulumi.get(self, "order_id")

    @order_id.setter
    def order_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "order_id", value)

    @_builtins.property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The charging period.  
        If `period_unit` is set to **month**, the value ranges from `1` to `9`.
        If `period_unit` is set to **year**, the value ranges from `1` to `3`.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "period", value)

    @_builtins.property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The charging period unit.  
        Valid values are **month** and **year**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "period_unit")

    @period_unit.setter
    def period_unit(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "period_unit", value)

    @_builtins.property
    @pulumi.getter(name="phoneDataVolume")
    def phone_data_volume(self) -> Optional[pulumi.Input['ServerPhoneDataVolumeArgs']]:
        """
        The phone data volume.
        The phone_data_volume structure is documented below.
        """
        return pulumi.get(self, "phone_data_volume")

    @phone_data_volume.setter
    def phone_data_volume(self, value: Optional[pulumi.Input['ServerPhoneDataVolumeArgs']]):
        pulumi.set(self, "phone_data_volume", value)

    @_builtins.property
    @pulumi.getter(name="phoneFlavor")
    def phone_flavor(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The cloud phone flavor.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "phone_flavor")

    @phone_flavor.setter
    def phone_flavor(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "phone_flavor", value)

    @_builtins.property
    @pulumi.getter
    def ports(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ServerPortArgs']]]]:
        """
        The application port enabled by the cloud phone.
        Changing this parameter will create a new resource.
        The ApplicationPort structure is documented below.
        """
        return pulumi.get(self, "ports")

    @ports.setter
    def ports(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ServerPortArgs']]]]):
        pulumi.set(self, "ports", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="securityGroups")
    def security_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        The list of the security groups bound to the extension NIC of the CPH server.
        """
        return pulumi.get(self, "security_groups")

    @security_groups.setter
    def security_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "security_groups", value)

    @_builtins.property
    @pulumi.getter(name="serverFlavor")
    def server_flavor(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The CPH server flavor.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "server_flavor")

    @server_flavor.setter
    def server_flavor(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "server_flavor", value)

    @_builtins.property
    @pulumi.getter(name="serverShareDataVolume")
    def server_share_data_volume(self) -> Optional[pulumi.Input['ServerServerShareDataVolumeArgs']]:
        """
        The server share data volume.
        The server_share_data_volume structure is documented below.

        <a name="cphServer_BandWidth"></a>
        The `BandWidth` block supports:
        """
        return pulumi.get(self, "server_share_data_volume")

    @server_share_data_volume.setter
    def server_share_data_volume(self, value: Optional[pulumi.Input['ServerServerShareDataVolumeArgs']]):
        pulumi.set(self, "server_share_data_volume", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The CPH server status.  
        The options are as follows:
        + **0**, **1**, **3**, and **4**: Creating.
        + **2**: Abnormal.
        + **5**: Normal.
        + **8**: Frozen.
        + **10**: Stopped.
        + **11**: Being stopped.
        + **12**: Stopping failed.
        + **13**: Starting.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of subnet which the cloud server belongs to.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "subnet_id", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        """
        Specifies the key/value pairs to associate with the CPH server.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of VPC which the cloud server belongs to.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "vpc_id", value)


@pulumi.type_token("huaweicloud:cph/server:Server")
class Server(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth: Optional[pulumi.Input[Union['ServerBandwidthArgs', 'ServerBandwidthArgsDict']]] = None,
                 eip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 eip_type: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 image_id: Optional[pulumi.Input[_builtins.str]] = None,
                 keypair_name: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 phone_data_volume: Optional[pulumi.Input[Union['ServerPhoneDataVolumeArgs', 'ServerPhoneDataVolumeArgsDict']]] = None,
                 phone_flavor: Optional[pulumi.Input[_builtins.str]] = None,
                 ports: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ServerPortArgs', 'ServerPortArgsDict']]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 server_flavor: Optional[pulumi.Input[_builtins.str]] = None,
                 server_share_data_volume: Optional[pulumi.Input[Union['ServerServerShareDataVolumeArgs', 'ServerServerShareDataVolumeArgsDict']]] = None,
                 subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 vpc_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a CPH server resource within HuaweiCloud.

        ## Example Usage

        ## Import

        The CPH server can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:cph/server:Server test 0ce123456a00f2591fabc00385ff1234
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `image_id`, `eip_id`, `eip_type`, `auto_renew`,

        `period`, and `period_unit`. It is generally recommended running `pulumi preview` after importing a resource.

        You can then decide if changes should be applied to the resource, or the resource definition should be updated to

        align with the resource. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_cph_server" "test" {

            ...
            
            lifecycle {
            
              ignore_changes = [
            
                image_id, eip_id, eip_type, auto_renew, period, period_unit,
            
              ]
            
            }

        }

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] auto_renew: Whether auto renew is enabled. Valid values are **true** and **false**.
               Defaults to false.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] availability_zone: The name of the AZ where the cloud server is located.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Union['ServerBandwidthArgs', 'ServerBandwidthArgsDict']] bandwidth: The bandwidth of an EIP that will be automatically assigned to
               the cloud server.
               
               Changing this parameter will create a new resource.
               The BandWidth structure is documented below.
        :param pulumi.Input[_builtins.str] eip_id: The ID of an **existing** EIP assigned to the cloud server.
               This parameter and `eip_type`, `bandwidth` are alternative.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] eip_type: The type of an EIP that will be automatically assigned to the cloud server.
               The options are as follows:
               + **5_telcom**: China Telecom.
               + **5_union**: China Unicom.
               + **5_bgp**: Dynamic BGP.
               + **5_sbgp**: Static BGP.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] enterprise_project_id: The enterprise project ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] image_id: The cloud phone image ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] keypair_name: Specifies the key pair name, which is used for logging in to
               the cloud phone through ADB.
        :param pulumi.Input[_builtins.str] name: The application port name, which can contain a maximum of 16 bytes.  
               The key service name cannot be **adb** or **vnc**.
        :param pulumi.Input[_builtins.int] period: The charging period.  
               If `period_unit` is set to **month**, the value ranges from `1` to `9`.
               If `period_unit` is set to **year**, the value ranges from `1` to `3`.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] period_unit: The charging period unit.  
               Valid values are **month** and **year**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Union['ServerPhoneDataVolumeArgs', 'ServerPhoneDataVolumeArgsDict']] phone_data_volume: The phone data volume.
               The phone_data_volume structure is documented below.
        :param pulumi.Input[_builtins.str] phone_flavor: The cloud phone flavor.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['ServerPortArgs', 'ServerPortArgsDict']]]] ports: The application port enabled by the cloud phone.
               Changing this parameter will create a new resource.
               The ApplicationPort structure is documented below.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] server_flavor: The CPH server flavor.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Union['ServerServerShareDataVolumeArgs', 'ServerServerShareDataVolumeArgsDict']] server_share_data_volume: The server share data volume.
               The server_share_data_volume structure is documented below.
               
               <a name="cphServer_BandWidth"></a>
               The `BandWidth` block supports:
        :param pulumi.Input[_builtins.str] subnet_id: The ID of subnet which the cloud server belongs to.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the CPH server.
        :param pulumi.Input[_builtins.str] vpc_id: The ID of VPC which the cloud server belongs to.
               
               Changing this parameter will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ServerArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a CPH server resource within HuaweiCloud.

        ## Example Usage

        ## Import

        The CPH server can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:cph/server:Server test 0ce123456a00f2591fabc00385ff1234
        ```

        Note that the imported state may not be identical to your resource definition, due to some attributes missing from the

        API response, security or some other reason. The missing attributes include: `image_id`, `eip_id`, `eip_type`, `auto_renew`,

        `period`, and `period_unit`. It is generally recommended running `pulumi preview` after importing a resource.

        You can then decide if changes should be applied to the resource, or the resource definition should be updated to

        align with the resource. Also you can ignore changes as below.

        hcl

        resource "huaweicloud_cph_server" "test" {

            ...
            
            lifecycle {
            
              ignore_changes = [
            
                image_id, eip_id, eip_type, auto_renew, period, period_unit,
            
              ]
            
            }

        }

        :param str resource_name: The name of the resource.
        :param ServerArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ServerArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                 bandwidth: Optional[pulumi.Input[Union['ServerBandwidthArgs', 'ServerBandwidthArgsDict']]] = None,
                 eip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 eip_type: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 image_id: Optional[pulumi.Input[_builtins.str]] = None,
                 keypair_name: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 phone_data_volume: Optional[pulumi.Input[Union['ServerPhoneDataVolumeArgs', 'ServerPhoneDataVolumeArgsDict']]] = None,
                 phone_flavor: Optional[pulumi.Input[_builtins.str]] = None,
                 ports: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ServerPortArgs', 'ServerPortArgsDict']]]]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 server_flavor: Optional[pulumi.Input[_builtins.str]] = None,
                 server_share_data_volume: Optional[pulumi.Input[Union['ServerServerShareDataVolumeArgs', 'ServerServerShareDataVolumeArgsDict']]] = None,
                 subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 vpc_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ServerArgs.__new__(ServerArgs)

            if auto_renew is None and not opts.urn:
                raise TypeError("Missing required property 'auto_renew'")
            __props__.__dict__["auto_renew"] = auto_renew
            __props__.__dict__["availability_zone"] = availability_zone
            __props__.__dict__["bandwidth"] = bandwidth
            __props__.__dict__["eip_id"] = eip_id
            __props__.__dict__["eip_type"] = eip_type
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            if image_id is None and not opts.urn:
                raise TypeError("Missing required property 'image_id'")
            __props__.__dict__["image_id"] = image_id
            __props__.__dict__["keypair_name"] = keypair_name
            __props__.__dict__["name"] = name
            if period is None and not opts.urn:
                raise TypeError("Missing required property 'period'")
            __props__.__dict__["period"] = period
            if period_unit is None and not opts.urn:
                raise TypeError("Missing required property 'period_unit'")
            __props__.__dict__["period_unit"] = period_unit
            __props__.__dict__["phone_data_volume"] = phone_data_volume
            if phone_flavor is None and not opts.urn:
                raise TypeError("Missing required property 'phone_flavor'")
            __props__.__dict__["phone_flavor"] = phone_flavor
            __props__.__dict__["ports"] = ports
            __props__.__dict__["region"] = region
            if server_flavor is None and not opts.urn:
                raise TypeError("Missing required property 'server_flavor'")
            __props__.__dict__["server_flavor"] = server_flavor
            __props__.__dict__["server_share_data_volume"] = server_share_data_volume
            if subnet_id is None and not opts.urn:
                raise TypeError("Missing required property 'subnet_id'")
            __props__.__dict__["subnet_id"] = subnet_id
            __props__.__dict__["tags"] = tags
            if vpc_id is None and not opts.urn:
                raise TypeError("Missing required property 'vpc_id'")
            __props__.__dict__["vpc_id"] = vpc_id
            __props__.__dict__["addresses"] = None
            __props__.__dict__["order_id"] = None
            __props__.__dict__["security_groups"] = None
            __props__.__dict__["status"] = None
        super(Server, __self__).__init__(
            'huaweicloud:cph/server:Server',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            addresses: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ServerAddressArgs', 'ServerAddressArgsDict']]]]] = None,
            auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
            availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
            bandwidth: Optional[pulumi.Input[Union['ServerBandwidthArgs', 'ServerBandwidthArgsDict']]] = None,
            eip_id: Optional[pulumi.Input[_builtins.str]] = None,
            eip_type: Optional[pulumi.Input[_builtins.str]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            image_id: Optional[pulumi.Input[_builtins.str]] = None,
            keypair_name: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            order_id: Optional[pulumi.Input[_builtins.str]] = None,
            period: Optional[pulumi.Input[_builtins.int]] = None,
            period_unit: Optional[pulumi.Input[_builtins.str]] = None,
            phone_data_volume: Optional[pulumi.Input[Union['ServerPhoneDataVolumeArgs', 'ServerPhoneDataVolumeArgsDict']]] = None,
            phone_flavor: Optional[pulumi.Input[_builtins.str]] = None,
            ports: Optional[pulumi.Input[Sequence[pulumi.Input[Union['ServerPortArgs', 'ServerPortArgsDict']]]]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            security_groups: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            server_flavor: Optional[pulumi.Input[_builtins.str]] = None,
            server_share_data_volume: Optional[pulumi.Input[Union['ServerServerShareDataVolumeArgs', 'ServerServerShareDataVolumeArgsDict']]] = None,
            status: Optional[pulumi.Input[_builtins.int]] = None,
            subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            vpc_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'Server':
        """
        Get an existing Server resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['ServerAddressArgs', 'ServerAddressArgsDict']]]] addresses: The IP addresses of the CPH server.
               The Address structure is documented below.
        :param pulumi.Input[_builtins.str] auto_renew: Whether auto renew is enabled. Valid values are **true** and **false**.
               Defaults to false.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] availability_zone: The name of the AZ where the cloud server is located.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Union['ServerBandwidthArgs', 'ServerBandwidthArgsDict']] bandwidth: The bandwidth of an EIP that will be automatically assigned to
               the cloud server.
               
               Changing this parameter will create a new resource.
               The BandWidth structure is documented below.
        :param pulumi.Input[_builtins.str] eip_id: The ID of an **existing** EIP assigned to the cloud server.
               This parameter and `eip_type`, `bandwidth` are alternative.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] eip_type: The type of an EIP that will be automatically assigned to the cloud server.
               The options are as follows:
               + **5_telcom**: China Telecom.
               + **5_union**: China Unicom.
               + **5_bgp**: Dynamic BGP.
               + **5_sbgp**: Static BGP.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] enterprise_project_id: The enterprise project ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] image_id: The cloud phone image ID.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] keypair_name: Specifies the key pair name, which is used for logging in to
               the cloud phone through ADB.
        :param pulumi.Input[_builtins.str] name: The application port name, which can contain a maximum of 16 bytes.  
               The key service name cannot be **adb** or **vnc**.
        :param pulumi.Input[_builtins.str] order_id: The order ID.
        :param pulumi.Input[_builtins.int] period: The charging period.  
               If `period_unit` is set to **month**, the value ranges from `1` to `9`.
               If `period_unit` is set to **year**, the value ranges from `1` to `3`.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] period_unit: The charging period unit.  
               Valid values are **month** and **year**.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Union['ServerPhoneDataVolumeArgs', 'ServerPhoneDataVolumeArgsDict']] phone_data_volume: The phone data volume.
               The phone_data_volume structure is documented below.
        :param pulumi.Input[_builtins.str] phone_flavor: The cloud phone flavor.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['ServerPortArgs', 'ServerPortArgsDict']]]] ports: The application port enabled by the cloud phone.
               Changing this parameter will create a new resource.
               The ApplicationPort structure is documented below.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] security_groups: The list of the security groups bound to the extension NIC of the CPH server.
        :param pulumi.Input[_builtins.str] server_flavor: The CPH server flavor.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Union['ServerServerShareDataVolumeArgs', 'ServerServerShareDataVolumeArgsDict']] server_share_data_volume: The server share data volume.
               The server_share_data_volume structure is documented below.
               
               <a name="cphServer_BandWidth"></a>
               The `BandWidth` block supports:
        :param pulumi.Input[_builtins.int] status: The CPH server status.  
               The options are as follows:
               + **0**, **1**, **3**, and **4**: Creating.
               + **2**: Abnormal.
               + **5**: Normal.
               + **8**: Frozen.
               + **10**: Stopped.
               + **11**: Being stopped.
               + **12**: Stopping failed.
               + **13**: Starting.
        :param pulumi.Input[_builtins.str] subnet_id: The ID of subnet which the cloud server belongs to.
               
               Changing this parameter will create a new resource.
        :param pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]] tags: Specifies the key/value pairs to associate with the CPH server.
        :param pulumi.Input[_builtins.str] vpc_id: The ID of VPC which the cloud server belongs to.
               
               Changing this parameter will create a new resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ServerState.__new__(_ServerState)

        __props__.__dict__["addresses"] = addresses
        __props__.__dict__["auto_renew"] = auto_renew
        __props__.__dict__["availability_zone"] = availability_zone
        __props__.__dict__["bandwidth"] = bandwidth
        __props__.__dict__["eip_id"] = eip_id
        __props__.__dict__["eip_type"] = eip_type
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["image_id"] = image_id
        __props__.__dict__["keypair_name"] = keypair_name
        __props__.__dict__["name"] = name
        __props__.__dict__["order_id"] = order_id
        __props__.__dict__["period"] = period
        __props__.__dict__["period_unit"] = period_unit
        __props__.__dict__["phone_data_volume"] = phone_data_volume
        __props__.__dict__["phone_flavor"] = phone_flavor
        __props__.__dict__["ports"] = ports
        __props__.__dict__["region"] = region
        __props__.__dict__["security_groups"] = security_groups
        __props__.__dict__["server_flavor"] = server_flavor
        __props__.__dict__["server_share_data_volume"] = server_share_data_volume
        __props__.__dict__["status"] = status
        __props__.__dict__["subnet_id"] = subnet_id
        __props__.__dict__["tags"] = tags
        __props__.__dict__["vpc_id"] = vpc_id
        return Server(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def addresses(self) -> pulumi.Output[Sequence['outputs.ServerAddress']]:
        """
        The IP addresses of the CPH server.
        The Address structure is documented below.
        """
        return pulumi.get(self, "addresses")

    @_builtins.property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> pulumi.Output[_builtins.str]:
        """
        Whether auto renew is enabled. Valid values are **true** and **false**.
        Defaults to false.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "auto_renew")

    @_builtins.property
    @pulumi.getter(name="availabilityZone")
    def availability_zone(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the AZ where the cloud server is located.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "availability_zone")

    @_builtins.property
    @pulumi.getter
    def bandwidth(self) -> pulumi.Output[Optional['outputs.ServerBandwidth']]:
        """
        The bandwidth of an EIP that will be automatically assigned to
        the cloud server.

        Changing this parameter will create a new resource.
        The BandWidth structure is documented below.
        """
        return pulumi.get(self, "bandwidth")

    @_builtins.property
    @pulumi.getter(name="eipId")
    def eip_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The ID of an **existing** EIP assigned to the cloud server.
        This parameter and `eip_type`, `bandwidth` are alternative.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "eip_id")

    @_builtins.property
    @pulumi.getter(name="eipType")
    def eip_type(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The type of an EIP that will be automatically assigned to the cloud server.
        The options are as follows:
        + **5_telcom**: China Telecom.
        + **5_union**: China Unicom.
        + **5_bgp**: Dynamic BGP.
        + **5_sbgp**: Static BGP.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "eip_type")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[_builtins.str]:
        """
        The enterprise project ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="imageId")
    def image_id(self) -> pulumi.Output[_builtins.str]:
        """
        The cloud phone image ID.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "image_id")

    @_builtins.property
    @pulumi.getter(name="keypairName")
    def keypair_name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the key pair name, which is used for logging in to
        the cloud phone through ADB.
        """
        return pulumi.get(self, "keypair_name")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The application port name, which can contain a maximum of 16 bytes.  
        The key service name cannot be **adb** or **vnc**.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orderId")
    def order_id(self) -> pulumi.Output[_builtins.str]:
        """
        The order ID.
        """
        return pulumi.get(self, "order_id")

    @_builtins.property
    @pulumi.getter
    def period(self) -> pulumi.Output[_builtins.int]:
        """
        The charging period.  
        If `period_unit` is set to **month**, the value ranges from `1` to `9`.
        If `period_unit` is set to **year**, the value ranges from `1` to `3`.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "period")

    @_builtins.property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> pulumi.Output[_builtins.str]:
        """
        The charging period unit.  
        Valid values are **month** and **year**.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "period_unit")

    @_builtins.property
    @pulumi.getter(name="phoneDataVolume")
    def phone_data_volume(self) -> pulumi.Output['outputs.ServerPhoneDataVolume']:
        """
        The phone data volume.
        The phone_data_volume structure is documented below.
        """
        return pulumi.get(self, "phone_data_volume")

    @_builtins.property
    @pulumi.getter(name="phoneFlavor")
    def phone_flavor(self) -> pulumi.Output[_builtins.str]:
        """
        The cloud phone flavor.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "phone_flavor")

    @_builtins.property
    @pulumi.getter
    def ports(self) -> pulumi.Output[Sequence['outputs.ServerPort']]:
        """
        The application port enabled by the cloud phone.
        Changing this parameter will create a new resource.
        The ApplicationPort structure is documented below.
        """
        return pulumi.get(self, "ports")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="securityGroups")
    def security_groups(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        The list of the security groups bound to the extension NIC of the CPH server.
        """
        return pulumi.get(self, "security_groups")

    @_builtins.property
    @pulumi.getter(name="serverFlavor")
    def server_flavor(self) -> pulumi.Output[_builtins.str]:
        """
        The CPH server flavor.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "server_flavor")

    @_builtins.property
    @pulumi.getter(name="serverShareDataVolume")
    def server_share_data_volume(self) -> pulumi.Output['outputs.ServerServerShareDataVolume']:
        """
        The server share data volume.
        The server_share_data_volume structure is documented below.

        <a name="cphServer_BandWidth"></a>
        The `BandWidth` block supports:
        """
        return pulumi.get(self, "server_share_data_volume")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.int]:
        """
        The CPH server status.  
        The options are as follows:
        + **0**, **1**, **3**, and **4**: Creating.
        + **2**: Abnormal.
        + **5**: Normal.
        + **8**: Frozen.
        + **10**: Stopped.
        + **11**: Being stopped.
        + **12**: Stopping failed.
        + **13**: Starting.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of subnet which the cloud server belongs to.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "subnet_id")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Mapping[str, _builtins.str]]:
        """
        Specifies the key/value pairs to associate with the CPH server.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of VPC which the cloud server belongs to.

        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "vpc_id")

