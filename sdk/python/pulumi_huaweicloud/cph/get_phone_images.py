# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetPhoneImagesResult',
    'AwaitableGetPhoneImagesResult',
    'get_phone_images',
    'get_phone_images_output',
]

@pulumi.output_type
class GetPhoneImagesResult:
    """
    A collection of values returned by getPhoneImages.
    """
    def __init__(__self__, id=None, image_label=None, images=None, is_public=None, region=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if image_label and not isinstance(image_label, str):
            raise TypeError("Expected argument 'image_label' to be a str")
        pulumi.set(__self__, "image_label", image_label)
        if images and not isinstance(images, list):
            raise TypeError("Expected argument 'images' to be a list")
        pulumi.set(__self__, "images", images)
        if is_public and not isinstance(is_public, int):
            raise TypeError("Expected argument 'is_public' to be a int")
        pulumi.set(__self__, "is_public", is_public)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="imageLabel")
    def image_label(self) -> Optional[_builtins.str]:
        """
        The label of the image.  
        The valid values are **cloud_phone**, **cloud_game**, **qemu_phone**, **cloud_phone_1620**, and **cloud_game_1620**.
        """
        return pulumi.get(self, "image_label")

    @_builtins.property
    @pulumi.getter
    def images(self) -> Sequence['outputs.GetPhoneImagesImageResult']:
        """
        The list of images detail.
        The Images structure is documented below.
        """
        return pulumi.get(self, "images")

    @_builtins.property
    @pulumi.getter(name="isPublic")
    def is_public(self) -> Optional[_builtins.int]:
        """
        The image type.  
        The options are as follows:
        + **1**: Public image.
        + **2**: Private image.
        """
        return pulumi.get(self, "is_public")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetPhoneImagesResult(GetPhoneImagesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPhoneImagesResult(
            id=self.id,
            image_label=self.image_label,
            images=self.images,
            is_public=self.is_public,
            region=self.region)


def get_phone_images(image_label: Optional[_builtins.str] = None,
                     is_public: Optional[_builtins.int] = None,
                     region: Optional[_builtins.str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPhoneImagesResult:
    """
    Use this data source to get available images of CPH phone.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    images = huaweicloud.cph.get_phone_images(is_public=1)
    ```


    :param _builtins.str image_label: The label of image.  
           The valid values are **cloud_phone**, **cloud_game**, **qemu_phone**, **cloud_phone_1620**, and **cloud_game_1620**.
    :param _builtins.int is_public: The image type.  
           The options are as follows:
           + **1**: Public image.
           + **2**: Private image.
    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['imageLabel'] = image_label
    __args__['isPublic'] = is_public
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:cph/getPhoneImages:getPhoneImages', __args__, opts=opts, typ=GetPhoneImagesResult).value

    return AwaitableGetPhoneImagesResult(
        id=pulumi.get(__ret__, 'id'),
        image_label=pulumi.get(__ret__, 'image_label'),
        images=pulumi.get(__ret__, 'images'),
        is_public=pulumi.get(__ret__, 'is_public'),
        region=pulumi.get(__ret__, 'region'))
def get_phone_images_output(image_label: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                            is_public: Optional[pulumi.Input[Optional[_builtins.int]]] = None,
                            region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                            opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetPhoneImagesResult]:
    """
    Use this data source to get available images of CPH phone.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    images = huaweicloud.cph.get_phone_images(is_public=1)
    ```


    :param _builtins.str image_label: The label of image.  
           The valid values are **cloud_phone**, **cloud_game**, **qemu_phone**, **cloud_phone_1620**, and **cloud_game_1620**.
    :param _builtins.int is_public: The image type.  
           The options are as follows:
           + **1**: Public image.
           + **2**: Private image.
    :param _builtins.str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['imageLabel'] = image_label
    __args__['isPublic'] = is_public
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:cph/getPhoneImages:getPhoneImages', __args__, opts=opts, typ=GetPhoneImagesResult)
    return __ret__.apply(lambda __response__: GetPhoneImagesResult(
        id=pulumi.get(__response__, 'id'),
        image_label=pulumi.get(__response__, 'image_label'),
        images=pulumi.get(__response__, 'images'),
        is_public=pulumi.get(__response__, 'is_public'),
        region=pulumi.get(__response__, 'region')))
