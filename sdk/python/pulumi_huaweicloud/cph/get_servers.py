# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetServersResult',
    'AwaitableGetServersResult',
    'get_servers',
    'get_servers_output',
]

@pulumi.output_type
class GetServersResult:
    """
    A collection of values returned by getServers.
    """
    def __init__(__self__, create_since=None, create_until=None, id=None, network_version=None, phone_flavor=None, region=None, server_id=None, server_name=None, servers=None, status=None):
        if create_since and not isinstance(create_since, str):
            raise TypeError("Expected argument 'create_since' to be a str")
        pulumi.set(__self__, "create_since", create_since)
        if create_until and not isinstance(create_until, str):
            raise TypeError("Expected argument 'create_until' to be a str")
        pulumi.set(__self__, "create_until", create_until)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if network_version and not isinstance(network_version, str):
            raise TypeError("Expected argument 'network_version' to be a str")
        pulumi.set(__self__, "network_version", network_version)
        if phone_flavor and not isinstance(phone_flavor, str):
            raise TypeError("Expected argument 'phone_flavor' to be a str")
        pulumi.set(__self__, "phone_flavor", phone_flavor)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if server_id and not isinstance(server_id, str):
            raise TypeError("Expected argument 'server_id' to be a str")
        pulumi.set(__self__, "server_id", server_id)
        if server_name and not isinstance(server_name, str):
            raise TypeError("Expected argument 'server_name' to be a str")
        pulumi.set(__self__, "server_name", server_name)
        if servers and not isinstance(servers, list):
            raise TypeError("Expected argument 'servers' to be a list")
        pulumi.set(__self__, "servers", servers)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter(name="createSince")
    def create_since(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "create_since")

    @_builtins.property
    @pulumi.getter(name="createUntil")
    def create_until(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "create_until")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="networkVersion")
    def network_version(self) -> Optional[_builtins.str]:
        """
        Whether the cloud phone server is a custom network identifier.
        """
        return pulumi.get(self, "network_version")

    @_builtins.property
    @pulumi.getter(name="phoneFlavor")
    def phone_flavor(self) -> Optional[_builtins.str]:
        """
        The cloud phone flavor name.
        """
        return pulumi.get(self, "phone_flavor")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="serverId")
    def server_id(self) -> Optional[_builtins.str]:
        """
        The cloud phone server ID.
        """
        return pulumi.get(self, "server_id")

    @_builtins.property
    @pulumi.getter(name="serverName")
    def server_name(self) -> Optional[_builtins.str]:
        """
        The cloud phone server name.
        """
        return pulumi.get(self, "server_name")

    @_builtins.property
    @pulumi.getter
    def servers(self) -> Sequence['outputs.GetServersServerResult']:
        """
        The cloud phone server list.
        """
        return pulumi.get(self, "servers")

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[_builtins.str]:
        """
        The cloud phone server status.
        """
        return pulumi.get(self, "status")


class AwaitableGetServersResult(GetServersResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetServersResult(
            create_since=self.create_since,
            create_until=self.create_until,
            id=self.id,
            network_version=self.network_version,
            phone_flavor=self.phone_flavor,
            region=self.region,
            server_id=self.server_id,
            server_name=self.server_name,
            servers=self.servers,
            status=self.status)


def get_servers(create_since: Optional[_builtins.str] = None,
                create_until: Optional[_builtins.str] = None,
                network_version: Optional[_builtins.str] = None,
                phone_flavor: Optional[_builtins.str] = None,
                region: Optional[_builtins.str] = None,
                server_id: Optional[_builtins.str] = None,
                server_name: Optional[_builtins.str] = None,
                status: Optional[_builtins.str] = None,
                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetServersResult:
    """
    Use this data source to get servers of CPH phone.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.cph.get_servers()
    ```


    :param _builtins.str create_since: The creation start time. For example, **2024-10-15 15:04:05**.
    :param _builtins.str create_until: The creation end time. For example, **2024-10-15 15:04:05**.
    :param _builtins.str network_version: Specifies whether the cloud phone server is a custom network identifier.
           + **v1**: System-defined network cloud phone server.
           + **v2**: Cloud phone server for custom network.
    :param _builtins.str phone_flavor: Specifies the cloud phone flavor name.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str server_id: Specifies the cloud phone server ID.
    :param _builtins.str server_name: Specifies the cloud phone server name and support fuzzy query.
    :param _builtins.str status: Specifies the server status.
           + **0, 1, 3, 4**: Creating
           + **2**: Abnormal
           + **5**: Normal
           + **8**: Freeze
           + **10**: Shut down
           + **11**: Shutting down
           + **12**: Shutdown failed
           + **13**: Starting up
    """
    __args__ = dict()
    __args__['createSince'] = create_since
    __args__['createUntil'] = create_until
    __args__['networkVersion'] = network_version
    __args__['phoneFlavor'] = phone_flavor
    __args__['region'] = region
    __args__['serverId'] = server_id
    __args__['serverName'] = server_name
    __args__['status'] = status
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:cph/getServers:getServers', __args__, opts=opts, typ=GetServersResult).value

    return AwaitableGetServersResult(
        create_since=pulumi.get(__ret__, 'create_since'),
        create_until=pulumi.get(__ret__, 'create_until'),
        id=pulumi.get(__ret__, 'id'),
        network_version=pulumi.get(__ret__, 'network_version'),
        phone_flavor=pulumi.get(__ret__, 'phone_flavor'),
        region=pulumi.get(__ret__, 'region'),
        server_id=pulumi.get(__ret__, 'server_id'),
        server_name=pulumi.get(__ret__, 'server_name'),
        servers=pulumi.get(__ret__, 'servers'),
        status=pulumi.get(__ret__, 'status'))
def get_servers_output(create_since: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                       create_until: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                       network_version: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                       phone_flavor: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                       region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                       server_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                       server_name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                       status: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                       opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetServersResult]:
    """
    Use this data source to get servers of CPH phone.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.cph.get_servers()
    ```


    :param _builtins.str create_since: The creation start time. For example, **2024-10-15 15:04:05**.
    :param _builtins.str create_until: The creation end time. For example, **2024-10-15 15:04:05**.
    :param _builtins.str network_version: Specifies whether the cloud phone server is a custom network identifier.
           + **v1**: System-defined network cloud phone server.
           + **v2**: Cloud phone server for custom network.
    :param _builtins.str phone_flavor: Specifies the cloud phone flavor name.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str server_id: Specifies the cloud phone server ID.
    :param _builtins.str server_name: Specifies the cloud phone server name and support fuzzy query.
    :param _builtins.str status: Specifies the server status.
           + **0, 1, 3, 4**: Creating
           + **2**: Abnormal
           + **5**: Normal
           + **8**: Freeze
           + **10**: Shut down
           + **11**: Shutting down
           + **12**: Shutdown failed
           + **13**: Starting up
    """
    __args__ = dict()
    __args__['createSince'] = create_since
    __args__['createUntil'] = create_until
    __args__['networkVersion'] = network_version
    __args__['phoneFlavor'] = phone_flavor
    __args__['region'] = region
    __args__['serverId'] = server_id
    __args__['serverName'] = server_name
    __args__['status'] = status
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:cph/getServers:getServers', __args__, opts=opts, typ=GetServersResult)
    return __ret__.apply(lambda __response__: GetServersResult(
        create_since=pulumi.get(__response__, 'create_since'),
        create_until=pulumi.get(__response__, 'create_until'),
        id=pulumi.get(__response__, 'id'),
        network_version=pulumi.get(__response__, 'network_version'),
        phone_flavor=pulumi.get(__response__, 'phone_flavor'),
        region=pulumi.get(__response__, 'region'),
        server_id=pulumi.get(__response__, 'server_id'),
        server_name=pulumi.get(__response__, 'server_name'),
        servers=pulumi.get(__response__, 'servers'),
        status=pulumi.get(__response__, 'status')))
