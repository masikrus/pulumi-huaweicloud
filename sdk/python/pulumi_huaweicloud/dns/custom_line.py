# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['CustomLineArgs', 'CustomLine']

@pulumi.input_type
class CustomLineArgs:
    def __init__(__self__, *,
                 ip_segments: pulumi.Input[Sequence[pulumi.Input[_builtins.str]]],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a CustomLine resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] ip_segments: Specifies the IP address range.  
               The start IP address is separated from the end IP address with a hyphen (-). The IP address ranges cannot overlap.
               If the start and end IP addresses are the same, there is only one IP address in the range. Set the value to
               `IP1-IP1`. Currently, only IPv4 addresses are supported. You can specify a maximum of `50` IP address ranges.
        :param pulumi.Input[_builtins.str] description: Specifies the custom line description.  
               A maximum of `255` characters are allowed.
        :param pulumi.Input[_builtins.str] name: Specifies the custom line name.  
               The value consists of `1` to `80` characters including Chinese characters, English letters, digits, hyphens (-),
               underscores (_) and dots (.). The name of each resolution line set by one account must be unique.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "ip_segments", ip_segments)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="ipSegments")
    def ip_segments(self) -> pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]:
        """
        Specifies the IP address range.  
        The start IP address is separated from the end IP address with a hyphen (-). The IP address ranges cannot overlap.
        If the start and end IP addresses are the same, there is only one IP address in the range. Set the value to
        `IP1-IP1`. Currently, only IPv4 addresses are supported. You can specify a maximum of `50` IP address ranges.
        """
        return pulumi.get(self, "ip_segments")

    @ip_segments.setter
    def ip_segments(self, value: pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]):
        pulumi.set(self, "ip_segments", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the custom line description.  
        A maximum of `255` characters are allowed.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the custom line name.  
        The value consists of `1` to `80` characters including Chinese characters, English letters, digits, hyphens (-),
        underscores (_) and dots (.). The name of each resolution line set by one account must be unique.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _CustomLineState:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_segments: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering CustomLine resources.
        :param pulumi.Input[_builtins.str] description: Specifies the custom line description.  
               A maximum of `255` characters are allowed.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] ip_segments: Specifies the IP address range.  
               The start IP address is separated from the end IP address with a hyphen (-). The IP address ranges cannot overlap.
               If the start and end IP addresses are the same, there is only one IP address in the range. Set the value to
               `IP1-IP1`. Currently, only IPv4 addresses are supported. You can specify a maximum of `50` IP address ranges.
        :param pulumi.Input[_builtins.str] name: Specifies the custom line name.  
               The value consists of `1` to `80` characters including Chinese characters, English letters, digits, hyphens (-),
               underscores (_) and dots (.). The name of each resolution line set by one account must be unique.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: The resource status.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if ip_segments is not None:
            pulumi.set(__self__, "ip_segments", ip_segments)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if status is not None:
            pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the custom line description.  
        A maximum of `255` characters are allowed.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="ipSegments")
    def ip_segments(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the IP address range.  
        The start IP address is separated from the end IP address with a hyphen (-). The IP address ranges cannot overlap.
        If the start and end IP addresses are the same, there is only one IP address in the range. Set the value to
        `IP1-IP1`. Currently, only IPv4 addresses are supported. You can specify a maximum of `50` IP address ranges.
        """
        return pulumi.get(self, "ip_segments")

    @ip_segments.setter
    def ip_segments(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "ip_segments", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the custom line name.  
        The value consists of `1` to `80` characters including Chinese characters, English letters, digits, hyphens (-),
        underscores (_) and dots (.). The name of each resolution line set by one account must be unique.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The resource status.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)


@pulumi.type_token("huaweicloud:Dns/customLine:CustomLine")
class CustomLine(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_segments: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a DNS custom line resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        name = config.require_object("name")
        description = config.require_object("description")
        ip_segments = config.require_object("ipSegments")
        test = huaweicloud.dns.CustomLine("test",
            name=name,
            description=description,
            ip_segments=ip_segments)
        ```

        ## Import

        The DNS custom line can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Dns/customLine:CustomLine test <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: Specifies the custom line description.  
               A maximum of `255` characters are allowed.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] ip_segments: Specifies the IP address range.  
               The start IP address is separated from the end IP address with a hyphen (-). The IP address ranges cannot overlap.
               If the start and end IP addresses are the same, there is only one IP address in the range. Set the value to
               `IP1-IP1`. Currently, only IPv4 addresses are supported. You can specify a maximum of `50` IP address ranges.
        :param pulumi.Input[_builtins.str] name: Specifies the custom line name.  
               The value consists of `1` to `80` characters including Chinese characters, English letters, digits, hyphens (-),
               underscores (_) and dots (.). The name of each resolution line set by one account must be unique.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CustomLineArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a DNS custom line resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        name = config.require_object("name")
        description = config.require_object("description")
        ip_segments = config.require_object("ipSegments")
        test = huaweicloud.dns.CustomLine("test",
            name=name,
            description=description,
            ip_segments=ip_segments)
        ```

        ## Import

        The DNS custom line can be imported using the `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Dns/customLine:CustomLine test <id>
        ```

        :param str resource_name: The name of the resource.
        :param CustomLineArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CustomLineArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_segments: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CustomLineArgs.__new__(CustomLineArgs)

            __props__.__dict__["description"] = description
            if ip_segments is None and not opts.urn:
                raise TypeError("Missing required property 'ip_segments'")
            __props__.__dict__["ip_segments"] = ip_segments
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            __props__.__dict__["status"] = None
        super(CustomLine, __self__).__init__(
            'huaweicloud:Dns/customLine:CustomLine',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            ip_segments: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None) -> 'CustomLine':
        """
        Get an existing CustomLine resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: Specifies the custom line description.  
               A maximum of `255` characters are allowed.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] ip_segments: Specifies the IP address range.  
               The start IP address is separated from the end IP address with a hyphen (-). The IP address ranges cannot overlap.
               If the start and end IP addresses are the same, there is only one IP address in the range. Set the value to
               `IP1-IP1`. Currently, only IPv4 addresses are supported. You can specify a maximum of `50` IP address ranges.
        :param pulumi.Input[_builtins.str] name: Specifies the custom line name.  
               The value consists of `1` to `80` characters including Chinese characters, English letters, digits, hyphens (-),
               underscores (_) and dots (.). The name of each resolution line set by one account must be unique.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: The resource status.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CustomLineState.__new__(_CustomLineState)

        __props__.__dict__["description"] = description
        __props__.__dict__["ip_segments"] = ip_segments
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["status"] = status
        return CustomLine(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the custom line description.  
        A maximum of `255` characters are allowed.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="ipSegments")
    def ip_segments(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        Specifies the IP address range.  
        The start IP address is separated from the end IP address with a hyphen (-). The IP address ranges cannot overlap.
        If the start and end IP addresses are the same, there is only one IP address in the range. Set the value to
        `IP1-IP1`. Currently, only IPv4 addresses are supported. You can specify a maximum of `50` IP address ranges.
        """
        return pulumi.get(self, "ip_segments")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the custom line name.  
        The value consists of `1` to `80` characters including Chinese characters, English letters, digits, hyphens (-),
        underscores (_) and dots (.). The name of each resolution line set by one account must be unique.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The resource status.
        """
        return pulumi.get(self, "status")

