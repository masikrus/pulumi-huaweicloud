# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['LineGroupArgs', 'LineGroup']

@pulumi.input_type
class LineGroupArgs:
    def __init__(__self__, *,
                 lines: pulumi.Input[Sequence[pulumi.Input[_builtins.str]]],
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a LineGroup resource.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] lines: Specifies the list of the resolution line IDs. You should specify at least `2` different lines.
        :param pulumi.Input[_builtins.str] description: Specifies the line group description. A maximum of `255` characters are allowed.
        :param pulumi.Input[_builtins.str] name: Specifies the line group name.
               The value consists of `1` to `64` characters including Chinese and English characters, digits, hyphens (-),
               underscores (_), and dots (.). The name of each resource set by one account must be unique.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this parameter will create a new resource.
        """
        pulumi.set(__self__, "lines", lines)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter
    def lines(self) -> pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]:
        """
        Specifies the list of the resolution line IDs. You should specify at least `2` different lines.
        """
        return pulumi.get(self, "lines")

    @lines.setter
    def lines(self, value: pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]):
        pulumi.set(self, "lines", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the line group description. A maximum of `255` characters are allowed.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the line group name.
        The value consists of `1` to `64` characters including Chinese and English characters, digits, hyphens (-),
        underscores (_), and dots (.). The name of each resource set by one account must be unique.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)


@pulumi.input_type
class _LineGroupState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 lines: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering LineGroup resources.
        :param pulumi.Input[_builtins.str] created_at: The creation time of the line group.
        :param pulumi.Input[_builtins.str] description: Specifies the line group description. A maximum of `255` characters are allowed.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] lines: Specifies the list of the resolution line IDs. You should specify at least `2` different lines.
        :param pulumi.Input[_builtins.str] name: Specifies the line group name.
               The value consists of `1` to `64` characters including Chinese and English characters, digits, hyphens (-),
               underscores (_), and dots (.). The name of each resource set by one account must be unique.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: The resource status. The value can be **ACTIVE**, **ERROR**, **FREEZE**, **DISABLE**.
        :param pulumi.Input[_builtins.str] updated_at: The latest update time of the line group.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if lines is not None:
            pulumi.set(__self__, "lines", lines)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The creation time of the line group.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the line group description. A maximum of `255` characters are allowed.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter
    def lines(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]:
        """
        Specifies the list of the resolution line IDs. You should specify at least `2` different lines.
        """
        return pulumi.get(self, "lines")

    @lines.setter
    def lines(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "lines", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the line group name.
        The value consists of `1` to `64` characters including Chinese and English characters, digits, hyphens (-),
        underscores (_), and dots (.). The name of each resource set by one account must be unique.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The resource status. The value can be **ACTIVE**, **ERROR**, **FREEZE**, **DISABLE**.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The latest update time of the line group.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("huaweicloud:Dns/lineGroup:LineGroup")
class LineGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 lines: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Manages a DNS line group resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        name = config.require_object("name")
        lines = config.require_object("lines")
        description = config.require_object("description")
        test = huaweicloud.dns.LineGroup("test",
            name=name,
            lines=lines,
            description=description)
        ```

        ## Import

        The DNS line group can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Dns/lineGroup:LineGroup test <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] description: Specifies the line group description. A maximum of `255` characters are allowed.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] lines: Specifies the list of the resolution line IDs. You should specify at least `2` different lines.
        :param pulumi.Input[_builtins.str] name: Specifies the line group name.
               The value consists of `1` to `64` characters including Chinese and English characters, digits, hyphens (-),
               underscores (_), and dots (.). The name of each resource set by one account must be unique.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this parameter will create a new resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: LineGroupArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a DNS line group resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        name = config.require_object("name")
        lines = config.require_object("lines")
        description = config.require_object("description")
        test = huaweicloud.dns.LineGroup("test",
            name=name,
            lines=lines,
            description=description)
        ```

        ## Import

        The DNS line group can be imported using `id`, e.g.

        bash

        ```sh
        $ pulumi import huaweicloud:Dns/lineGroup:LineGroup test <id>
        ```

        :param str resource_name: The name of the resource.
        :param LineGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(LineGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 lines: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = LineGroupArgs.__new__(LineGroupArgs)

            __props__.__dict__["description"] = description
            if lines is None and not opts.urn:
                raise TypeError("Missing required property 'lines'")
            __props__.__dict__["lines"] = lines
            __props__.__dict__["name"] = name
            __props__.__dict__["region"] = region
            __props__.__dict__["created_at"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["updated_at"] = None
        super(LineGroup, __self__).__init__(
            'huaweicloud:Dns/lineGroup:LineGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            lines: Optional[pulumi.Input[Sequence[pulumi.Input[_builtins.str]]]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'LineGroup':
        """
        Get an existing LineGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] created_at: The creation time of the line group.
        :param pulumi.Input[_builtins.str] description: Specifies the line group description. A maximum of `255` characters are allowed.
        :param pulumi.Input[Sequence[pulumi.Input[_builtins.str]]] lines: Specifies the list of the resolution line IDs. You should specify at least `2` different lines.
        :param pulumi.Input[_builtins.str] name: Specifies the line group name.
               The value consists of `1` to `64` characters including Chinese and English characters, digits, hyphens (-),
               underscores (_), and dots (.). The name of each resource set by one account must be unique.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this parameter will create a new resource.
        :param pulumi.Input[_builtins.str] status: The resource status. The value can be **ACTIVE**, **ERROR**, **FREEZE**, **DISABLE**.
        :param pulumi.Input[_builtins.str] updated_at: The latest update time of the line group.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _LineGroupState.__new__(_LineGroupState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["description"] = description
        __props__.__dict__["lines"] = lines
        __props__.__dict__["name"] = name
        __props__.__dict__["region"] = region
        __props__.__dict__["status"] = status
        __props__.__dict__["updated_at"] = updated_at
        return LineGroup(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        The creation time of the line group.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the line group description. A maximum of `255` characters are allowed.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def lines(self) -> pulumi.Output[Sequence[_builtins.str]]:
        """
        Specifies the list of the resolution line IDs. You should specify at least `2` different lines.
        """
        return pulumi.get(self, "lines")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the line group name.
        The value consists of `1` to `64` characters including Chinese and English characters, digits, hyphens (-),
        underscores (_), and dots (.). The name of each resource set by one account must be unique.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The resource status. The value can be **ACTIVE**, **ERROR**, **FREEZE**, **DISABLE**.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        The latest update time of the line group.
        """
        return pulumi.get(self, "updated_at")

