# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetOperationLogsResult',
    'AwaitableGetOperationLogsResult',
    'get_operation_logs',
    'get_operation_logs_output',
]

@pulumi.output_type
class GetOperationLogsResult:
    """
    A collection of values returned by getOperationLogs.
    """
    def __init__(__self__, end_time=None, enterprise_project_id=None, id=None, operation_logs=None, operation_type=None, provider_id=None, region=None, resource_id=None, resource_name=None, start_time=None, status=None, vault_id=None, vault_name=None):
        if end_time and not isinstance(end_time, str):
            raise TypeError("Expected argument 'end_time' to be a str")
        pulumi.set(__self__, "end_time", end_time)
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if operation_logs and not isinstance(operation_logs, list):
            raise TypeError("Expected argument 'operation_logs' to be a list")
        pulumi.set(__self__, "operation_logs", operation_logs)
        if operation_type and not isinstance(operation_type, str):
            raise TypeError("Expected argument 'operation_type' to be a str")
        pulumi.set(__self__, "operation_type", operation_type)
        if provider_id and not isinstance(provider_id, str):
            raise TypeError("Expected argument 'provider_id' to be a str")
        pulumi.set(__self__, "provider_id", provider_id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if resource_id and not isinstance(resource_id, str):
            raise TypeError("Expected argument 'resource_id' to be a str")
        pulumi.set(__self__, "resource_id", resource_id)
        if resource_name and not isinstance(resource_name, str):
            raise TypeError("Expected argument 'resource_name' to be a str")
        pulumi.set(__self__, "resource_name", resource_name)
        if start_time and not isinstance(start_time, str):
            raise TypeError("Expected argument 'start_time' to be a str")
        pulumi.set(__self__, "start_time", start_time)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)
        if vault_id and not isinstance(vault_id, str):
            raise TypeError("Expected argument 'vault_id' to be a str")
        pulumi.set(__self__, "vault_id", vault_id)
        if vault_name and not isinstance(vault_name, str):
            raise TypeError("Expected argument 'vault_name' to be a str")
        pulumi.set(__self__, "vault_name", vault_name)

    @_builtins.property
    @pulumi.getter(name="endTime")
    def end_time(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "end_time")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="operationLogs")
    def operation_logs(self) -> Sequence['outputs.GetOperationLogsOperationLogResult']:
        """
        The task list.
        The operation_logs structure is documented below.
        """
        return pulumi.get(self, "operation_logs")

    @_builtins.property
    @pulumi.getter(name="operationType")
    def operation_type(self) -> Optional[_builtins.str]:
        """
        The task type. Possible values are **backup**, **copy**, **replication**, **restore**, **delete**,
        **sync**, **vault_delete**, or **remove_resource**.
        """
        return pulumi.get(self, "operation_type")

    @_builtins.property
    @pulumi.getter(name="providerId")
    def provider_id(self) -> Optional[_builtins.str]:
        """
        The backup provider ID, which specifies whether the backup object is a server or disk.
        """
        return pulumi.get(self, "provider_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "resource_id")

    @_builtins.property
    @pulumi.getter(name="resourceName")
    def resource_name(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "resource_name")

    @_builtins.property
    @pulumi.getter(name="startTime")
    def start_time(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "start_time")

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[_builtins.str]:
        """
        The task status. Possible values are **success**, **skipped**, **failed**, **running**, **timeout**
        or **waiting**.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="vaultId")
    def vault_id(self) -> Optional[_builtins.str]:
        """
        The ID of the vault with which the target resource is associated.
        """
        return pulumi.get(self, "vault_id")

    @_builtins.property
    @pulumi.getter(name="vaultName")
    def vault_name(self) -> Optional[_builtins.str]:
        """
        The name of the vault with which the target resource is associated.
        """
        return pulumi.get(self, "vault_name")


class AwaitableGetOperationLogsResult(GetOperationLogsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOperationLogsResult(
            end_time=self.end_time,
            enterprise_project_id=self.enterprise_project_id,
            id=self.id,
            operation_logs=self.operation_logs,
            operation_type=self.operation_type,
            provider_id=self.provider_id,
            region=self.region,
            resource_id=self.resource_id,
            resource_name=self.resource_name,
            start_time=self.start_time,
            status=self.status,
            vault_id=self.vault_id,
            vault_name=self.vault_name)


def get_operation_logs(end_time: Optional[_builtins.str] = None,
                       enterprise_project_id: Optional[_builtins.str] = None,
                       operation_type: Optional[_builtins.str] = None,
                       provider_id: Optional[_builtins.str] = None,
                       region: Optional[_builtins.str] = None,
                       resource_id: Optional[_builtins.str] = None,
                       resource_name: Optional[_builtins.str] = None,
                       start_time: Optional[_builtins.str] = None,
                       status: Optional[_builtins.str] = None,
                       vault_id: Optional[_builtins.str] = None,
                       vault_name: Optional[_builtins.str] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOperationLogsResult:
    """
    Use this data source to get CBR operation logs within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    enterprise_project_id = config.require_object("enterpriseProjectId")
    operation_type = config.require_object("operationType")
    provider_id = config.require_object("providerId")
    resource_id = config.require_object("resourceId")
    resource_name = config.require_object("resourceName")
    test = huaweicloud.Cbr.get_operation_logs(enterprise_project_id=enterprise_project_id,
        operation_type=operation_type,
        provider_id=provider_id,
        resource_id=resource_id,
        resource_name=resource_name)
    ```


    :param _builtins.str end_time: Specifies the end time of a task. The time is in the
           **%YYYY-%mm-%ddT%HH:%MM:%SSZ** format.
    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID. **all_granted_eps**
           indicates querying the IDs of all enterprise projects on which the user has permissions.
    :param _builtins.str operation_type: Specifies the task type. Possible values are **backup**, **copy**,
           **replication**, **restore**, **delete**, **sync**, **vault_delete**, or **remove_resource**.
    :param _builtins.str provider_id: Specifies the backup provider ID, which specifies whether the backup object is a
           server or disk.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str resource_id: Specifies the backup resource ID which the target resource is associated.
    :param _builtins.str resource_name: Specifies the backup resource name which the target resource is associated.
    :param _builtins.str start_time: Specifies the start time of a task. The time is in the
           **%YYYY-%mm-%ddT%HH:%MM:%SSZ** format.
    :param _builtins.str status: Specifies the task status. Possible values are **success**, **skipped**, **failed**,
           **running**, **timeout** or **waiting**.
    :param _builtins.str vault_id: Specifies the ID of the vault with which the target resource is associated.
    :param _builtins.str vault_name: Specifies the name of the vault with which the target resource is associated.
    """
    __args__ = dict()
    __args__['endTime'] = end_time
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['operationType'] = operation_type
    __args__['providerId'] = provider_id
    __args__['region'] = region
    __args__['resourceId'] = resource_id
    __args__['resourceName'] = resource_name
    __args__['startTime'] = start_time
    __args__['status'] = status
    __args__['vaultId'] = vault_id
    __args__['vaultName'] = vault_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Cbr/getOperationLogs:getOperationLogs', __args__, opts=opts, typ=GetOperationLogsResult).value

    return AwaitableGetOperationLogsResult(
        end_time=pulumi.get(__ret__, 'end_time'),
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        id=pulumi.get(__ret__, 'id'),
        operation_logs=pulumi.get(__ret__, 'operation_logs'),
        operation_type=pulumi.get(__ret__, 'operation_type'),
        provider_id=pulumi.get(__ret__, 'provider_id'),
        region=pulumi.get(__ret__, 'region'),
        resource_id=pulumi.get(__ret__, 'resource_id'),
        resource_name=pulumi.get(__ret__, 'resource_name'),
        start_time=pulumi.get(__ret__, 'start_time'),
        status=pulumi.get(__ret__, 'status'),
        vault_id=pulumi.get(__ret__, 'vault_id'),
        vault_name=pulumi.get(__ret__, 'vault_name'))
def get_operation_logs_output(end_time: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                              enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                              operation_type: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                              provider_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                              region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                              resource_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                              resource_name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                              start_time: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                              status: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                              vault_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                              vault_name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                              opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetOperationLogsResult]:
    """
    Use this data source to get CBR operation logs within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    enterprise_project_id = config.require_object("enterpriseProjectId")
    operation_type = config.require_object("operationType")
    provider_id = config.require_object("providerId")
    resource_id = config.require_object("resourceId")
    resource_name = config.require_object("resourceName")
    test = huaweicloud.Cbr.get_operation_logs(enterprise_project_id=enterprise_project_id,
        operation_type=operation_type,
        provider_id=provider_id,
        resource_id=resource_id,
        resource_name=resource_name)
    ```


    :param _builtins.str end_time: Specifies the end time of a task. The time is in the
           **%YYYY-%mm-%ddT%HH:%MM:%SSZ** format.
    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID. **all_granted_eps**
           indicates querying the IDs of all enterprise projects on which the user has permissions.
    :param _builtins.str operation_type: Specifies the task type. Possible values are **backup**, **copy**,
           **replication**, **restore**, **delete**, **sync**, **vault_delete**, or **remove_resource**.
    :param _builtins.str provider_id: Specifies the backup provider ID, which specifies whether the backup object is a
           server or disk.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str resource_id: Specifies the backup resource ID which the target resource is associated.
    :param _builtins.str resource_name: Specifies the backup resource name which the target resource is associated.
    :param _builtins.str start_time: Specifies the start time of a task. The time is in the
           **%YYYY-%mm-%ddT%HH:%MM:%SSZ** format.
    :param _builtins.str status: Specifies the task status. Possible values are **success**, **skipped**, **failed**,
           **running**, **timeout** or **waiting**.
    :param _builtins.str vault_id: Specifies the ID of the vault with which the target resource is associated.
    :param _builtins.str vault_name: Specifies the name of the vault with which the target resource is associated.
    """
    __args__ = dict()
    __args__['endTime'] = end_time
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['operationType'] = operation_type
    __args__['providerId'] = provider_id
    __args__['region'] = region
    __args__['resourceId'] = resource_id
    __args__['resourceName'] = resource_name
    __args__['startTime'] = start_time
    __args__['status'] = status
    __args__['vaultId'] = vault_id
    __args__['vaultName'] = vault_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Cbr/getOperationLogs:getOperationLogs', __args__, opts=opts, typ=GetOperationLogsResult)
    return __ret__.apply(lambda __response__: GetOperationLogsResult(
        end_time=pulumi.get(__response__, 'end_time'),
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        id=pulumi.get(__response__, 'id'),
        operation_logs=pulumi.get(__response__, 'operation_logs'),
        operation_type=pulumi.get(__response__, 'operation_type'),
        provider_id=pulumi.get(__response__, 'provider_id'),
        region=pulumi.get(__response__, 'region'),
        resource_id=pulumi.get(__response__, 'resource_id'),
        resource_name=pulumi.get(__response__, 'resource_name'),
        start_time=pulumi.get(__response__, 'start_time'),
        status=pulumi.get(__response__, 'status'),
        vault_id=pulumi.get(__response__, 'vault_id'),
        vault_name=pulumi.get(__response__, 'vault_name')))
