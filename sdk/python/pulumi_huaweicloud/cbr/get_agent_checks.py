# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetAgentChecksResult',
    'AwaitableGetAgentChecksResult',
    'get_agent_checks',
    'get_agent_checks_output',
]

@pulumi.output_type
class GetAgentChecksResult:
    """
    A collection of values returned by getAgentChecks.
    """
    def __init__(__self__, agent_status_attrs=None, agent_statuses=None, id=None, region=None):
        if agent_status_attrs and not isinstance(agent_status_attrs, list):
            raise TypeError("Expected argument 'agent_status_attrs' to be a list")
        pulumi.set(__self__, "agent_status_attrs", agent_status_attrs)
        if agent_statuses and not isinstance(agent_statuses, list):
            raise TypeError("Expected argument 'agent_statuses' to be a list")
        pulumi.set(__self__, "agent_statuses", agent_statuses)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @_builtins.property
    @pulumi.getter(name="agentStatusAttrs")
    def agent_status_attrs(self) -> Sequence['outputs.GetAgentChecksAgentStatusAttrResult']:
        """
        The agent status information list.
        """
        return pulumi.get(self, "agent_status_attrs")

    @_builtins.property
    @pulumi.getter(name="agentStatuses")
    def agent_statuses(self) -> Sequence['outputs.GetAgentChecksAgentStatusResult']:
        return pulumi.get(self, "agent_statuses")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")


class AwaitableGetAgentChecksResult(GetAgentChecksResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAgentChecksResult(
            agent_status_attrs=self.agent_status_attrs,
            agent_statuses=self.agent_statuses,
            id=self.id,
            region=self.region)


def get_agent_checks(agent_statuses: Optional[Sequence[Union['GetAgentChecksAgentStatusArgs', 'GetAgentChecksAgentStatusArgsDict']]] = None,
                     region: Optional[_builtins.str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAgentChecksResult:
    """
    Use this data source to query the agent status.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    resource_id = config.require_object("resourceId")
    resource_type = config.require_object("resourceType")
    test = huaweicloud.Cbr.get_agent_checks(agent_statuses=[{
        "resource_id": resource_id,
        "resource_type": resource_type,
    }])
    ```


    :param Sequence[Union['GetAgentChecksAgentStatusArgs', 'GetAgentChecksAgentStatusArgsDict']] agent_statuses: Specifies the resource Information list.
           The agent_status structure is documented below.
           
           <a name="cbr_agent_status"></a>
           The `agent_status` block supports:
    :param _builtins.str region: Specifies the region in which to query the backup detail.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['agentStatuses'] = agent_statuses
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Cbr/getAgentChecks:getAgentChecks', __args__, opts=opts, typ=GetAgentChecksResult).value

    return AwaitableGetAgentChecksResult(
        agent_status_attrs=pulumi.get(__ret__, 'agent_status_attrs'),
        agent_statuses=pulumi.get(__ret__, 'agent_statuses'),
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'))
def get_agent_checks_output(agent_statuses: Optional[pulumi.Input[Sequence[Union['GetAgentChecksAgentStatusArgs', 'GetAgentChecksAgentStatusArgsDict']]]] = None,
                            region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                            opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAgentChecksResult]:
    """
    Use this data source to query the agent status.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    resource_id = config.require_object("resourceId")
    resource_type = config.require_object("resourceType")
    test = huaweicloud.Cbr.get_agent_checks(agent_statuses=[{
        "resource_id": resource_id,
        "resource_type": resource_type,
    }])
    ```


    :param Sequence[Union['GetAgentChecksAgentStatusArgs', 'GetAgentChecksAgentStatusArgsDict']] agent_statuses: Specifies the resource Information list.
           The agent_status structure is documented below.
           
           <a name="cbr_agent_status"></a>
           The `agent_status` block supports:
    :param _builtins.str region: Specifies the region in which to query the backup detail.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['agentStatuses'] = agent_statuses
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Cbr/getAgentChecks:getAgentChecks', __args__, opts=opts, typ=GetAgentChecksResult)
    return __ret__.apply(lambda __response__: GetAgentChecksResult(
        agent_status_attrs=pulumi.get(__response__, 'agent_status_attrs'),
        agent_statuses=pulumi.get(__response__, 'agent_statuses'),
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region')))
