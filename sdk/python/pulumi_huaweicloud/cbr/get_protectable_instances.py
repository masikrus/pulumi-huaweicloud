# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetProtectableInstancesResult',
    'AwaitableGetProtectableInstancesResult',
    'get_protectable_instances',
    'get_protectable_instances_output',
]

@pulumi.output_type
class GetProtectableInstancesResult:
    """
    A collection of values returned by getProtectableInstances.
    """
    def __init__(__self__, enterprise_project_id=None, id=None, instances=None, name=None, protectable_type=None, region=None, resource_id=None, server_id=None, status=None):
        if enterprise_project_id and not isinstance(enterprise_project_id, str):
            raise TypeError("Expected argument 'enterprise_project_id' to be a str")
        pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instances and not isinstance(instances, list):
            raise TypeError("Expected argument 'instances' to be a list")
        pulumi.set(__self__, "instances", instances)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if protectable_type and not isinstance(protectable_type, str):
            raise TypeError("Expected argument 'protectable_type' to be a str")
        pulumi.set(__self__, "protectable_type", protectable_type)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if resource_id and not isinstance(resource_id, str):
            raise TypeError("Expected argument 'resource_id' to be a str")
        pulumi.set(__self__, "resource_id", resource_id)
        if server_id and not isinstance(server_id, str):
            raise TypeError("Expected argument 'server_id' to be a str")
        pulumi.set(__self__, "server_id", server_id)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[_builtins.str]:
        """
        The enterprise project ID. Its default value is **0**.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def instances(self) -> Sequence['outputs.GetProtectableInstancesInstanceResult']:
        """
        The protectable instances.
        """
        return pulumi.get(self, "instances")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The name of the resource to be backed up.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="protectableType")
    def protectable_type(self) -> _builtins.str:
        return pulumi.get(self, "protectable_type")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "resource_id")

    @_builtins.property
    @pulumi.getter(name="serverId")
    def server_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "server_id")

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[_builtins.str]:
        """
        The vault status. Valid values are **available**, **lock**, **frozen**, **deleting**, and **error**.
        """
        return pulumi.get(self, "status")


class AwaitableGetProtectableInstancesResult(GetProtectableInstancesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetProtectableInstancesResult(
            enterprise_project_id=self.enterprise_project_id,
            id=self.id,
            instances=self.instances,
            name=self.name,
            protectable_type=self.protectable_type,
            region=self.region,
            resource_id=self.resource_id,
            server_id=self.server_id,
            status=self.status)


def get_protectable_instances(enterprise_project_id: Optional[_builtins.str] = None,
                              name: Optional[_builtins.str] = None,
                              protectable_type: Optional[_builtins.str] = None,
                              region: Optional[_builtins.str] = None,
                              resource_id: Optional[_builtins.str] = None,
                              server_id: Optional[_builtins.str] = None,
                              status: Optional[_builtins.str] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetProtectableInstancesResult:
    """
    Use this data source to query the CBR protectable instances within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    protectable_type = config.require_object("protectableType")
    test = huaweicloud.Cbr.get_protectable_instances(protectable_type=protectable_type)
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.
           For enterprise users, if omitted, all enterprise project resources will be queried.
    :param _builtins.str name: Specifies the resource name.
    :param _builtins.str protectable_type: Specifies the object type. Valid values are:
           + **server**: Cloud servers.
           + **disk**: Cloud disks.
           + **turbo**: SFS Turbo file systems.
           + **workspace**: Workspace desktop.
           + **workspace_v2**: Workspace V2 desktops.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str resource_id: Specifies the resource ID.
    :param _builtins.str server_id: Specifies the server ID. This parameter is mandatory only for users who have enabled
           enterprise multi-project.
    :param _builtins.str status: Specifies the resource status. Valid values are **available** and **error**.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['name'] = name
    __args__['protectableType'] = protectable_type
    __args__['region'] = region
    __args__['resourceId'] = resource_id
    __args__['serverId'] = server_id
    __args__['status'] = status
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Cbr/getProtectableInstances:getProtectableInstances', __args__, opts=opts, typ=GetProtectableInstancesResult).value

    return AwaitableGetProtectableInstancesResult(
        enterprise_project_id=pulumi.get(__ret__, 'enterprise_project_id'),
        id=pulumi.get(__ret__, 'id'),
        instances=pulumi.get(__ret__, 'instances'),
        name=pulumi.get(__ret__, 'name'),
        protectable_type=pulumi.get(__ret__, 'protectable_type'),
        region=pulumi.get(__ret__, 'region'),
        resource_id=pulumi.get(__ret__, 'resource_id'),
        server_id=pulumi.get(__ret__, 'server_id'),
        status=pulumi.get(__ret__, 'status'))
def get_protectable_instances_output(enterprise_project_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                     name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                     protectable_type: Optional[pulumi.Input[_builtins.str]] = None,
                                     region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                     resource_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                     server_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                     status: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetProtectableInstancesResult]:
    """
    Use this data source to query the CBR protectable instances within HuaweiCloud.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    protectable_type = config.require_object("protectableType")
    test = huaweicloud.Cbr.get_protectable_instances(protectable_type=protectable_type)
    ```


    :param _builtins.str enterprise_project_id: Specifies the enterprise project ID.
           For enterprise users, if omitted, all enterprise project resources will be queried.
    :param _builtins.str name: Specifies the resource name.
    :param _builtins.str protectable_type: Specifies the object type. Valid values are:
           + **server**: Cloud servers.
           + **disk**: Cloud disks.
           + **turbo**: SFS Turbo file systems.
           + **workspace**: Workspace desktop.
           + **workspace_v2**: Workspace V2 desktops.
    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param _builtins.str resource_id: Specifies the resource ID.
    :param _builtins.str server_id: Specifies the server ID. This parameter is mandatory only for users who have enabled
           enterprise multi-project.
    :param _builtins.str status: Specifies the resource status. Valid values are **available** and **error**.
    """
    __args__ = dict()
    __args__['enterpriseProjectId'] = enterprise_project_id
    __args__['name'] = name
    __args__['protectableType'] = protectable_type
    __args__['region'] = region
    __args__['resourceId'] = resource_id
    __args__['serverId'] = server_id
    __args__['status'] = status
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:Cbr/getProtectableInstances:getProtectableInstances', __args__, opts=opts, typ=GetProtectableInstancesResult)
    return __ret__.apply(lambda __response__: GetProtectableInstancesResult(
        enterprise_project_id=pulumi.get(__response__, 'enterprise_project_id'),
        id=pulumi.get(__response__, 'id'),
        instances=pulumi.get(__response__, 'instances'),
        name=pulumi.get(__response__, 'name'),
        protectable_type=pulumi.get(__response__, 'protectable_type'),
        region=pulumi.get(__response__, 'region'),
        resource_id=pulumi.get(__response__, 'resource_id'),
        server_id=pulumi.get(__response__, 'server_id'),
        status=pulumi.get(__response__, 'status')))
