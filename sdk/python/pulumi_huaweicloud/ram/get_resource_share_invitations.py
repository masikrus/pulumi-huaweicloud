# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetResourceShareInvitationsResult',
    'AwaitableGetResourceShareInvitationsResult',
    'get_resource_share_invitations',
    'get_resource_share_invitations_output',
]

@pulumi.output_type
class GetResourceShareInvitationsResult:
    """
    A collection of values returned by getResourceShareInvitations.
    """
    def __init__(__self__, id=None, resource_share_ids=None, resource_share_invitation_ids=None, resource_share_invitations=None, status=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if resource_share_ids and not isinstance(resource_share_ids, list):
            raise TypeError("Expected argument 'resource_share_ids' to be a list")
        pulumi.set(__self__, "resource_share_ids", resource_share_ids)
        if resource_share_invitation_ids and not isinstance(resource_share_invitation_ids, list):
            raise TypeError("Expected argument 'resource_share_invitation_ids' to be a list")
        pulumi.set(__self__, "resource_share_invitation_ids", resource_share_invitation_ids)
        if resource_share_invitations and not isinstance(resource_share_invitations, list):
            raise TypeError("Expected argument 'resource_share_invitations' to be a list")
        pulumi.set(__self__, "resource_share_invitations", resource_share_invitations)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="resourceShareIds")
    def resource_share_ids(self) -> Optional[Sequence[_builtins.str]]:
        return pulumi.get(self, "resource_share_ids")

    @_builtins.property
    @pulumi.getter(name="resourceShareInvitationIds")
    def resource_share_invitation_ids(self) -> Optional[Sequence[_builtins.str]]:
        return pulumi.get(self, "resource_share_invitation_ids")

    @_builtins.property
    @pulumi.getter(name="resourceShareInvitations")
    def resource_share_invitations(self) -> Sequence['outputs.GetResourceShareInvitationsResourceShareInvitationResult']:
        """
        The list of shared resources.
        The resource_share_invitations structure is documented below.
        """
        return pulumi.get(self, "resource_share_invitations")

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[_builtins.str]:
        """
        The status of the resource share invitation.
        """
        return pulumi.get(self, "status")


class AwaitableGetResourceShareInvitationsResult(GetResourceShareInvitationsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetResourceShareInvitationsResult(
            id=self.id,
            resource_share_ids=self.resource_share_ids,
            resource_share_invitation_ids=self.resource_share_invitation_ids,
            resource_share_invitations=self.resource_share_invitations,
            status=self.status)


def get_resource_share_invitations(resource_share_ids: Optional[Sequence[_builtins.str]] = None,
                                   resource_share_invitation_ids: Optional[Sequence[_builtins.str]] = None,
                                   status: Optional[_builtins.str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetResourceShareInvitationsResult:
    """
    Use this data source to get the list of resource share invitations.


    :param Sequence[_builtins.str] resource_share_ids: Specifies the list of the resource share IDs.
    :param Sequence[_builtins.str] resource_share_invitation_ids: Specifies the list of the resource share invitation IDs.
    :param _builtins.str status: Specifies the status of the resource share invitation.
           The valid values are **pending**, **accepted** and **rejected**.
    """
    __args__ = dict()
    __args__['resourceShareIds'] = resource_share_ids
    __args__['resourceShareInvitationIds'] = resource_share_invitation_ids
    __args__['status'] = status
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:ram/getResourceShareInvitations:getResourceShareInvitations', __args__, opts=opts, typ=GetResourceShareInvitationsResult).value

    return AwaitableGetResourceShareInvitationsResult(
        id=pulumi.get(__ret__, 'id'),
        resource_share_ids=pulumi.get(__ret__, 'resource_share_ids'),
        resource_share_invitation_ids=pulumi.get(__ret__, 'resource_share_invitation_ids'),
        resource_share_invitations=pulumi.get(__ret__, 'resource_share_invitations'),
        status=pulumi.get(__ret__, 'status'))
def get_resource_share_invitations_output(resource_share_ids: Optional[pulumi.Input[Optional[Sequence[_builtins.str]]]] = None,
                                          resource_share_invitation_ids: Optional[pulumi.Input[Optional[Sequence[_builtins.str]]]] = None,
                                          status: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                          opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetResourceShareInvitationsResult]:
    """
    Use this data source to get the list of resource share invitations.


    :param Sequence[_builtins.str] resource_share_ids: Specifies the list of the resource share IDs.
    :param Sequence[_builtins.str] resource_share_invitation_ids: Specifies the list of the resource share invitation IDs.
    :param _builtins.str status: Specifies the status of the resource share invitation.
           The valid values are **pending**, **accepted** and **rejected**.
    """
    __args__ = dict()
    __args__['resourceShareIds'] = resource_share_ids
    __args__['resourceShareInvitationIds'] = resource_share_invitation_ids
    __args__['status'] = status
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('huaweicloud:ram/getResourceShareInvitations:getResourceShareInvitations', __args__, opts=opts, typ=GetResourceShareInvitationsResult)
    return __ret__.apply(lambda __response__: GetResourceShareInvitationsResult(
        id=pulumi.get(__response__, 'id'),
        resource_share_ids=pulumi.get(__response__, 'resource_share_ids'),
        resource_share_invitation_ids=pulumi.get(__response__, 'resource_share_invitation_ids'),
        resource_share_invitations=pulumi.get(__response__, 'resource_share_invitations'),
        status=pulumi.get(__response__, 'status')))
