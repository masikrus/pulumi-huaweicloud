# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'ResourceShareAssociatedPermission',
    'GetResourcePermissionsPermissionResult',
    'GetResourceShareAssociatedPermissionsAssociatedPermissionResult',
    'GetResourceShareAssociationsAssociationResult',
    'GetResourceShareInvitationsResourceShareInvitationResult',
    'GetResourceSharesResourceShareResult',
    'GetResourceSharesTagFilterResult',
    'GetSharedPrincipalsSharedPrincipalResult',
    'GetSharedResourcesSharedResourceResult',
]

@pulumi.output_type
class ResourceShareAssociatedPermission(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "permissionId":
            suggest = "permission_id"
        elif key == "permissionName":
            suggest = "permission_name"
        elif key == "resourceType":
            suggest = "resource_type"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceShareAssociatedPermission. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceShareAssociatedPermission.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceShareAssociatedPermission.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 permission_id: Optional[_builtins.str] = None,
                 permission_name: Optional[_builtins.str] = None,
                 resource_type: Optional[_builtins.str] = None,
                 status: Optional[_builtins.str] = None):
        """
        :param _builtins.str permission_id: The permission ID.
        :param _builtins.str permission_name: The permission name.
        :param _builtins.str resource_type: The resource type of the permission.
        :param _builtins.str status: The status of the permission.
        """
        if permission_id is not None:
            pulumi.set(__self__, "permission_id", permission_id)
        if permission_name is not None:
            pulumi.set(__self__, "permission_name", permission_name)
        if resource_type is not None:
            pulumi.set(__self__, "resource_type", resource_type)
        if status is not None:
            pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter(name="permissionId")
    def permission_id(self) -> Optional[_builtins.str]:
        """
        The permission ID.
        """
        return pulumi.get(self, "permission_id")

    @_builtins.property
    @pulumi.getter(name="permissionName")
    def permission_name(self) -> Optional[_builtins.str]:
        """
        The permission name.
        """
        return pulumi.get(self, "permission_name")

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[_builtins.str]:
        """
        The resource type of the permission.
        """
        return pulumi.get(self, "resource_type")

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[_builtins.str]:
        """
        The status of the permission.
        """
        return pulumi.get(self, "status")


@pulumi.output_type
class GetResourcePermissionsPermissionResult(dict):
    def __init__(__self__, *,
                 created_at: _builtins.str,
                 default_version: _builtins.bool,
                 id: _builtins.str,
                 is_resource_type_default: _builtins.bool,
                 name: _builtins.str,
                 permission_type: _builtins.str,
                 permission_urn: _builtins.str,
                 resource_type: _builtins.str,
                 status: _builtins.str,
                 updated_at: _builtins.str,
                 version: _builtins.int):
        """
        :param _builtins.str created_at: Indicates the RAM permission create time.
        :param _builtins.bool default_version: Indicates whether the current version is the default version.
        :param _builtins.str id: Indicates the id of RAM permission.
        :param _builtins.bool is_resource_type_default: Whether the RAM permission resource type is default.
        :param _builtins.str name: Specifies the name of RAM permission in which to query the data source.
        :param _builtins.str permission_type: Specifies the type of the permission. Valid values are as follows:
               + **RAM_MANAGED**: Indicates RAM managed permissions.
               + **CUSTOMER_MANAGED**: Indicates permissions created by tenants.
               + **ALL**: Indicates both permission types.
               
               Defaults to **ALL**.
        :param _builtins.str permission_urn: Indicates the URN for the permission.
        :param _builtins.str resource_type: Specifies the resource type of RAM permission in which to query the data source.
               Valid values are **vpc:subnets**, **dns:zone** and **dns:resolverRule**.
        :param _builtins.str status: Indicates the status of the permission.
        :param _builtins.str updated_at: Indicates the RAM permission last update time.
        :param _builtins.int version: Indicates the version of the permission.
        """
        pulumi.set(__self__, "created_at", created_at)
        pulumi.set(__self__, "default_version", default_version)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_resource_type_default", is_resource_type_default)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "permission_type", permission_type)
        pulumi.set(__self__, "permission_urn", permission_urn)
        pulumi.set(__self__, "resource_type", resource_type)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "updated_at", updated_at)
        pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> _builtins.str:
        """
        Indicates the RAM permission create time.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="defaultVersion")
    def default_version(self) -> _builtins.bool:
        """
        Indicates whether the current version is the default version.
        """
        return pulumi.get(self, "default_version")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        Indicates the id of RAM permission.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="isResourceTypeDefault")
    def is_resource_type_default(self) -> _builtins.bool:
        """
        Whether the RAM permission resource type is default.
        """
        return pulumi.get(self, "is_resource_type_default")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Specifies the name of RAM permission in which to query the data source.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="permissionType")
    def permission_type(self) -> _builtins.str:
        """
        Specifies the type of the permission. Valid values are as follows:
        + **RAM_MANAGED**: Indicates RAM managed permissions.
        + **CUSTOMER_MANAGED**: Indicates permissions created by tenants.
        + **ALL**: Indicates both permission types.

        Defaults to **ALL**.
        """
        return pulumi.get(self, "permission_type")

    @_builtins.property
    @pulumi.getter(name="permissionUrn")
    def permission_urn(self) -> _builtins.str:
        """
        Indicates the URN for the permission.
        """
        return pulumi.get(self, "permission_urn")

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> _builtins.str:
        """
        Specifies the resource type of RAM permission in which to query the data source.
        Valid values are **vpc:subnets**, **dns:zone** and **dns:resolverRule**.
        """
        return pulumi.get(self, "resource_type")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        Indicates the status of the permission.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> _builtins.str:
        """
        Indicates the RAM permission last update time.
        """
        return pulumi.get(self, "updated_at")

    @_builtins.property
    @pulumi.getter
    def version(self) -> _builtins.int:
        """
        Indicates the version of the permission.
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class GetResourceShareAssociatedPermissionsAssociatedPermissionResult(dict):
    def __init__(__self__, *,
                 created_at: _builtins.str,
                 permission_id: _builtins.str,
                 permission_name: _builtins.str,
                 resource_type: _builtins.str,
                 status: _builtins.str,
                 updated_at: _builtins.str):
        """
        :param _builtins.str created_at: The time when the permission was created.
        :param _builtins.str permission_id: The permission ID.
        :param _builtins.str permission_name: Specifies the name of the RAM managed permission.
        :param _builtins.str resource_type: The resource type to which the permission applies.
        :param _builtins.str status: The status of the permission.
        :param _builtins.str updated_at: The time when the permission was last updated.
        """
        pulumi.set(__self__, "created_at", created_at)
        pulumi.set(__self__, "permission_id", permission_id)
        pulumi.set(__self__, "permission_name", permission_name)
        pulumi.set(__self__, "resource_type", resource_type)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> _builtins.str:
        """
        The time when the permission was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="permissionId")
    def permission_id(self) -> _builtins.str:
        """
        The permission ID.
        """
        return pulumi.get(self, "permission_id")

    @_builtins.property
    @pulumi.getter(name="permissionName")
    def permission_name(self) -> _builtins.str:
        """
        Specifies the name of the RAM managed permission.
        """
        return pulumi.get(self, "permission_name")

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> _builtins.str:
        """
        The resource type to which the permission applies.
        """
        return pulumi.get(self, "resource_type")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        The status of the permission.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> _builtins.str:
        """
        The time when the permission was last updated.
        """
        return pulumi.get(self, "updated_at")


@pulumi.output_type
class GetResourceShareAssociationsAssociationResult(dict):
    def __init__(__self__, *,
                 associated_entity: _builtins.str,
                 association_type: _builtins.str,
                 created_at: _builtins.str,
                 external: _builtins.bool,
                 resource_share_id: _builtins.str,
                 resource_share_name: _builtins.str,
                 status: _builtins.str,
                 status_message: _builtins.str,
                 updated_at: _builtins.str):
        """
        :param _builtins.str associated_entity: The associated entity. It can be the resource URN, account ID, URN of the root OU, or URN of
               another OU.
        :param _builtins.str association_type: Specifies the association type. Valid values are **principal** and **resource**.
        :param _builtins.str created_at: The time when the association was created.
        :param _builtins.bool external: Whether the principle is in the same organization as the resource owner.
        :param _builtins.str resource_share_id: ID of the resource share.
        :param _builtins.str resource_share_name: Name of the resource share.
        :param _builtins.str status: Specifies the status of the association.
        :param _builtins.str status_message: The description of the status to the association.
        :param _builtins.str updated_at: The time when the association was last updated.
        """
        pulumi.set(__self__, "associated_entity", associated_entity)
        pulumi.set(__self__, "association_type", association_type)
        pulumi.set(__self__, "created_at", created_at)
        pulumi.set(__self__, "external", external)
        pulumi.set(__self__, "resource_share_id", resource_share_id)
        pulumi.set(__self__, "resource_share_name", resource_share_name)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "status_message", status_message)
        pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="associatedEntity")
    def associated_entity(self) -> _builtins.str:
        """
        The associated entity. It can be the resource URN, account ID, URN of the root OU, or URN of
        another OU.
        """
        return pulumi.get(self, "associated_entity")

    @_builtins.property
    @pulumi.getter(name="associationType")
    def association_type(self) -> _builtins.str:
        """
        Specifies the association type. Valid values are **principal** and **resource**.
        """
        return pulumi.get(self, "association_type")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> _builtins.str:
        """
        The time when the association was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def external(self) -> _builtins.bool:
        """
        Whether the principle is in the same organization as the resource owner.
        """
        return pulumi.get(self, "external")

    @_builtins.property
    @pulumi.getter(name="resourceShareId")
    def resource_share_id(self) -> _builtins.str:
        """
        ID of the resource share.
        """
        return pulumi.get(self, "resource_share_id")

    @_builtins.property
    @pulumi.getter(name="resourceShareName")
    def resource_share_name(self) -> _builtins.str:
        """
        Name of the resource share.
        """
        return pulumi.get(self, "resource_share_name")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        Specifies the status of the association.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="statusMessage")
    def status_message(self) -> _builtins.str:
        """
        The description of the status to the association.
        """
        return pulumi.get(self, "status_message")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> _builtins.str:
        """
        The time when the association was last updated.
        """
        return pulumi.get(self, "updated_at")


@pulumi.output_type
class GetResourceShareInvitationsResourceShareInvitationResult(dict):
    def __init__(__self__, *,
                 created_at: _builtins.str,
                 id: _builtins.str,
                 receiver_account_id: _builtins.str,
                 resource_share_id: _builtins.str,
                 resource_share_name: _builtins.str,
                 sender_account_id: _builtins.str,
                 status: _builtins.str,
                 updated_at: _builtins.str):
        """
        :param _builtins.str created_at: The creation time of the resource share invitation.
        :param _builtins.str id: The ID of the resource share invitation.
        :param _builtins.str receiver_account_id: The ID of the account that receives the resource share invitation.
        :param _builtins.str resource_share_id: The ID of the resource share.
        :param _builtins.str resource_share_name: The name of the resource share.
        :param _builtins.str sender_account_id: The ID of the account that sends the resource share invitation.
        :param _builtins.str status: Specifies the status of the resource share invitation.
               The valid values are **pending**, **accepted** and **rejected**.
        :param _builtins.str updated_at: The latest update time of the resource share invitation.
        """
        pulumi.set(__self__, "created_at", created_at)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "receiver_account_id", receiver_account_id)
        pulumi.set(__self__, "resource_share_id", resource_share_id)
        pulumi.set(__self__, "resource_share_name", resource_share_name)
        pulumi.set(__self__, "sender_account_id", sender_account_id)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> _builtins.str:
        """
        The creation time of the resource share invitation.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The ID of the resource share invitation.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="receiverAccountId")
    def receiver_account_id(self) -> _builtins.str:
        """
        The ID of the account that receives the resource share invitation.
        """
        return pulumi.get(self, "receiver_account_id")

    @_builtins.property
    @pulumi.getter(name="resourceShareId")
    def resource_share_id(self) -> _builtins.str:
        """
        The ID of the resource share.
        """
        return pulumi.get(self, "resource_share_id")

    @_builtins.property
    @pulumi.getter(name="resourceShareName")
    def resource_share_name(self) -> _builtins.str:
        """
        The name of the resource share.
        """
        return pulumi.get(self, "resource_share_name")

    @_builtins.property
    @pulumi.getter(name="senderAccountId")
    def sender_account_id(self) -> _builtins.str:
        """
        The ID of the account that sends the resource share invitation.
        """
        return pulumi.get(self, "sender_account_id")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        Specifies the status of the resource share invitation.
        The valid values are **pending**, **accepted** and **rejected**.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> _builtins.str:
        """
        The latest update time of the resource share invitation.
        """
        return pulumi.get(self, "updated_at")


@pulumi.output_type
class GetResourceSharesResourceShareResult(dict):
    def __init__(__self__, *,
                 allow_external_principals: _builtins.bool,
                 created_at: _builtins.str,
                 description: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str,
                 owning_account_id: _builtins.str,
                 status: _builtins.str,
                 tags: Mapping[str, _builtins.str],
                 updated_at: _builtins.str):
        """
        :param _builtins.bool allow_external_principals: Whether resources can be shared with any accounts outside the organization.
        :param _builtins.str created_at: The time when the resource share was created.
        :param _builtins.str description: The description of the resource share.
        :param _builtins.str id: The ID of the resource share.
        :param _builtins.str name: Specifies the name of the resource share.
        :param _builtins.str owning_account_id: The ID of the resource owner in a resource share.
        :param _builtins.str status: Specifies the status of the resource share.
        :param Mapping[str, _builtins.str] tags: The list of tags attached to the resource share.
        :param _builtins.str updated_at: The time when the resource share was last updated.
        """
        pulumi.set(__self__, "allow_external_principals", allow_external_principals)
        pulumi.set(__self__, "created_at", created_at)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "owning_account_id", owning_account_id)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="allowExternalPrincipals")
    def allow_external_principals(self) -> _builtins.bool:
        """
        Whether resources can be shared with any accounts outside the organization.
        """
        return pulumi.get(self, "allow_external_principals")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> _builtins.str:
        """
        The time when the resource share was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The description of the resource share.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The ID of the resource share.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Specifies the name of the resource share.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="owningAccountId")
    def owning_account_id(self) -> _builtins.str:
        """
        The ID of the resource owner in a resource share.
        """
        return pulumi.get(self, "owning_account_id")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        Specifies the status of the resource share.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Mapping[str, _builtins.str]:
        """
        The list of tags attached to the resource share.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> _builtins.str:
        """
        The time when the resource share was last updated.
        """
        return pulumi.get(self, "updated_at")


@pulumi.output_type
class GetResourceSharesTagFilterResult(dict):
    def __init__(__self__, *,
                 key: _builtins.str,
                 values: Optional[Sequence[_builtins.str]] = None):
        """
        :param _builtins.str key: Specifies the identifier or name of the tag key.
        :param Sequence[_builtins.str] values: Specifies the list of values for the tag key.
        """
        pulumi.set(__self__, "key", key)
        if values is not None:
            pulumi.set(__self__, "values", values)

    @_builtins.property
    @pulumi.getter
    def key(self) -> _builtins.str:
        """
        Specifies the identifier or name of the tag key.
        """
        return pulumi.get(self, "key")

    @_builtins.property
    @pulumi.getter
    def values(self) -> Optional[Sequence[_builtins.str]]:
        """
        Specifies the list of values for the tag key.
        """
        return pulumi.get(self, "values")


@pulumi.output_type
class GetSharedPrincipalsSharedPrincipalResult(dict):
    def __init__(__self__, *,
                 created_at: _builtins.str,
                 id: _builtins.str,
                 resource_share_id: _builtins.str,
                 updated_at: _builtins.str):
        """
        :param _builtins.str created_at: The creation time of the RAM share.
        :param _builtins.str id: The ID of shared principal.
        :param _builtins.str resource_share_id: Specifies the ID of resource share.
        :param _builtins.str updated_at: The latest update time of the RAM share.
        """
        pulumi.set(__self__, "created_at", created_at)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "resource_share_id", resource_share_id)
        pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> _builtins.str:
        """
        The creation time of the RAM share.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The ID of shared principal.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="resourceShareId")
    def resource_share_id(self) -> _builtins.str:
        """
        Specifies the ID of resource share.
        """
        return pulumi.get(self, "resource_share_id")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> _builtins.str:
        """
        The latest update time of the RAM share.
        """
        return pulumi.get(self, "updated_at")


@pulumi.output_type
class GetSharedResourcesSharedResourceResult(dict):
    def __init__(__self__, *,
                 created_at: _builtins.str,
                 resource_share_id: _builtins.str,
                 resource_type: _builtins.str,
                 resource_urn: _builtins.str,
                 status: _builtins.str,
                 updated_at: _builtins.str):
        """
        :param _builtins.str created_at: The creation time of the RAM share.
        :param _builtins.str resource_share_id: The resource share ID.
        :param _builtins.str resource_type: Specifies the resource type associated with the RAM share.
        :param _builtins.str resource_urn: The resource urn associated with the RAM share.
        :param _builtins.str status: The status of the RAM share.
        :param _builtins.str updated_at: The latest update time of the RAM share.
        """
        pulumi.set(__self__, "created_at", created_at)
        pulumi.set(__self__, "resource_share_id", resource_share_id)
        pulumi.set(__self__, "resource_type", resource_type)
        pulumi.set(__self__, "resource_urn", resource_urn)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> _builtins.str:
        """
        The creation time of the RAM share.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter(name="resourceShareId")
    def resource_share_id(self) -> _builtins.str:
        """
        The resource share ID.
        """
        return pulumi.get(self, "resource_share_id")

    @_builtins.property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> _builtins.str:
        """
        Specifies the resource type associated with the RAM share.
        """
        return pulumi.get(self, "resource_type")

    @_builtins.property
    @pulumi.getter(name="resourceUrn")
    def resource_urn(self) -> _builtins.str:
        """
        The resource urn associated with the RAM share.
        """
        return pulumi.get(self, "resource_urn")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        """
        The status of the RAM share.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> _builtins.str:
        """
        The latest update time of the RAM share.
        """
        return pulumi.get(self, "updated_at")


