// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get the list of ELB L7 policies.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const config = new pulumi.Config();
 * const policyName = config.requireObject("policyName");
 * const test = huaweicloud.DedicatedElb.getL7policies({
 *     name: policyName,
 * });
 * ```
 */
export function getL7policies(args?: GetL7policiesArgs, opts?: pulumi.InvokeOptions): Promise<GetL7policiesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:DedicatedElb/getL7policies:getL7policies", {
        "action": args.action,
        "description": args.description,
        "enterpriseProjectId": args.enterpriseProjectId,
        "l7policyId": args.l7policyId,
        "listenerId": args.listenerId,
        "name": args.name,
        "priority": args.priority,
        "provisioningStatus": args.provisioningStatus,
        "redirectListenerId": args.redirectListenerId,
        "redirectPoolId": args.redirectPoolId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getL7policies.
 */
export interface GetL7policiesArgs {
    /**
     * Specifies the requests are forwarded. The value can be one of the following:
     * + **REDIRECT_TO_POOL**: Requests are forwarded to another backend server group.
     * + **REDIRECT_TO_LISTENER**: Requests are redirected to an HTTPS listener.
     * + **REDIRECT_TO_URL**: Requests are redirected to another URL.
     * + **FIXED_RESPONSE**: A fixed response body is returned.
     */
    action?: string;
    /**
     * Specifies the supplementary information about the forwarding policy.
     */
    description?: string;
    /**
     * Specifies the enterprise project ID.
     */
    enterpriseProjectId?: string;
    /**
     * Specifies the forwarding policy ID.
     */
    l7policyId?: string;
    /**
     * Specifies the ID of the listener to which the forwarding policy is added.
     */
    listenerId?: string;
    /**
     * Specifies the forwarding policy name.
     */
    name?: string;
    /**
     * Specifies the forwarding policy priority.
     */
    priority?: number;
    /**
     * Specifies the provisioning status of the forwarding policy.
     */
    provisioningStatus?: string;
    /**
     * Specifies the ID of the listener to which requests are redirected.
     */
    redirectListenerId?: string;
    /**
     * Specifies the ID of the backend server group to which requests will be forwarded.
     */
    redirectPoolId?: string;
    /**
     * Specifies the region in which to query the data source. If omitted, the provider-level
     * region will be used.
     */
    region?: string;
}

/**
 * A collection of values returned by getL7policies.
 */
export interface GetL7policiesResult {
    /**
     * The requests will be forwarded.
     */
    readonly action?: string;
    /**
     * The supplementary information about the forwarding policy.
     */
    readonly description?: string;
    /**
     * The enterprise project ID.
     */
    readonly enterpriseProjectId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Lists the L7 policies.
     * The l7policies structure is documented below.
     */
    readonly l7policies: outputs.DedicatedElb.GetL7policiesL7policy[];
    readonly l7policyId?: string;
    /**
     * The ID of the listener to which the forwarding policy is added.
     */
    readonly listenerId?: string;
    /**
     * The forwarding policy name.
     */
    readonly name?: string;
    /**
     * The forwarding policy priority.
     */
    readonly priority?: number;
    /**
     * The provisioning status of the forwarding policy.
     */
    readonly provisioningStatus?: string;
    /**
     * The ID of the listener to which requests are redirected.
     */
    readonly redirectListenerId?: string;
    /**
     * The ID of the backend server group that requests will be forwarded to.
     */
    readonly redirectPoolId?: string;
    readonly region: string;
}

export function getL7policiesOutput(args?: GetL7policiesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetL7policiesResult> {
    return pulumi.output(args).apply(a => getL7policies(a, opts))
}

/**
 * A collection of arguments for invoking getL7policies.
 */
export interface GetL7policiesOutputArgs {
    /**
     * Specifies the requests are forwarded. The value can be one of the following:
     * + **REDIRECT_TO_POOL**: Requests are forwarded to another backend server group.
     * + **REDIRECT_TO_LISTENER**: Requests are redirected to an HTTPS listener.
     * + **REDIRECT_TO_URL**: Requests are redirected to another URL.
     * + **FIXED_RESPONSE**: A fixed response body is returned.
     */
    action?: pulumi.Input<string>;
    /**
     * Specifies the supplementary information about the forwarding policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project ID.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the forwarding policy ID.
     */
    l7policyId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the listener to which the forwarding policy is added.
     */
    listenerId?: pulumi.Input<string>;
    /**
     * Specifies the forwarding policy name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the forwarding policy priority.
     */
    priority?: pulumi.Input<number>;
    /**
     * Specifies the provisioning status of the forwarding policy.
     */
    provisioningStatus?: pulumi.Input<string>;
    /**
     * Specifies the ID of the listener to which requests are redirected.
     */
    redirectListenerId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the backend server group to which requests will be forwarded.
     */
    redirectPoolId?: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the data source. If omitted, the provider-level
     * region will be used.
     */
    region?: pulumi.Input<string>;
}
