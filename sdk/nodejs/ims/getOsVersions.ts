// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get the list of OS versions supported by IMS image within HuaweiCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const test = pulumi.output(huaweicloud.Ims.getOsVersions());
 * ```
 */
export function getOsVersions(args?: GetOsVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetOsVersionsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Ims/getOsVersions:getOsVersions", {
        "region": args.region,
        "tag": args.tag,
    }, opts);
}

/**
 * A collection of arguments for invoking getOsVersions.
 */
export interface GetOsVersionsArgs {
    /**
     * Specifies the region in which to query the resource.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the label value for the OS versions.
     * Multiple tags separated by commas, e.g. **bms,uefi**.
     * The valid values are as follows:
     * + **bms**: OS versions that supports BMS image type.
     * + **uefi**: OS versions that supports UEFI boot mode.
     * + **arm**: OS versions based on ARM architecture.
     * + **x86**: OS versions based on x86 architecture.
     */
    tag?: string;
}

/**
 * A collection of values returned by getOsVersions.
 */
export interface GetOsVersionsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The OS version details.
     */
    readonly osVersions: outputs.Ims.GetOsVersionsOsVersion[];
    readonly region: string;
    readonly tag?: string;
}

export function getOsVersionsOutput(args?: GetOsVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsVersionsResult> {
    return pulumi.output(args).apply(a => getOsVersions(a, opts))
}

/**
 * A collection of arguments for invoking getOsVersions.
 */
export interface GetOsVersionsOutputArgs {
    /**
     * Specifies the region in which to query the resource.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the label value for the OS versions.
     * Multiple tags separated by commas, e.g. **bms,uefi**.
     * The valid values are as follows:
     * + **bms**: OS versions that supports BMS image type.
     * + **uefi**: OS versions that supports UEFI boot mode.
     * + **arm**: OS versions based on ARM architecture.
     * + **x86**: OS versions based on x86 architecture.
     */
    tag?: pulumi.Input<string>;
}
