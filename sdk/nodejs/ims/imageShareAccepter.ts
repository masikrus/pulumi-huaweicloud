// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an IMS image share accepter resource within HuaweiCloud.
 *
 * > Creating resource means accepting shared image, while destroying resource means rejecting shared image.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const imageId = config.requireObject("imageId");
 * const test = new huaweicloud.ims.ImageShareAccepter("test", {imageId: imageId});
 * ```
 */
export class ImageShareAccepter extends pulumi.CustomResource {
    /**
     * Get an existing ImageShareAccepter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ImageShareAccepterState, opts?: pulumi.CustomResourceOptions): ImageShareAccepter {
        return new ImageShareAccepter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Ims/imageShareAccepter:ImageShareAccepter';

    /**
     * Returns true if the given object is an instance of ImageShareAccepter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ImageShareAccepter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ImageShareAccepter.__pulumiType;
    }

    /**
     * Specifies the ID of the image.
     */
    public readonly imageId!: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Specifies the ID of a vault. This parameter is mandatory if you want
     * to accept a shared full-ECS image created from a CBR backup.
     */
    public readonly vaultId!: pulumi.Output<string>;

    /**
     * Create a ImageShareAccepter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ImageShareAccepterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ImageShareAccepterArgs | ImageShareAccepterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ImageShareAccepterState | undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["vaultId"] = state ? state.vaultId : undefined;
        } else {
            const args = argsOrState as ImageShareAccepterArgs | undefined;
            if ((!args || args.imageId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'imageId'");
            }
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["vaultId"] = args ? args.vaultId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ImageShareAccepter.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ImageShareAccepter resources.
 */
export interface ImageShareAccepterState {
    /**
     * Specifies the ID of the image.
     */
    imageId?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the ID of a vault. This parameter is mandatory if you want
     * to accept a shared full-ECS image created from a CBR backup.
     */
    vaultId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ImageShareAccepter resource.
 */
export interface ImageShareAccepterArgs {
    /**
     * Specifies the ID of the image.
     */
    imageId: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the ID of a vault. This parameter is mandatory if you want
     * to accept a shared full-ECS image created from a CBR backup.
     */
    vaultId?: pulumi.Input<string>;
}
