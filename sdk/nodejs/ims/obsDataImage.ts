// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an IMS data image resource created from external image file in the OBS bucket within HuaweiCloud.
 *
 * ## Example Usage
 * ### Creating an IMS data image from an external image file in the OBS bucket
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const name = config.requireObject("name");
 * const imageUrl = config.requireObject("imageUrl");
 * const minDisk = config.requireObject("minDisk");
 * const test = new huaweicloud.ims.ObsDataImage("test", {
 *     imageUrl: imageUrl,
 *     minDisk: minDisk,
 * });
 * ```
 *
 * ## Import
 *
 * The IMS OBS data image resource can be imported using the `id`, e.g. bash
 *
 * ```sh
 *  $ pulumi import huaweicloud:Ims/obsDataImage:ObsDataImage test <id>
 * ```
 */
export class ObsDataImage extends pulumi.CustomResource {
    /**
     * Get an existing ObsDataImage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObsDataImageState, opts?: pulumi.CustomResourceOptions): ObsDataImage {
        return new ObsDataImage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Ims/obsDataImage:ObsDataImage';

    /**
     * Returns true if the given object is an instance of ObsDataImage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObsDataImage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObsDataImage.__pulumiType;
    }

    /**
     * The time when the image status changes to active, in RFC3339 format.
     */
    public /*out*/ readonly activeAt!: pulumi.Output<string>;
    /**
     * Specifies the custom key for creating encrypted image.
     * Changing this parameter will create a new resource.
     */
    public readonly cmkId!: pulumi.Output<string>;
    /**
     * The creation time of the image, in RFC3339 format.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The image source. The format is **file,image_url**.
     */
    public /*out*/ readonly dataOrigin!: pulumi.Output<string>;
    /**
     * Specifies the description of the image.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The image format. The value can be **zvhd2**, **vhd**, **zvhd**, **raw**, **qcow2**, or **iso**.
     */
    public /*out*/ readonly diskFormat!: pulumi.Output<string>;
    /**
     * Specifies the enterprise project ID to which the IMS image belongs.
     * For enterprise users, if omitted, default enterprise project will be used.
     */
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    /**
     * The size of the image file, in bytes unit.
     */
    public /*out*/ readonly imageSize!: pulumi.Output<string>;
    /**
     * Specifies the URL of the external image file in the OBS bucket, the format
     * is **OBS bucket name:image file name**. The storage category for OBS bucket and image file must be OBS standard
     * storage. Changing this parameter will create a new resource.
     */
    public readonly imageUrl!: pulumi.Output<string>;
    /**
     * Specifies the minimum size of the system disk, in GB unit. The value ranges
     * from `40` to `2,048`. Changing this parameter will create a new resource.
     */
    public readonly minDisk!: pulumi.Output<number>;
    /**
     * Specifies the name of the image.
     * The valid length is limited from `1` to `128` characters.
     * The first and last letters of the name cannot be spaces.
     * The name can contain uppercase letters, lowercase letters, numbers, spaces, chinese, and special characters (-._).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the operating system type of the image. The value can be
     * **Windows** or **Linux**. Defaults to **Linux**. Changing this parameter will create a new resource.
     */
    public readonly osType!: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The status of the image. The value can be **active**, **queued**, **saving**, **deleted**, or **killed*,
     * only image with a status of **active** can be used.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Specifies the key/value pairs to associate with the image.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The last update time of the image, in RFC3339 format.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * Whether the image is visible to other tenants.
     */
    public /*out*/ readonly visibility!: pulumi.Output<string>;

    /**
     * Create a ObsDataImage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObsDataImageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObsDataImageArgs | ObsDataImageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObsDataImageState | undefined;
            resourceInputs["activeAt"] = state ? state.activeAt : undefined;
            resourceInputs["cmkId"] = state ? state.cmkId : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["dataOrigin"] = state ? state.dataOrigin : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["diskFormat"] = state ? state.diskFormat : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["imageSize"] = state ? state.imageSize : undefined;
            resourceInputs["imageUrl"] = state ? state.imageUrl : undefined;
            resourceInputs["minDisk"] = state ? state.minDisk : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["osType"] = state ? state.osType : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["visibility"] = state ? state.visibility : undefined;
        } else {
            const args = argsOrState as ObsDataImageArgs | undefined;
            if ((!args || args.imageUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'imageUrl'");
            }
            if ((!args || args.minDisk === undefined) && !opts.urn) {
                throw new Error("Missing required property 'minDisk'");
            }
            resourceInputs["cmkId"] = args ? args.cmkId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["imageUrl"] = args ? args.imageUrl : undefined;
            resourceInputs["minDisk"] = args ? args.minDisk : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["osType"] = args ? args.osType : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["activeAt"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["dataOrigin"] = undefined /*out*/;
            resourceInputs["diskFormat"] = undefined /*out*/;
            resourceInputs["imageSize"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["visibility"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObsDataImage.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ObsDataImage resources.
 */
export interface ObsDataImageState {
    /**
     * The time when the image status changes to active, in RFC3339 format.
     */
    activeAt?: pulumi.Input<string>;
    /**
     * Specifies the custom key for creating encrypted image.
     * Changing this parameter will create a new resource.
     */
    cmkId?: pulumi.Input<string>;
    /**
     * The creation time of the image, in RFC3339 format.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The image source. The format is **file,image_url**.
     */
    dataOrigin?: pulumi.Input<string>;
    /**
     * Specifies the description of the image.
     */
    description?: pulumi.Input<string>;
    /**
     * The image format. The value can be **zvhd2**, **vhd**, **zvhd**, **raw**, **qcow2**, or **iso**.
     */
    diskFormat?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project ID to which the IMS image belongs.
     * For enterprise users, if omitted, default enterprise project will be used.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * The size of the image file, in bytes unit.
     */
    imageSize?: pulumi.Input<string>;
    /**
     * Specifies the URL of the external image file in the OBS bucket, the format
     * is **OBS bucket name:image file name**. The storage category for OBS bucket and image file must be OBS standard
     * storage. Changing this parameter will create a new resource.
     */
    imageUrl?: pulumi.Input<string>;
    /**
     * Specifies the minimum size of the system disk, in GB unit. The value ranges
     * from `40` to `2,048`. Changing this parameter will create a new resource.
     */
    minDisk?: pulumi.Input<number>;
    /**
     * Specifies the name of the image.
     * The valid length is limited from `1` to `128` characters.
     * The first and last letters of the name cannot be spaces.
     * The name can contain uppercase letters, lowercase letters, numbers, spaces, chinese, and special characters (-._).
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the operating system type of the image. The value can be
     * **Windows** or **Linux**. Defaults to **Linux**. Changing this parameter will create a new resource.
     */
    osType?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * The status of the image. The value can be **active**, **queued**, **saving**, **deleted**, or **killed*,
     * only image with a status of **active** can be used.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the key/value pairs to associate with the image.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The last update time of the image, in RFC3339 format.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * Whether the image is visible to other tenants.
     */
    visibility?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObsDataImage resource.
 */
export interface ObsDataImageArgs {
    /**
     * Specifies the custom key for creating encrypted image.
     * Changing this parameter will create a new resource.
     */
    cmkId?: pulumi.Input<string>;
    /**
     * Specifies the description of the image.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project ID to which the IMS image belongs.
     * For enterprise users, if omitted, default enterprise project will be used.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the URL of the external image file in the OBS bucket, the format
     * is **OBS bucket name:image file name**. The storage category for OBS bucket and image file must be OBS standard
     * storage. Changing this parameter will create a new resource.
     */
    imageUrl: pulumi.Input<string>;
    /**
     * Specifies the minimum size of the system disk, in GB unit. The value ranges
     * from `40` to `2,048`. Changing this parameter will create a new resource.
     */
    minDisk: pulumi.Input<number>;
    /**
     * Specifies the name of the image.
     * The valid length is limited from `1` to `128` characters.
     * The first and last letters of the name cannot be spaces.
     * The name can contain uppercase letters, lowercase letters, numbers, spaces, chinese, and special characters (-._).
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the operating system type of the image. The value can be
     * **Windows** or **Linux**. Defaults to **Linux**. Changing this parameter will create a new resource.
     */
    osType?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the key/value pairs to associate with the image.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
