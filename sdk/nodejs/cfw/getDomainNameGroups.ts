// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get the list of CFW domain name groups.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const config = new pulumi.Config();
 * const fwInstanceId = config.requireObject("fwInstanceId");
 * const objectId = config.requireObject("objectId");
 * const test = huaweicloud.Cfw.getDomainNameGroups({
 *     fwInstanceId: fwInstanceId,
 *     objectId: objectId,
 * });
 * ```
 */
export function getDomainNameGroups(args: GetDomainNameGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainNameGroupsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Cfw/getDomainNameGroups:getDomainNameGroups", {
        "configStatus": args.configStatus,
        "enterpriseProjectId": args.enterpriseProjectId,
        "fwInstanceId": args.fwInstanceId,
        "groupId": args.groupId,
        "keyWord": args.keyWord,
        "name": args.name,
        "objectId": args.objectId,
        "refCount": args.refCount,
        "region": args.region,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomainNameGroups.
 */
export interface GetDomainNameGroupsArgs {
    /**
     * Specifies the configuration status.
     * The valid values are as follows:
     * + **-1**: not configured.
     * + **0**: configuration failed.
     * + **1**: configuration succeeded.
     * + **2**: configuration in progress.
     * + **3**: normal.
     * + **4**: configuration exception - domain group usage.
     */
    configStatus?: string;
    /**
     * Specifies the enterprise project ID.
     */
    enterpriseProjectId?: string;
    /**
     * Specifies the firewall instance ID.
     */
    fwInstanceId: string;
    /**
     * Specifies the domain name group ID.
     */
    groupId?: string;
    /**
     * Specifies the key word.
     */
    keyWord?: string;
    /**
     * Specifies the name of a domain name group.
     */
    name?: string;
    /**
     * Specifies the protected object ID.
     */
    objectId: string;
    /**
     * Specifies the domain name group reference count.
     */
    refCount?: string;
    /**
     * Specifies the region in which to query the resource.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the domain name group type.
     * The value can be:
     * + **0**: means application type;
     * + **1**: means network type.
     */
    type?: string;
}

/**
 * A collection of values returned by getDomainNameGroups.
 */
export interface GetDomainNameGroupsResult {
    /**
     * The configuration status.
     */
    readonly configStatus?: string;
    readonly enterpriseProjectId?: string;
    readonly fwInstanceId: string;
    /**
     * The domain name group ID.
     */
    readonly groupId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly keyWord?: string;
    /**
     * The rule name.
     */
    readonly name?: string;
    readonly objectId: string;
    /**
     * The domain name group list.
     */
    readonly records: outputs.Cfw.GetDomainNameGroupsRecord[];
    /**
     * The domain name group reference count.
     */
    readonly refCount?: string;
    readonly region: string;
    /**
     * The domain name group type.
     */
    readonly type?: string;
}

export function getDomainNameGroupsOutput(args: GetDomainNameGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainNameGroupsResult> {
    return pulumi.output(args).apply(a => getDomainNameGroups(a, opts))
}

/**
 * A collection of arguments for invoking getDomainNameGroups.
 */
export interface GetDomainNameGroupsOutputArgs {
    /**
     * Specifies the configuration status.
     * The valid values are as follows:
     * + **-1**: not configured.
     * + **0**: configuration failed.
     * + **1**: configuration succeeded.
     * + **2**: configuration in progress.
     * + **3**: normal.
     * + **4**: configuration exception - domain group usage.
     */
    configStatus?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project ID.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the firewall instance ID.
     */
    fwInstanceId: pulumi.Input<string>;
    /**
     * Specifies the domain name group ID.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Specifies the key word.
     */
    keyWord?: pulumi.Input<string>;
    /**
     * Specifies the name of a domain name group.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the protected object ID.
     */
    objectId: pulumi.Input<string>;
    /**
     * Specifies the domain name group reference count.
     */
    refCount?: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the resource.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the domain name group type.
     * The value can be:
     * + **0**: means application type;
     * + **1**: means network type.
     */
    type?: pulumi.Input<string>;
}
