// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./getAvailabilityZones";
export * from "./provider";

// Export sub-modules:
import * as advancedantiddos from "./advancedantiddos";
import * as antiddos from "./antiddos";
import * as aom from "./aom";
import * as as from "./as";
import * as bcs from "./bcs";
import * as bms from "./bms";
import * as cbr from "./cbr";
import * as cc from "./cc";
import * as cce from "./cce";
import * as cci from "./cci";
import * as cdm from "./cdm";
import * as cdn from "./cdn";
import * as cfw from "./cfw";
import * as cloudtable from "./cloudtable";
import * as config from "./config";
import * as cpts from "./cpts";
import * as cse from "./cse";
import * as css from "./css";
import * as cts from "./cts";
import * as dataartsstudio from "./dataartsstudio";
import * as dcs from "./dcs";
import * as dds from "./dds";
import * as dedicatedapig from "./dedicatedapig";
import * as dedicatedelb from "./dedicatedelb";
import * as dew from "./dew";
import * as dis from "./dis";
import * as dli from "./dli";
import * as dms from "./dms";
import * as dns from "./dns";
import * as drs from "./drs";
import * as dws from "./dws";
import * as ecs from "./ecs";
import * as eip from "./eip";
import * as elb from "./elb";
import * as eps from "./eps";
import * as er from "./er";
import * as evs from "./evs";
import * as functiongraph from "./functiongraph";
import * as gaussdb from "./gaussdb";
import * as gaussdbfornosql from "./gaussdbfornosql";
import * as gaussdbforopengauss from "./gaussdbforopengauss";
import * as iam from "./iam";
import * as iec from "./iec";
import * as ims from "./ims";
import * as iotda from "./iotda";
import * as live from "./live";
import * as lts from "./lts";
import * as meeting from "./meeting";
import * as modelarts from "./modelarts";
import * as mpc from "./mpc";
import * as mrs from "./mrs";
import * as nat from "./nat";
import * as networkacl from "./networkacl";
import * as obs from "./obs";
import * as oms from "./oms";
import * as projectman from "./projectman";
import * as rds from "./rds";
import * as scm from "./scm";
import * as servicestage from "./servicestage";
import * as sfs from "./sfs";
import * as sharedapig from "./sharedapig";
import * as smn from "./smn";
import * as sms from "./sms";
import * as swr from "./swr";
import * as tms from "./tms";
import * as types from "./types";
import * as vod from "./vod";
import * as vpc from "./vpc";
import * as vpcep from "./vpcep";
import * as waf from "./waf";
import * as workspace from "./workspace";

export {
    advancedantiddos,
    antiddos,
    aom,
    as,
    bcs,
    bms,
    cbr,
    cc,
    cce,
    cci,
    cdm,
    cdn,
    cfw,
    cloudtable,
    config,
    cpts,
    cse,
    css,
    cts,
    dataartsstudio,
    dcs,
    dds,
    dedicatedapig,
    dedicatedelb,
    dew,
    dis,
    dli,
    dms,
    dns,
    drs,
    dws,
    ecs,
    eip,
    elb,
    eps,
    er,
    evs,
    functiongraph,
    gaussdb,
    gaussdbfornosql,
    gaussdbforopengauss,
    iam,
    iec,
    ims,
    iotda,
    live,
    lts,
    meeting,
    modelarts,
    mpc,
    mrs,
    nat,
    networkacl,
    obs,
    oms,
    projectman,
    rds,
    scm,
    servicestage,
    sfs,
    sharedapig,
    smn,
    sms,
    swr,
    tms,
    types,
    vod,
    vpc,
    vpcep,
    waf,
    workspace,
};

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("huaweicloud", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:huaweicloud") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
